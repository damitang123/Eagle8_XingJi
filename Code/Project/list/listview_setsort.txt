; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\listview_setsort.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listview_setsort.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\LISTVIEW_SetSort.c]
                          THUMB

                          AREA ||i.LISTVIEW_CompareDec||, CODE, READONLY, ALIGN=1

                  LISTVIEW_CompareDec PROC
;;;286    */
;;;287    int LISTVIEW_CompareDec(const void * p0, const void * p1) {
000000  b53f              PUSH     {r0-r5,lr}
;;;288      int v[2] = {0}, i, d;
000002  2200              MOVS     r2,#0
000004  e9cd0102          STRD     r0,r1,[sp,#8]
000008  9200              STR      r2,[sp,#0]
00000a  9201              STR      r2,[sp,#4]
;;;289      const char * ps[2];
;;;290      char c;
;;;291      ps[0] = (const char *)p0;
;;;292      ps[1] = (const char *)p1;
;;;293      for (i = 0; i < 2; i++) {
00000c  4610              MOV      r0,r2
00000e  ab02              ADD      r3,sp,#8              ;289
000010  4669              MOV      r1,sp                 ;288
                  |L1.18|
;;;294        int Neg = 0;
;;;295        if (*ps[i] == '-') {
000012  f8532020          LDR      r2,[r3,r0,LSL #2]
000016  2400              MOVS     r4,#0                 ;294
000018  7815              LDRB     r5,[r2,#0]
00001a  2d2d              CMP      r5,#0x2d
00001c  d111              BNE      |L1.66|
;;;296          Neg = 1;
00001e  2401              MOVS     r4,#1
000020  1c52              ADDS     r2,r2,#1
;;;297          ps[i]++;
000022  f8432020          STR      r2,[r3,r0,LSL #2]
000026  e00c              B        |L1.66|
                  |L1.40|
000028  3a30              SUBS     r2,r2,#0x30
;;;298        }
;;;299        while ((c = *ps[i]++) != 0) {
;;;300          d = c - '0';
;;;301          if ((d < 0) || (d > 9)) {
00002a  2a0a              CMP      r2,#0xa
00002c  d211              BCS      |L1.82|
;;;302            break;
;;;303          }
;;;304          v[i] *= 10;
00002e  f8515020          LDR      r5,[r1,r0,LSL #2]
000032  eb050585          ADD      r5,r5,r5,LSL #2
000036  006d              LSLS     r5,r5,#1
000038  f8415020          STR      r5,[r1,r0,LSL #2]
;;;305          v[i] += d;
00003c  442a              ADD      r2,r2,r5
00003e  f8412020          STR      r2,[r1,r0,LSL #2]
                  |L1.66|
000042  f8535020          LDR      r5,[r3,r0,LSL #2]     ;299
000046  f8152b01          LDRB     r2,[r5],#1            ;299
00004a  f8435020          STR      r5,[r3,r0,LSL #2]     ;299
00004e  2a00              CMP      r2,#0                 ;299
000050  d1ea              BNE      |L1.40|
                  |L1.82|
;;;306        }
;;;307        if (Neg) {
000052  b124              CBZ      r4,|L1.94|
;;;308          v[i] *= -1;
000054  f8512020          LDR      r2,[r1,r0,LSL #2]
000058  4252              RSBS     r2,r2,#0
00005a  f8412020          STR      r2,[r1,r0,LSL #2]
                  |L1.94|
00005e  1c40              ADDS     r0,r0,#1
000060  2802              CMP      r0,#2                 ;293
000062  dbd6              BLT      |L1.18|
000064  e9dd0100          LDRD     r0,r1,[sp,#0]         ;293
;;;309        }
;;;310      }
;;;311      if (v[0] > v[1]) {
000068  4288              CMP      r0,r1
00006a  dd03              BLE      |L1.116|
;;;312        return -1;
00006c  f04f30ff          MOV      r0,#0xffffffff
                  |L1.112|
;;;313      } else if (v[0] < v[1]) {
;;;314        return 1;
;;;315      }
;;;316      return 0;
;;;317    }
000070  b004              ADD      sp,sp,#0x10
000072  bd30              POP      {r4,r5,pc}
                  |L1.116|
000074  da02              BGE      |L1.124|
000076  f04f0001          MOV      r0,#1                 ;314
00007a  e7f9              B        |L1.112|
                  |L1.124|
00007c  f04f0000          MOV      r0,#0                 ;316
000080  e7f6              B        |L1.112|
;;;318    
                          ENDP


                          AREA ||i.LISTVIEW_CompareText||, CODE, READONLY, ALIGN=1

                  LISTVIEW_CompareText PROC
;;;278    */
;;;279    int LISTVIEW_CompareText(const void * p0, const void * p1) {
000000  460a              MOV      r2,r1
;;;280      return strcmp((const char *)p1, (const char *)p0);
000002  4601              MOV      r1,r0
000004  4610              MOV      r0,r2
000006  f7ffbffe          B.W      strcmp
;;;281    }
;;;282    
                          ENDP


                          AREA ||i.LISTVIEW_DisableSort||, CODE, READONLY, ALIGN=1

                  LISTVIEW_DisableSort PROC
;;;393    */
;;;394    void LISTVIEW_DisableSort(LISTVIEW_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  0006              MOVS     r6,r0
000004  d026              BEQ      |L3.84|
;;;395      if (hObj) {
;;;396        LISTVIEW_Obj * pObj;
;;;397        WM_LOCK();
;;;398        pObj = LISTVIEW_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4604              MOV      r4,r0
;;;399        if (pObj->hSort) {
00000c  f8b00092          LDRH     r0,[r0,#0x92]
000010  2800              CMP      r0,#0
000012  d01f              BEQ      |L3.84|
;;;400          int Sel = _GetSelUnsorted(pObj);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       _GetSelUnsorted
00001a  4605              MOV      r5,r0
;;;401          _Free(pObj->hSort);
00001c  f9b40092          LDRSH    r0,[r4,#0x92]
000020  f7fffffe          BL       _Free
;;;402          pObj->hSort       = 0;
000024  2000              MOVS     r0,#0
000026  f8a40092          STRH     r0,[r4,#0x92]
;;;403          pObj->SortIndex   = -1;
00002a  1e41              SUBS     r1,r0,#1
;;;404          pObj->IsPresorted = 0;
00002c  66a1              STR      r1,[r4,#0x68]
00002e  f8840095          STRB     r0,[r4,#0x95]
;;;405          pObj->IsSorted    = 0;
000032  f8840094          STRB     r0,[r4,#0x94]
;;;406          HEADER_SetDirIndicator(pObj->hHeader, -1, 0);
000036  f9b40028          LDRSH    r0,[r4,#0x28]
00003a  2200              MOVS     r2,#0
00003c  f7fffffe          BL       HEADER_SetDirIndicator
;;;407          LISTVIEW_SetSel(hObj, Sel);
000040  4629              MOV      r1,r5
000042  4630              MOV      r0,r6
000044  f7fffffe          BL       LISTVIEW_SetSel
;;;408          LISTVIEW__InvalidateInsideArea(hObj, pObj);
000048  4621              MOV      r1,r4
00004a  4630              MOV      r0,r6
00004c  e8bd4070          POP      {r4-r6,lr}
000050  f7ffbffe          B.W      LISTVIEW__InvalidateInsideArea
                  |L3.84|
;;;409        }
;;;410        WM_UNLOCK();
;;;411      }
;;;412    }
000054  bd70              POP      {r4-r6,pc}
;;;413    
                          ENDP


                          AREA ||i.LISTVIEW_EnableSort||, CODE, READONLY, ALIGN=1

                  LISTVIEW_EnableSort PROC
;;;420    */
;;;421    void LISTVIEW_EnableSort(LISTVIEW_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  0004              MOVS     r4,r0
000004  d00b              BEQ      |L4.30|
;;;422      if (hObj) {
;;;423        LISTVIEW_Obj * pObj;
;;;424        WM_LOCK();
;;;425        pObj = LISTVIEW_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  4601              MOV      r1,r0
;;;426        if (!pObj->hSort) {
00000c  f8b00092          LDRH     r0,[r0,#0x92]
000010  2800              CMP      r0,#0
000012  d104              BNE      |L4.30|
;;;427          _CreateSortObject(hObj, pObj);
000014  4620              MOV      r0,r4
000016  e8bd4010          POP      {r4,lr}
00001a  f7ffbffe          B.W      _CreateSortObject
                  |L4.30|
;;;428        }
;;;429        WM_UNLOCK();
;;;430      }
;;;431    }
00001e  bd10              POP      {r4,pc}
;;;432    
                          ENDP


                          AREA ||i.LISTVIEW_GetSelUnsorted||, CODE, READONLY, ALIGN=1

                  LISTVIEW_GetSelUnsorted PROC
;;;328    */
;;;329    int LISTVIEW_GetSelUnsorted(LISTVIEW_Handle hObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  0004              MOVS     r4,r0
;;;330      int r = -1;
000004  f04f30ff          MOV      r0,#0xffffffff
000008  d00b              BEQ      |L5.34|
;;;331      if (hObj) {
;;;332        LISTVIEW_Obj * pObj;
;;;333        WM_LOCK();
;;;334        pObj = LISTVIEW_H2P(hObj);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4605              MOV      r5,r0
;;;335        _Sort(hObj);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       _Sort
;;;336        r = _GetSelUnsorted(pObj);
000018  4628              MOV      r0,r5
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f7ffbffe          B.W      _GetSelUnsorted
                  |L5.34|
;;;337        WM_UNLOCK();
;;;338      }
;;;339      return r;
;;;340    }
000022  bd70              POP      {r4-r6,pc}
;;;341    
                          ENDP


                          AREA ||i.LISTVIEW_SetCompareFunc||, CODE, READONLY, ALIGN=1

                  LISTVIEW_SetCompareFunc PROC
;;;370    */
;;;371    void LISTVIEW_SetCompareFunc(LISTVIEW_Handle hObj, unsigned Column, int (* fpCompare)(const void * p0, const void * p1)) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4615              MOV      r5,r2
000006  460e              MOV      r6,r1
000008  0007              MOVS     r7,r0
00000a  d00d              BEQ      |L6.40|
;;;372      int NumColumns;
;;;373      LISTVIEW_Obj    * pObj;
;;;374      LISTVIEW_COLUMN * pColumn;
;;;375      if (hObj) {
;;;376        WM_LOCK();
;;;377        pObj       = LISTVIEW_H2P(hObj);
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4604              MOV      r4,r0
;;;378        NumColumns = LISTVIEW_GetNumColumns(hObj);
000012  4638              MOV      r0,r7
000014  f7fffffe          BL       LISTVIEW_GetNumColumns
;;;379        if ((int)Column <= NumColumns) {
000018  4286              CMP      r6,r0
00001a  dc05              BGT      |L6.40|
;;;380          pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItem(&pObj->ColumnArray, Column);
00001c  4631              MOV      r1,r6
00001e  f104002e          ADD      r0,r4,#0x2e
000022  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;381          pColumn->fpCompare = fpCompare;
000026  6045              STR      r5,[r0,#4]
                  |L6.40|
;;;382        }
;;;383        WM_UNLOCK();
;;;384      }
;;;385    }
000028  e8bd81f0          POP      {r4-r8,pc}
;;;386    
                          ENDP


                          AREA ||i.LISTVIEW_SetSelUnsorted||, CODE, READONLY, ALIGN=1

                  LISTVIEW_SetSelUnsorted PROC
;;;351    */
;;;352    void LISTVIEW_SetSelUnsorted(LISTVIEW_Handle hObj, int Sel) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
000006  d00c              BEQ      |L7.34|
;;;353      if (hObj) {
;;;354        LISTVIEW_Obj * pObj;
;;;355        WM_LOCK();
;;;356        pObj = LISTVIEW_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4606              MOV      r6,r0
;;;357        _Sort(hObj);
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       _Sort
;;;358        _SetSelUnsorted(hObj, pObj, Sel);
000014  462a              MOV      r2,r5
000016  4631              MOV      r1,r6
000018  4620              MOV      r0,r4
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f7ffbffe          B.W      _SetSelUnsorted
                  |L7.34|
;;;359        WM_UNLOCK();
;;;360      }
;;;361    }
000022  bd70              POP      {r4-r6,pc}
;;;362    
                          ENDP


                          AREA ||i.LISTVIEW_SetSort||, CODE, READONLY, ALIGN=1

                  LISTVIEW_SetSort PROC
;;;445    */
;;;446    unsigned LISTVIEW_SetSort(LISTVIEW_Handle hObj, unsigned Column, unsigned Reverse) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4617              MOV      r7,r2
000006  460e              MOV      r6,r1
000008  ea5f0800          MOVS     r8,r0
;;;447      LISTVIEW_Obj    * pObj;
;;;448      LISTVIEW_SORT   * pSort;
;;;449      LISTVIEW_COLUMN * pColumn;
;;;450      unsigned NumColumns, Error = 0;
00000c  f04f0400          MOV      r4,#0
000010  d003              BEQ      |L8.26|
;;;451      if (!hObj) {
;;;452        return 1;
;;;453      }
;;;454      NumColumns = LISTVIEW_GetNumColumns(hObj);
000012  f7fffffe          BL       LISTVIEW_GetNumColumns
;;;455      if (Column >= NumColumns) {
000016  4286              CMP      r6,r0
000018  d302              BCC      |L8.32|
                  |L8.26|
;;;456        return 1;
00001a  2001              MOVS     r0,#1
                  |L8.28|
;;;457      }
;;;458      WM_LOCK();
;;;459      pObj    = LISTVIEW_H2P(hObj);
;;;460      pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItem(&pObj->ColumnArray, Column);
;;;461      if (pColumn->fpCompare) {
;;;462        pSort = _CreateSortObject(hObj, pObj);
;;;463        pObj  = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
;;;464        if (pSort) {
;;;465          pObj->SortIndex = Column;
;;;466          pSort->Reverse  = Reverse;
;;;467          LISTVIEW__InvalidateInsideArea(hObj, pObj);
;;;468        } else {
;;;469          Error = 1;
;;;470        }
;;;471      } else {
;;;472        Error = 1;
;;;473      }
;;;474      WM_UNLOCK();
;;;475      return Error;
;;;476    }
00001c  e8bd81f0          POP      {r4-r8,pc}
                  |L8.32|
000020  4640              MOV      r0,r8                 ;459
000022  f7fffffe          BL       GUI_ALLOC_h2p
000026  4605              MOV      r5,r0                 ;459
000028  4631              MOV      r1,r6                 ;460
00002a  302e              ADDS     r0,r0,#0x2e           ;460
00002c  f7fffffe          BL       GUI_ARRAY_GetpItem
000030  6840              LDR      r0,[r0,#4]            ;461
000032  b178              CBZ      r0,|L8.84|
000034  4629              MOV      r1,r5                 ;462
000036  4640              MOV      r0,r8                 ;462
000038  f7fffffe          BL       _CreateSortObject
00003c  4605              MOV      r5,r0                 ;462
00003e  4640              MOV      r0,r8                 ;463
000040  f7fffffe          BL       GUI_ALLOC_h2p
000044  4601              MOV      r1,r0                 ;463
000046  b12d              CBZ      r5,|L8.84|
000048  668e              STR      r6,[r1,#0x68]         ;466
00004a  732f              STRB     r7,[r5,#0xc]          ;466
00004c  4640              MOV      r0,r8                 ;467
00004e  f7fffffe          BL       LISTVIEW__InvalidateInsideArea
000052  e000              B        |L8.86|
                  |L8.84|
000054  2401              MOVS     r4,#1                 ;469
                  |L8.86|
000056  4620              MOV      r0,r4                 ;475
000058  e7e0              B        |L8.28|
;;;477    
                          ENDP


                          AREA ||i._Compare||, CODE, READONLY, ALIGN=1

                  _Compare PROC
;;;108    */
;;;109    static int _Compare(unsigned lb, unsigned ub, SORT_OBJECT * pSortObject) {
000000  b570              PUSH     {r4-r6,lr}
000002  4614              MOV      r4,r2
000004  460a              MOV      r2,r1
;;;110      char * p0, * p1;
;;;111      LISTVIEW_ROW  * pRow0, * pRow1;
;;;112      LISTVIEW_COLUMN * pColumn;
;;;113      SORT_TYPE i0, i1;
;;;114      int Result;
;;;115      i0 = *(pSortObject->paSortArray + lb);
000006  68a3              LDR      r3,[r4,#8]
000008  f8331010          LDRH     r1,[r3,r0,LSL #1]
;;;116      i1 = *(pSortObject->paSortArray + ub);
;;;117      pRow0   = (LISTVIEW_ROW *)   GUI_ARRAY_GetpItem(&pSortObject->pObj->RowArray,  i0);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8335012          LDRH     r5,[r3,r2,LSL #1]     ;116
000012  302a              ADDS     r0,r0,#0x2a
000014  f7fffffe          BL       GUI_ARRAY_GetpItem
000018  4606              MOV      r6,r0
;;;118      pRow1   = (LISTVIEW_ROW *)   GUI_ARRAY_GetpItem(&pSortObject->pObj->RowArray,  i1);
00001a  6820              LDR      r0,[r4,#0]
00001c  4629              MOV      r1,r5
00001e  302a              ADDS     r0,r0,#0x2a
000020  f7fffffe          BL       GUI_ARRAY_GetpItem
000024  4605              MOV      r5,r0
;;;119      p0      = ((LISTVIEW_CELL *) GUI_ARRAY_GetpItem(&pRow0->CellArray, pSortObject->pObj->SortIndex))->acText;
000026  6820              LDR      r0,[r4,#0]
000028  6e81              LDR      r1,[r0,#0x68]
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       GUI_ARRAY_GetpItem
000030  1c86              ADDS     r6,r0,#2
;;;120      p1      = ((LISTVIEW_CELL *) GUI_ARRAY_GetpItem(&pRow1->CellArray, pSortObject->pObj->SortIndex))->acText;
000032  6820              LDR      r0,[r4,#0]
000034  6e81              LDR      r1,[r0,#0x68]
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       GUI_ARRAY_GetpItem
00003c  1c85              ADDS     r5,r0,#2
;;;121      pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItem(&pSortObject->pObj->ColumnArray, pSortObject->pObj->SortIndex);
00003e  6820              LDR      r0,[r4,#0]
000040  6e81              LDR      r1,[r0,#0x68]
000042  302e              ADDS     r0,r0,#0x2e
000044  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;122      if (!pColumn) {
000048  2800              CMP      r0,#0
00004a  d008              BEQ      |L9.94|
;;;123        return 0;
;;;124      }
;;;125      Result = pColumn->fpCompare(p0, p1);
00004c  6842              LDR      r2,[r0,#4]
00004e  4629              MOV      r1,r5
000050  4630              MOV      r0,r6
000052  4790              BLX      r2
;;;126      if (pSortObject->pSort->Reverse) {
000054  6861              LDR      r1,[r4,#4]
000056  7b09              LDRB     r1,[r1,#0xc]
000058  2900              CMP      r1,#0
00005a  d000              BEQ      |L9.94|
;;;127        Result *= -1;
00005c  4240              RSBS     r0,r0,#0
                  |L9.94|
;;;128      }
;;;129      return Result;
;;;130    }
00005e  bd70              POP      {r4-r6,pc}
;;;131    
                          ENDP


                          AREA ||i._CreateSortObject||, CODE, READONLY, ALIGN=2

                  _CreateSortObject PROC
;;;252    */
;;;253    static LISTVIEW_SORT * _CreateSortObject(LISTVIEW_Handle hObj, LISTVIEW_Obj * pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;254      LISTVIEW_SORT * pSort;
;;;255      if (!pObj->hSort) {
000004  f8b10092          LDRH     r0,[r1,#0x92]
000008  460c              MOV      r4,r1                 ;253
00000a  b960              CBNZ     r0,|L10.38|
;;;256        pObj->hSort = GUI_ALLOC_AllocZero(sizeof(LISTVIEW_SORT));
00000c  2010              MOVS     r0,#0x10
00000e  f7fffffe          BL       GUI_ALLOC_AllocZero
000012  f8a40092          STRH     r0,[r4,#0x92]
;;;257        pObj = LISTVIEW_H2P(hObj); /* Restore after allocating memory */
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       GUI_ALLOC_h2p
00001c  4604              MOV      r4,r0
;;;258        if (!pObj->hSort) {
00001e  f8b00092          LDRH     r0,[r0,#0x92]
000022  2800              CMP      r0,#0
000024  d00a              BEQ      |L10.60|
                  |L10.38|
;;;259          return NULL;
;;;260        }
;;;261      }
;;;262      pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
000026  f9b40092          LDRSH    r0,[r4,#0x92]
00002a  f7fffffe          BL       GUI_ALLOC_h2p
;;;263      pObj->SortIndex      = -1;
00002e  f04f31ff          MOV      r1,#0xffffffff
;;;264      pSort->fpFree        = _Free;
000032  66a1              STR      r1,[r4,#0x68]
000034  4902              LDR      r1,|L10.64|
;;;265      pSort->fpSort        = _Sort;
000036  6081              STR      r1,[r0,#8]
000038  4902              LDR      r1,|L10.68|
00003a  6041              STR      r1,[r0,#4]
                  |L10.60|
;;;266      return pSort;
;;;267    }
00003c  bd70              POP      {r4-r6,pc}
;;;268    
                          ENDP

00003e  0000              DCW      0x0000
                  |L10.64|
                          DCD      _Free
                  |L10.68|
                          DCD      _Sort

                          AREA ||i._Free||, CODE, READONLY, ALIGN=1

                  _Free PROC
;;;52     */
;;;53     static void _Free(WM_HMEM hObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;54       LISTVIEW_SORT * pSort;
;;;55       pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(hObj);
000004  f7fffffe          BL       GUI_ALLOC_h2p
;;;56       GUI_ALLOC_Free(pSort->hSortArray);
000008  f9b00000          LDRSH    r0,[r0,#0]
00000c  f7fffffe          BL       GUI_ALLOC_Free
;;;57       GUI_ALLOC_Free(hObj);
000010  4620              MOV      r0,r4
000012  e8bd4010          POP      {r4,lr}
000016  f7ffbffe          B.W      GUI_ALLOC_Free
;;;58     }
;;;59     
                          ENDP


                          AREA ||i._GetSelUnsorted||, CODE, READONLY, ALIGN=1

                  _GetSelUnsorted PROC
;;;63     */
;;;64     static int _GetSelUnsorted(LISTVIEW_Obj * pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;65       int r;
;;;66       if ((LISTVIEW__GetSel(pObj) >= 0) && (pObj->hSort)) {
000004  f7fffffe          BL       LISTVIEW__GetSel
000008  2800              CMP      r0,#0
00000a  db11              BLT      |L12.48|
00000c  f9b40092          LDRSH    r0,[r4,#0x92]
000010  b170              CBZ      r0,|L12.48|
;;;67         LISTVIEW_SORT * pSort;
;;;68         pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
000012  f7fffffe          BL       GUI_ALLOC_h2p
;;;69         if (!pSort->SortArrayNumItems) {
000016  8841              LDRH     r1,[r0,#2]
000018  b151              CBZ      r1,|L12.48|
;;;70           r = LISTVIEW__GetSel(pObj);
;;;71         } else {
;;;72           SORT_TYPE * paSortArray;
;;;73           paSortArray = (SORT_TYPE *)GUI_ALLOC_h2p(pSort->hSortArray);
00001a  f9b00000          LDRSH    r0,[r0,#0]
00001e  f7fffffe          BL       GUI_ALLOC_h2p
000022  4605              MOV      r5,r0
;;;74           r = *(paSortArray + LISTVIEW__GetSel(pObj));
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       LISTVIEW__GetSel
00002a  f8350010          LDRH     r0,[r5,r0,LSL #1]
;;;75         }
;;;76       } else {
;;;77         r = LISTVIEW__GetSel(pObj);
;;;78       }
;;;79       return r;
;;;80     }
00002e  bd70              POP      {r4-r6,pc}
                  |L12.48|
000030  4620              MOV      r0,r4                 ;77
000032  e8bd4070          POP      {r4-r6,lr}            ;77
000036  f7ffbffe          B.W      LISTVIEW__GetSel
;;;81     
                          ENDP


                          AREA ||i._SetSelUnsorted||, CODE, READONLY, ALIGN=2

                  _SetSelUnsorted PROC
;;;85     */
;;;86     static void _SetSelUnsorted(LISTVIEW_Handle hObj, LISTVIEW_Obj * pObj, int Sel) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
;;;87       int i, NumItems;
;;;88       if (pObj->hSort) {
000006  f9b10092          LDRSH    r0,[r1,#0x92]
00000a  4615              MOV      r5,r2                 ;86
00000c  460e              MOV      r6,r1                 ;86
00000e  b170              CBZ      r0,|L13.46|
;;;89         LISTVIEW_SORT * pSort;
;;;90         SORT_TYPE * paSortArray;
;;;91         pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(pObj->hSort);
000010  f7fffffe          BL       GUI_ALLOC_h2p
;;;92         NumItems = pSort->SortArrayNumItems;
000014  8844              LDRH     r4,[r0,#2]
;;;93         paSortArray = (SORT_TYPE *)GUI_ALLOC_h2p(pSort->hSortArray);
000016  f9b00000          LDRSH    r0,[r0,#0]
00001a  f7fffffe          BL       GUI_ALLOC_h2p
;;;94         for (i = 0; i < NumItems; i++) {
00001e  2200              MOVS     r2,#0
000020  e00b              B        |L13.58|
;;;95           if (*(paSortArray + i) == Sel) {
000022  bf00              NOP      
                  |L13.36|
000024  f8301012          LDRH     r1,[r0,r2,LSL #1]
000028  42a9              CMP      r1,r5
00002a  d105              BNE      |L13.56|
;;;96             LISTVIEW__SetSel(hObj, pObj, i);
00002c  4631              MOV      r1,r6
                  |L13.46|
;;;97             break;
;;;98           }
;;;99         }
;;;100      } else {
;;;101        LISTVIEW__SetSel(hObj, pObj, Sel);
00002e  4638              MOV      r0,r7
000030  e8bd41f0          POP      {r4-r8,lr}
000034  f7ffbffe          B.W      LISTVIEW__SetSel
                  |L13.56|
000038  1c52              ADDS     r2,r2,#1
                  |L13.58|
00003a  42a2              CMP      r2,r4                 ;94
00003c  dbf2              BLT      |L13.36|
;;;102      }
;;;103    }
00003e  e8bd81f0          POP      {r4-r8,pc}
;;;104    
                          ENDP


                          AREA ||i._Sort||, CODE, READONLY, ALIGN=1

                  _Sort PROC
;;;190    */
;;;191    static int _Sort(LISTVIEW_Handle hObj) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  4682              MOV      r10,r0
;;;192      WM_HMEM hSortArray;
;;;193      SORT_OBJECT SortObject;
;;;194      int NumItems, NumItemsReq, i, Sel;
;;;195      SortObject.pObj = LISTVIEW_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
;;;196      if (((SortObject.pObj->IsPresorted) && (SortObject.pObj->IsSorted)) || (SortObject.pObj->hSort == 0)) {
00000a  9000              STR      r0,[sp,#0]
00000c  f8900095          LDRB     r0,[r0,#0x95]
000010  b118              CBZ      r0,|L14.26|
000012  9800              LDR      r0,[sp,#0]
000014  f8900094          LDRB     r0,[r0,#0x94]
000018  bba0              CBNZ     r0,|L14.132|
                  |L14.26|
00001a  9800              LDR      r0,[sp,#0]
00001c  f9b00092          LDRSH    r0,[r0,#0x92]
000020  b380              CBZ      r0,|L14.132|
;;;197        return 0;
;;;198      }
;;;199      SortObject.pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(SortObject.pObj->hSort);
000022  f7fffffe          BL       GUI_ALLOC_h2p
;;;200      NumItemsReq = SortObject.pObj->RowArray.NumItems;
000026  9001              STR      r0,[sp,#4]
000028  9800              LDR      r0,[sp,#0]
00002a  8d44              LDRH     r4,[r0,#0x2a]
;;;201      NumItems    = SortObject.pSort->SortArrayNumItems;
00002c  9801              LDR      r0,[sp,#4]
00002e  8845              LDRH     r5,[r0,#2]
;;;202      Sel = _GetSelUnsorted(SortObject.pObj);
000030  9800              LDR      r0,[sp,#0]
000032  f7fffffe          BL       _GetSelUnsorted
000036  4680              MOV      r8,r0
;;;203      /* Adjust number of items in sort array */
;;;204      if (NumItems != NumItemsReq) {
000038  42a5              CMP      r5,r4
00003a  d012              BEQ      |L14.98|
;;;205        if (!SortObject.pSort->hSortArray) {
00003c  9801              LDR      r0,[sp,#4]
00003e  f9b00000          LDRSH    r0,[r0,#0]
000042  b318              CBZ      r0,|L14.140|
;;;206          hSortArray = GUI_ALLOC_AllocZero(sizeof(SORT_TYPE) * NumItemsReq);
;;;207        } else {
;;;208          hSortArray = GUI_ALLOC_Realloc(SortObject.pSort->hSortArray, sizeof(SORT_TYPE) * NumItemsReq);
000044  0061              LSLS     r1,r4,#1
000046  f7fffffe          BL       GUI_ALLOC_Realloc
                  |L14.74|
00004a  0006              MOVS     r6,r0
00004c  d023              BEQ      |L14.150|
;;;209        }
;;;210        if (!hSortArray) {
;;;211          return 1;
;;;212        }
;;;213        SortObject.pObj = LISTVIEW_H2P(hObj);
00004e  4650              MOV      r0,r10
000050  f7fffffe          BL       GUI_ALLOC_h2p
;;;214        SortObject.pSort = (LISTVIEW_SORT *)GUI_ALLOC_h2p(SortObject.pObj->hSort);
000054  9000              STR      r0,[sp,#0]
000056  f9b00092          LDRSH    r0,[r0,#0x92]
00005a  f7fffffe          BL       GUI_ALLOC_h2p
;;;215        SortObject.pSort->hSortArray = hSortArray;
00005e  9001              STR      r0,[sp,#4]
000060  8006              STRH     r6,[r0,#0]
                  |L14.98|
;;;216      }
;;;217      SortObject.paSortArray = (SORT_TYPE *)GUI_ALLOC_h2p(SortObject.pSort->hSortArray);
000062  9801              LDR      r0,[sp,#4]
000064  f9b00000          LDRSH    r0,[r0,#0]
000068  f7fffffe          BL       GUI_ALLOC_h2p
;;;218      if (SortObject.pObj->IsPresorted) {
00006c  9002              STR      r0,[sp,#8]
00006e  9800              LDR      r0,[sp,#0]
000070  f8901095          LDRB     r1,[r0,#0x95]
000074  2000              MOVS     r0,#0
000076  b1b9              CBZ      r1,|L14.168|
;;;219        /* Add new indices */
;;;220        if (NumItems < NumItemsReq) {
000078  42a5              CMP      r5,r4
00007a  da20              BGE      |L14.190|
;;;221          SortObject.pObj->ReverseSort = 0; /* Reverse sort only allowed if listview is presorted and no rows are added */
00007c  9900              LDR      r1,[sp,#0]
00007e  f8810096          STRB     r0,[r1,#0x96]
;;;222          for (i = NumItems; i < NumItemsReq; i++) {
000082  e00e              B        |L14.162|
                  |L14.132|
000084  e7ff              B        |L14.134|
                  |L14.134|
000086  2000              MOVS     r0,#0                 ;197
                  |L14.136|
;;;223            *(SortObject.paSortArray + i) = i;
;;;224          }
;;;225        }
;;;226      } else {
;;;227        SortObject.pObj->ReverseSort = 0; /* Reverse sort only allowed if listview is presorted */
;;;228        /* Fill with indices if not presorted */
;;;229        for (i = 0; i < NumItemsReq; i++) {
;;;230          *(SortObject.paSortArray + i) = i;
;;;231        }
;;;232      }
;;;233      SortObject.pSort->SortArrayNumItems = NumItemsReq;
;;;234      /* Sort only if more than one item is available */
;;;235      if (NumItemsReq > 1) {
;;;236        if (SortObject.pObj->ReverseSort) {
;;;237          _Reverse(&SortObject);
;;;238        } else {
;;;239          _BubbleSort(0, NumItemsReq - 1, &SortObject);
;;;240        }
;;;241        _SetSelUnsorted(hObj, SortObject.pObj, Sel);
;;;242      }
;;;243      SortObject.pObj->IsPresorted = 1;
;;;244      SortObject.pObj->IsSorted    = 1;
;;;245      HEADER_SetDirIndicator(SortObject.pObj->hHeader, SortObject.pObj->SortIndex, SortObject.pSort->Reverse);
;;;246      return 0;
;;;247    }
000088  e8bd8ffe          POP      {r1-r11,pc}
                  |L14.140|
00008c  0060              LSLS     r0,r4,#1              ;206
00008e  b200              SXTH     r0,r0                 ;206
000090  f7fffffe          BL       GUI_ALLOC_AllocZero
000094  e7d9              B        |L14.74|
                  |L14.150|
000096  2001              MOVS     r0,#1                 ;211
000098  e7f6              B        |L14.136|
                  |L14.154|
00009a  9802              LDR      r0,[sp,#8]            ;223
00009c  f8205015          STRH     r5,[r0,r5,LSL #1]     ;223
0000a0  1c6d              ADDS     r5,r5,#1              ;223
                  |L14.162|
0000a2  42a5              CMP      r5,r4                 ;222
0000a4  dbf9              BLT      |L14.154|
0000a6  e00a              B        |L14.190|
                  |L14.168|
0000a8  9900              LDR      r1,[sp,#0]            ;227
0000aa  f8810096          STRB     r0,[r1,#0x96]         ;227
0000ae  2000              MOVS     r0,#0                 ;229
0000b0  e003              B        |L14.186|
                  |L14.178|
0000b2  9902              LDR      r1,[sp,#8]            ;230
0000b4  f8210010          STRH     r0,[r1,r0,LSL #1]     ;230
0000b8  1c40              ADDS     r0,r0,#1              ;230
                  |L14.186|
0000ba  42a0              CMP      r0,r4                 ;229
0000bc  dbf9              BLT      |L14.178|
                  |L14.190|
0000be  9801              LDR      r0,[sp,#4]            ;233
0000c0  2c01              CMP      r4,#1                 ;235
0000c2  8044              STRH     r4,[r0,#2]            ;233
0000c4  dd43              BLE      |L14.334|
0000c6  9800              LDR      r0,[sp,#0]            ;236
0000c8  f8900096          LDRB     r0,[r0,#0x96]         ;236
0000cc  b1e0              CBZ      r0,|L14.264|
0000ce  2000              MOVS     r0,#0                 ;236
0000d0  eb0472d4          ADD      r2,r4,r4,LSR #31      ;236
0000d4  e014              B        |L14.256|
                  |L14.214|
0000d6  9b02              LDR      r3,[sp,#8]            ;237
0000d8  9902              LDR      r1,[sp,#8]            ;237
0000da  eb030344          ADD      r3,r3,r4,LSL #1       ;237
0000de  eba30340          SUB      r3,r3,r0,LSL #1       ;237
0000e2  9d02              LDR      r5,[sp,#8]            ;237
0000e4  f8311010          LDRH     r1,[r1,r0,LSL #1]     ;237
0000e8  f8333c02          LDRH     r3,[r3,#-2]           ;237
0000ec  f8253010          STRH     r3,[r5,r0,LSL #1]     ;237
0000f0  9b02              LDR      r3,[sp,#8]            ;237
0000f2  eb030344          ADD      r3,r3,r4,LSL #1       ;237
0000f6  eba30340          SUB      r3,r3,r0,LSL #1       ;237
0000fa  1c40              ADDS     r0,r0,#1              ;237
0000fc  f8231c02          STRH     r1,[r3,#-2]           ;237
                  |L14.256|
000100  ebb00f62          CMP      r0,r2,ASR #1          ;237
000104  dbe7              BLT      |L14.214|
000106  e01d              B        |L14.324|
                  |L14.264|
000108  2600              MOVS     r6,#0                 ;239
00010a  46e9              MOV      r9,sp                 ;239
00010c  1e64              SUBS     r4,r4,#1              ;239
                  |L14.270|
00010e  2700              MOVS     r7,#0                 ;239
000110  4625              MOV      r5,r4                 ;239
000112  e013              B        |L14.316|
                  |L14.276|
000114  464a              MOV      r2,r9                 ;239
000116  4629              MOV      r1,r5                 ;239
000118  1e68              SUBS     r0,r5,#1              ;239
00011a  f7fffffe          BL       _Compare
00011e  2800              CMP      r0,#0                 ;239
000120  dd0b              BLE      |L14.314|
000122  9802              LDR      r0,[sp,#8]            ;239
000124  1e6a              SUBS     r2,r5,#1              ;239
000126  2701              MOVS     r7,#1                 ;239
000128  f8301012          LDRH     r1,[r0,r2,LSL #1]     ;239
00012c  f8303015          LDRH     r3,[r0,r5,LSL #1]     ;239
000130  f8203012          STRH     r3,[r0,r2,LSL #1]     ;239
000134  9802              LDR      r0,[sp,#8]            ;239
000136  f8201015          STRH     r1,[r0,r5,LSL #1]     ;239
                  |L14.314|
00013a  1e6d              SUBS     r5,r5,#1              ;239
                  |L14.316|
00013c  42b5              CMP      r5,r6                 ;239
00013e  d8e9              BHI      |L14.276|
000140  2f00              CMP      r7,#0                 ;239
000142  d1e4              BNE      |L14.270|
                  |L14.324|
000144  4642              MOV      r2,r8                 ;241
000146  4650              MOV      r0,r10                ;241
000148  9900              LDR      r1,[sp,#0]            ;241
00014a  f7fffffe          BL       _SetSelUnsorted
                  |L14.334|
00014e  9900              LDR      r1,[sp,#0]            ;243
000150  2001              MOVS     r0,#1                 ;243
000152  f8810095          STRB     r0,[r1,#0x95]         ;243
000156  9900              LDR      r1,[sp,#0]            ;244
000158  f8810094          STRB     r0,[r1,#0x94]         ;244
00015c  9801              LDR      r0,[sp,#4]            ;245
00015e  7b02              LDRB     r2,[r0,#0xc]          ;245
000160  9800              LDR      r0,[sp,#0]            ;245
000162  6e81              LDR      r1,[r0,#0x68]         ;245
000164  f9b00028          LDRSH    r0,[r0,#0x28]         ;245
000168  f7fffffe          BL       HEADER_SetDirIndicator
00016c  e78b              B        |L14.134|
;;;248    
                          ENDP

