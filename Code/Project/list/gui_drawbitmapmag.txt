; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_drawbitmapmag.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawbitmapmag.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_DrawBitmapMag.c]
                          THUMB

                          AREA ||i.GUI_DrawBitmapMag||, CODE, READONLY, ALIGN=2

                  GUI_DrawBitmapMag PROC
;;;32     */
;;;33     void GUI_DrawBitmapMag(const GUI_BITMAP GUI_UNI_PTR *pBitmap, int x0, int y0, int xMul, int yMul) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b089              SUB      sp,sp,#0x24
;;;34       GUI_DRAWMODE PrevDraw;
;;;35       int xSize, ySize;
;;;36       const GUI_LOGPALETTE GUI_UNI_PTR * pPal;
;;;37       const LCD_PIXELINDEX* pTrans;
;;;38       GUI_LOCK();
;;;39       pPal = pBitmap->pPal;
;;;40       xSize = pBitmap->XSize;
;;;41       ySize = pBitmap->YSize;
;;;42       pTrans = LCD_GetpPalConvTable(pPal);
000006  68c5              LDR      r5,[r0,#0xc]
000008  4604              MOV      r4,r0                 ;33
00000a  f8b0b000          LDRH     r11,[r0,#0]           ;40
00000e  f8b0a002          LDRH     r10,[r0,#2]           ;41
000012  4698              MOV      r8,r3                 ;33
000014  460e              MOV      r6,r1                 ;33
000016  f8dd9058          LDR      r9,[sp,#0x58]         ;39
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       LCD_GetpPalConvTable
000020  0007              MOVS     r7,r0
;;;43       if (!pTrans) {
000022  d104              BNE      |L1.46|
;;;44         pTrans = (pBitmap->BitsPerPixel != 1) ? NULL : &LCD_BKCOLORINDEX;
000024  88e0              LDRH     r0,[r4,#6]
000026  2801              CMP      r0,#1
000028  d000              BEQ      |L1.44|
00002a  e000              B        |L1.46|
                  |L1.44|
00002c  4f25              LDR      r7,|L1.196|
                  |L1.46|
;;;45       }
;;;46       PrevDraw = GUI_SetDrawMode((pPal && pPal->HasTrans) ? GUI_DRAWMODE_TRANS : 0);
00002e  b11d              CBZ      r5,|L1.56|
000030  7928              LDRB     r0,[r5,#4]
000032  b108              CBZ      r0,|L1.56|
000034  2002              MOVS     r0,#2
000036  e000              B        |L1.58|
                  |L1.56|
000038  2000              MOVS     r0,#0
                  |L1.58|
00003a  f7fffffe          BL       GUI_SetDrawMode
;;;47       #if (GUI_WINSUPPORT)
;;;48         WM_ADDORG(x0,y0);
00003e  9006              STR      r0,[sp,#0x18]
000040  4820              LDR      r0,|L1.196|
000042  6c41              LDR      r1,[r0,#0x44]  ; GUI_Context
000044  440e              ADD      r6,r6,r1
000046  6c81              LDR      r1,[r0,#0x48]  ; GUI_Context
000048  980b              LDR      r0,[sp,#0x2c]
;;;49         {
;;;50           GUI_RECT r;
;;;51           r.x0 = x0;
00004a  f8ad601c          STRH     r6,[sp,#0x1c]
00004e  180d              ADDS     r5,r1,r0              ;48
;;;52           r.x1 = x0 + xSize * xMul -1;
000050  1e70              SUBS     r0,r6,#1
000052  fb0b0008          MLA      r0,r11,r8,r0
000056  f8ad0020          STRH     r0,[sp,#0x20]
;;;53           r.y0 = y0;
;;;54           r.y1 = y0 + ySize * yMul -1;
00005a  1e68              SUBS     r0,r5,#1
00005c  fb0a0009          MLA      r0,r10,r9,r0
000060  f8ad0022          STRH     r0,[sp,#0x22]
000064  f8ad501e          STRH     r5,[sp,#0x1e]         ;53
;;;55           WM_ITERATE_START(&r);
000068  a807              ADD      r0,sp,#0x1c
00006a  f7fffffe          BL       WM__InitIVRSearch
00006e  e020              B        |L1.178|
                  |L1.112|
;;;56       #endif
;;;57       if (pBitmap->pMethods) {
000070  6920              LDR      r0,[r4,#0x10]
000072  b168              CBZ      r0,|L1.144|
000074  e9d43c02          LDRD     r3,r12,[r4,#8]
000078  e9cd3c00          STRD     r3,r12,[sp,#0]
00007c  e9cd8902          STRD     r8,r9,[sp,#8]
;;;58         #if GUI_COMPILER_SUPPORTS_FP      /* Do not support this on VERY simple chips and compilers */
;;;59           pBitmap->pMethods->pfDraw(x0, y0, pBitmap->XSize ,pBitmap->YSize, (U8 const *)pBitmap->pData, pBitmap->pPal, xMul, yMul);
000080  f8d0c000          LDR      r12,[r0,#0]
000084  8863              LDRH     r3,[r4,#2]
000086  8822              LDRH     r2,[r4,#0]
000088  4629              MOV      r1,r5
00008a  4630              MOV      r0,r6
00008c  47e0              BLX      r12
00008e  e00e              B        |L1.174|
                  |L1.144|
;;;60         #endif
;;;61       } else {
;;;62         LCD_DrawBitmap(x0, y0, xSize, ySize, xMul, yMul
000090  88a1              LDRH     r1,[r4,#4]
000092  88e2              LDRH     r2,[r4,#6]
000094  68a0              LDR      r0,[r4,#8]
000096  e9cd2102          STRD     r2,r1,[sp,#8]
00009a  e9cd0704          STRD     r0,r7,[sp,#0x10]
00009e  4653              MOV      r3,r10
0000a0  465a              MOV      r2,r11
0000a2  4629              MOV      r1,r5
0000a4  4630              MOV      r0,r6
0000a6  e9cd8900          STRD     r8,r9,[sp,#0]
0000aa  f7fffffe          BL       LCD_DrawBitmap
                  |L1.174|
;;;63                         ,pBitmap->BitsPerPixel, pBitmap->BytesPerLine
;;;64                         ,pBitmap->pData, pTrans);
;;;65       }
;;;66       #if (GUI_WINSUPPORT)
;;;67           WM_ITERATE_END();
0000ae  f7fffffe          BL       WM__GetNextIVR
                  |L1.178|
0000b2  2800              CMP      r0,#0
0000b4  d1dc              BNE      |L1.112|
;;;68         }
;;;69       #endif
;;;70       GUI_SetDrawMode(PrevDraw);
0000b6  9806              LDR      r0,[sp,#0x18]
0000b8  b00d              ADD      sp,sp,#0x34
0000ba  e8bd4ff0          POP      {r4-r11,lr}
0000be  f7ffbffe          B.W      GUI_SetDrawMode
;;;71       GUI_UNLOCK();
;;;72     }
;;;73     
                          ENDP

0000c2  0000              DCW      0x0000
                  |L1.196|
                          DCD      GUI_Context
