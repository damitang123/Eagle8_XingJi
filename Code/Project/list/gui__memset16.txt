; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui__memset16.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__memset16.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI__memset16.c]
                          THUMB

                          AREA ||i.GUI__memset16||, CODE, READONLY, ALIGN=1

                  GUI__memset16 PROC
;;;35     */
;;;36     void GUI__memset16(U16 * p, U16 Fill, int NumWords) {
000000  b510              PUSH     {r4,lr}
;;;37       /* Code for 16 bit CPUs */
;;;38       if (sizeof(int) == 2) { /* May some compilers generate a warning at this line: Condition is alwaws true/false */
;;;39         if (NumWords >= 8) {  /* May some compilers generate a warning at this line: Unreachable code */
;;;40           *p++ = Fill;
;;;41           *p++ = Fill;
;;;42           *p++ = Fill;
;;;43           *p++ = Fill;
;;;44           *p++ = Fill;
;;;45           *p++ = Fill;
;;;46           *p++ = Fill;
;;;47           *p++ = Fill;
;;;48           NumWords -= 8;
;;;49         }
;;;50         while (NumWords) {
;;;51           *p++ = Fill;
;;;52           NumWords--;
;;;53         }
;;;54       } else {
;;;55         int NumInts;          /* May some compilers generate a warning at this line: Unreachable code */
;;;56         /* Write 16 bit until we are done or have reached an int boundary */
;;;57         if (2 & (U32)p) {
000002  0783              LSLS     r3,r0,#30
000004  d502              BPL      |L1.12|
;;;58           *p++ = Fill;
000006  f8201b02          STRH     r1,[r0],#2
00000a  1e52              SUBS     r2,r2,#1
                  |L1.12|
;;;59           NumWords--;
;;;60         }
;;;61         /* Write Ints */
;;;62         NumInts = (unsigned)NumWords / (sizeof(int) / 2);
00000c  0853              LSRS     r3,r2,#1
;;;63         if (NumInts) {
00000e  d011              BEQ      |L1.52|
;;;64           int FillInt;
;;;65           int *pInt;
;;;66           FillInt = Fill * 0x10001;
000010  eb014401          ADD      r4,r1,r1,LSL #16
;;;67     
;;;68           pInt = (int*)p;
;;;69           /* Fill large amount of data at a time */
;;;70           if (NumInts >= 4) {
000014  2b04              CMP      r3,#4
000016  db09              BLT      |L1.44|
                  |L1.24|
;;;71             do {
;;;72               *pInt       = FillInt;
000018  c010              STM      r0!,{r4}
;;;73               *(pInt + 1) = FillInt;
;;;74               *(pInt + 2) = FillInt;
;;;75               *(pInt + 3) = FillInt;
00001a  1f1b              SUBS     r3,r3,#4
00001c  c010              STM      r0!,{r4}              ;73
;;;76               pInt += 4;
;;;77             } while ((NumInts -= 4) >= 4);
00001e  2b04              CMP      r3,#4
000020  f8404b08          STR      r4,[r0],#8            ;74
000024  f8404c04          STR      r4,[r0,#-4]           ;75
000028  daf6              BGE      |L1.24|
00002a  e001              B        |L1.48|
                  |L1.44|
;;;78           }
;;;79           /* Fill one int at a time */
;;;80           while (NumInts) {
;;;81             *pInt++ = FillInt;
00002c  c010              STM      r0!,{r4}
00002e  1e5b              SUBS     r3,r3,#1
                  |L1.48|
000030  2b00              CMP      r3,#0                 ;80
000032  d1fb              BNE      |L1.44|
                  |L1.52|
;;;82             NumInts--;
;;;83           }
;;;84           p = (U16*)pInt;
;;;85         }
;;;86         /* Fill the remainder */
;;;87         if (NumWords & 1) {
000034  07d2              LSLS     r2,r2,#31
000036  d000              BEQ      |L1.58|
;;;88           *p = Fill;
000038  8001              STRH     r1,[r0,#0]
                  |L1.58|
;;;89         }
;;;90       }
;;;91     }
00003a  bd10              POP      {r4,pc}
;;;92     
                          ENDP

