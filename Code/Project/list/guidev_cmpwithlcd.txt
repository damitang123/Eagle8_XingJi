; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guidev_cmpwithlcd.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidev_cmpwithlcd.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\MemDev\GUIDEV_CmpWithLCD.c]
                          THUMB

                          AREA ||i.GUI_MEMDEV_CompareWithLCD||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CompareWithLCD PROC
;;;44     */
;;;45     int GUI_MEMDEV_CompareWithLCD(GUI_MEMDEV_Handle hMem, int*px, int*py, int *pExp, int*pAct) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b08d              SUB      sp,sp,#0x34
;;;46       int Ret = 0;
000006  2100              MOVS     r1,#0
000008  910a              STR      r1,[sp,#0x28]         ;45
00000a  b918              CBNZ     r0,|L1.20|
;;;47       /* Make sure memory handle is valid */
;;;48       if (!hMem) {
;;;49         hMem = GUI_Context.hDevData;
00000c  4830              LDR      r0,|L1.208|
00000e  f9b00050          LDRSH    r0,[r0,#0x50]  ; GUI_Context
000012  b330              CBZ      r0,|L1.98|
                  |L1.20|
;;;50       }
;;;51       if (!hMem) {
;;;52         return 1;
;;;53       }
;;;54       GUI_LOCK();
;;;55       {
;;;56         GUI_MEMDEV * pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000014  f7fffffe          BL       GUI_ALLOC_h2p
;;;57         int y    = pDevData->y0;
;;;58         int x0   = pDevData->x0;
000018  f9b0a000          LDRSH    r10,[r0,#0]
;;;59         int XMax = pDevData->XSize + x0;
00001c  f9b02004          LDRSH    r2,[r0,#4]
000020  f9b04002          LDRSH    r4,[r0,#2]            ;57
;;;60         int YMax = pDevData->YSize + y;
000024  f9b00006          LDRSH    r0,[r0,#6]
000028  eb02070a          ADD      r7,r2,r10             ;59
00002c  eb000904          ADD      r9,r0,r4
;;;61         int Max;
;;;62         int MagX = LCD_GetXMag();
000030  f7fffffe          BL       LCD_GetXMag
;;;63         int MagY = LCD_GetYMag();
000034  9006              STR      r0,[sp,#0x18]
000036  f7fffffe          BL       LCD_GetYMag
;;;64         /* Calculate limits */
;;;65         if (y < 0) {
00003a  9002              STR      r0,[sp,#8]
00003c  2c00              CMP      r4,#0
00003e  da00              BGE      |L1.66|
;;;66     			y = 0;
000040  2400              MOVS     r4,#0
                  |L1.66|
;;;67         }
;;;68         if (x0 < 0) {
000042  f1ba0f00          CMP      r10,#0
000046  da01              BGE      |L1.76|
;;;69     			x0 = 0;
000048  f04f0a00          MOV      r10,#0
                  |L1.76|
;;;70         }
;;;71         Max = LCD_GET_YSIZE();
00004c  f7fffffe          BL       LCD_GetYSize
;;;72     		if (YMax > Max) {
000050  4581              CMP      r9,r0
000052  dd00              BLE      |L1.86|
;;;73     			YMax = Max;
000054  4681              MOV      r9,r0
                  |L1.86|
;;;74         }
;;;75         Max = LCD_GET_XSIZE();
000056  f7fffffe          BL       LCD_GetXSize
;;;76     		if (XMax > Max) {
00005a  4287              CMP      r7,r0
00005c  dd33              BLE      |L1.198|
;;;77     			XMax = Max;
00005e  4607              MOV      r7,r0
000060  e031              B        |L1.198|
                  |L1.98|
000062  2001              MOVS     r0,#1                 ;52
                  |L1.100|
;;;78         }
;;;79         for (; y < YMax; y++) {
;;;80           int x = x0;
;;;81           U8 * pData = (U8 *)GUI_MEMDEV__XY2PTR(x, y);
;;;82           for (x = x0; x < XMax; x++) {
;;;83             int Exp = *pData++;
;;;84             int Act = LCD_L0_GetPixelIndex(x * MagX, y * MagY);
;;;85             #if (GUI_NUM_LAYERS > 1)
;;;86             if (LCD_GetBitsPerPixelEx(GUI_Context.SelLayer) > 8)
;;;87             #else
;;;88             if (LCD_GetBitsPerPixel() > 8)
;;;89             #endif
;;;90             {
;;;91               Exp |= (*pData++) << 8;
;;;92             }
;;;93             if (Act != Exp) {
;;;94               *px    = x;
;;;95               *py    = y;
;;;96               *pAct  = Act;
;;;97               *pExp  = Exp;
;;;98               Ret = 1;
;;;99               goto Skip;
;;;100            }
;;;101          }
;;;102        }
;;;103      }
;;;104    Skip:
;;;105      GUI_UNLOCK();
;;;106      return Ret;
;;;107    }
000064  b011              ADD      sp,sp,#0x44
000066  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.106|
00006a  4655              MOV      r5,r10                ;80
00006c  4621              MOV      r1,r4                 ;81
00006e  4650              MOV      r0,r10                ;81
000070  f7fffffe          BL       GUI_MEMDEV__XY2PTR
000074  9902              LDR      r1,[sp,#8]            ;84
000076  4606              MOV      r6,r0                 ;81
000078  fb04f001          MUL      r0,r4,r1              ;84
00007c  900c              STR      r0,[sp,#0x30]         ;82
00007e  e01f              B        |L1.192|
                  |L1.128|
000080  9806              LDR      r0,[sp,#0x18]         ;84
000082  f8168b01          LDRB     r8,[r6],#1            ;83
000086  4368              MULS     r0,r5,r0              ;84
000088  990c              LDR      r1,[sp,#0x30]         ;84
00008a  f7fffffe          BL       LCD_L0_GetPixelIndex
00008e  4683              MOV      r11,r0                ;84
000090  f7fffffe          BL       LCD_GetBitsPerPixel
000094  2808              CMP      r0,#8                 ;88
000096  dd03              BLE      |L1.160|
000098  f8161b01          LDRB     r1,[r6],#1            ;91
00009c  ea482801          ORR      r8,r8,r1,LSL #8       ;91
                  |L1.160|
0000a0  45c3              CMP      r11,r8                ;93
0000a2  d00c              BEQ      |L1.190|
0000a4  980e              LDR      r0,[sp,#0x38]         ;94
0000a6  6005              STR      r5,[r0,#0]            ;95
0000a8  980f              LDR      r0,[sp,#0x3c]         ;95
0000aa  6004              STR      r4,[r0,#0]            ;96
0000ac  991a              LDR      r1,[sp,#0x68]         ;96
0000ae  2001              MOVS     r0,#1                 ;98
0000b0  f8c1b000          STR      r11,[r1,#0]           ;97
0000b4  9910              LDR      r1,[sp,#0x40]         ;97
0000b6  f8c18000          STR      r8,[r1,#0]            ;98
0000ba  900a              STR      r0,[sp,#0x28]         ;99
0000bc  e7d2              B        |L1.100|
                  |L1.190|
0000be  1c6d              ADDS     r5,r5,#1
                  |L1.192|
0000c0  42bd              CMP      r5,r7                 ;82
0000c2  dbdd              BLT      |L1.128|
0000c4  1c64              ADDS     r4,r4,#1              ;82
                  |L1.198|
0000c6  454c              CMP      r4,r9                 ;79
0000c8  dbcf              BLT      |L1.106|
0000ca  980a              LDR      r0,[sp,#0x28]         ;106
0000cc  e7ca              B        |L1.100|
;;;108    
                          ENDP

0000ce  0000              DCW      0x0000
                  |L1.208|
                          DCD      GUI_Context
