; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdp332.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdp332.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\ConvertColor\LCDP332.c]
                          THUMB

                          AREA ||i.LCD_Color2Index_332||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_332 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_332(LCD_COLOR Color) {
000000  b2c1              UXTB     r1,r0
;;;35       int r, g, b;
;;;36       r = Color & 255;
;;;37       g = (Color >> 8 ) & 255;
;;;38       b = Color >> 16;
;;;39       r = (r + 42) / 85;
000002  2355              MOVS     r3,#0x55
000004  312a              ADDS     r1,r1,#0x2a
000006  fb91f1f3          SDIV     r1,r1,r3
00000a  f3c02207          UBFX     r2,r0,#8,#8           ;37
;;;40       g = (g * 7 + 127) / 255;
00000e  ebc202c2          RSB      r2,r2,r2,LSL #3
000012  23ff              MOVS     r3,#0xff
000014  327f              ADDS     r2,r2,#0x7f
000016  0c00              LSRS     r0,r0,#16             ;38
;;;41       b = (b * 7 + 127) / 255;
000018  ebc000c0          RSB      r0,r0,r0,LSL #3
00001c  fb92f2f3          SDIV     r2,r2,r3              ;40
000020  307f              ADDS     r0,r0,#0x7f
000022  fb90f0f3          SDIV     r0,r0,r3
;;;42       return r + (g << 2) + (b << 5);
000026  eb010182          ADD      r1,r1,r2,LSL #2
00002a  eb011040          ADD      r0,r1,r0,LSL #5
;;;43     }
00002e  4770              BX       lr
;;;44     
                          ENDP


                          AREA ||i.LCD_GetIndexMask_332||, CODE, READONLY, ALIGN=1

                  LCD_GetIndexMask_332 PROC
;;;60     */
;;;61     unsigned LCD_GetIndexMask_332(void) {
000000  20ff              MOVS     r0,#0xff
;;;62       return 0xff;
;;;63     }
000002  4770              BX       lr
;;;64     
                          ENDP


                          AREA ||i.LCD_Index2Color_332||, CODE, READONLY, ALIGN=1

                  LCD_Index2Color_332 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_332(int Index) {
000000  f0000103          AND      r1,r0,#3
;;;50       unsigned r, g, b;
;;;51       r = (Index & 3) * 85;
000004  eb011101          ADD      r1,r1,r1,LSL #4
000008  eb010281          ADD      r2,r1,r1,LSL #2
;;;52       g = ((Index >> 2) & 7) * 255 / 7;
00000c  f3c00182          UBFX     r1,r0,#2,#3
000010  2307              MOVS     r3,#7
000012  ebc12101          RSB      r1,r1,r1,LSL #8
;;;53       b = ((Index >> 5) & 7) * 255 / 7;
000016  f3c01042          UBFX     r0,r0,#5,#3
00001a  fbb1f1f3          UDIV     r1,r1,r3              ;52
00001e  ebc02000          RSB      r0,r0,r0,LSL #8
000022  fbb0f0f3          UDIV     r0,r0,r3
;;;54       return r + (g << 8) + (((U32)b) << 16);
000026  eb022101          ADD      r1,r2,r1,LSL #8
00002a  eb014000          ADD      r0,r1,r0,LSL #16
;;;55     }
00002e  4770              BX       lr
;;;56     
                          ENDP

