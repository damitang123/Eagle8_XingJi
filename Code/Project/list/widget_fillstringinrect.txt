; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\widget_fillstringinrect.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\widget_fillstringinrect.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\WIDGET_FillStringInRect.c]
                          THUMB

                          AREA ||i.WIDGET__FillStringInRect||, CODE, READONLY, ALIGN=2

                  WIDGET__FillStringInRect PROC
;;;55     */
;;;56     void WIDGET__FillStringInRect(const char GUI_UNI_PTR * pText, const GUI_RECT * pFillRect, const GUI_RECT * pTextRectMax, const GUI_RECT * pTextRectAct) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4606              MOV      r6,r0
;;;57       /* Check if we have anything to do at all ... */
;;;58       if (GUI_Context.pClipRect_HL) {
000006  483b              LDR      r0,|L1.244|
000008  4617              MOV      r7,r2                 ;56
00000a  461d              MOV      r5,r3                 ;56
00000c  6942              LDR      r2,[r0,#0x14]         ;56  ; GUI_Context
00000e  460c              MOV      r4,r1                 ;56
000010  b302              CBZ      r2,|L1.84|
;;;59         GUI_RECT r;
;;;60         r = *pFillRect;
000012  6821              LDR      r1,[r4,#0]
000014  9100              STR      r1,[sp,#0]
000016  6861              LDR      r1,[r4,#4]
;;;61         WM_ADDORG(r.x0, r.y0);
000018  9101              STR      r1,[sp,#4]
00001a  f8bd3000          LDRH     r3,[sp,#0]
00001e  f8301f44          LDRH     r1,[r0,#0x44]!  ; GUI_Context
000022  440b              ADD      r3,r3,r1
000024  f8ad3000          STRH     r3,[sp,#0]
000028  f8bd3002          LDRH     r3,[sp,#2]
00002c  8880              LDRH     r0,[r0,#4]  ; GUI_Context
00002e  4403              ADD      r3,r3,r0
000030  f8ad3002          STRH     r3,[sp,#2]
;;;62         WM_ADDORG(r.x1, r.y1);
000034  f8bd3004          LDRH     r3,[sp,#4]
000038  4419              ADD      r1,r1,r3
00003a  f8ad1004          STRH     r1,[sp,#4]
00003e  f8bd1006          LDRH     r1,[sp,#6]
000042  4408              ADD      r0,r0,r1
000044  f8ad0006          STRH     r0,[sp,#6]
;;;63         if (GUI_RectsIntersect(GUI_Context.pClipRect_HL, &r) == 0)
000048  4669              MOV      r1,sp
00004a  4610              MOV      r0,r2
00004c  f7fffffe          BL       GUI_RectsIntersect
000050  2800              CMP      r0,#0
000052  d04d              BEQ      |L1.240|
                  |L1.84|
;;;64           return;
;;;65       }
;;;66     
;;;67       if (pText) {
000054  b3f6              CBZ      r6,|L1.212|
;;;68         if (*pText) {             /* Speed optimization, not required */
000056  7830              LDRB     r0,[r6,#0]
000058  b3e0              CBZ      r0,|L1.212|
;;;69           const GUI_RECT* pOldClipRect;
;;;70     
;;;71     
;;;72           /* Fill border */
;;;73           #if WIDGET_FILL_TEXT_USES_TRANS
;;;74             GUI_ClearRectEx(pFillRect);
;;;75           #else
;;;76             {
;;;77               GUI_RECT rText;
;;;78               GUI__IntersectRects(&rText, pTextRectMax, pTextRectAct);
00005a  462a              MOV      r2,r5
00005c  4639              MOV      r1,r7
00005e  4668              MOV      r0,sp
000060  f7fffffe          BL       GUI__IntersectRects
;;;79               GUI_ClearRect(pFillRect->x0, pFillRect->y0, pFillRect->x1, rText.y0 - 1); /* Top */
000064  f9bd3002          LDRSH    r3,[sp,#2]
000068  f9b42004          LDRSH    r2,[r4,#4]
00006c  f9b41002          LDRSH    r1,[r4,#2]
000070  f9b40000          LDRSH    r0,[r4,#0]
000074  1e5b              SUBS     r3,r3,#1
000076  f7fffffe          BL       GUI_ClearRect
;;;80               GUI_ClearRect(pFillRect->x0, rText.y0,      rText.x0 - 1 , rText.y1);     /* Left */
00007a  f9bd2000          LDRSH    r2,[sp,#0]
00007e  f9bd3006          LDRSH    r3,[sp,#6]
000082  f9bd1002          LDRSH    r1,[sp,#2]
000086  f9b40000          LDRSH    r0,[r4,#0]
00008a  1e52              SUBS     r2,r2,#1
00008c  f7fffffe          BL       GUI_ClearRect
;;;81               GUI_ClearRect(rText.x1 + 1,  rText.y0,      pFillRect->x1, rText.y1);     /* Right */
000090  f9bd0004          LDRSH    r0,[sp,#4]
000094  f9bd3006          LDRSH    r3,[sp,#6]
000098  f9b42004          LDRSH    r2,[r4,#4]
00009c  f9bd1002          LDRSH    r1,[sp,#2]
0000a0  1c40              ADDS     r0,r0,#1
0000a2  f7fffffe          BL       GUI_ClearRect
;;;82               GUI_ClearRect(pFillRect->x0, rText.y1 + 1,  pFillRect->x1, pFillRect->y1);/* Bottom */
0000a6  f9bd1006          LDRSH    r1,[sp,#6]
0000aa  f9b43006          LDRSH    r3,[r4,#6]
0000ae  f9b42004          LDRSH    r2,[r4,#4]
0000b2  f9b40000          LDRSH    r0,[r4,#0]
0000b6  1c49              ADDS     r1,r1,#1
0000b8  f7fffffe          BL       GUI_ClearRect
;;;83             }
;;;84           #endif
;;;85     
;;;86           /* Set clipping rectangle */
;;;87           pOldClipRect = WM_SetUserClipRect(pTextRectMax);
0000bc  4638              MOV      r0,r7
0000be  f7fffffe          BL       WM_SetUserClipRect
0000c2  4604              MOV      r4,r0
;;;88     
;;;89           /* Display text */
;;;90           #if WIDGET_FILL_TEXT_USES_TRANS
;;;91             GUI_SetTextMode(GUI_TM_TRANS);
;;;92           #else
;;;93             GUI_SetTextMode(GUI_TM_NORMAL);
0000c4  2000              MOVS     r0,#0
0000c6  f7fffffe          BL       GUI_SetTextMode
;;;94           #endif
;;;95           GUI_DispStringAt(pText, pTextRectAct->x0, pTextRectAct->y0);
0000ca  f9b52002          LDRSH    r2,[r5,#2]
0000ce  f9b51000          LDRSH    r1,[r5,#0]
0000d2  e000              B        |L1.214|
                  |L1.212|
0000d4  e007              B        |L1.230|
                  |L1.214|
0000d6  4630              MOV      r0,r6
0000d8  f7fffffe          BL       GUI_DispStringAt
;;;96     
;;;97           /* Restore clipping rectangle */
;;;98           WM_SetUserClipRect(pOldClipRect);
0000dc  4620              MOV      r0,r4
0000de  e8bd41fc          POP      {r2-r8,lr}
0000e2  f7ffbffe          B.W      WM_SetUserClipRect
                  |L1.230|
;;;99           return;
;;;100        }
;;;101      }
;;;102      GUI_ClearRectEx(pFillRect);
0000e6  4620              MOV      r0,r4
0000e8  e8bd41fc          POP      {r2-r8,lr}
0000ec  f7ffbffe          B.W      GUI_ClearRectEx
                  |L1.240|
;;;103    }
0000f0  e8bd81fc          POP      {r2-r8,pc}
;;;104    
                          ENDP

                  |L1.244|
                          DCD      GUI_Context
