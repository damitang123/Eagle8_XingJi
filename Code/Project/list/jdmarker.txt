; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\jdmarker.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\jdmarker.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\JPEG\jdmarker.c]
                          THUMB

                          AREA ||i.examine_app0||, CODE, READONLY, ALIGN=1

                  examine_app0 PROC
;;;583    LOCAL(void)
;;;584    examine_app0 (j_decompress_ptr cinfo, JOCTET FAR * data,
000000  b570              PUSH     {r4-r6,lr}
;;;585    	      unsigned int datalen, INT32 remaining)
;;;586    /* Examine first few bytes from an APP0.
;;;587     * Take appropriate action if it is a JFIF marker.
;;;588     * datalen is # of bytes at data[], remaining is length of rest of marker data.
;;;589     */
;;;590    {
000002  4604              MOV      r4,r0
;;;591      INT32 totallen = (INT32) datalen + remaining;
000004  18d6              ADDS     r6,r2,r3
;;;592    
;;;593      if (datalen >= APP0_DATA_LEN &&
;;;594          GETJOCTET(data[0]) == 0x4A &&
;;;595          GETJOCTET(data[1]) == 0x46 &&
;;;596          GETJOCTET(data[2]) == 0x49 &&
;;;597          GETJOCTET(data[3]) == 0x46 &&
;;;598          GETJOCTET(data[4]) == 0) {
;;;599        /* Found JFIF APP0 marker: save info */
;;;600        cinfo->saw_JFIF_marker = TRUE;
;;;601        cinfo->JFIF_major_version = GETJOCTET(data[5]);
;;;602        cinfo->JFIF_minor_version = GETJOCTET(data[6]);
;;;603        cinfo->density_unit = GETJOCTET(data[7]);
;;;604        cinfo->X_density = (GETJOCTET(data[8]) << 8) + GETJOCTET(data[9]);
;;;605        cinfo->Y_density = (GETJOCTET(data[10]) << 8) + GETJOCTET(data[11]);
;;;606        /* Check version.
;;;607         * Major version must be 1, anything else signals an incompatible change.
;;;608         * (We used to treat this as an error, but now it's a nonfatal warning,
;;;609         * because some bozo at Hijaak couldn't read the spec.)
;;;610         * Minor version should be 0..2, but process anyway if newer.
;;;611         */
;;;612        if (cinfo->JFIF_major_version != 1)
;;;613          WARNMS2(cinfo, JWRN_JFIF_MAJOR,
000006  6800              LDR      r0,[r0,#0]
000008  460d              MOV      r5,r1                 ;590
00000a  2a0e              CMP      r2,#0xe               ;593
00000c  d30d              BCC      |L1.42|
00000e  7829              LDRB     r1,[r5,#0]            ;594
000010  294a              CMP      r1,#0x4a              ;594
000012  d10a              BNE      |L1.42|
000014  7869              LDRB     r1,[r5,#1]            ;595
000016  2946              CMP      r1,#0x46              ;595
000018  d107              BNE      |L1.42|
00001a  78a9              LDRB     r1,[r5,#2]            ;596
00001c  2949              CMP      r1,#0x49              ;596
00001e  d104              BNE      |L1.42|
000020  78e9              LDRB     r1,[r5,#3]            ;597
000022  2946              CMP      r1,#0x46              ;597
000024  d101              BNE      |L1.42|
000026  7929              LDRB     r1,[r5,#4]            ;598
000028  b129              CBZ      r1,|L1.54|
                  |L1.42|
;;;614    	      cinfo->JFIF_major_version, cinfo->JFIF_minor_version);
;;;615        /* Generate trace messages */
;;;616        TRACEMS5(cinfo, 1, JTRC_JFIF,
;;;617    	     cinfo->JFIF_major_version, cinfo->JFIF_minor_version,
;;;618    	     cinfo->X_density, cinfo->Y_density, cinfo->density_unit);
;;;619        /* Validate thumbnail dimensions and issue appropriate messages */
;;;620        if (GETJOCTET(data[12]) | GETJOCTET(data[13]))
;;;621          TRACEMS2(cinfo, 1, JTRC_JFIF_THUMBNAIL,
;;;622    	       GETJOCTET(data[12]), GETJOCTET(data[13]));
;;;623        totallen -= APP0_DATA_LEN;
;;;624        if (totallen !=
;;;625    	((INT32)GETJOCTET(data[12]) * (INT32)GETJOCTET(data[13]) * (INT32) 3))
;;;626          TRACEMS1(cinfo, 1, JTRC_JFIF_BADTHUMBNAILSIZE, (int) totallen);
;;;627      } else if (datalen >= 6 &&
00002a  2a06              CMP      r2,#6
00002c  d36e              BCC      |L1.268|
;;;628          GETJOCTET(data[0]) == 0x4A &&
00002e  7829              LDRB     r1,[r5,#0]
000030  294a              CMP      r1,#0x4a
000032  d060              BEQ      |L1.246|
000034  e06a              B        |L1.268|
                  |L1.54|
000036  2101              MOVS     r1,#1                 ;600
000038  f8c41118          STR      r1,[r4,#0x118]        ;601
00003c  7969              LDRB     r1,[r5,#5]            ;601
00003e  f884111c          STRB     r1,[r4,#0x11c]        ;601
000042  79aa              LDRB     r2,[r5,#6]            ;602
000044  f884211d          STRB     r2,[r4,#0x11d]        ;602
000048  79ea              LDRB     r2,[r5,#7]            ;603
00004a  f884211e          STRB     r2,[r4,#0x11e]        ;603
00004e  7a6a              LDRB     r2,[r5,#9]            ;604
000050  7a2b              LDRB     r3,[r5,#8]            ;604
000052  2901              CMP      r1,#1                 ;612
000054  eb022203          ADD      r2,r2,r3,LSL #8       ;604
000058  f8a42120          STRH     r2,[r4,#0x120]        ;604
00005c  7aea              LDRB     r2,[r5,#0xb]          ;605
00005e  7aab              LDRB     r3,[r5,#0xa]          ;605
000060  eb022203          ADD      r2,r2,r3,LSL #8       ;605
000064  f8a42122          STRH     r2,[r4,#0x122]        ;605
000068  d00f              BEQ      |L1.138|
00006a  2177              MOVS     r1,#0x77              ;613
00006c  6141              STR      r1,[r0,#0x14]         ;613
00006e  6821              LDR      r1,[r4,#0]            ;613
000070  f894011c          LDRB     r0,[r4,#0x11c]        ;613
000074  6188              STR      r0,[r1,#0x18]         ;613
000076  6821              LDR      r1,[r4,#0]            ;613
000078  f894011d          LDRB     r0,[r4,#0x11d]        ;613
00007c  61c8              STR      r0,[r1,#0x1c]         ;613
00007e  6820              LDR      r0,[r4,#0]            ;613
000080  f04f31ff          MOV      r1,#0xffffffff        ;613
000084  6842              LDR      r2,[r0,#4]            ;613
000086  4620              MOV      r0,r4                 ;613
000088  4790              BLX      r2                    ;613
                  |L1.138|
00008a  6820              LDR      r0,[r4,#0]            ;616
00008c  f894111c          LDRB     r1,[r4,#0x11c]        ;616
000090  6181              STR      r1,[r0,#0x18]         ;616
000092  f894111d          LDRB     r1,[r4,#0x11d]        ;616
000096  61c1              STR      r1,[r0,#0x1c]         ;616
000098  f8b41120          LDRH     r1,[r4,#0x120]        ;616
00009c  6201              STR      r1,[r0,#0x20]         ;616
00009e  f8b41122          LDRH     r1,[r4,#0x122]        ;616
0000a2  6241              STR      r1,[r0,#0x24]         ;616
0000a4  f894111e          LDRB     r1,[r4,#0x11e]        ;616
0000a8  6281              STR      r1,[r0,#0x28]         ;616
0000aa  6821              LDR      r1,[r4,#0]            ;616
0000ac  2057              MOVS     r0,#0x57              ;616
0000ae  6148              STR      r0,[r1,#0x14]         ;616
0000b0  6820              LDR      r0,[r4,#0]            ;616
0000b2  2101              MOVS     r1,#1                 ;616
0000b4  6842              LDR      r2,[r0,#4]            ;616
0000b6  4620              MOV      r0,r4                 ;616
0000b8  4790              BLX      r2                    ;616
0000ba  7b28              LDRB     r0,[r5,#0xc]          ;620
0000bc  7b69              LDRB     r1,[r5,#0xd]          ;620
0000be  4308              ORRS     r0,r0,r1              ;620
0000c0  d00d              BEQ      |L1.222|
0000c2  6821              LDR      r1,[r4,#0]            ;621
0000c4  205a              MOVS     r0,#0x5a              ;621
0000c6  6148              STR      r0,[r1,#0x14]         ;621
0000c8  6821              LDR      r1,[r4,#0]            ;621
0000ca  7b28              LDRB     r0,[r5,#0xc]          ;621
0000cc  6188              STR      r0,[r1,#0x18]         ;621
0000ce  6821              LDR      r1,[r4,#0]            ;621
0000d0  7b68              LDRB     r0,[r5,#0xd]          ;621
0000d2  61c8              STR      r0,[r1,#0x1c]         ;621
0000d4  6820              LDR      r0,[r4,#0]            ;621
0000d6  2101              MOVS     r1,#1                 ;621
0000d8  6842              LDR      r2,[r0,#4]            ;621
0000da  4620              MOV      r0,r4                 ;621
0000dc  4790              BLX      r2                    ;621
                  |L1.222|
0000de  7b28              LDRB     r0,[r5,#0xc]          ;624
0000e0  7b69              LDRB     r1,[r5,#0xd]          ;624
0000e2  3e0e              SUBS     r6,r6,#0xe            ;624
0000e4  4348              MULS     r0,r1,r0              ;624
0000e6  eb000040          ADD      r0,r0,r0,LSL #1       ;624
0000ea  42b0              CMP      r0,r6                 ;624
0000ec  d02f              BEQ      |L1.334|
0000ee  6821              LDR      r1,[r4,#0]            ;626
0000f0  2058              MOVS     r0,#0x58              ;626
0000f2  6148              STR      r0,[r1,#0x14]         ;626
0000f4  e023              B        |L1.318|
                  |L1.246|
;;;629          GETJOCTET(data[1]) == 0x46 &&
0000f6  7869              LDRB     r1,[r5,#1]
0000f8  2946              CMP      r1,#0x46
0000fa  d107              BNE      |L1.268|
;;;630          GETJOCTET(data[2]) == 0x58 &&
0000fc  78a9              LDRB     r1,[r5,#2]
0000fe  2958              CMP      r1,#0x58
000100  d104              BNE      |L1.268|
;;;631          GETJOCTET(data[3]) == 0x58 &&
000102  78e9              LDRB     r1,[r5,#3]
000104  2958              CMP      r1,#0x58
000106  d101              BNE      |L1.268|
;;;632          GETJOCTET(data[4]) == 0) {
000108  7929              LDRB     r1,[r5,#4]
00010a  b109              CBZ      r1,|L1.272|
                  |L1.268|
;;;633        /* Found JFIF "JFXX" extension APP0 marker */
;;;634        /* The library doesn't actually do anything with these,
;;;635         * but we try to produce a helpful trace message.
;;;636         */
;;;637        switch (GETJOCTET(data[5])) {
;;;638        case 0x10:
;;;639          TRACEMS1(cinfo, 1, JTRC_THUMB_JPEG, (int) totallen);
;;;640          break;
;;;641        case 0x11:
;;;642          TRACEMS1(cinfo, 1, JTRC_THUMB_PALETTE, (int) totallen);
;;;643          break;
;;;644        case 0x13:
;;;645          TRACEMS1(cinfo, 1, JTRC_THUMB_RGB, (int) totallen);
;;;646          break;
;;;647        default:
;;;648          TRACEMS2(cinfo, 1, JTRC_JFIF_EXTENSION,
;;;649    	       GETJOCTET(data[5]), (int) totallen);
;;;650          break;
;;;651        }
;;;652      } else {
;;;653        /* Start of APP0 does not match "JFIF" or "JFXX", or too short */
;;;654        TRACEMS1(cinfo, 1, JTRC_APP0, (int) totallen);
00010c  214d              MOVS     r1,#0x4d
00010e  e01c              B        |L1.330|
                  |L1.272|
000110  7969              LDRB     r1,[r5,#5]            ;637
000112  2910              CMP      r1,#0x10              ;637
000114  d011              BEQ      |L1.314|
000116  2911              CMP      r1,#0x11              ;637
000118  d014              BEQ      |L1.324|
00011a  2913              CMP      r1,#0x13              ;637
00011c  d014              BEQ      |L1.328|
00011e  2159              MOVS     r1,#0x59              ;648
000120  6141              STR      r1,[r0,#0x14]         ;648
000122  6821              LDR      r1,[r4,#0]            ;648
000124  7968              LDRB     r0,[r5,#5]            ;648
000126  6188              STR      r0,[r1,#0x18]         ;648
000128  6820              LDR      r0,[r4,#0]            ;648
00012a  61c6              STR      r6,[r0,#0x1c]         ;648
                  |L1.300|
00012c  6820              LDR      r0,[r4,#0]
00012e  2101              MOVS     r1,#1
000130  6842              LDR      r2,[r0,#4]
000132  4620              MOV      r0,r4
000134  e8bd4070          POP      {r4-r6,lr}
000138  4710              BX       r2
                  |L1.314|
00013a  216c              MOVS     r1,#0x6c              ;639
00013c  e005              B        |L1.330|
                  |L1.318|
00013e  6820              LDR      r0,[r4,#0]            ;626
000140  6186              STR      r6,[r0,#0x18]         ;626
000142  e7f3              B        |L1.300|
                  |L1.324|
000144  216d              MOVS     r1,#0x6d              ;642
000146  e000              B        |L1.330|
                  |L1.328|
000148  216e              MOVS     r1,#0x6e              ;645
                  |L1.330|
00014a  6141              STR      r1,[r0,#0x14]
00014c  e7f7              B        |L1.318|
                  |L1.334|
;;;655      }
;;;656    }
00014e  bd70              POP      {r4-r6,pc}
;;;657    
                          ENDP


                          AREA ||i.examine_app14||, CODE, READONLY, ALIGN=1

                  examine_app14 PROC
;;;659    LOCAL(void)
;;;660    examine_app14 (j_decompress_ptr cinfo, JOCTET FAR * data,
000000  b570              PUSH     {r4-r6,lr}
;;;661    	       unsigned int datalen, INT32 remaining)
;;;662    /* Examine first few bytes from an APP14.
;;;663     * Take appropriate action if it is an Adobe marker.
;;;664     * datalen is # of bytes at data[], remaining is length of rest of marker data.
;;;665     */
;;;666    {
;;;667      unsigned int version, flags0, flags1, transform;
;;;668    
;;;669      if (datalen >= APP14_DATA_LEN &&
000002  6804              LDR      r4,[r0,#0]
000004  4605              MOV      r5,r0                 ;666
000006  2a0c              CMP      r2,#0xc
000008  d30e              BCC      |L2.40|
;;;670          GETJOCTET(data[0]) == 0x41 &&
00000a  7808              LDRB     r0,[r1,#0]
00000c  2841              CMP      r0,#0x41
00000e  d10b              BNE      |L2.40|
;;;671          GETJOCTET(data[1]) == 0x64 &&
000010  7848              LDRB     r0,[r1,#1]
000012  2864              CMP      r0,#0x64
000014  d108              BNE      |L2.40|
;;;672          GETJOCTET(data[2]) == 0x6F &&
000016  7888              LDRB     r0,[r1,#2]
000018  286f              CMP      r0,#0x6f
00001a  d105              BNE      |L2.40|
;;;673          GETJOCTET(data[3]) == 0x62 &&
00001c  78c8              LDRB     r0,[r1,#3]
00001e  2862              CMP      r0,#0x62
000020  d102              BNE      |L2.40|
;;;674          GETJOCTET(data[4]) == 0x65) {
000022  7908              LDRB     r0,[r1,#4]
000024  2865              CMP      r0,#0x65
000026  d00b              BEQ      |L2.64|
                  |L2.40|
;;;675        /* Found Adobe APP14 marker */
;;;676        version = (GETJOCTET(data[5]) << 8) + GETJOCTET(data[6]);
;;;677        flags0 = (GETJOCTET(data[7]) << 8) + GETJOCTET(data[8]);
;;;678        flags1 = (GETJOCTET(data[9]) << 8) + GETJOCTET(data[10]);
;;;679        transform = GETJOCTET(data[11]);
;;;680        TRACEMS4(cinfo, 1, JTRC_ADOBE, version, flags0, flags1, transform);
;;;681        cinfo->saw_Adobe_marker = TRUE;
;;;682        cinfo->Adobe_transform = (UINT8) transform;
;;;683      } else {
;;;684        /* Start of APP14 does not match "Adobe", or too short */
;;;685        TRACEMS1(cinfo, 1, JTRC_APP14, (int) (datalen + remaining));
000028  204e              MOVS     r0,#0x4e
00002a  6160              STR      r0,[r4,#0x14]
00002c  6829              LDR      r1,[r5,#0]
00002e  18d0              ADDS     r0,r2,r3
000030  6188              STR      r0,[r1,#0x18]
000032  6828              LDR      r0,[r5,#0]
000034  2101              MOVS     r1,#1
000036  6842              LDR      r2,[r0,#4]
000038  4628              MOV      r0,r5
00003a  e8bd4070          POP      {r4-r6,lr}
00003e  4710              BX       r2
                  |L2.64|
000040  7988              LDRB     r0,[r1,#6]            ;676
000042  794a              LDRB     r2,[r1,#5]            ;676
000044  7a4e              LDRB     r6,[r1,#9]            ;678
000046  eb002302          ADD      r3,r0,r2,LSL #8       ;676
00004a  7a08              LDRB     r0,[r1,#8]            ;677
00004c  79ca              LDRB     r2,[r1,#7]            ;677
00004e  eb002202          ADD      r2,r0,r2,LSL #8       ;677
000052  7a88              LDRB     r0,[r1,#0xa]          ;678
000054  eb002006          ADD      r0,r0,r6,LSL #8       ;678
000058  7ace              LDRB     r6,[r1,#0xb]          ;679
00005a  6266              STR      r6,[r4,#0x24]         ;680
00005c  61a3              STR      r3,[r4,#0x18]         ;680
00005e  e9c42007          STRD     r2,r0,[r4,#0x1c]      ;680
000062  6829              LDR      r1,[r5,#0]            ;680
000064  204c              MOVS     r0,#0x4c              ;680
000066  6148              STR      r0,[r1,#0x14]         ;680
000068  6828              LDR      r0,[r5,#0]            ;680
00006a  2101              MOVS     r1,#1                 ;680
00006c  6842              LDR      r2,[r0,#4]            ;680
00006e  4628              MOV      r0,r5                 ;680
000070  4790              BLX      r2                    ;680
000072  2001              MOVS     r0,#1                 ;681
000074  f8c50124          STR      r0,[r5,#0x124]        ;682
000078  f8856128          STRB     r6,[r5,#0x128]        ;682
;;;686      }
;;;687    }
00007c  bd70              POP      {r4-r6,pc}
;;;688    
                          ENDP


                          AREA ||i.first_marker||, CODE, READONLY, ALIGN=1

                  first_marker PROC
;;;920    LOCAL(boolean)
;;;921    first_marker (j_decompress_ptr cinfo)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;922    /* Like next_marker, but used to obtain the initial SOI marker. */
;;;923    /* For this marker, we do not allow preceding garbage or fill; otherwise,
;;;924     * we might well scan an entire input file before realizing it ain't JPEG.
;;;925     * If an application wants to process non-JFIF files, it must seek to the
;;;926     * SOI before calling the JPEG library.
;;;927     */
;;;928    {
;;;929      int c, c2;
;;;930      INPUT_VARS(cinfo);
000004  6984              LDR      r4,[r0,#0x18]
000006  4605              MOV      r5,r0                 ;928
000008  e9d40100          LDRD     r0,r1,[r4,#0]
00000c  b931              CBNZ     r1,|L3.28|
;;;931    
;;;932      INPUT_BYTE(cinfo, c, return FALSE);
00000e  68e1              LDR      r1,[r4,#0xc]
000010  4628              MOV      r0,r5
000012  4788              BLX      r1
000014  2800              CMP      r0,#0
000016  d025              BEQ      |L3.100|
000018  e9d40100          LDRD     r0,r1,[r4,#0]
                  |L3.28|
00001c  1e49              SUBS     r1,r1,#1
00001e  f8106b01          LDRB     r6,[r0],#1
;;;933      INPUT_BYTE(cinfo, c2, return FALSE);
000022  d106              BNE      |L3.50|
000024  68e1              LDR      r1,[r4,#0xc]
000026  4628              MOV      r0,r5
000028  4788              BLX      r1
00002a  2800              CMP      r0,#0
00002c  d01a              BEQ      |L3.100|
00002e  e9d40100          LDRD     r0,r1,[r4,#0]
                  |L3.50|
000032  f1a10901          SUB      r9,r1,#1
000036  f8107b01          LDRB     r7,[r0],#1
00003a  4680              MOV      r8,r0
;;;934      if (c != 0xFF || c2 != (int) M_SOI)
00003c  2eff              CMP      r6,#0xff
00003e  d101              BNE      |L3.68|
000040  2fd8              CMP      r7,#0xd8
000042  d00a              BEQ      |L3.90|
                  |L3.68|
;;;935        ERREXIT2(cinfo, JERR_NO_SOI, c, c2);
000044  6829              LDR      r1,[r5,#0]
000046  2035              MOVS     r0,#0x35
000048  6148              STR      r0,[r1,#0x14]
00004a  6828              LDR      r0,[r5,#0]
00004c  6186              STR      r6,[r0,#0x18]
00004e  6828              LDR      r0,[r5,#0]
000050  61c7              STR      r7,[r0,#0x1c]
000052  6828              LDR      r0,[r5,#0]
000054  6801              LDR      r1,[r0,#0]
000056  4628              MOV      r0,r5
000058  4788              BLX      r1
                  |L3.90|
;;;936    
;;;937      cinfo->unread_marker = c2;
00005a  f8c571a0          STR      r7,[r5,#0x1a0]
00005e  e9c48900          STRD     r8,r9,[r4,#0]
;;;938    
;;;939      INPUT_SYNC(cinfo);
;;;940      return TRUE;
000062  2001              MOVS     r0,#1
                  |L3.100|
;;;941    }
000064  e8bd87f0          POP      {r4-r10,pc}
;;;942    
                          ENDP


                          AREA ||i.get_dht||, CODE, READONLY, ALIGN=1

                  get_dht PROC
;;;418    LOCAL(boolean)
;;;419    get_dht (j_decompress_ptr cinfo)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;420    /* Process a DHT marker */
;;;421    {
;;;422      INT32 length;
;;;423      UINT8 bits[17];
;;;424      UINT8 huffval[256];
;;;425      int i, index, count;
;;;426      JHUFF_TBL **htblptr;
;;;427      INPUT_VARS(cinfo);
000004  6986              LDR      r6,[r0,#0x18]
000006  b0cd              SUB      sp,sp,#0x134          ;421
000008  4607              MOV      r7,r0                 ;421
00000a  e9d65400          LDRD     r5,r4,[r6,#0]
00000e  b92c              CBNZ     r4,|L4.28|
;;;428    
;;;429      INPUT_2BYTES(cinfo, length, return FALSE);
000010  68f1              LDR      r1,[r6,#0xc]
000012  4788              BLX      r1
000014  2800              CMP      r0,#0
000016  d07d              BEQ      |L4.276|
000018  e9d65400          LDRD     r5,r4,[r6,#0]
                  |L4.28|
00001c  1e64              SUBS     r4,r4,#1
00001e  f8150b01          LDRB     r0,[r5],#1
000022  ea4f2800          LSL      r8,r0,#8
000026  d106              BNE      |L4.54|
000028  68f1              LDR      r1,[r6,#0xc]
00002a  4638              MOV      r0,r7
00002c  4788              BLX      r1
00002e  2800              CMP      r0,#0
000030  d070              BEQ      |L4.276|
000032  e9d65400          LDRD     r5,r4,[r6,#0]
                  |L4.54|
000036  1e64              SUBS     r4,r4,#1
000038  f8150b01          LDRB     r0,[r5],#1
00003c  4440              ADD      r0,r0,r8
00003e  f1a00a02          SUB      r10,r0,#2
;;;430      length -= 2;
;;;431      
;;;432      while (length > 16) {
000042  e0ca              B        |L4.474|
                  |L4.68|
;;;433        INPUT_BYTE(cinfo, index, return FALSE);
000044  b934              CBNZ     r4,|L4.84|
000046  68f1              LDR      r1,[r6,#0xc]
000048  4638              MOV      r0,r7
00004a  4788              BLX      r1
00004c  2800              CMP      r0,#0
00004e  d061              BEQ      |L4.276|
000050  e9d65400          LDRD     r5,r4,[r6,#0]
                  |L4.84|
;;;434    
;;;435        TRACEMS1(cinfo, 1, JTRC_DHT, index);
000054  6839              LDR      r1,[r7,#0]
000056  f815bb01          LDRB     r11,[r5],#1           ;433
00005a  2050              MOVS     r0,#0x50
00005c  6148              STR      r0,[r1,#0x14]
00005e  6839              LDR      r1,[r7,#0]
000060  f8c1b018          STR      r11,[r1,#0x18]
000064  6838              LDR      r0,[r7,#0]
000066  2101              MOVS     r1,#1
000068  1e64              SUBS     r4,r4,#1
00006a  6842              LDR      r2,[r0,#4]
00006c  4638              MOV      r0,r7
00006e  4790              BLX      r2
;;;436          
;;;437        bits[0] = 0;
000070  2000              MOVS     r0,#0
000072  f88d0000          STRB     r0,[sp,#0]
;;;438        count = 0;
000076  4681              MOV      r9,r0
;;;439        for (i = 1; i <= 16; i++) {
000078  f04f0801          MOV      r8,#1
                  |L4.124|
;;;440          INPUT_BYTE(cinfo, bits[i], return FALSE);
00007c  b934              CBNZ     r4,|L4.140|
00007e  68f1              LDR      r1,[r6,#0xc]
000080  4638              MOV      r0,r7
000082  4788              BLX      r1
000084  2800              CMP      r0,#0
000086  d045              BEQ      |L4.276|
000088  e9d65400          LDRD     r5,r4,[r6,#0]
                  |L4.140|
00008c  1e64              SUBS     r4,r4,#1              ;439
00008e  f8150b01          LDRB     r0,[r5],#1
000092  f80d0008          STRB     r0,[sp,r8]
000096  f1080801          ADD      r8,r8,#1              ;439
;;;441          count += bits[i];
00009a  4481              ADD      r9,r9,r0
00009c  f1b80f10          CMP      r8,#0x10              ;439
0000a0  ddec              BLE      |L4.124|
;;;442        }
;;;443    
;;;444        length -= 1 + 16;
;;;445    
;;;446        TRACEMS8(cinfo, 2, JTRC_HUFFBITS,
0000a2  6838              LDR      r0,[r7,#0]
0000a4  f89d1001          LDRB     r1,[sp,#1]
0000a8  f04f0856          MOV      r8,#0x56
0000ac  6181              STR      r1,[r0,#0x18]
0000ae  f89d1002          LDRB     r1,[sp,#2]
0000b2  61c1              STR      r1,[r0,#0x1c]
0000b4  f89d1003          LDRB     r1,[sp,#3]
0000b8  6201              STR      r1,[r0,#0x20]
0000ba  f89d1004          LDRB     r1,[sp,#4]
0000be  6241              STR      r1,[r0,#0x24]
0000c0  f89d1005          LDRB     r1,[sp,#5]
0000c4  6281              STR      r1,[r0,#0x28]
0000c6  f89d1006          LDRB     r1,[sp,#6]
0000ca  62c1              STR      r1,[r0,#0x2c]
0000cc  f89d1007          LDRB     r1,[sp,#7]
0000d0  6301              STR      r1,[r0,#0x30]
0000d2  f89d1008          LDRB     r1,[sp,#8]
0000d6  6341              STR      r1,[r0,#0x34]
0000d8  6839              LDR      r1,[r7,#0]
0000da  f1aa0a11          SUB      r10,r10,#0x11         ;444
0000de  f8c18014          STR      r8,[r1,#0x14]
0000e2  6838              LDR      r0,[r7,#0]
0000e4  2102              MOVS     r1,#2
0000e6  6842              LDR      r2,[r0,#4]
0000e8  4638              MOV      r0,r7
0000ea  4790              BLX      r2
;;;447    	     bits[1], bits[2], bits[3], bits[4],
;;;448    	     bits[5], bits[6], bits[7], bits[8]);
;;;449        TRACEMS8(cinfo, 2, JTRC_HUFFBITS,
0000ec  6838              LDR      r0,[r7,#0]
0000ee  f89d1009          LDRB     r1,[sp,#9]
0000f2  6181              STR      r1,[r0,#0x18]
0000f4  f89d100a          LDRB     r1,[sp,#0xa]
0000f8  61c1              STR      r1,[r0,#0x1c]
0000fa  f89d100b          LDRB     r1,[sp,#0xb]
0000fe  6201              STR      r1,[r0,#0x20]
000100  f89d100c          LDRB     r1,[sp,#0xc]
000104  6241              STR      r1,[r0,#0x24]
000106  f89d100d          LDRB     r1,[sp,#0xd]
00010a  6281              STR      r1,[r0,#0x28]
00010c  f89d100e          LDRB     r1,[sp,#0xe]
000110  62c1              STR      r1,[r0,#0x2c]
000112  e000              B        |L4.278|
                  |L4.276|
000114  e072              B        |L4.508|
                  |L4.278|
000116  f89d100f          LDRB     r1,[sp,#0xf]
00011a  6301              STR      r1,[r0,#0x30]
00011c  f89d1010          LDRB     r1,[sp,#0x10]
000120  6341              STR      r1,[r0,#0x34]
000122  6839              LDR      r1,[r7,#0]
000124  f8c18014          STR      r8,[r1,#0x14]
000128  6838              LDR      r0,[r7,#0]
00012a  2102              MOVS     r1,#2
00012c  6842              LDR      r2,[r0,#4]
00012e  4638              MOV      r0,r7
000130  4790              BLX      r2
;;;450    	     bits[9], bits[10], bits[11], bits[12],
;;;451    	     bits[13], bits[14], bits[15], bits[16]);
;;;452    
;;;453        /* Here we just do minimal validation of the counts to avoid walking
;;;454         * off the end of our table space.  jdhuff.c will check more carefully.
;;;455         */
;;;456        if (count > 256 || ((INT32) count) > length)
000132  f5b97f80          CMP      r9,#0x100
000136  dc01              BGT      |L4.316|
000138  45d1              CMP      r9,r10
00013a  dd06              BLE      |L4.330|
                  |L4.316|
;;;457          ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
00013c  6839              LDR      r1,[r7,#0]
00013e  2008              MOVS     r0,#8
000140  6148              STR      r0,[r1,#0x14]
000142  6838              LDR      r0,[r7,#0]
000144  6801              LDR      r1,[r0,#0]
000146  4638              MOV      r0,r7
000148  4788              BLX      r1
                  |L4.330|
;;;458    
;;;459        for (i = 0; i < count; i++)
00014a  f04f0800          MOV      r8,#0
00014e  e00f              B        |L4.368|
                  |L4.336|
;;;460          INPUT_BYTE(cinfo, huffval[i], return FALSE);
000150  b934              CBNZ     r4,|L4.352|
000152  68f1              LDR      r1,[r6,#0xc]
000154  4638              MOV      r0,r7
000156  4788              BLX      r1
000158  2800              CMP      r0,#0
00015a  d04f              BEQ      |L4.508|
00015c  e9d65400          LDRD     r5,r4,[r6,#0]
                  |L4.352|
000160  a909              ADD      r1,sp,#0x24
000162  f8152b01          LDRB     r2,[r5],#1
000166  f8012008          STRB     r2,[r1,r8]
00016a  f1080801          ADD      r8,r8,#1              ;459
00016e  1e64              SUBS     r4,r4,#1              ;459
                  |L4.368|
000170  45c8              CMP      r8,r9                 ;459
000172  dbed              BLT      |L4.336|
;;;461    
;;;462        length -= count;
000174  ebaa0a09          SUB      r10,r10,r9
;;;463    
;;;464        if (index & 0x10) {		/* AC table definition */
000178  ea5f60cb          LSLS     r0,r11,#27
00017c  d505              BPL      |L4.394|
;;;465          index -= 0x10;
00017e  f1ab0b10          SUB      r11,r11,#0x10
;;;466          htblptr = &cinfo->ac_huff_tbl_ptrs[index];
000182  eb07008b          ADD      r0,r7,r11,LSL #2
000186  30c4              ADDS     r0,r0,#0xc4
000188  e002              B        |L4.400|
                  |L4.394|
;;;467        } else {			/* DC table definition */
;;;468          htblptr = &cinfo->dc_huff_tbl_ptrs[index];
00018a  eb07008b          ADD      r0,r7,r11,LSL #2
00018e  30b4              ADDS     r0,r0,#0xb4
                  |L4.400|
000190  4680              MOV      r8,r0
;;;469        }
;;;470    
;;;471        if (index < 0 || index >= NUM_HUFF_TBLS)
000192  f1bb0f04          CMP      r11,#4
000196  d309              BCC      |L4.428|
;;;472          ERREXIT1(cinfo, JERR_DHT_INDEX, index);
000198  6838              LDR      r0,[r7,#0]
00019a  211e              MOVS     r1,#0x1e
00019c  6141              STR      r1,[r0,#0x14]
00019e  6839              LDR      r1,[r7,#0]
0001a0  f8c1b018          STR      r11,[r1,#0x18]
0001a4  6838              LDR      r0,[r7,#0]
0001a6  6801              LDR      r1,[r0,#0]
0001a8  4638              MOV      r0,r7
0001aa  4788              BLX      r1
                  |L4.428|
;;;473    
;;;474        if (*htblptr == NULL)
0001ac  f8d80000          LDR      r0,[r8,#0]
0001b0  b110              CBZ      r0,|L4.440|
;;;475          *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
0001b2  f8d80000          LDR      r0,[r8,#0]
0001b6  e004              B        |L4.450|
                  |L4.440|
0001b8  4638              MOV      r0,r7
0001ba  f7fffffe          BL       jpeg_alloc_huff_table
0001be  f8c80000          STR      r0,[r8,#0]
                  |L4.450|
;;;476      
;;;477        MEMCOPY((*htblptr)->bits, bits, SIZEOF((*htblptr)->bits));
0001c2  2211              MOVS     r2,#0x11
0001c4  4669              MOV      r1,sp
0001c6  f7fffffe          BL       __aeabi_memcpy4
;;;478        MEMCOPY((*htblptr)->huffval, huffval, SIZEOF((*htblptr)->huffval));
0001ca  f8d80000          LDR      r0,[r8,#0]
0001ce  f44f7280          MOV      r2,#0x100
0001d2  a909              ADD      r1,sp,#0x24
0001d4  3011              ADDS     r0,r0,#0x11
0001d6  f7fffffe          BL       __aeabi_memcpy
                  |L4.474|
0001da  f1ba0f10          CMP      r10,#0x10             ;432
0001de  f73faf31          BGT      |L4.68|
;;;479      }
;;;480    
;;;481      if (length != 0)
0001e2  f1ba0f00          CMP      r10,#0
0001e6  d006              BEQ      |L4.502|
;;;482        ERREXIT(cinfo, JERR_BAD_LENGTH);
0001e8  6839              LDR      r1,[r7,#0]
0001ea  200b              MOVS     r0,#0xb
0001ec  6148              STR      r0,[r1,#0x14]
0001ee  6838              LDR      r0,[r7,#0]
0001f0  6801              LDR      r1,[r0,#0]
0001f2  4638              MOV      r0,r7
0001f4  4788              BLX      r1
                  |L4.502|
0001f6  e9c65400          STRD     r5,r4,[r6,#0]
;;;483    
;;;484      INPUT_SYNC(cinfo);
;;;485      return TRUE;
0001fa  2001              MOVS     r0,#1
                  |L4.508|
;;;486    }
0001fc  b04d              ADD      sp,sp,#0x134
0001fe  e8bd8ff0          POP      {r4-r11,pc}
;;;487    
                          ENDP


                          AREA ||i.get_dqt||, CODE, READONLY, ALIGN=2

                  get_dqt PROC
;;;489    LOCAL(boolean)
;;;490    get_dqt (j_decompress_ptr cinfo)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;491    /* Process a DQT marker */
;;;492    {
;;;493      INT32 length;
;;;494      int n, i, prec;
;;;495      unsigned int tmp;
;;;496      JQUANT_TBL *quant_ptr;
;;;497      INPUT_VARS(cinfo);
000004  6985              LDR      r5,[r0,#0x18]
000006  4606              MOV      r6,r0                 ;492
000008  e9d50400          LDRD     r0,r4,[r5,#0]
00000c  b934              CBNZ     r4,|L5.28|
;;;498    
;;;499      INPUT_2BYTES(cinfo, length, return FALSE);
00000e  68e9              LDR      r1,[r5,#0xc]
000010  4630              MOV      r0,r6
000012  4788              BLX      r1
000014  2800              CMP      r0,#0
000016  d07d              BEQ      |L5.276|
000018  e9d50400          LDRD     r0,r4,[r5,#0]
                  |L5.28|
00001c  f8101b01          LDRB     r1,[r0],#1
000020  020f              LSLS     r7,r1,#8
000022  1e64              SUBS     r4,r4,#1
000024  d106              BNE      |L5.52|
000026  68e9              LDR      r1,[r5,#0xc]
000028  4630              MOV      r0,r6
00002a  4788              BLX      r1
00002c  2800              CMP      r0,#0
00002e  d071              BEQ      |L5.276|
000030  e9d50400          LDRD     r0,r4,[r5,#0]
                  |L5.52|
000034  1e64              SUBS     r4,r4,#1
000036  f8101b01          LDRB     r1,[r0],#1
00003a  4680              MOV      r8,r0
00003c  4439              ADD      r1,r1,r7
00003e  f1a10a02          SUB      r10,r1,#2
;;;500      length -= 2;
;;;501    
;;;502      while (length > 0) {
000042  e095              B        |L5.368|
                  |L5.68|
;;;503        INPUT_BYTE(cinfo, n, return FALSE);
000044  b934              CBNZ     r4,|L5.84|
000046  68e9              LDR      r1,[r5,#0xc]
000048  4630              MOV      r0,r6
00004a  4788              BLX      r1
00004c  2800              CMP      r0,#0
00004e  d061              BEQ      |L5.276|
000050  e9d58400          LDRD     r8,r4,[r5,#0]
                  |L5.84|
;;;504        prec = n >> 4;
;;;505        n &= 0x0F;
;;;506    
;;;507        TRACEMS2(cinfo, 1, JTRC_DQT, n, prec);
000054  6831              LDR      r1,[r6,#0]
000056  f8180b01          LDRB     r0,[r8],#1            ;503
00005a  ea4f1b20          ASR      r11,r0,#4             ;504
00005e  f000070f          AND      r7,r0,#0xf            ;505
000062  2051              MOVS     r0,#0x51
000064  6148              STR      r0,[r1,#0x14]
000066  6830              LDR      r0,[r6,#0]
000068  2101              MOVS     r1,#1
00006a  1e64              SUBS     r4,r4,#1
00006c  6187              STR      r7,[r0,#0x18]
00006e  6830              LDR      r0,[r6,#0]
000070  f8c0b01c          STR      r11,[r0,#0x1c]
000074  6830              LDR      r0,[r6,#0]
000076  6842              LDR      r2,[r0,#4]
000078  4630              MOV      r0,r6
00007a  4790              BLX      r2
;;;508    
;;;509        if (n >= NUM_QUANT_TBLS)
00007c  2f04              CMP      r7,#4
00007e  db08              BLT      |L5.146|
;;;510          ERREXIT1(cinfo, JERR_DQT_INDEX, n);
000080  6831              LDR      r1,[r6,#0]
000082  201f              MOVS     r0,#0x1f
000084  6148              STR      r0,[r1,#0x14]
000086  6830              LDR      r0,[r6,#0]
000088  6187              STR      r7,[r0,#0x18]
00008a  6830              LDR      r0,[r6,#0]
00008c  6801              LDR      r1,[r0,#0]
00008e  4630              MOV      r0,r6
000090  4788              BLX      r1
                  |L5.146|
;;;511          
;;;512        if (cinfo->quant_tbl_ptrs[n] == NULL)
000092  eb060787          ADD      r7,r6,r7,LSL #2
000096  f8d700a4          LDR      r0,[r7,#0xa4]
00009a  b920              CBNZ     r0,|L5.166|
;;;513          cinfo->quant_tbl_ptrs[n] = jpeg_alloc_quant_table((j_common_ptr) cinfo);
00009c  4630              MOV      r0,r6
00009e  f7fffffe          BL       jpeg_alloc_quant_table
0000a2  f8c700a4          STR      r0,[r7,#0xa4]
                  |L5.166|
;;;514        quant_ptr = cinfo->quant_tbl_ptrs[n];
0000a6  4681              MOV      r9,r0
;;;515    
;;;516        for (i = 0; i < DCTSIZE2; i++) {
0000a8  f05f0700          MOVS.W   r7,#0
                  |L5.172|
;;;517          if (prec)
0000ac  f1bb0f00          CMP      r11,#0
0000b0  d01b              BEQ      |L5.234|
;;;518    	INPUT_2BYTES(cinfo, tmp, return FALSE);
0000b2  b934              CBNZ     r4,|L5.194|
0000b4  68e9              LDR      r1,[r5,#0xc]
0000b6  4630              MOV      r0,r6
0000b8  4788              BLX      r1
0000ba  2800              CMP      r0,#0
0000bc  d069              BEQ      |L5.402|
0000be  e9d58400          LDRD     r8,r4,[r5,#0]
                  |L5.194|
0000c2  f8980000          LDRB     r0,[r8,#0]
0000c6  0200              LSLS     r0,r0,#8
0000c8  9000              STR      r0,[sp,#0]
0000ca  f1080001          ADD      r0,r8,#1
0000ce  1e64              SUBS     r4,r4,#1
0000d0  d106              BNE      |L5.224|
0000d2  68e9              LDR      r1,[r5,#0xc]
0000d4  4630              MOV      r0,r6
0000d6  4788              BLX      r1
0000d8  2800              CMP      r0,#0
0000da  d05a              BEQ      |L5.402|
0000dc  e9d50400          LDRD     r0,r4,[r5,#0]
                  |L5.224|
0000e0  9900              LDR      r1,[sp,#0]
0000e2  f8102b01          LDRB     r2,[r0],#1
0000e6  4411              ADD      r1,r1,r2
0000e8  e00b              B        |L5.258|
                  |L5.234|
;;;519          else
;;;520    	INPUT_BYTE(cinfo, tmp, return FALSE);
0000ea  b934              CBNZ     r4,|L5.250|
0000ec  68e9              LDR      r1,[r5,#0xc]
0000ee  4630              MOV      r0,r6
0000f0  4788              BLX      r1
0000f2  2800              CMP      r0,#0
0000f4  d04d              BEQ      |L5.402|
0000f6  e9d58400          LDRD     r8,r4,[r5,#0]
                  |L5.250|
0000fa  f1080001          ADD      r0,r8,#1
0000fe  f8981000          LDRB     r1,[r8,#0]
                  |L5.258|
000102  4680              MOV      r8,r0
;;;521          /* We convert the zigzag-order table to natural array order. */
;;;522          quant_ptr->quantval[jpeg_natural_order[i]] = (UINT16) tmp;
000104  4824              LDR      r0,|L5.408|
000106  1e64              SUBS     r4,r4,#1              ;520
000108  f8502027          LDR      r2,[r0,r7,LSL #2]
00010c  1c7f              ADDS     r7,r7,#1
00010e  f8291012          STRH     r1,[r9,r2,LSL #1]
000112  e000              B        |L5.278|
                  |L5.276|
000114  e03d              B        |L5.402|
                  |L5.278|
000116  2f40              CMP      r7,#0x40              ;516
000118  dbc8              BLT      |L5.172|
;;;523        }
;;;524    
;;;525        if (cinfo->err->trace_level >= 2) {
00011a  6830              LDR      r0,[r6,#0]
00011c  6e80              LDR      r0,[r0,#0x68]
00011e  2802              CMP      r0,#2
000120  db1f              BLT      |L5.354|
;;;526          for (i = 0; i < DCTSIZE2; i += 8) {
000122  2700              MOVS     r7,#0
                  |L5.292|
;;;527    	TRACEMS8(cinfo, 2, JTRC_QUANTVALS,
000124  6830              LDR      r0,[r6,#0]
000126  f8391017          LDRH     r1,[r9,r7,LSL #1]
00012a  6181              STR      r1,[r0,#0x18]
00012c  eb090147          ADD      r1,r9,r7,LSL #1
000130  884a              LDRH     r2,[r1,#2]
000132  61c2              STR      r2,[r0,#0x1c]
000134  888a              LDRH     r2,[r1,#4]
000136  6202              STR      r2,[r0,#0x20]
000138  88ca              LDRH     r2,[r1,#6]
00013a  6242              STR      r2,[r0,#0x24]
00013c  890a              LDRH     r2,[r1,#8]
00013e  6282              STR      r2,[r0,#0x28]
000140  894a              LDRH     r2,[r1,#0xa]
000142  62c2              STR      r2,[r0,#0x2c]
000144  898a              LDRH     r2,[r1,#0xc]
000146  6302              STR      r2,[r0,#0x30]
000148  89c9              LDRH     r1,[r1,#0xe]
00014a  6341              STR      r1,[r0,#0x34]
00014c  6831              LDR      r1,[r6,#0]
00014e  205d              MOVS     r0,#0x5d
000150  6148              STR      r0,[r1,#0x14]
000152  6830              LDR      r0,[r6,#0]
000154  2102              MOVS     r1,#2
000156  6842              LDR      r2,[r0,#4]
000158  4630              MOV      r0,r6
00015a  4790              BLX      r2
00015c  3708              ADDS     r7,r7,#8
00015e  2f40              CMP      r7,#0x40              ;526
000160  dbe0              BLT      |L5.292|
                  |L5.354|
;;;528    		 quant_ptr->quantval[i],   quant_ptr->quantval[i+1],
;;;529    		 quant_ptr->quantval[i+2], quant_ptr->quantval[i+3],
;;;530    		 quant_ptr->quantval[i+4], quant_ptr->quantval[i+5],
;;;531    		 quant_ptr->quantval[i+6], quant_ptr->quantval[i+7]);
;;;532          }
;;;533        }
;;;534    
;;;535        length -= DCTSIZE2+1;
000162  f1aa0a41          SUB      r10,r10,#0x41
;;;536        if (prec) length -= DCTSIZE2;
000166  f1bb0f00          CMP      r11,#0
00016a  d001              BEQ      |L5.368|
00016c  f1aa0a40          SUB      r10,r10,#0x40
                  |L5.368|
000170  f1ba0f00          CMP      r10,#0                ;502
000174  f73faf66          BGT      |L5.68|
;;;537      }
;;;538    
;;;539      if (length != 0)
000178  f1ba0f00          CMP      r10,#0
00017c  d006              BEQ      |L5.396|
;;;540        ERREXIT(cinfo, JERR_BAD_LENGTH);
00017e  6831              LDR      r1,[r6,#0]
000180  200b              MOVS     r0,#0xb
000182  6148              STR      r0,[r1,#0x14]
000184  6830              LDR      r0,[r6,#0]
000186  6801              LDR      r1,[r0,#0]
000188  4630              MOV      r0,r6
00018a  4788              BLX      r1
                  |L5.396|
00018c  e9c58400          STRD     r8,r4,[r5,#0]
;;;541    
;;;542      INPUT_SYNC(cinfo);
;;;543      return TRUE;
000190  2001              MOVS     r0,#1
                  |L5.402|
;;;544    }
000192  e8bd8ff8          POP      {r3-r11,pc}
;;;545    
                          ENDP

000196  0000              DCW      0x0000
                  |L5.408|
                          DCD      jpeg_natural_order

                          AREA ||i.get_dri||, CODE, READONLY, ALIGN=1

                  get_dri PROC
;;;547    LOCAL(boolean)
;;;548    get_dri (j_decompress_ptr cinfo)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;549    /* Process a DRI marker */
;;;550    {
;;;551      INT32 length;
;;;552      unsigned int tmp;
;;;553      INPUT_VARS(cinfo);
000004  6984              LDR      r4,[r0,#0x18]
000006  4607              MOV      r7,r0                 ;550
000008  e9d45600          LDRD     r5,r6,[r4,#0]
00000c  b92e              CBNZ     r6,|L6.26|
;;;554    
;;;555      INPUT_2BYTES(cinfo, length, return FALSE);
00000e  68e1              LDR      r1,[r4,#0xc]
000010  4788              BLX      r1
000012  2800              CMP      r0,#0
000014  d045              BEQ      |L6.162|
000016  e9d45600          LDRD     r5,r6,[r4,#0]
                  |L6.26|
00001a  1e76              SUBS     r6,r6,#1
00001c  f8150b01          LDRB     r0,[r5],#1
000020  ea4f2800          LSL      r8,r0,#8
000024  d106              BNE      |L6.52|
000026  68e1              LDR      r1,[r4,#0xc]
000028  4638              MOV      r0,r7
00002a  4788              BLX      r1
00002c  2800              CMP      r0,#0
00002e  d038              BEQ      |L6.162|
000030  e9d45600          LDRD     r5,r6,[r4,#0]
                  |L6.52|
000034  1e76              SUBS     r6,r6,#1
000036  f8150b01          LDRB     r0,[r5],#1
00003a  4440              ADD      r0,r0,r8
;;;556      
;;;557      if (length != 4)
00003c  2804              CMP      r0,#4
00003e  d006              BEQ      |L6.78|
;;;558        ERREXIT(cinfo, JERR_BAD_LENGTH);
000040  6839              LDR      r1,[r7,#0]
000042  200b              MOVS     r0,#0xb
000044  6148              STR      r0,[r1,#0x14]
000046  6838              LDR      r0,[r7,#0]
000048  6801              LDR      r1,[r0,#0]
00004a  4638              MOV      r0,r7
00004c  4788              BLX      r1
                  |L6.78|
;;;559    
;;;560      INPUT_2BYTES(cinfo, tmp, return FALSE);
00004e  b936              CBNZ     r6,|L6.94|
000050  68e1              LDR      r1,[r4,#0xc]
000052  4638              MOV      r0,r7
000054  4788              BLX      r1
000056  2800              CMP      r0,#0
000058  d023              BEQ      |L6.162|
00005a  e9d45600          LDRD     r5,r6,[r4,#0]
                  |L6.94|
00005e  1e76              SUBS     r6,r6,#1
000060  f8150b01          LDRB     r0,[r5],#1
000064  ea4f2800          LSL      r8,r0,#8
000068  d106              BNE      |L6.120|
00006a  68e1              LDR      r1,[r4,#0xc]
00006c  4638              MOV      r0,r7
00006e  4788              BLX      r1
000070  2800              CMP      r0,#0
000072  d016              BEQ      |L6.162|
000074  e9d45600          LDRD     r5,r6,[r4,#0]
                  |L6.120|
000078  f1a60901          SUB      r9,r6,#1
00007c  f8150b01          LDRB     r0,[r5],#1
;;;561    
;;;562      TRACEMS1(cinfo, 1, JTRC_DRI, tmp);
000080  6839              LDR      r1,[r7,#0]
000082  eb000608          ADD      r6,r0,r8              ;560
000086  2052              MOVS     r0,#0x52
000088  6148              STR      r0,[r1,#0x14]
00008a  6838              LDR      r0,[r7,#0]
00008c  2101              MOVS     r1,#1
00008e  6186              STR      r6,[r0,#0x18]
000090  6838              LDR      r0,[r7,#0]
000092  6842              LDR      r2,[r0,#4]
000094  4638              MOV      r0,r7
000096  4790              BLX      r2
;;;563    
;;;564      cinfo->restart_interval = tmp;
000098  f8c76114          STR      r6,[r7,#0x114]
00009c  e9c45900          STRD     r5,r9,[r4,#0]
;;;565    
;;;566      INPUT_SYNC(cinfo);
;;;567      return TRUE;
0000a0  2001              MOVS     r0,#1
                  |L6.162|
;;;568    }
0000a2  e8bd87f0          POP      {r4-r10,pc}
;;;569    
                          ENDP


                          AREA ||i.get_interesting_appn||, CODE, READONLY, ALIGN=2

                  get_interesting_appn PROC
;;;690    METHODDEF(boolean)
;;;691    get_interesting_appn (j_decompress_ptr cinfo)
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;692    /* Process an APP0 or APP14 marker without saving it */
;;;693    {
;;;694      INT32 length;
;;;695      JOCTET b[APPN_DATA_LEN];
;;;696      unsigned int i, numtoread;
;;;697      INPUT_VARS(cinfo);
000004  6986              LDR      r6,[r0,#0x18]
000006  4607              MOV      r7,r0                 ;693
000008  e9d64500          LDRD     r4,r5,[r6,#0]
00000c  b92d              CBNZ     r5,|L7.26|
;;;698    
;;;699      INPUT_2BYTES(cinfo, length, return FALSE);
00000e  68f1              LDR      r1,[r6,#0xc]
000010  4788              BLX      r1
000012  2800              CMP      r0,#0
000014  d057              BEQ      |L7.198|
000016  e9d64500          LDRD     r4,r5,[r6,#0]
                  |L7.26|
00001a  1e6d              SUBS     r5,r5,#1
00001c  f8140b01          LDRB     r0,[r4],#1
000020  ea4f2800          LSL      r8,r0,#8
000024  d106              BNE      |L7.52|
000026  68f1              LDR      r1,[r6,#0xc]
000028  4638              MOV      r0,r7
00002a  4788              BLX      r1
00002c  2800              CMP      r0,#0
00002e  d04a              BEQ      |L7.198|
000030  e9d64500          LDRD     r4,r5,[r6,#0]
                  |L7.52|
000034  1e6d              SUBS     r5,r5,#1
000036  f8140b01          LDRB     r0,[r4],#1
00003a  4440              ADD      r0,r0,r8
00003c  f1a00a02          SUB      r10,r0,#2
;;;700      length -= 2;
;;;701    
;;;702      /* get the interesting part of the marker data */
;;;703      if (length >= APPN_DATA_LEN)
000040  f1ba0f0e          CMP      r10,#0xe
000044  db04              BLT      |L7.80|
;;;704        numtoread = APPN_DATA_LEN;
000046  f04f090e          MOV      r9,#0xe
;;;705      else if (length > 0)
;;;706        numtoread = (unsigned int) length;
;;;707      else
;;;708        numtoread = 0;
;;;709      for (i = 0; i < numtoread; i++)
00004a  f04f0800          MOV      r8,#0
00004e  e009              B        |L7.100|
                  |L7.80|
000050  f1ba0f00          CMP      r10,#0                ;705
000054  dd03              BLE      |L7.94|
000056  46d1              MOV      r9,r10                ;706
000058  f04f0800          MOV      r8,#0
00005c  e011              B        |L7.130|
                  |L7.94|
00005e  f04f0900          MOV      r9,#0                 ;708
000062  e010              B        |L7.134|
                  |L7.100|
;;;710        INPUT_BYTE(cinfo, b[i], return FALSE);
000064  b935              CBNZ     r5,|L7.116|
000066  68f1              LDR      r1,[r6,#0xc]
000068  4638              MOV      r0,r7
00006a  4788              BLX      r1
00006c  2800              CMP      r0,#0
00006e  d02a              BEQ      |L7.198|
000070  e9d64500          LDRD     r4,r5,[r6,#0]
                  |L7.116|
000074  1e6d              SUBS     r5,r5,#1              ;709
000076  f8141b01          LDRB     r1,[r4],#1
00007a  f80d1008          STRB     r1,[sp,r8]
00007e  f1080801          ADD      r8,r8,#1              ;709
                  |L7.130|
000082  45c8              CMP      r8,r9                 ;709
000084  d3ee              BCC      |L7.100|
                  |L7.134|
;;;711      length -= numtoread;
;;;712    
;;;713      /* process it */
;;;714      switch (cinfo->unread_marker) {
000086  f8d701a0          LDR      r0,[r7,#0x1a0]
00008a  4649              MOV      r1,r9                 ;711
00008c  ebaa0809          SUB      r8,r10,r9             ;711
000090  28e0              CMP      r0,#0xe0
000092  d01b              BEQ      |L7.204|
000094  28ee              CMP      r0,#0xee
000096  d020              BEQ      |L7.218|
;;;715      case M_APP0:
;;;716        examine_app0(cinfo, (JOCTET FAR *) b, numtoread, length);
;;;717        break;
;;;718      case M_APP14:
;;;719        examine_app14(cinfo, (JOCTET FAR *) b, numtoread, length);
;;;720        break;
;;;721      default:
;;;722        /* can't get here unless jpeg_save_markers chooses wrong processor */
;;;723        ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, cinfo->unread_marker);
000098  6839              LDR      r1,[r7,#0]
00009a  2044              MOVS     r0,#0x44
00009c  6148              STR      r0,[r1,#0x14]
00009e  6839              LDR      r1,[r7,#0]
0000a0  f8d701a0          LDR      r0,[r7,#0x1a0]
0000a4  6188              STR      r0,[r1,#0x18]
0000a6  6838              LDR      r0,[r7,#0]
0000a8  6801              LDR      r1,[r0,#0]
0000aa  4638              MOV      r0,r7
0000ac  4788              BLX      r1
;;;724        break;
;;;725      }
;;;726    
;;;727      /* skip any remaining data -- could be lots */
;;;728      INPUT_SYNC(cinfo);
;;;729      if (length > 0)
0000ae  bf00              NOP      
                  |L7.176|
0000b0  f1b80f00          CMP      r8,#0
0000b4  e9c64500          STRD     r4,r5,[r6,#0]
0000b8  dd04              BLE      |L7.196|
;;;730        (*cinfo->src->skip_input_data) (cinfo, (long) length);
0000ba  69b8              LDR      r0,[r7,#0x18]
0000bc  4641              MOV      r1,r8
0000be  6902              LDR      r2,[r0,#0x10]
0000c0  4638              MOV      r0,r7
0000c2  4790              BLX      r2
                  |L7.196|
;;;731    
;;;732      return TRUE;
0000c4  2001              MOVS     r0,#1
                  |L7.198|
;;;733    }
0000c6  b004              ADD      sp,sp,#0x10
0000c8  e8bd87f0          POP      {r4-r10,pc}
                  |L7.204|
0000cc  460a              MOV      r2,r1                 ;716
0000ce  4643              MOV      r3,r8                 ;716
0000d0  4669              MOV      r1,sp                 ;716
0000d2  4638              MOV      r0,r7                 ;716
0000d4  f7fffffe          BL       examine_app0
0000d8  e7ea              B        |L7.176|
                  |L7.218|
0000da  460a              MOV      r2,r1                 ;719
0000dc  4643              MOV      r3,r8                 ;719
0000de  4669              MOV      r1,sp                 ;719
0000e0  4638              MOV      r0,r7                 ;719
0000e2  f7fffffe          BL       examine_app14
0000e6  e7e3              B        |L7.176|
;;;734    
                          ENDP


                          AREA ||i.get_sof||, CODE, READONLY, ALIGN=1

                  get_sof PROC
;;;236    LOCAL(boolean)
;;;237    get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;238    /* Process a SOFn marker */
;;;239    {
;;;240      INT32 length;
;;;241      int c, ci;
;;;242      jpeg_component_info * compptr;
;;;243      INPUT_VARS(cinfo);
000004  6985              LDR      r5,[r0,#0x18]
000006  4604              MOV      r4,r0                 ;239
000008  e9d50300          LDRD     r0,r3,[r5,#0]
00000c  e9c41237          STRD     r1,r2,[r4,#0xdc]
000010  b933              CBNZ     r3,|L8.32|
;;;244    
;;;245      cinfo->progressive_mode = is_prog;
;;;246      cinfo->arith_code = is_arith;
;;;247    
;;;248      INPUT_2BYTES(cinfo, length, return FALSE);
000012  68e9              LDR      r1,[r5,#0xc]
000014  4620              MOV      r0,r4
000016  4788              BLX      r1
000018  2800              CMP      r0,#0
00001a  d07d              BEQ      |L8.280|
00001c  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.32|
000020  f8101b01          LDRB     r1,[r0],#1
000024  020e              LSLS     r6,r1,#8
000026  1e5b              SUBS     r3,r3,#1
000028  d106              BNE      |L8.56|
00002a  68e9              LDR      r1,[r5,#0xc]
00002c  4620              MOV      r0,r4
00002e  4788              BLX      r1
000030  2800              CMP      r0,#0
000032  d071              BEQ      |L8.280|
000034  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.56|
000038  1e5b              SUBS     r3,r3,#1
00003a  f8101b01          LDRB     r1,[r0],#1
00003e  440e              ADD      r6,r6,r1
;;;249    
;;;250      INPUT_BYTE(cinfo, cinfo->data_precision, return FALSE);
000040  d106              BNE      |L8.80|
000042  68e9              LDR      r1,[r5,#0xc]
000044  4620              MOV      r0,r4
000046  4788              BLX      r1
000048  2800              CMP      r0,#0
00004a  d065              BEQ      |L8.280|
00004c  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.80|
000050  1e5b              SUBS     r3,r3,#1
000052  f8101b01          LDRB     r1,[r0],#1
000056  f8c410d4          STR      r1,[r4,#0xd4]
;;;251      INPUT_2BYTES(cinfo, cinfo->image_height, return FALSE);
00005a  d106              BNE      |L8.106|
00005c  68e9              LDR      r1,[r5,#0xc]
00005e  4620              MOV      r0,r4
000060  4788              BLX      r1
000062  2800              CMP      r0,#0
000064  d058              BEQ      |L8.280|
000066  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.106|
00006a  f8101b01          LDRB     r1,[r0],#1
00006e  0209              LSLS     r1,r1,#8
000070  6221              STR      r1,[r4,#0x20]
000072  1e5b              SUBS     r3,r3,#1
000074  d106              BNE      |L8.132|
000076  68e9              LDR      r1,[r5,#0xc]
000078  4620              MOV      r0,r4
00007a  4788              BLX      r1
00007c  2800              CMP      r0,#0
00007e  d04b              BEQ      |L8.280|
000080  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.132|
000084  6a21              LDR      r1,[r4,#0x20]
000086  f8102b01          LDRB     r2,[r0],#1
00008a  1e5b              SUBS     r3,r3,#1
00008c  4411              ADD      r1,r1,r2
00008e  6221              STR      r1,[r4,#0x20]
;;;252      INPUT_2BYTES(cinfo, cinfo->image_width, return FALSE);
000090  d106              BNE      |L8.160|
000092  68e9              LDR      r1,[r5,#0xc]
000094  4620              MOV      r0,r4
000096  4788              BLX      r1
000098  2800              CMP      r0,#0
00009a  d03d              BEQ      |L8.280|
00009c  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.160|
0000a0  f8101b01          LDRB     r1,[r0],#1
0000a4  0209              LSLS     r1,r1,#8
0000a6  61e1              STR      r1,[r4,#0x1c]
0000a8  1e5b              SUBS     r3,r3,#1
0000aa  d106              BNE      |L8.186|
0000ac  68e9              LDR      r1,[r5,#0xc]
0000ae  4620              MOV      r0,r4
0000b0  4788              BLX      r1
0000b2  2800              CMP      r0,#0
0000b4  d030              BEQ      |L8.280|
0000b6  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.186|
0000ba  69e1              LDR      r1,[r4,#0x1c]
0000bc  f8102b01          LDRB     r2,[r0],#1
0000c0  1e5b              SUBS     r3,r3,#1
0000c2  4411              ADD      r1,r1,r2
0000c4  61e1              STR      r1,[r4,#0x1c]
;;;253      INPUT_BYTE(cinfo, cinfo->num_components, return FALSE);
0000c6  d106              BNE      |L8.214|
0000c8  68e9              LDR      r1,[r5,#0xc]
0000ca  4620              MOV      r0,r4
0000cc  4788              BLX      r1
0000ce  2800              CMP      r0,#0
0000d0  d022              BEQ      |L8.280|
0000d2  e9d50300          LDRD     r0,r3,[r5,#0]
                  |L8.214|
0000d6  f1a30801          SUB      r8,r3,#1
0000da  f8101b01          LDRB     r1,[r0],#1
0000de  4681              MOV      r9,r0
;;;254    
;;;255      length -= 8;
;;;256    
;;;257      TRACEMS4(cinfo, 1, JTRC_SOF, cinfo->unread_marker,
0000e0  6261              STR      r1,[r4,#0x24]
0000e2  6820              LDR      r0,[r4,#0]
0000e4  f8d411a0          LDR      r1,[r4,#0x1a0]
0000e8  6181              STR      r1,[r0,#0x18]
0000ea  69e1              LDR      r1,[r4,#0x1c]
0000ec  61c1              STR      r1,[r0,#0x1c]
0000ee  6a21              LDR      r1,[r4,#0x20]
0000f0  6201              STR      r1,[r0,#0x20]
0000f2  6a61              LDR      r1,[r4,#0x24]
0000f4  6241              STR      r1,[r0,#0x24]
0000f6  6820              LDR      r0,[r4,#0]
0000f8  2164              MOVS     r1,#0x64
0000fa  6141              STR      r1,[r0,#0x14]
0000fc  6820              LDR      r0,[r4,#0]
0000fe  2101              MOVS     r1,#1
000100  3e08              SUBS     r6,r6,#8
000102  6842              LDR      r2,[r0,#4]
000104  4620              MOV      r0,r4
000106  4790              BLX      r2
;;;258    	   (int) cinfo->image_width, (int) cinfo->image_height,
;;;259    	   cinfo->num_components);
;;;260    
;;;261      if (cinfo->marker->saw_SOF)
000108  f8d401b8          LDR      r0,[r4,#0x1b8]
00010c  6900              LDR      r0,[r0,#0x10]
00010e  b140              CBZ      r0,|L8.290|
;;;262        ERREXIT(cinfo, JERR_SOF_DUPLICATE);
000110  6821              LDR      r1,[r4,#0]
000112  203a              MOVS     r0,#0x3a
000114  6148              STR      r0,[r1,#0x14]
000116  e000              B        |L8.282|
                  |L8.280|
000118  e079              B        |L8.526|
                  |L8.282|
00011a  6820              LDR      r0,[r4,#0]
00011c  6801              LDR      r1,[r0,#0]
00011e  4620              MOV      r0,r4
000120  4788              BLX      r1
                  |L8.290|
;;;263    
;;;264      /* We don't support files in which the image height is initially specified */
;;;265      /* as 0 and is later redefined by DNL.  As long as we have to check that,  */
;;;266      /* might as well have a general sanity check. */
;;;267      if (cinfo->image_height <= 0 || cinfo->image_width <= 0
000122  6a20              LDR      r0,[r4,#0x20]
000124  b120              CBZ      r0,|L8.304|
000126  69e0              LDR      r0,[r4,#0x1c]
000128  b110              CBZ      r0,|L8.304|
;;;268          || cinfo->num_components <= 0)
00012a  6a60              LDR      r0,[r4,#0x24]
00012c  2800              CMP      r0,#0
00012e  dc06              BGT      |L8.318|
                  |L8.304|
;;;269        ERREXIT(cinfo, JERR_EMPTY_IMAGE);
000130  6821              LDR      r1,[r4,#0]
000132  2020              MOVS     r0,#0x20
000134  6148              STR      r0,[r1,#0x14]
000136  6820              LDR      r0,[r4,#0]
000138  6801              LDR      r1,[r0,#0]
00013a  4620              MOV      r0,r4
00013c  4788              BLX      r1
                  |L8.318|
;;;270    
;;;271      if (length != (cinfo->num_components * 3))
00013e  6a60              LDR      r0,[r4,#0x24]
000140  eb000040          ADD      r0,r0,r0,LSL #1
000144  42b0              CMP      r0,r6
000146  d006              BEQ      |L8.342|
;;;272        ERREXIT(cinfo, JERR_BAD_LENGTH);
000148  6821              LDR      r1,[r4,#0]
00014a  200b              MOVS     r0,#0xb
00014c  6148              STR      r0,[r1,#0x14]
00014e  6820              LDR      r0,[r4,#0]
000150  6801              LDR      r1,[r0,#0]
000152  4620              MOV      r0,r4
000154  4788              BLX      r1
                  |L8.342|
;;;273    
;;;274      if (cinfo->comp_info == NULL)	/* do only once, even if suspend */
000156  f8d400d8          LDR      r0,[r4,#0xd8]
00015a  b948              CBNZ     r0,|L8.368|
;;;275        cinfo->comp_info = (jpeg_component_info *) (*cinfo->mem->alloc_small)
00015c  6a62              LDR      r2,[r4,#0x24]
00015e  2054              MOVS     r0,#0x54
000160  4342              MULS     r2,r0,r2
000162  6860              LDR      r0,[r4,#4]
000164  2101              MOVS     r1,#1
000166  6803              LDR      r3,[r0,#0]
000168  4620              MOV      r0,r4
00016a  4798              BLX      r3
00016c  f8c400d8          STR      r0,[r4,#0xd8]
                  |L8.368|
;;;276    			((j_common_ptr) cinfo, JPOOL_IMAGE,
;;;277    			 cinfo->num_components * SIZEOF(jpeg_component_info));
;;;278      
;;;279      for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
000170  2700              MOVS     r7,#0
000172  4606              MOV      r6,r0
000174  e042              B        |L8.508|
                  |L8.374|
;;;280           ci++, compptr++) {
;;;281        compptr->component_index = ci;
;;;282        INPUT_BYTE(cinfo, compptr->component_id, return FALSE);
000176  6077              STR      r7,[r6,#4]
000178  f1b80f00          CMP      r8,#0
00017c  d106              BNE      |L8.396|
00017e  68e9              LDR      r1,[r5,#0xc]
000180  4620              MOV      r0,r4
000182  4788              BLX      r1
000184  2800              CMP      r0,#0
000186  d042              BEQ      |L8.526|
000188  e9d59800          LDRD     r9,r8,[r5,#0]
                  |L8.396|
00018c  f1b80101          SUBS     r1,r8,#1
000190  f8990000          LDRB     r0,[r9,#0]
000194  6030              STR      r0,[r6,#0]
000196  f1090001          ADD      r0,r9,#1
;;;283        INPUT_BYTE(cinfo, c, return FALSE);
00019a  d106              BNE      |L8.426|
00019c  68e9              LDR      r1,[r5,#0xc]
00019e  4620              MOV      r0,r4
0001a0  4788              BLX      r1
0001a2  2800              CMP      r0,#0
0001a4  d033              BEQ      |L8.526|
0001a6  e9d50100          LDRD     r0,r1,[r5,#0]
                  |L8.426|
0001aa  f8102b01          LDRB     r2,[r0],#1
;;;284        compptr->h_samp_factor = (c >> 4) & 15;
0001ae  0913              LSRS     r3,r2,#4
;;;285        compptr->v_samp_factor = (c     ) & 15;
0001b0  f002020f          AND      r2,r2,#0xf
0001b4  e9c63202          STRD     r3,r2,[r6,#8]
0001b8  1e49              SUBS     r1,r1,#1
;;;286        INPUT_BYTE(cinfo, compptr->quant_tbl_no, return FALSE);
0001ba  d106              BNE      |L8.458|
0001bc  68e9              LDR      r1,[r5,#0xc]
0001be  4620              MOV      r0,r4
0001c0  4788              BLX      r1
0001c2  2800              CMP      r0,#0
0001c4  d023              BEQ      |L8.526|
0001c6  e9d50100          LDRD     r0,r1,[r5,#0]
                  |L8.458|
0001ca  f1a10801          SUB      r8,r1,#1
0001ce  f8101b01          LDRB     r1,[r0],#1
0001d2  4681              MOV      r9,r0
;;;287    
;;;288        TRACEMS4(cinfo, 1, JTRC_SOF_COMPONENT,
0001d4  6131              STR      r1,[r6,#0x10]
0001d6  6820              LDR      r0,[r4,#0]
0001d8  6831              LDR      r1,[r6,#0]
0001da  6181              STR      r1,[r0,#0x18]
0001dc  68b1              LDR      r1,[r6,#8]
0001de  61c1              STR      r1,[r0,#0x1c]
0001e0  68f1              LDR      r1,[r6,#0xc]
0001e2  6201              STR      r1,[r0,#0x20]
0001e4  6931              LDR      r1,[r6,#0x10]
0001e6  6241              STR      r1,[r0,#0x24]
0001e8  6820              LDR      r0,[r4,#0]
0001ea  2165              MOVS     r1,#0x65
0001ec  6141              STR      r1,[r0,#0x14]
0001ee  6820              LDR      r0,[r4,#0]
0001f0  2101              MOVS     r1,#1
0001f2  6842              LDR      r2,[r0,#4]
0001f4  4620              MOV      r0,r4
0001f6  4790              BLX      r2
0001f8  3654              ADDS     r6,r6,#0x54
0001fa  1c7f              ADDS     r7,r7,#1
                  |L8.508|
0001fc  6a60              LDR      r0,[r4,#0x24]         ;279
0001fe  42b8              CMP      r0,r7                 ;279
000200  dcb9              BGT      |L8.374|
;;;289    	     compptr->component_id, compptr->h_samp_factor,
;;;290    	     compptr->v_samp_factor, compptr->quant_tbl_no);
;;;291      }
;;;292    
;;;293      cinfo->marker->saw_SOF = TRUE;
000202  f8d411b8          LDR      r1,[r4,#0x1b8]
000206  2001              MOVS     r0,#1
000208  6108              STR      r0,[r1,#0x10]
00020a  e9c59800          STRD     r9,r8,[r5,#0]
                  |L8.526|
;;;294    
;;;295      INPUT_SYNC(cinfo);
;;;296      return TRUE;
;;;297    }
00020e  e8bd87f0          POP      {r4-r10,pc}
;;;298    
                          ENDP


                          AREA ||i.get_soi||, CODE, READONLY, ALIGN=1

                  get_soi PROC
;;;196    LOCAL(boolean)
;;;197    get_soi (j_decompress_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;198    /* Process an SOI marker */
;;;199    {
000002  4604              MOV      r4,r0
;;;200      int i;
;;;201      
;;;202      TRACEMS(cinfo, 1, JTRC_SOI);
000004  2066              MOVS     r0,#0x66
000006  6821              LDR      r1,[r4,#0]
000008  6148              STR      r0,[r1,#0x14]
00000a  6820              LDR      r0,[r4,#0]
00000c  2101              MOVS     r1,#1
00000e  6842              LDR      r2,[r0,#4]
000010  4620              MOV      r0,r4
000012  4790              BLX      r2
;;;203    
;;;204      if (cinfo->marker->saw_SOI)
000014  f8d401b8          LDR      r0,[r4,#0x1b8]
000018  68c0              LDR      r0,[r0,#0xc]
00001a  b130              CBZ      r0,|L9.42|
;;;205        ERREXIT(cinfo, JERR_SOI_DUPLICATE);
00001c  6821              LDR      r1,[r4,#0]
00001e  203d              MOVS     r0,#0x3d
000020  6148              STR      r0,[r1,#0x14]
000022  6820              LDR      r0,[r4,#0]
000024  6801              LDR      r1,[r0,#0]
000026  4620              MOV      r0,r4
000028  4788              BLX      r1
                  |L9.42|
;;;206    
;;;207      /* Reset all parameters that are defined to be reset by SOI */
;;;208    
;;;209      for (i = 0; i < NUM_ARITH_TBLS; i++) {
00002a  2200              MOVS     r2,#0
00002c  2101              MOVS     r1,#1                 ;202
00002e  4610              MOV      r0,r2
;;;210        cinfo->arith_dc_L[i] = 0;
;;;211        cinfo->arith_dc_U[i] = 1;
;;;212        cinfo->arith_ac_K[i] = 5;
000030  2505              MOVS     r5,#5
                  |L9.50|
000032  18a3              ADDS     r3,r4,r2              ;210
000034  1c52              ADDS     r2,r2,#1
000036  f8030fe4          STRB     r0,[r3,#0xe4]!        ;210
00003a  2a10              CMP      r2,#0x10              ;209
00003c  7419              STRB     r1,[r3,#0x10]         ;211
00003e  f8835020          STRB     r5,[r3,#0x20]
000042  dbf6              BLT      |L9.50|
;;;213      }
;;;214      cinfo->restart_interval = 0;
;;;215    
;;;216      /* Set initial assumptions for colorspace etc */
;;;217    
;;;218      cinfo->jpeg_color_space = JCS_UNKNOWN;
000044  f8c40114          STR      r0,[r4,#0x114]
000048  f8840028          STRB     r0,[r4,#0x28]
;;;219      cinfo->CCIR601_sampling = FALSE; /* Assume non-CCIR sampling??? */
;;;220    
;;;221      cinfo->saw_JFIF_marker = FALSE;
00004c  f8c4012c          STR      r0,[r4,#0x12c]
;;;222      cinfo->JFIF_major_version = 1; /* set default JFIF APP0 values */
000050  f8c40118          STR      r0,[r4,#0x118]
000054  f884111c          STRB     r1,[r4,#0x11c]
;;;223      cinfo->JFIF_minor_version = 1;
000058  f884111d          STRB     r1,[r4,#0x11d]
;;;224      cinfo->density_unit = 0;
00005c  f884011e          STRB     r0,[r4,#0x11e]
;;;225      cinfo->X_density = 1;
000060  f8a41120          STRH     r1,[r4,#0x120]
;;;226      cinfo->Y_density = 1;
000064  f8a41122          STRH     r1,[r4,#0x122]
;;;227      cinfo->saw_Adobe_marker = FALSE;
;;;228      cinfo->Adobe_transform = 0;
000068  f8c40124          STR      r0,[r4,#0x124]
00006c  f8840128          STRB     r0,[r4,#0x128]
;;;229    
;;;230      cinfo->marker->saw_SOI = TRUE;
000070  f8d401b8          LDR      r0,[r4,#0x1b8]
;;;231    
;;;232      return TRUE;
000074  60c1              STR      r1,[r0,#0xc]
000076  2001              MOVS     r0,#1
;;;233    }
000078  bd70              POP      {r4-r6,pc}
;;;234    
                          ENDP


                          AREA ||i.get_sos||, CODE, READONLY, ALIGN=2

                  get_sos PROC
;;;300    LOCAL(boolean)
;;;301    get_sos (j_decompress_ptr cinfo)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;302    /* Process a SOS marker */
;;;303    {
;;;304      INT32 length;
;;;305      int i, ci, n, c, cc;
;;;306      jpeg_component_info * compptr;
;;;307      INPUT_VARS(cinfo);
000004  6986              LDR      r6,[r0,#0x18]
000006  4604              MOV      r4,r0                 ;303
;;;308    
;;;309      if (! cinfo->marker->saw_SOF)
000008  f8d001b8          LDR      r0,[r0,#0x1b8]
00000c  e9d67500          LDRD     r7,r5,[r6,#0]         ;307
000010  6900              LDR      r0,[r0,#0x10]
000012  b930              CBNZ     r0,|L10.34|
;;;310        ERREXIT(cinfo, JERR_SOS_NO_SOF);
000014  6821              LDR      r1,[r4,#0]
000016  203e              MOVS     r0,#0x3e
000018  6148              STR      r0,[r1,#0x14]
00001a  6820              LDR      r0,[r4,#0]
00001c  6801              LDR      r1,[r0,#0]
00001e  4620              MOV      r0,r4
000020  4788              BLX      r1
                  |L10.34|
;;;311    
;;;312      INPUT_2BYTES(cinfo, length, return FALSE);
000022  b935              CBNZ     r5,|L10.50|
000024  68f1              LDR      r1,[r6,#0xc]
000026  4620              MOV      r0,r4
000028  4788              BLX      r1
00002a  2800              CMP      r0,#0
00002c  d07d              BEQ      |L10.298|
00002e  e9d67500          LDRD     r7,r5,[r6,#0]
                  |L10.50|
000032  1e6d              SUBS     r5,r5,#1
000034  f8170b01          LDRB     r0,[r7],#1
000038  ea4f2800          LSL      r8,r0,#8
00003c  d106              BNE      |L10.76|
00003e  68f1              LDR      r1,[r6,#0xc]
000040  4620              MOV      r0,r4
000042  4788              BLX      r1
000044  2800              CMP      r0,#0
000046  d070              BEQ      |L10.298|
000048  e9d67500          LDRD     r7,r5,[r6,#0]
                  |L10.76|
00004c  1e6d              SUBS     r5,r5,#1
00004e  f8170b01          LDRB     r0,[r7],#1
000052  eb000908          ADD      r9,r0,r8
;;;313    
;;;314      INPUT_BYTE(cinfo, n, return FALSE); /* Number of components */
000056  d106              BNE      |L10.102|
000058  68f1              LDR      r1,[r6,#0xc]
00005a  4620              MOV      r0,r4
00005c  4788              BLX      r1
00005e  2800              CMP      r0,#0
000060  d063              BEQ      |L10.298|
000062  e9d67500          LDRD     r7,r5,[r6,#0]
                  |L10.102|
;;;315    
;;;316      TRACEMS1(cinfo, 1, JTRC_SOS, n);
000066  6821              LDR      r1,[r4,#0]
000068  f8178b01          LDRB     r8,[r7],#1            ;314
00006c  2067              MOVS     r0,#0x67
00006e  6148              STR      r0,[r1,#0x14]
000070  6820              LDR      r0,[r4,#0]
000072  2101              MOVS     r1,#1
000074  1e6d              SUBS     r5,r5,#1
000076  f8c08018          STR      r8,[r0,#0x18]
00007a  6820              LDR      r0,[r4,#0]
00007c  6842              LDR      r2,[r0,#4]
00007e  4620              MOV      r0,r4
000080  4790              BLX      r2
;;;317    
;;;318      if (length != (n * 2 + 6) || n < 1 || n > MAX_COMPS_IN_SCAN)
000082  2006              MOVS     r0,#6
000084  eb000148          ADD      r1,r0,r8,LSL #1
000088  4549              CMP      r1,r9
00008a  d105              BNE      |L10.152|
00008c  f1b80f01          CMP      r8,#1
000090  db02              BLT      |L10.152|
000092  f1b80f04          CMP      r8,#4
000096  dd06              BLE      |L10.166|
                  |L10.152|
;;;319        ERREXIT(cinfo, JERR_BAD_LENGTH);
000098  6821              LDR      r1,[r4,#0]
00009a  200b              MOVS     r0,#0xb
00009c  6148              STR      r0,[r1,#0x14]
00009e  6820              LDR      r0,[r4,#0]
0000a0  6801              LDR      r1,[r0,#0]
0000a2  4620              MOV      r0,r4
0000a4  4788              BLX      r1
                  |L10.166|
;;;320    
;;;321      cinfo->comps_in_scan = n;
;;;322    
;;;323      /* Collect the component-spec parameters */
;;;324    
;;;325      for (i = 0; i < n; i++) {
0000a6  2000              MOVS     r0,#0
0000a8  f8c48148          STR      r8,[r4,#0x148]
0000ac  e053              B        |L10.342|
                  |L10.174|
;;;326        INPUT_BYTE(cinfo, cc, return FALSE);
0000ae  b935              CBNZ     r5,|L10.190|
0000b0  68f1              LDR      r1,[r6,#0xc]
0000b2  4620              MOV      r0,r4
0000b4  4788              BLX      r1
0000b6  2800              CMP      r0,#0
0000b8  d037              BEQ      |L10.298|
0000ba  e9d67500          LDRD     r7,r5,[r6,#0]
                  |L10.190|
0000be  1c78              ADDS     r0,r7,#1
0000c0  f897b000          LDRB     r11,[r7,#0]
0000c4  1e6d              SUBS     r5,r5,#1
;;;327        INPUT_BYTE(cinfo, c, return FALSE);
0000c6  d106              BNE      |L10.214|
0000c8  68f1              LDR      r1,[r6,#0xc]
0000ca  4620              MOV      r0,r4
0000cc  4788              BLX      r1
0000ce  2800              CMP      r0,#0
0000d0  d02b              BEQ      |L10.298|
0000d2  e9d60500          LDRD     r0,r5,[r6,#0]
                  |L10.214|
0000d6  f8101b01          LDRB     r1,[r0],#1
0000da  4607              MOV      r7,r0
;;;328        
;;;329        for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
0000dc  9100              STR      r1,[sp,#0]
0000de  2000              MOVS     r0,#0
0000e0  1e6d              SUBS     r5,r5,#1
0000e2  f8d490d8          LDR      r9,[r4,#0xd8]
0000e6  6a61              LDR      r1,[r4,#0x24]
0000e8  e007              B        |L10.250|
;;;330    	 ci++, compptr++) {
;;;331          if (cc == compptr->component_id)
0000ea  bf00              NOP      
                  |L10.236|
0000ec  f8d93000          LDR      r3,[r9,#0]
0000f0  455b              CMP      r3,r11
0000f2  d00e              BEQ      |L10.274|
0000f4  f1090954          ADD      r9,r9,#0x54           ;330
0000f8  1c40              ADDS     r0,r0,#1              ;330
                  |L10.250|
0000fa  4281              CMP      r1,r0                 ;329
0000fc  dcf6              BGT      |L10.236|
;;;332    	goto id_found;
;;;333        }
;;;334    
;;;335        ERREXIT1(cinfo, JERR_BAD_COMPONENT_ID, cc);
0000fe  6821              LDR      r1,[r4,#0]
000100  2005              MOVS     r0,#5
000102  6148              STR      r0,[r1,#0x14]
000104  6821              LDR      r1,[r4,#0]
000106  f8c1b018          STR      r11,[r1,#0x18]
00010a  6820              LDR      r0,[r4,#0]
00010c  6801              LDR      r1,[r0,#0]
00010e  4620              MOV      r0,r4
000110  4788              BLX      r1
                  |L10.274|
;;;336    
;;;337      id_found:
;;;338    
;;;339        cinfo->cur_comp_info[i] = compptr;
000112  eb04018a          ADD      r1,r4,r10,LSL #2
;;;340        compptr->dc_tbl_no = (c >> 4) & 15;
000116  f8c1914c          STR      r9,[r1,#0x14c]
00011a  9800              LDR      r0,[sp,#0]
00011c  0901              LSRS     r1,r0,#4
;;;341        compptr->ac_tbl_no = (c     ) & 15;
00011e  f8c91014          STR      r1,[r9,#0x14]
000122  9800              LDR      r0,[sp,#0]
000124  f000010f          AND      r1,r0,#0xf
;;;342        
;;;343        TRACEMS3(cinfo, 1, JTRC_SOS_COMPONENT, cc,
000128  e000              B        |L10.300|
                  |L10.298|
00012a  e061              B        |L10.496|
                  |L10.300|
00012c  f8c91018          STR      r1,[r9,#0x18]
000130  6820              LDR      r0,[r4,#0]
000132  f8c0b018          STR      r11,[r0,#0x18]
000136  f8d91014          LDR      r1,[r9,#0x14]
00013a  61c1              STR      r1,[r0,#0x1c]
00013c  f8d91018          LDR      r1,[r9,#0x18]
000140  6201              STR      r1,[r0,#0x20]
000142  6821              LDR      r1,[r4,#0]
000144  2068              MOVS     r0,#0x68
000146  6148              STR      r0,[r1,#0x14]
000148  6820              LDR      r0,[r4,#0]
00014a  2101              MOVS     r1,#1
00014c  6842              LDR      r2,[r0,#4]
00014e  4620              MOV      r0,r4
000150  4790              BLX      r2
000152  f10a0001          ADD      r0,r10,#1             ;325
                  |L10.342|
000156  4682              MOV      r10,r0                ;325
000158  4540              CMP      r0,r8                 ;325
00015a  dba8              BLT      |L10.174|
;;;344    	     compptr->dc_tbl_no, compptr->ac_tbl_no);
;;;345      }
;;;346    
;;;347      /* Collect the additional scan parameters Ss, Se, Ah/Al. */
;;;348      INPUT_BYTE(cinfo, c, return FALSE);
00015c  b935              CBNZ     r5,|L10.364|
00015e  68f1              LDR      r1,[r6,#0xc]
000160  4620              MOV      r0,r4
000162  4788              BLX      r1
000164  2800              CMP      r0,#0
000166  d043              BEQ      |L10.496|
000168  e9d67500          LDRD     r7,r5,[r6,#0]
                  |L10.364|
;;;349      cinfo->Ss = c;
00016c  1e6d              SUBS     r5,r5,#1
00016e  f8170b01          LDRB     r0,[r7],#1            ;348
000172  f8c40190          STR      r0,[r4,#0x190]
;;;350      INPUT_BYTE(cinfo, c, return FALSE);
000176  d106              BNE      |L10.390|
000178  68f1              LDR      r1,[r6,#0xc]
00017a  4620              MOV      r0,r4
00017c  4788              BLX      r1
00017e  2800              CMP      r0,#0
000180  d036              BEQ      |L10.496|
000182  e9d67500          LDRD     r7,r5,[r6,#0]
                  |L10.390|
;;;351      cinfo->Se = c;
000186  1e6d              SUBS     r5,r5,#1
000188  f8170b01          LDRB     r0,[r7],#1            ;350
00018c  f8c40194          STR      r0,[r4,#0x194]
;;;352      INPUT_BYTE(cinfo, c, return FALSE);
000190  d106              BNE      |L10.416|
000192  68f1              LDR      r1,[r6,#0xc]
000194  4620              MOV      r0,r4
000196  4788              BLX      r1
000198  2800              CMP      r0,#0
00019a  d029              BEQ      |L10.496|
00019c  e9d67500          LDRD     r7,r5,[r6,#0]
                  |L10.416|
0001a0  f8170b01          LDRB     r0,[r7],#1
;;;353      cinfo->Ah = (c >> 4) & 15;
0001a4  0901              LSRS     r1,r0,#4
;;;354      cinfo->Al = (c     ) & 15;
0001a6  f000000f          AND      r0,r0,#0xf
0001aa  e9c41066          STRD     r1,r0,[r4,#0x198]
;;;355    
;;;356      TRACEMS4(cinfo, 1, JTRC_SOS_PARAMS, cinfo->Ss, cinfo->Se,
0001ae  6820              LDR      r0,[r4,#0]
0001b0  f8d41190          LDR      r1,[r4,#0x190]
0001b4  6181              STR      r1,[r0,#0x18]
0001b6  f8d41194          LDR      r1,[r4,#0x194]
0001ba  61c1              STR      r1,[r0,#0x1c]
0001bc  f8d41198          LDR      r1,[r4,#0x198]
0001c0  6201              STR      r1,[r0,#0x20]
0001c2  f8d4119c          LDR      r1,[r4,#0x19c]
0001c6  6241              STR      r1,[r0,#0x24]
0001c8  6821              LDR      r1,[r4,#0]
0001ca  2069              MOVS     r0,#0x69
0001cc  6148              STR      r0,[r1,#0x14]
0001ce  6820              LDR      r0,[r4,#0]
0001d0  2101              MOVS     r1,#1
0001d2  1e6d              SUBS     r5,r5,#1
0001d4  6842              LDR      r2,[r0,#4]
0001d6  4620              MOV      r0,r4
0001d8  4790              BLX      r2
;;;357    	   cinfo->Ah, cinfo->Al);
;;;358    
;;;359      /* Prepare to scan data & restart markers */
;;;360      cinfo->marker->next_restart_num = 0;
0001da  f8d411b8          LDR      r1,[r4,#0x1b8]
0001de  2000              MOVS     r0,#0
;;;361    
;;;362      /* Count another SOS marker */
;;;363      cinfo->input_scan_number++;
0001e0  6148              STR      r0,[r1,#0x14]
0001e2  f8540f90          LDR      r0,[r4,#0x90]!
0001e6  1c40              ADDS     r0,r0,#1
0001e8  6020              STR      r0,[r4,#0]
0001ea  e9c67500          STRD     r7,r5,[r6,#0]
;;;364    
;;;365      INPUT_SYNC(cinfo);
;;;366      return TRUE;
0001ee  2001              MOVS     r0,#1
                  |L10.496|
;;;367    }
0001f0  e8bd8ff8          POP      {r3-r11,pc}
;;;368    
                          ENDP


                          AREA ||i.jinit_marker_reader||, CODE, READONLY, ALIGN=2

                  jinit_marker_reader PROC
;;;1261   GLOBAL(void)
;;;1262   jinit_marker_reader (j_decompress_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;1263   {
000002  4604              MOV      r4,r0
;;;1264     my_marker_ptr marker;
;;;1265     int i;
;;;1266   
;;;1267     /* Create subobject in permanent pool */
;;;1268     marker = (my_marker_ptr)
000004  6840              LDR      r0,[r0,#4]
000006  22ac              MOVS     r2,#0xac
000008  2100              MOVS     r1,#0
00000a  6803              LDR      r3,[r0,#0]
00000c  4620              MOV      r0,r4
00000e  4798              BLX      r3
;;;1269       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
;;;1270   				SIZEOF(my_marker_reader));
;;;1271     cinfo->marker = (struct jpeg_marker_reader *) marker;
;;;1272     /* Initialize public method pointers */
;;;1273     marker->pub.reset_marker_reader = reset_marker_reader;
000010  490e              LDR      r1,|L11.76|
000012  f8c401b8          STR      r0,[r4,#0x1b8]
;;;1274     marker->pub.read_markers = read_markers;
000016  6001              STR      r1,[r0,#0]
000018  490d              LDR      r1,|L11.80|
;;;1275     marker->pub.read_restart_marker = read_restart_marker;
00001a  6041              STR      r1,[r0,#4]
;;;1276     /* Initialize COM/APPn processing.
;;;1277      * By default, we examine and then discard APP0 and APP14,
;;;1278      * but simply discard COM and all other APPn.
;;;1279      */
;;;1280     marker->process_COM = skip_variable;
00001c  4b0e              LDR      r3,|L11.88|
;;;1281     marker->length_limit_COM = 0;
00001e  2200              MOVS     r2,#0
;;;1282     for (i = 0; i < 16; i++) {
000020  61c3              STR      r3,[r0,#0x1c]
000022  490c              LDR      r1,|L11.84|
000024  6602              STR      r2,[r0,#0x60]
000026  6081              STR      r1,[r0,#8]
000028  ea4f0102          MOV.W    r1,r2
                  |L11.44|
;;;1283       marker->process_APPn[i] = skip_variable;
00002c  eb000581          ADD      r5,r0,r1,LSL #2
;;;1284       marker->length_limit_APPn[i] = 0;
000030  1c49              ADDS     r1,r1,#1
000032  622b              STR      r3,[r5,#0x20]         ;1282
000034  666a              STR      r2,[r5,#0x64]         ;1282
000036  2910              CMP      r1,#0x10              ;1282
000038  dbf8              BLT      |L11.44|
;;;1285     }
;;;1286     marker->process_APPn[0] = get_interesting_appn;
00003a  4908              LDR      r1,|L11.92|
;;;1287     marker->process_APPn[14] = get_interesting_appn;
00003c  6201              STR      r1,[r0,#0x20]
;;;1288     /* Reset marker processing state */
;;;1289     reset_marker_reader(cinfo);
00003e  6581              STR      r1,[r0,#0x58]
000040  4620              MOV      r0,r4
000042  e8bd4070          POP      {r4-r6,lr}
000046  f7ffbffe          B.W      reset_marker_reader
;;;1290   }
;;;1291   
                          ENDP

00004a  0000              DCW      0x0000
                  |L11.76|
                          DCD      reset_marker_reader
                  |L11.80|
                          DCD      read_markers
                  |L11.84|
                          DCD      read_restart_marker
                  |L11.88|
                          DCD      skip_variable
                  |L11.92|
                          DCD      get_interesting_appn

                          AREA ||i.jpeg_resync_to_restart||, CODE, READONLY, ALIGN=1

                  jpeg_resync_to_restart PROC
;;;1191   GLOBAL(boolean)
;;;1192   jpeg_resync_to_restart (j_decompress_ptr cinfo, int desired)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1193   {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;1194     int marker = cinfo->unread_marker;
;;;1195     int action;
;;;1196     
;;;1197     /* Always put up a warning. */
;;;1198     WARNMS2(cinfo, JWRN_MUST_RESYNC, marker, desired);
000008  6821              LDR      r1,[r4,#0]
00000a  f8d051a0          LDR      r5,[r0,#0x1a0]
00000e  2079              MOVS     r0,#0x79
000010  6148              STR      r0,[r1,#0x14]
000012  6820              LDR      r0,[r4,#0]
000014  f04f31ff          MOV      r1,#0xffffffff
000018  6185              STR      r5,[r0,#0x18]
00001a  6820              LDR      r0,[r4,#0]
00001c  61c6              STR      r6,[r0,#0x1c]
00001e  6820              LDR      r0,[r4,#0]
000020  6842              LDR      r2,[r0,#4]
000022  4620              MOV      r0,r4
000024  4790              BLX      r2
;;;1199     
;;;1200     /* Outer loop handles repeated decision after scanning forward. */
;;;1201     while(1) {
;;;1202       if (marker < (int) M_SOF0)
;;;1203         action = 2;		/* invalid marker */
;;;1204       else if (marker < (int) M_RST0 || marker > (int) M_RST7)
;;;1205         action = 3;		/* valid non-restart marker */
;;;1206       else {
;;;1207         if (marker == ((int) M_RST0 + ((desired+1) & 7)) ||
;;;1208   	  marker == ((int) M_RST0 + ((desired+2) & 7)))
;;;1209   	action = 3;		/* one of the next two expected restarts */
;;;1210         else if (marker == ((int) M_RST0 + ((desired-1) & 7)) ||
;;;1211   	       marker == ((int) M_RST0 + ((desired-2) & 7)))
;;;1212   	action = 2;		/* a prior restart, so advance */
;;;1213         else
;;;1214   	action = 1;		/* desired restart or too far away */
;;;1215       }
;;;1216       TRACEMS2(cinfo, 4, JTRC_RECOVERY_ACTION, marker, action);
000026  f04f0861          MOV      r8,#0x61
                  |L12.42|
00002a  2dc0              CMP      r5,#0xc0              ;1202
00002c  db1d              BLT      |L12.106|
00002e  f1a500d0          SUB      r0,r5,#0xd0           ;1204
000032  2808              CMP      r0,#8                 ;1204
000034  d20b              BCS      |L12.78|
000036  1c70              ADDS     r0,r6,#1              ;1207
000038  f0000007          AND      r0,r0,#7              ;1207
00003c  30d0              ADDS     r0,r0,#0xd0           ;1207
00003e  42a8              CMP      r0,r5                 ;1207
000040  d005              BEQ      |L12.78|
000042  1cb0              ADDS     r0,r6,#2              ;1208
000044  f0000007          AND      r0,r0,#7              ;1208
000048  30d0              ADDS     r0,r0,#0xd0           ;1208
00004a  42a8              CMP      r0,r5                 ;1208
00004c  d101              BNE      |L12.82|
                  |L12.78|
00004e  2703              MOVS     r7,#3                 ;1209
000050  e00e              B        |L12.112|
                  |L12.82|
000052  1e70              SUBS     r0,r6,#1              ;1210
000054  f0000007          AND      r0,r0,#7              ;1210
000058  30d0              ADDS     r0,r0,#0xd0           ;1210
00005a  42a8              CMP      r0,r5                 ;1210
00005c  d005              BEQ      |L12.106|
00005e  1eb0              SUBS     r0,r6,#2              ;1211
000060  f0000007          AND      r0,r0,#7              ;1211
000064  30d0              ADDS     r0,r0,#0xd0           ;1211
000066  42a8              CMP      r0,r5                 ;1211
000068  d101              BNE      |L12.110|
                  |L12.106|
00006a  2702              MOVS     r7,#2                 ;1212
00006c  e000              B        |L12.112|
                  |L12.110|
00006e  2701              MOVS     r7,#1                 ;1214
                  |L12.112|
000070  6821              LDR      r1,[r4,#0]
000072  f8c18014          STR      r8,[r1,#0x14]
000076  6820              LDR      r0,[r4,#0]
000078  2104              MOVS     r1,#4
00007a  6185              STR      r5,[r0,#0x18]
00007c  6820              LDR      r0,[r4,#0]
00007e  61c7              STR      r7,[r0,#0x1c]
000080  6820              LDR      r0,[r4,#0]
000082  6842              LDR      r2,[r0,#4]
000084  4620              MOV      r0,r4
000086  4790              BLX      r2
;;;1217       switch (action) {
000088  2f01              CMP      r7,#1
00008a  d004              BEQ      |L12.150|
00008c  2f02              CMP      r7,#2
00008e  d008              BEQ      |L12.162|
000090  2f03              CMP      r7,#3
000092  d1ca              BNE      |L12.42|
000094  e002              B        |L12.156|
                  |L12.150|
;;;1218       case 1:
;;;1219         /* Discard marker and let entropy decoder resume processing. */
;;;1220         cinfo->unread_marker = 0;
000096  2000              MOVS     r0,#0
000098  f8c401a0          STR      r0,[r4,#0x1a0]
                  |L12.156|
;;;1221         return TRUE;
;;;1222       case 2:
;;;1223         /* Scan to the next marker, and repeat the decision loop. */
;;;1224         if (! next_marker(cinfo))
;;;1225   	return FALSE;
;;;1226         marker = cinfo->unread_marker;
;;;1227         break;
;;;1228       case 3:
;;;1229         /* Return without advancing past this marker. */
;;;1230         /* Entropy decoder will be forced to process an empty segment. */
;;;1231         return TRUE;
00009c  2001              MOVS     r0,#1
                  |L12.158|
;;;1232       }
;;;1233     } /* end loop */
;;;1234   }
00009e  e8bd81f0          POP      {r4-r8,pc}
                  |L12.162|
0000a2  4620              MOV      r0,r4                 ;1224
0000a4  f7fffffe          BL       next_marker
0000a8  2800              CMP      r0,#0                 ;1224
0000aa  d0f8              BEQ      |L12.158|
0000ac  f8d451a0          LDR      r5,[r4,#0x1a0]        ;1227
0000b0  e7bb              B        |L12.42|
;;;1235   
                          ENDP


                          AREA ||i.jpeg_set_marker_processor||, CODE, READONLY, ALIGN=1

                  jpeg_set_marker_processor PROC
;;;1348   GLOBAL(void)
;;;1349   jpeg_set_marker_processor (j_decompress_ptr cinfo, int marker_code,
000000  b430              PUSH     {r4,r5}
;;;1350   			   jpeg_marker_parser_method routine)
;;;1351   {
;;;1352     my_marker_ptr marker = (my_marker_ptr) cinfo->marker;
;;;1353   
;;;1354     if (marker_code == (int) M_COM)
000002  f8d031b8          LDR      r3,[r0,#0x1b8]
000006  29fe              CMP      r1,#0xfe
000008  d00b              BEQ      |L13.34|
;;;1355       marker->process_COM = routine;
;;;1356     else if (marker_code >= (int) M_APP0 && marker_code <= (int) M_APP15)
00000a  f1a104e0          SUB      r4,r1,#0xe0
00000e  2c0f              CMP      r4,#0xf
000010  d809              BHI      |L13.38|
;;;1357       marker->process_APPn[marker_code - (int) M_APP0] = routine;
000012  eb030081          ADD      r0,r3,r1,LSL #2
000016  f5a05080          SUB      r0,r0,#0x1000
00001a  f8c02ca0          STR      r2,[r0,#0xca0]
                  |L13.30|
;;;1358     else
;;;1359       ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, marker_code);
;;;1360   }
00001e  bc30              POP      {r4,r5}
000020  4770              BX       lr
                  |L13.34|
000022  61da              STR      r2,[r3,#0x1c]         ;1355
000024  e7fb              B        |L13.30|
                  |L13.38|
000026  6803              LDR      r3,[r0,#0]            ;1359
000028  2244              MOVS     r2,#0x44              ;1359
00002a  615a              STR      r2,[r3,#0x14]         ;1359
00002c  6802              LDR      r2,[r0,#0]            ;1359
00002e  6191              STR      r1,[r2,#0x18]         ;1359
000030  6801              LDR      r1,[r0,#0]            ;1359
000032  6809              LDR      r1,[r1,#0]            ;1359
000034  bc30              POP      {r4,r5}               ;1359
000036  4708              BX       r1                    ;1359
                          ENDP


                          AREA ||i.next_marker||, CODE, READONLY, ALIGN=1

                  next_marker PROC
;;;873    LOCAL(boolean)
;;;874    next_marker (j_decompress_ptr cinfo)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;875    {
;;;876      int c;
;;;877      INPUT_VARS(cinfo);
000004  6984              LDR      r4,[r0,#0x18]
000006  4607              MOV      r7,r0                 ;875
000008  e9d46500          LDRD     r6,r5,[r4,#0]
                  |L14.12|
;;;878    
;;;879      while(1) {
;;;880        INPUT_BYTE(cinfo, c, return FALSE);
00000c  b935              CBNZ     r5,|L14.28|
                  |L14.14|
00000e  68e1              LDR      r1,[r4,#0xc]
000010  4638              MOV      r0,r7
000012  4788              BLX      r1
000014  2800              CMP      r0,#0
000016  d03f              BEQ      |L14.152|
000018  e9d46500          LDRD     r6,r5,[r4,#0]
                  |L14.28|
00001c  1e6d              SUBS     r5,r5,#1
00001e  f8160b01          LDRB     r0,[r6],#1
;;;881        /* Skip any non-FF bytes.
;;;882         * This may look a bit inefficient, but it will not occur in a valid file.
;;;883         * We sync after each discarded byte so that a suspending data source
;;;884         * can discard the byte from its buffer.
;;;885         */
;;;886        while (c != 0xFF) {
000022  28ff              CMP      r0,#0xff
000024  d009              BEQ      |L14.58|
;;;887          cinfo->marker->discarded_bytes++;
000026  f8d701b8          LDR      r0,[r7,#0x1b8]
00002a  6981              LDR      r1,[r0,#0x18]
00002c  1c49              ADDS     r1,r1,#1
00002e  6181              STR      r1,[r0,#0x18]
000030  e9c46500          STRD     r6,r5,[r4,#0]
;;;888          INPUT_SYNC(cinfo);
;;;889          INPUT_BYTE(cinfo, c, return FALSE);
000034  2d00              CMP      r5,#0
000036  d1f1              BNE      |L14.28|
000038  e7e9              B        |L14.14|
                  |L14.58|
;;;890        }
;;;891        /* This loop swallows any duplicate FF bytes.  Extra FFs are legal as
;;;892         * pad bytes, so don't count them in discarded_bytes.  We assume there
;;;893         * will not be so many consecutive FF bytes as to overflow a suspending
;;;894         * data source's input buffer.
;;;895         */
;;;896        do {
;;;897          INPUT_BYTE(cinfo, c, return FALSE);
00003a  b935              CBNZ     r5,|L14.74|
00003c  68e1              LDR      r1,[r4,#0xc]
00003e  4638              MOV      r0,r7
000040  4788              BLX      r1
000042  2800              CMP      r0,#0
000044  d028              BEQ      |L14.152|
000046  e9d46500          LDRD     r6,r5,[r4,#0]
                  |L14.74|
00004a  1e6d              SUBS     r5,r5,#1
00004c  f8168b01          LDRB     r8,[r6],#1
;;;898        } while (c == 0xFF);
000050  f1b80fff          CMP      r8,#0xff
000054  d0f1              BEQ      |L14.58|
;;;899        if (c != 0)
000056  f8d701b8          LDR      r0,[r7,#0x1b8]
00005a  f1b80f00          CMP      r8,#0
00005e  d01d              BEQ      |L14.156|
;;;900          break;			/* found a valid marker, exit loop */
;;;901        /* Reach here if we found a stuffed-zero data sequence (FF/00).
;;;902         * Discard it and loop back to try again.
;;;903         */
;;;904        cinfo->marker->discarded_bytes += 2;
;;;905        INPUT_SYNC(cinfo);
;;;906      }
;;;907    
;;;908      if (cinfo->marker->discarded_bytes != 0) {
000060  6980              LDR      r0,[r0,#0x18]
000062  b1a0              CBZ      r0,|L14.142|
;;;909        WARNMS2(cinfo, JWRN_EXTRANEOUS_DATA, cinfo->marker->discarded_bytes, c);
000064  6839              LDR      r1,[r7,#0]
000066  2074              MOVS     r0,#0x74
000068  6148              STR      r0,[r1,#0x14]
00006a  f8d701b8          LDR      r0,[r7,#0x1b8]
00006e  6839              LDR      r1,[r7,#0]
000070  6980              LDR      r0,[r0,#0x18]
000072  6188              STR      r0,[r1,#0x18]
000074  6839              LDR      r1,[r7,#0]
000076  f8c1801c          STR      r8,[r1,#0x1c]
00007a  6838              LDR      r0,[r7,#0]
00007c  f04f31ff          MOV      r1,#0xffffffff
000080  6842              LDR      r2,[r0,#4]
000082  4638              MOV      r0,r7
000084  4790              BLX      r2
;;;910        cinfo->marker->discarded_bytes = 0;
000086  f8d711b8          LDR      r1,[r7,#0x1b8]
00008a  2000              MOVS     r0,#0
00008c  6188              STR      r0,[r1,#0x18]
                  |L14.142|
;;;911      }
;;;912    
;;;913      cinfo->unread_marker = c;
00008e  f8c781a0          STR      r8,[r7,#0x1a0]
000092  e9c46500          STRD     r6,r5,[r4,#0]
;;;914    
;;;915      INPUT_SYNC(cinfo);
;;;916      return TRUE;
000096  2001              MOVS     r0,#1
                  |L14.152|
;;;917    }
000098  e8bd81f0          POP      {r4-r8,pc}
                  |L14.156|
00009c  6981              LDR      r1,[r0,#0x18]         ;904
00009e  1c89              ADDS     r1,r1,#2              ;904
0000a0  6181              STR      r1,[r0,#0x18]         ;904
0000a2  e9c46500          STRD     r6,r5,[r4,#0]         ;904
0000a6  e7b1              B        |L14.12|
;;;918    
                          ENDP


                          AREA ||i.read_markers||, CODE, READONLY, ALIGN=2

                  read_markers PROC
;;;951    METHODDEF(int)
;;;952    read_markers (j_decompress_ptr cinfo)
000000  b570              PUSH     {r4-r6,lr}
;;;953    {
000002  4604              MOV      r4,r0
000004  f05f0500          MOVS.W   r5,#0
                  |L15.8|
;;;954      /* Outer loop repeats once for each marker. */
;;;955      while(1) {
;;;956        /* Collect the marker proper, unless we already did. */
;;;957        /* NB: first_marker() enforces the requirement that SOI appear first. */
;;;958        if (cinfo->unread_marker == 0) {
000008  f8d401a0          LDR      r0,[r4,#0x1a0]
00000c  b948              CBNZ     r0,|L15.34|
;;;959          if (! cinfo->marker->saw_SOI) {
00000e  f8d401b8          LDR      r0,[r4,#0x1b8]
000012  68c0              LDR      r0,[r0,#0xc]
000014  2800              CMP      r0,#0
;;;960    	if (! first_marker(cinfo))
;;;961    	  return JPEG_SUSPENDED;
;;;962          } else {
;;;963    	if (! next_marker(cinfo))
000016  4620              MOV      r0,r4
000018  d018              BEQ      |L15.76|
00001a  f7fffffe          BL       next_marker
                  |L15.30|
00001e  2800              CMP      r0,#0
000020  d06f              BEQ      |L15.258|
                  |L15.34|
;;;964    	  return JPEG_SUSPENDED;
;;;965          }
;;;966        }
;;;967        /* At this point cinfo->unread_marker contains the marker code and the
;;;968         * input point is just past the marker proper, but before any parameters.
;;;969         * A suspension will cause us to return with this state still true.
;;;970         */
;;;971        switch (cinfo->unread_marker) {
000022  f8d401a0          LDR      r0,[r4,#0x1a0]
000026  28d7              CMP      r0,#0xd7
000028  d078              BEQ      |L15.284|
00002a  dc2a              BGT      |L15.130|
00002c  28cb              CMP      r0,#0xcb
00002e  d054              BEQ      |L15.218|
000030  dc1c              BGT      |L15.108|
000032  28c5              CMP      r0,#0xc5
000034  d051              BEQ      |L15.218|
000036  dc11              BGT      |L15.92|
000038  28c2              CMP      r0,#0xc2
00003a  d042              BEQ      |L15.194|
00003c  dc09              BGT      |L15.82|
00003e  2801              CMP      r0,#1
000040  d06c              BEQ      |L15.284|
000042  28c0              CMP      r0,#0xc0
000044  d03b              BEQ      |L15.190|
000046  28c1              CMP      r0,#0xc1
000048  d169              BNE      |L15.286|
00004a  e038              B        |L15.190|
                  |L15.76|
00004c  f7fffffe          BL       first_marker
000050  e7e5              B        |L15.30|
                  |L15.82|
000052  28c3              CMP      r0,#0xc3
000054  d041              BEQ      |L15.218|
000056  28c4              CMP      r0,#0xc4
000058  d161              BNE      |L15.286|
00005a  e065              B        |L15.296|
                  |L15.92|
00005c  38c6              SUBS     r0,r0,#0xc6
00005e  2805              CMP      r0,#5
000060  d25d              BCS      |L15.286|
000062  e8dff000          TBB      [pc,r0]
000066  3a3a              DCB      0x3a,0x3a
000068  3a343700          DCB      0x3a,0x34,0x37,0x00
                  |L15.108|
00006c  38cc              SUBS     r0,r0,#0xcc
00006e  280b              CMP      r0,#0xb
000070  d255              BCS      |L15.286|
000072  e8dff000          TBB      [pc,r0]
000076  5532              DCB      0x55,0x32
000078  32327474          DCB      0x32,0x32,0x74,0x74
00007c  74747474          DCB      0x74,0x74,0x74,0x74
000080  7400              DCB      0x74,0x00
                  |L15.130|
000082  f1a001d8          SUB      r1,r0,#0xd8
000086  2927              CMP      r1,#0x27
000088  d278              BCS      |L15.380|
00008a  e8dff001          TBB      [pc,r1]
00008e  143b              DCB      0x14,0x3b
000090  32514955          DCB      0x32,0x51,0x49,0x55
000094  77775959          DCB      0x77,0x77,0x59,0x59
000098  59595959          DCB      0x59,0x59,0x59,0x59
00009c  59595959          DCB      0x59,0x59,0x59,0x59
0000a0  59595959          DCB      0x59,0x59,0x59,0x59
0000a4  59597777          DCB      0x59,0x59,0x77,0x77
0000a8  77777777          DCB      0x77,0x77,0x77,0x77
0000ac  77777777          DCB      0x77,0x77,0x77,0x77
0000b0  77777777          DCB      0x77,0x77,0x77,0x77
0000b4  6000              DCB      0x60,0x00
;;;972        case M_SOI:
;;;973          if (! get_soi(cinfo))
0000b6  4620              MOV      r0,r4
0000b8  f7fffffe          BL       get_soi
0000bc  e04c              B        |L15.344|
                  |L15.190|
;;;974    	return JPEG_SUSPENDED;
;;;975          break;
;;;976    
;;;977        case M_SOF0:		/* Baseline */
;;;978        case M_SOF1:		/* Extended sequential, Huffman */
;;;979          if (! get_sof(cinfo, FALSE, FALSE))
0000be  2200              MOVS     r2,#0
0000c0  e006              B        |L15.208|
                  |L15.194|
;;;980    	return JPEG_SUSPENDED;
;;;981          break;
;;;982    
;;;983        case M_SOF2:		/* Progressive, Huffman */
;;;984          if (! get_sof(cinfo, TRUE, FALSE))
0000c2  2200              MOVS     r2,#0
0000c4  e007              B        |L15.214|
                  |L15.198|
0000c6  4620              MOV      r0,r4                 ;979
0000c8  f7fffffe          BL       get_sof
0000cc  e044              B        |L15.344|
;;;985    	return JPEG_SUSPENDED;
;;;986          break;
;;;987    
;;;988        case M_SOF9:		/* Extended sequential, arithmetic */
;;;989          if (! get_sof(cinfo, FALSE, TRUE))
0000ce  2201              MOVS     r2,#1
                  |L15.208|
0000d0  2100              MOVS     r1,#0
0000d2  e7f8              B        |L15.198|
;;;990    	return JPEG_SUSPENDED;
;;;991          break;
;;;992    
;;;993        case M_SOF10:		/* Progressive, arithmetic */
;;;994          if (! get_sof(cinfo, TRUE, TRUE))
0000d4  2201              MOVS     r2,#1
                  |L15.214|
0000d6  2101              MOVS     r1,#1
0000d8  e7f5              B        |L15.198|
                  |L15.218|
;;;995    	return JPEG_SUSPENDED;
;;;996          break;
;;;997    
;;;998        /* Currently unsupported SOFn types */
;;;999        case M_SOF3:		/* Lossless, Huffman */
;;;1000       case M_SOF5:		/* Differential sequential, Huffman */
;;;1001       case M_SOF6:		/* Differential progressive, Huffman */
;;;1002       case M_SOF7:		/* Differential lossless, Huffman */
;;;1003       case M_JPG:			/* Reserved for JPEG extensions */
;;;1004       case M_SOF11:		/* Lossless, arithmetic */
;;;1005       case M_SOF13:		/* Differential sequential, arithmetic */
;;;1006       case M_SOF14:		/* Differential progressive, arithmetic */
;;;1007       case M_SOF15:		/* Differential lossless, arithmetic */
;;;1008         ERREXIT1(cinfo, JERR_SOF_UNSUPPORTED, cinfo->unread_marker);
0000da  203c              MOVS     r0,#0x3c
                  |L15.220|
0000dc  6821              LDR      r1,[r4,#0]
0000de  6148              STR      r0,[r1,#0x14]
0000e0  6821              LDR      r1,[r4,#0]
0000e2  f8d401a0          LDR      r0,[r4,#0x1a0]
0000e6  6188              STR      r0,[r1,#0x18]
0000e8  6820              LDR      r0,[r4,#0]
0000ea  6801              LDR      r1,[r0,#0]
0000ec  4620              MOV      r0,r4
0000ee  4788              BLX      r1
0000f0  e041              B        |L15.374|
;;;1009         break;
;;;1010   
;;;1011       case M_SOS:
;;;1012         if (! get_sos(cinfo))
0000f2  4620              MOV      r0,r4
0000f4  f7fffffe          BL       get_sos
0000f8  2800              CMP      r0,#0
0000fa  d002              BEQ      |L15.258|
;;;1013   	return JPEG_SUSPENDED;
;;;1014         cinfo->unread_marker = 0;	/* processed the marker */
;;;1015         return JPEG_REACHED_SOS;
0000fc  2001              MOVS     r0,#1
0000fe  f8c451a0          STR      r5,[r4,#0x1a0]
                  |L15.258|
;;;1016       
;;;1017       case M_EOI:
;;;1018         TRACEMS(cinfo, 1, JTRC_EOI);
;;;1019         cinfo->unread_marker = 0;	/* processed the marker */
;;;1020         return JPEG_REACHED_EOI;
;;;1021         
;;;1022       case M_DAC:
;;;1023         if (! get_dac(cinfo))
;;;1024   	return JPEG_SUSPENDED;
;;;1025         break;
;;;1026         
;;;1027       case M_DHT:
;;;1028         if (! get_dht(cinfo))
;;;1029   	return JPEG_SUSPENDED;
;;;1030         break;
;;;1031         
;;;1032       case M_DQT:
;;;1033         if (! get_dqt(cinfo))
;;;1034   	return JPEG_SUSPENDED;
;;;1035         break;
;;;1036         
;;;1037       case M_DRI:
;;;1038         if (! get_dri(cinfo))
;;;1039   	return JPEG_SUSPENDED;
;;;1040         break;
;;;1041         
;;;1042       case M_APP0:
;;;1043       case M_APP1:
;;;1044       case M_APP2:
;;;1045       case M_APP3:
;;;1046       case M_APP4:
;;;1047       case M_APP5:
;;;1048       case M_APP6:
;;;1049       case M_APP7:
;;;1050       case M_APP8:
;;;1051       case M_APP9:
;;;1052       case M_APP10:
;;;1053       case M_APP11:
;;;1054       case M_APP12:
;;;1055       case M_APP13:
;;;1056       case M_APP14:
;;;1057       case M_APP15:
;;;1058         if (! (*((my_marker_ptr) cinfo->marker)->process_APPn[
;;;1059   		cinfo->unread_marker - (int) M_APP0]) (cinfo))
;;;1060   	return JPEG_SUSPENDED;
;;;1061         break;
;;;1062         
;;;1063       case M_COM:
;;;1064         if (! (*((my_marker_ptr) cinfo->marker)->process_COM) (cinfo))
;;;1065   	return JPEG_SUSPENDED;
;;;1066         break;
;;;1067   
;;;1068       case M_RST0:		/* these are all parameterless */
;;;1069       case M_RST1:
;;;1070       case M_RST2:
;;;1071       case M_RST3:
;;;1072       case M_RST4:
;;;1073       case M_RST5:
;;;1074       case M_RST6:
;;;1075       case M_RST7:
;;;1076       case M_TEM:
;;;1077         TRACEMS1(cinfo, 1, JTRC_PARMLESS_MARKER, cinfo->unread_marker);
;;;1078         break;
;;;1079   
;;;1080       case M_DNL:			/* Ignore DNL ... perhaps the wrong thing */
;;;1081         if (! skip_variable(cinfo))
;;;1082   	return JPEG_SUSPENDED;
;;;1083         break;
;;;1084   
;;;1085       default:			/* must be DHP, EXP, JPGn, or RESn */
;;;1086         /* For now, we treat the reserved markers as fatal errors since they are
;;;1087          * likely to be used to signal incompatible JPEG Part 3 extensions.
;;;1088          * Once the JPEG 3 version-number marker is well defined, this code
;;;1089          * ought to change!
;;;1090          */
;;;1091         ERREXIT1(cinfo, JERR_UNKNOWN_MARKER, cinfo->unread_marker);
;;;1092         break;
;;;1093       }
;;;1094       /* Successfully processed marker, so reset state variable */
;;;1095       cinfo->unread_marker = 0;
;;;1096     } /* end loop */
;;;1097   }
000102  bd70              POP      {r4-r6,pc}
000104  6821              LDR      r1,[r4,#0]            ;1018
000106  2055              MOVS     r0,#0x55              ;1018
000108  6148              STR      r0,[r1,#0x14]         ;1018
00010a  6820              LDR      r0,[r4,#0]            ;1018
00010c  2101              MOVS     r1,#1                 ;1018
00010e  6842              LDR      r2,[r0,#4]            ;1018
000110  4620              MOV      r0,r4                 ;1018
000112  4790              BLX      r2                    ;1018
000114  2002              MOVS     r0,#2                 ;1020
000116  f8c451a0          STR      r5,[r4,#0x1a0]        ;1020
                  |L15.282|
00011a  bd70              POP      {r4-r6,pc}
                  |L15.284|
00011c  e01f              B        |L15.350|
                  |L15.286|
00011e  e02d              B        |L15.380|
000120  4620              MOV      r0,r4                 ;1023
000122  f7fffffe          BL       skip_variable
000126  e017              B        |L15.344|
                  |L15.296|
000128  4620              MOV      r0,r4                 ;1028
00012a  f7fffffe          BL       get_dht
00012e  e013              B        |L15.344|
000130  4620              MOV      r0,r4                 ;1033
000132  f7fffffe          BL       get_dqt
000136  e00f              B        |L15.344|
000138  4620              MOV      r0,r4                 ;1038
00013a  f7fffffe          BL       get_dri
00013e  e00b              B        |L15.344|
000140  4a0f              LDR      r2,|L15.384|
000142  f8d411b8          LDR      r1,[r4,#0x1b8]        ;1058
000146  eb020080          ADD      r0,r2,r0,LSL #2       ;1058
00014a  5809              LDR      r1,[r1,r0]            ;1058
00014c  e002              B        |L15.340|
00014e  f8d401b8          LDR      r0,[r4,#0x1b8]        ;1064
000152  69c1              LDR      r1,[r0,#0x1c]         ;1064
                  |L15.340|
000154  4620              MOV      r0,r4                 ;1058
000156  4788              BLX      r1                    ;1058
                  |L15.344|
000158  2800              CMP      r0,#0                 ;1058
00015a  d0de              BEQ      |L15.282|
00015c  e00b              B        |L15.374|
                  |L15.350|
00015e  6821              LDR      r1,[r4,#0]            ;1077
000160  205c              MOVS     r0,#0x5c              ;1077
000162  6148              STR      r0,[r1,#0x14]         ;1077
000164  6821              LDR      r1,[r4,#0]            ;1077
000166  f8d401a0          LDR      r0,[r4,#0x1a0]        ;1077
00016a  6188              STR      r0,[r1,#0x18]         ;1077
00016c  6820              LDR      r0,[r4,#0]            ;1077
00016e  2101              MOVS     r1,#1                 ;1077
000170  6842              LDR      r2,[r0,#4]            ;1077
000172  4620              MOV      r0,r4                 ;1077
000174  4790              BLX      r2                    ;1077
                  |L15.374|
000176  f8c451a0          STR      r5,[r4,#0x1a0]        ;1095
00017a  e745              B        |L15.8|
                  |L15.380|
00017c  2044              MOVS     r0,#0x44              ;1091
00017e  e7ad              B        |L15.220|
;;;1098   
                          ENDP

                  |L15.384|
                          DCD      0xfffffca0

                          AREA ||i.read_restart_marker||, CODE, READONLY, ALIGN=1

                  read_restart_marker PROC
;;;1112   METHODDEF(boolean)
;;;1113   read_restart_marker (j_decompress_ptr cinfo)
000000  b510              PUSH     {r4,lr}
;;;1114   {
000002  4604              MOV      r4,r0
;;;1115     /* Obtain a marker unless we already did. */
;;;1116     /* Note that next_marker will complain if it skips any data. */
;;;1117     if (cinfo->unread_marker == 0) {
000004  f8d001a0          LDR      r0,[r0,#0x1a0]
000008  b920              CBNZ     r0,|L16.20|
;;;1118       if (! next_marker(cinfo))
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       next_marker
000010  2800              CMP      r0,#0
000012  d027              BEQ      |L16.100|
                  |L16.20|
;;;1119         return FALSE;
;;;1120     }
;;;1121   
;;;1122     if (cinfo->unread_marker ==
000014  f8d401b8          LDR      r0,[r4,#0x1b8]
000018  f8d421a0          LDR      r2,[r4,#0x1a0]
00001c  6941              LDR      r1,[r0,#0x14]
00001e  f10100d0          ADD      r0,r1,#0xd0
000022  4282              CMP      r2,r0
000024  d110              BNE      |L16.72|
;;;1123         ((int) M_RST0 + cinfo->marker->next_restart_num)) {
;;;1124       /* Normal case --- swallow the marker and let entropy decoder continue */
;;;1125       TRACEMS1(cinfo, 3, JTRC_RST, cinfo->marker->next_restart_num);
000026  6821              LDR      r1,[r4,#0]
000028  2062              MOVS     r0,#0x62
00002a  6148              STR      r0,[r1,#0x14]
00002c  f8d401b8          LDR      r0,[r4,#0x1b8]
000030  6821              LDR      r1,[r4,#0]
000032  6940              LDR      r0,[r0,#0x14]
000034  6188              STR      r0,[r1,#0x18]
000036  6820              LDR      r0,[r4,#0]
000038  2103              MOVS     r1,#3
00003a  6842              LDR      r2,[r0,#4]
00003c  4620              MOV      r0,r4
00003e  4790              BLX      r2
;;;1126       cinfo->unread_marker = 0;
000040  2000              MOVS     r0,#0
000042  f8c401a0          STR      r0,[r4,#0x1a0]
000046  e005              B        |L16.84|
                  |L16.72|
;;;1127     } else {
;;;1128       /* Uh-oh, the restart markers have been messed up. */
;;;1129       /* Let the data source manager determine how to resync. */
;;;1130       if (! (*cinfo->src->resync_to_restart) (cinfo,
000048  69a0              LDR      r0,[r4,#0x18]
00004a  6942              LDR      r2,[r0,#0x14]
00004c  4620              MOV      r0,r4
00004e  4790              BLX      r2
000050  2800              CMP      r0,#0
000052  d007              BEQ      |L16.100|
                  |L16.84|
;;;1131   					    cinfo->marker->next_restart_num))
;;;1132         return FALSE;
;;;1133     }
;;;1134   
;;;1135     /* Update next-restart state */
;;;1136     cinfo->marker->next_restart_num = (cinfo->marker->next_restart_num + 1) & 7;
000054  f8d401b8          LDR      r0,[r4,#0x1b8]
000058  7d01              LDRB     r1,[r0,#0x14]
00005a  1c49              ADDS     r1,r1,#1
00005c  f0010107          AND      r1,r1,#7
;;;1137   
;;;1138     return TRUE;
000060  6141              STR      r1,[r0,#0x14]
000062  2001              MOVS     r0,#1
                  |L16.100|
;;;1139   }
000064  bd10              POP      {r4,pc}
;;;1140   
                          ENDP


                          AREA ||i.reset_marker_reader||, CODE, READONLY, ALIGN=1

                  reset_marker_reader PROC
;;;1241   METHODDEF(void)
;;;1242   reset_marker_reader (j_decompress_ptr cinfo)
000000  2100              MOVS     r1,#0
;;;1243   {
;;;1244     my_marker_ptr marker = (my_marker_ptr) cinfo->marker;
;;;1245   
;;;1246     cinfo->comp_info = NULL;		/* until allocated by get_sof */
000002  f8d021b8          LDR      r2,[r0,#0x1b8]
;;;1247     cinfo->input_scan_number = 0;		/* no SOS seen yet */
000006  f8c010d8          STR      r1,[r0,#0xd8]
00000a  f8401f90          STR      r1,[r0,#0x90]!
;;;1248     cinfo->unread_marker = 0;		/* no pending marker */
;;;1249     marker->pub.saw_SOI = FALSE;		/* set internal state too */
00000e  f8c01110          STR      r1,[r0,#0x110]
;;;1250     marker->pub.saw_SOF = FALSE;
000012  60d1              STR      r1,[r2,#0xc]
;;;1251     marker->pub.discarded_bytes = 0;
000014  6111              STR      r1,[r2,#0x10]
;;;1252     marker->cur_marker = NULL;
000016  6191              STR      r1,[r2,#0x18]
000018  f8c210a4          STR      r1,[r2,#0xa4]
;;;1253   }
00001c  4770              BX       lr
;;;1254   
                          ENDP


                          AREA ||i.skip_variable||, CODE, READONLY, ALIGN=1

                  skip_variable PROC
;;;844    METHODDEF(boolean)
;;;845    skip_variable (j_decompress_ptr cinfo)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;846    /* Skip over an unknown or uninteresting variable-length marker */
;;;847    {
;;;848      INT32 length;
;;;849      INPUT_VARS(cinfo);
000004  6985              LDR      r5,[r0,#0x18]
000006  4606              MOV      r6,r0                 ;847
000008  e9d54000          LDRD     r4,r0,[r5,#0]
00000c  b930              CBNZ     r0,|L18.28|
;;;850    
;;;851      INPUT_2BYTES(cinfo, length, return FALSE);
00000e  68e9              LDR      r1,[r5,#0xc]
000010  4630              MOV      r0,r6
000012  4788              BLX      r1
000014  2800              CMP      r0,#0
000016  d02b              BEQ      |L18.112|
000018  e9d54000          LDRD     r4,r0,[r5,#0]
                  |L18.28|
00001c  f8141b01          LDRB     r1,[r4],#1
000020  020f              LSLS     r7,r1,#8
000022  1e40              SUBS     r0,r0,#1
000024  d106              BNE      |L18.52|
000026  68e9              LDR      r1,[r5,#0xc]
000028  4630              MOV      r0,r6
00002a  4788              BLX      r1
00002c  2800              CMP      r0,#0
00002e  d01f              BEQ      |L18.112|
000030  e9d54000          LDRD     r4,r0,[r5,#0]
                  |L18.52|
000034  f1a00801          SUB      r8,r0,#1
000038  f8140b01          LDRB     r0,[r4],#1
;;;852      length -= 2;
;;;853      
;;;854      TRACEMS2(cinfo, 1, JTRC_MISC_MARKER, cinfo->unread_marker, (int) length);
00003c  6831              LDR      r1,[r6,#0]
00003e  4407              ADD      r7,r7,r0              ;851
000040  205b              MOVS     r0,#0x5b
000042  6148              STR      r0,[r1,#0x14]
000044  6831              LDR      r1,[r6,#0]
000046  f8d601a0          LDR      r0,[r6,#0x1a0]
00004a  1ebf              SUBS     r7,r7,#2
00004c  6188              STR      r0,[r1,#0x18]
00004e  6830              LDR      r0,[r6,#0]
000050  2101              MOVS     r1,#1
000052  61c7              STR      r7,[r0,#0x1c]
000054  6830              LDR      r0,[r6,#0]
000056  6842              LDR      r2,[r0,#4]
000058  4630              MOV      r0,r6
00005a  4790              BLX      r2
;;;855    
;;;856      INPUT_SYNC(cinfo);		/* do before skip_input_data */
;;;857      if (length > 0)
00005c  e9c54800          STRD     r4,r8,[r5,#0]
000060  2f00              CMP      r7,#0
000062  dd04              BLE      |L18.110|
;;;858        (*cinfo->src->skip_input_data) (cinfo, (long) length);
000064  69b0              LDR      r0,[r6,#0x18]
000066  4639              MOV      r1,r7
000068  6902              LDR      r2,[r0,#0x10]
00006a  4630              MOV      r0,r6
00006c  4790              BLX      r2
                  |L18.110|
;;;859    
;;;860      return TRUE;
00006e  2001              MOVS     r0,#1
                  |L18.112|
;;;861    }
000070  e8bd81f0          POP      {r4-r8,pc}
;;;862    
                          ENDP

