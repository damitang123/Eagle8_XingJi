; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_uc.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_uc.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_UC.c]
                          THUMB

                          AREA ||i.GUI_UC_Encode||, CODE, READONLY, ALIGN=2

                  GUI_UC_Encode PROC
;;;63     */
;;;64     int GUI_UC_Encode(char* s, U16 Char) {
000000  4a01              LDR      r2,|L1.8|
;;;65       #if GUI_COMPILER_SUPPORTS_FP
;;;66         #if GUI_SUPPORT_UNICODE
;;;67           int r;
;;;68           GUI_LOCK();
;;;69           r = GUI_Context.pUC_API->pfEncode(s, Char);
000002  6a12              LDR      r2,[r2,#0x20]  ; GUI_Context
000004  68d2              LDR      r2,[r2,#0xc]
000006  4710              BX       r2
;;;70           GUI_UNLOCK();
;;;71           return r;
;;;72         #else
;;;73           *s = (U8)(Char);
;;;74           return Char;
;;;75         #endif
;;;76       #else
;;;77         GUI_USE_PARA(s);
;;;78         GUI_USE_PARA(Char);
;;;79         return 0;
;;;80       #endif
;;;81     }
;;;82     
                          ENDP

                  |L1.8|
                          DCD      GUI_Context

                          AREA ||i.GUI_UC_GetCharCode||, CODE, READONLY, ALIGN=2

                  GUI_UC_GetCharCode PROC
;;;47     */
;;;48     U16 GUI_UC_GetCharCode(const char GUI_UNI_PTR * s) {
000000  4901              LDR      r1,|L2.8|
;;;49       #if GUI_SUPPORT_UNICODE
;;;50         U16 r;
;;;51         GUI_LOCK();
;;;52         r =  GUI_Context.pUC_API->pfGetCharCode(s);
000002  6a09              LDR      r1,[r1,#0x20]  ; GUI_Context
000004  6809              LDR      r1,[r1,#0]
000006  4708              BX       r1
;;;53         GUI_UNLOCK();
;;;54         return r;
;;;55       #else
;;;56         return *(const U8 GUI_UNI_PTR *)s;
;;;57       #endif
;;;58     }
;;;59     
                          ENDP

                  |L2.8|
                          DCD      GUI_Context

                          AREA ||i.GUI_UC_GetCharSize||, CODE, READONLY, ALIGN=2

                  GUI_UC_GetCharSize PROC
;;;31     */
;;;32     int GUI_UC_GetCharSize(const char GUI_UNI_PTR * s) {
000000  4901              LDR      r1,|L3.8|
;;;33       #if GUI_SUPPORT_UNICODE
;;;34         int r;
;;;35         GUI_LOCK();
;;;36         r =  GUI_Context.pUC_API->pfGetCharSize(s);
000002  6a09              LDR      r1,[r1,#0x20]  ; GUI_Context
000004  6849              LDR      r1,[r1,#4]
000006  4708              BX       r1
;;;37         GUI_UNLOCK();
;;;38         return r;
;;;39       #else
;;;40         return 1;
;;;41       #endif
;;;42     }
;;;43     
                          ENDP

                  |L3.8|
                          DCD      GUI_Context

                          AREA ||i.GUI_UC__CalcSizeOfChar||, CODE, READONLY, ALIGN=2

                  GUI_UC__CalcSizeOfChar PROC
;;;86     */
;;;87     int GUI_UC__CalcSizeOfChar(U16 Char) {
000000  4901              LDR      r1,|L4.8|
;;;88       #if GUI_SUPPORT_UNICODE
;;;89         return GUI_Context.pUC_API->pfCalcSizeOfChar(Char);
000002  6a09              LDR      r1,[r1,#0x20]  ; GUI_Context
000004  6889              LDR      r1,[r1,#8]
000006  4708              BX       r1
;;;90       #else
;;;91         return 1;
;;;92       #endif
;;;93     }
;;;94     
                          ENDP

                  |L4.8|
                          DCD      GUI_Context

                          AREA ||i.GUI_UC__GetCharCodeInc||, CODE, READONLY, ALIGN=2

                  GUI_UC__GetCharCodeInc PROC
;;;98     */
;;;99     U16 GUI_UC__GetCharCodeInc(const char GUI_UNI_PTR ** ps) {
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;100      const char GUI_UNI_PTR * s;
;;;101      U16 r;
;;;102      s   = *ps;
;;;103      #if GUI_SUPPORT_UNICODE
;;;104        r   = GUI_UC__GetCharCode(s);
000004  4e08              LDR      r6,|L5.40|
000006  4604              MOV      r4,r0                 ;99
000008  6805              LDR      r5,[r0,#0]
00000a  6a30              LDR      r0,[r6,#0x20]  ; GUI_Context
00000c  6801              LDR      r1,[r0,#0]
00000e  4628              MOV      r0,r5
000010  4788              BLX      r1
000012  4607              MOV      r7,r0
;;;105        s  += GUI_UC__GetCharSize(s);
000014  6a30              LDR      r0,[r6,#0x20]  ; GUI_Context
000016  6841              LDR      r1,[r0,#4]
000018  4628              MOV      r0,r5
00001a  4788              BLX      r1
00001c  4428              ADD      r0,r0,r5
;;;106      #else
;;;107        r   = *s;
;;;108        s  += 1;
;;;109      #endif
;;;110      *ps = s;
;;;111      return r;
00001e  6020              STR      r0,[r4,#0]
000020  4638              MOV      r0,r7
;;;112    }
000022  e8bd81f0          POP      {r4-r8,pc}
;;;113    
                          ENDP

000026  0000              DCW      0x0000
                  |L5.40|
                          DCD      GUI_Context

                          AREA ||i.GUI_UC__NumBytes2NumChars||, CODE, READONLY, ALIGN=2

                  GUI_UC__NumBytes2NumChars PROC
;;;135    */
;;;136    int GUI_UC__NumBytes2NumChars(const char GUI_UNI_PTR * s, int NumBytes) {
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;137      int CharSize, Chars = 0, Bytes = 0;
000004  2500              MOVS     r5,#0
000006  460e              MOV      r6,r1                 ;136
000008  4680              MOV      r8,r0                 ;136
00000a  462c              MOV      r4,r5
;;;138      while (NumBytes > Bytes) {
;;;139        #if GUI_SUPPORT_UNICODE
;;;140          CharSize = GUI_UC__GetCharSize(s + Bytes);
00000c  4f06              LDR      r7,|L6.40|
00000e  e006              B        |L6.30|
                  |L6.16|
000010  6a39              LDR      r1,[r7,#0x20]  ; GUI_Context
000012  eb080004          ADD      r0,r8,r4
000016  6849              LDR      r1,[r1,#4]
000018  4788              BLX      r1
;;;141        #else
;;;142          CharSize = 1;
;;;143        #endif
;;;144        Bytes += CharSize;
00001a  4404              ADD      r4,r4,r0
00001c  1c6d              ADDS     r5,r5,#1
                  |L6.30|
00001e  42a6              CMP      r6,r4                 ;138
000020  dcf6              BGT      |L6.16|
;;;145        Chars++;
;;;146      }
;;;147      return Chars;
000022  4628              MOV      r0,r5
;;;148    }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;149    
                          ENDP

                  |L6.40|
                          DCD      GUI_Context

                          AREA ||i.GUI_UC__NumChars2NumBytes||, CODE, READONLY, ALIGN=2

                  GUI_UC__NumChars2NumBytes PROC
;;;117    */
;;;118    int GUI_UC__NumChars2NumBytes(const char GUI_UNI_PTR * s, int NumChars) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  460c              MOV      r4,r1
000006  4606              MOV      r6,r0
;;;119      int CharSize, NumBytes = 0;
000008  2500              MOVS     r5,#0
;;;120      while (NumChars--) {
;;;121        #if GUI_SUPPORT_UNICODE
;;;122          CharSize = GUI_UC__GetCharSize(s);
00000a  4f06              LDR      r7,|L7.36|
00000c  e005              B        |L7.26|
                  |L7.14|
00000e  6a38              LDR      r0,[r7,#0x20]  ; GUI_Context
000010  6841              LDR      r1,[r0,#4]
000012  4630              MOV      r0,r6
000014  4788              BLX      r1
;;;123        #else
;;;124          CharSize = 1;
;;;125        #endif
;;;126        s += CharSize;    
000016  4406              ADD      r6,r6,r0
;;;127        NumBytes += CharSize;
000018  4405              ADD      r5,r5,r0
                  |L7.26|
00001a  1e64              SUBS     r4,r4,#1
00001c  d2f7              BCS      |L7.14|
;;;128      }
;;;129      return NumBytes;
00001e  4628              MOV      r0,r5
;;;130    }
000020  e8bd81f0          POP      {r4-r8,pc}
;;;131    
                          ENDP

                  |L7.36|
                          DCD      GUI_Context
