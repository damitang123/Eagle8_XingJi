; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\framewin.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\FRAMEWIN.c]
                          THUMB

                          AREA ||i.FRAMEWIN_Callback||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_Callback PROC
;;;463    */
;;;464    void FRAMEWIN_Callback (WM_MESSAGE *pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;465      FRAMEWIN_Handle hWin;
;;;466      FRAMEWIN_Obj * pObj;
;;;467      GUI_RECT * pRect;
;;;468      POSITIONS Pos;
;;;469      GUI_HOOK * pHook;
;;;470      hWin = (FRAMEWIN_Handle)(pMsg->hWin);
000004  f9b06004          LDRSH    r6,[r0,#4]
000008  4604              MOV      r4,r0                 ;464
00000a  b088              SUB      sp,sp,#0x20           ;464
;;;471      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hWin); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;472      pRect = (GUI_RECT*)(pMsg->Data.p);
;;;473      /* Call hook functions */
;;;474      for (pHook = pObj->pFirstHook; pHook; pHook = pHook->pNext) {
000014  f8d48008          LDR      r8,[r4,#8]
000018  6e47              LDR      r7,[r0,#0x64]
00001a  e005              B        |L1.40|
                  |L1.28|
;;;475        int r;
;;;476        r = (*pHook->pHookFunc)(pMsg);
00001c  6879              LDR      r1,[r7,#4]
00001e  4620              MOV      r0,r4
000020  4788              BLX      r1
;;;477        if (r) {
000022  2800              CMP      r0,#0
000024  d11e              BNE      |L1.100|
000026  683f              LDR      r7,[r7,#0]            ;474
                  |L1.40|
000028  2f00              CMP      r7,#0                 ;474
00002a  d1f7              BNE      |L1.28|
;;;478          return;   /* Message handled */
;;;479        }
;;;480      }
;;;481      switch (pMsg->MsgId) {
00002c  6820              LDR      r0,[r4,#0]
00002e  2817              CMP      r0,#0x17
000030  d04b              BEQ      |L1.202|
000032  dc0c              BGT      |L1.78|
000034  280d              CMP      r0,#0xd
000036  d07b              BEQ      |L1.304|
000038  dc04              BGT      |L1.68|
00003a  280b              CMP      r0,#0xb
00003c  d076              BEQ      |L1.300|
00003e  280c              CMP      r0,#0xc
000040  d118              BNE      |L1.116|
000042  e018              B        |L1.118|
                  |L1.68|
000044  280f              CMP      r0,#0xf
000046  d012              BEQ      |L1.110|
000048  2814              CMP      r0,#0x14
00004a  d113              BNE      |L1.116|
00004c  e032              B        |L1.180|
                  |L1.78|
00004e  281e              CMP      r0,#0x1e
000050  d04d              BEQ      |L1.238|
000052  2820              CMP      r0,#0x20
000054  d079              BEQ      |L1.330|
000056  2826              CMP      r0,#0x26
000058  d03a              BEQ      |L1.208|
00005a  282a              CMP      r0,#0x2a
00005c  d10a              BNE      |L1.116|
;;;482      case WM_HANDLE_DIALOG_STATUS:
;;;483        if (pMsg->Data.p) {                           /* set pointer to Dialog status */
00005e  68a0              LDR      r0,[r4,#8]
000060  b118              CBZ      r0,|L1.106|
;;;484          pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
000062  6628              STR      r0,[r5,#0x60]
                  |L1.100|
;;;485        } else {                                      /* return pointer to Dialog status */
;;;486          pMsg->Data.p = pObj->pDialogStatus;      
;;;487        }
;;;488        return;
;;;489      case WM_PAINT:
;;;490        _Paint(pObj);
;;;491        break;
;;;492      case WM_TOUCH:
;;;493        _OnTouch(hWin, pObj, pMsg);
;;;494        return;                       /* Return here ... Message handled */
;;;495      case WM_GET_INSIDE_RECT:
;;;496        FRAMEWIN__CalcPositions(pObj, &Pos);
;;;497    		*pRect = Pos.rClient;
;;;498        return;                       /* Return here ... Message handled */
;;;499      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;500        pMsg->Data.v = (int)pObj->hClient;
;;;501        return;                       /* Return here ... Message handled */
;;;502      case WM_NOTIFY_PARENT:
;;;503        if (pMsg->Data.v == WM_NOTIFICATION_RELEASED) {
;;;504          WM_MESSAGE Msg;
;;;505          Msg.hWinSrc = hWin;
;;;506          Msg.Data    = pMsg->Data;
;;;507          Msg.MsgId   = WM_NOTIFY_PARENT_REFLECTION;
;;;508          WM__SendMessage(pMsg->hWinSrc, &Msg);
;;;509        }
;;;510        return;
;;;511      case WM_SET_FOCUS:                 /* We have received or lost focus */
;;;512        if (pMsg->Data.v == 1) {
;;;513          if (WM_IsWindow(pObj->hFocussedChild)) {
;;;514            WM_SetFocus(pObj->hFocussedChild);
;;;515          } else {
;;;516            pObj->hFocussedChild = WM_SetFocusOnNextChild(pObj->hClient);
;;;517          }
;;;518          FRAMEWIN_SetActive(hWin, 1);
;;;519          pMsg->Data.v = 0;              /* Focus could be accepted */
;;;520        } else {
;;;521          FRAMEWIN_SetActive(hWin, 0);
;;;522        }
;;;523        return;
;;;524      case WM_TOUCH_CHILD:
;;;525        /* If a child of this framewindow has been touched and the frame window was not active,
;;;526           the framewindow will receive the focus.
;;;527         */
;;;528        if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;529          const WM_MESSAGE * pMsgOrg;
;;;530          const GUI_PID_STATE * pState;
;;;531          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;532          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;533          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;534            if (pState->Pressed) {
;;;535              WM_SetFocus(hWin);
;;;536            }
;;;537          }
;;;538        }
;;;539        break;
;;;540      case WM_NOTIFY_CHILD_HAS_FOCUS:
;;;541        _OnChildHasFocus(hWin, pObj, pMsg);
;;;542        break;
;;;543      case WM_DELETE:
;;;544        GUI_DEBUG_LOG("FRAMEWIN: FRAMEWIN_Callback(WM_DELETE)\n");
;;;545        GUI_ALLOC_FreePtr(&pObj->hText);
;;;546        break;
;;;547      }
;;;548      /* Let widget handle the standard messages */
;;;549      if (WIDGET_HandleActive(hWin, pMsg) == 0) {
;;;550        return;
;;;551      }
;;;552      WM_DefaultProc(pMsg);
;;;553    }
000064  b008              ADD      sp,sp,#0x20
000066  e8bd81f0          POP      {r4-r8,pc}
                  |L1.106|
00006a  6e28              LDR      r0,[r5,#0x60]         ;486
00006c  e05b              B        |L1.294|
                  |L1.110|
00006e  4628              MOV      r0,r5                 ;490
000070  f7fffffe          BL       _Paint
                  |L1.116|
000074  e088              B        |L1.392|
                  |L1.118|
000076  68a4              LDR      r4,[r4,#8]            ;491
000078  2c00              CMP      r4,#0                 ;491
00007a  d0f3              BEQ      |L1.100|
00007c  7a20              LDRB     r0,[r4,#8]            ;491
00007e  2800              CMP      r0,#0                 ;491
000080  d0f0              BEQ      |L1.100|
000082  f895005a          LDRB     r0,[r5,#0x5a]         ;491
000086  0700              LSLS     r0,r0,#28             ;491
000088  d402              BMI      |L1.144|
00008a  4630              MOV      r0,r6                 ;491
00008c  f7fffffe          BL       WM_SetFocus
                  |L1.144|
000090  4630              MOV      r0,r6                 ;491
000092  f7fffffe          BL       WM_BringToTop
000096  f8b5005a          LDRH     r0,[r5,#0x5a]         ;491
00009a  06c1              LSLS     r1,r0,#27             ;491
00009c  d5e2              BPL      |L1.100|
00009e  2300              MOVS     r3,#0                 ;491
0000a0  0600              LSLS     r0,r0,#24             ;491
0000a2  d4df              BMI      |L1.100|
0000a4  483d              LDR      r0,|L1.412|
0000a6  4621              MOV      r1,r4                 ;491
0000a8  f9b02000          LDRSH    r2,[r0,#0]            ;491  ; FRAMEWIN__MinVisibility
0000ac  4630              MOV      r0,r6                 ;491
0000ae  f7fffffe          BL       WM_SetCaptureMove
                  |L1.178|
0000b2  e7d7              B        |L1.100|
                  |L1.180|
0000b4  4669              MOV      r1,sp                 ;496
0000b6  4628              MOV      r0,r5                 ;496
0000b8  f7fffffe          BL       FRAMEWIN__CalcPositions
0000bc  9901              LDR      r1,[sp,#4]            ;497
0000be  f8c81000          STR      r1,[r8,#0]            ;497
0000c2  9902              LDR      r1,[sp,#8]            ;497
0000c4  f8c81004          STR      r1,[r8,#4]            ;497
0000c8  e7cc              B        |L1.100|
                  |L1.202|
0000ca  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;500
0000ce  e02a              B        |L1.294|
                  |L1.208|
0000d0  68a0              LDR      r0,[r4,#8]            ;503
0000d2  2802              CMP      r0,#2                 ;503
0000d4  d1c6              BNE      |L1.100|
0000d6  f8ad601a          STRH     r6,[sp,#0x1a]         ;505
0000da  68a0              LDR      r0,[r4,#8]            ;506
0000dc  9007              STR      r0,[sp,#0x1c]         ;507
0000de  2027              MOVS     r0,#0x27              ;507
0000e0  9005              STR      r0,[sp,#0x14]         ;508
0000e2  f9b40006          LDRSH    r0,[r4,#6]            ;508
0000e6  a905              ADD      r1,sp,#0x14           ;508
0000e8  f7fffffe          BL       WM__SendMessage
0000ec  e7ba              B        |L1.100|
                  |L1.238|
0000ee  68a0              LDR      r0,[r4,#8]            ;512
0000f0  2801              CMP      r0,#1                 ;512
0000f2  d004              BEQ      |L1.254|
0000f4  2100              MOVS     r1,#0                 ;521
0000f6  4630              MOV      r0,r6                 ;521
0000f8  f7fffffe          BL       FRAMEWIN_SetActive
0000fc  e7b2              B        |L1.100|
                  |L1.254|
0000fe  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;513
000102  f7fffffe          BL       WM_IsWindow
000106  b120              CBZ      r0,|L1.274|
000108  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;514
00010c  f7fffffe          BL       WM_SetFocus
000110  e004              B        |L1.284|
                  |L1.274|
000112  f9350f4c          LDRSH    r0,[r5,#0x4c]!        ;516
000116  f7fffffe          BL       WM_SetFocusOnNextChild
00011a  8228              STRH     r0,[r5,#0x10]         ;516
                  |L1.284|
00011c  2101              MOVS     r1,#1                 ;518
00011e  4630              MOV      r0,r6                 ;518
000120  f7fffffe          BL       FRAMEWIN_SetActive
000124  2000              MOVS     r0,#0                 ;519
                  |L1.294|
000126  60a0              STR      r0,[r4,#8]            ;519
000128  e79c              B        |L1.100|
00012a  e001              B        |L1.304|
                  |L1.300|
00012c  e028              B        |L1.384|
00012e  e00c              B        |L1.330|
                  |L1.304|
000130  f895005a          LDRB     r0,[r5,#0x5a]         ;528
000134  0700              LSLS     r0,r0,#28             ;528
000136  d427              BMI      |L1.392|
000138  68a0              LDR      r0,[r4,#8]            ;532
00013a  6880              LDR      r0,[r0,#8]            ;532
00013c  b1f8              CBZ      r0,|L1.382|
00013e  7a00              LDRB     r0,[r0,#8]            ;534
000140  b1e8              CBZ      r0,|L1.382|
000142  4630              MOV      r0,r6                 ;535
000144  f7fffffe          BL       WM_SetFocus
000148  e01e              B        |L1.392|
                  |L1.330|
00014a  68a7              LDR      r7,[r4,#8]            ;535
00014c  b1bf              CBZ      r7,|L1.382|
00014e  f9b70002          LDRSH    r0,[r7,#2]            ;535
000152  4631              MOV      r1,r6                 ;535
000154  f7fffffe          BL       WM__IsAncestorOrSelf
000158  b120              CBZ      r0,|L1.356|
00015a  2101              MOVS     r1,#1                 ;535
00015c  4630              MOV      r0,r6                 ;535
00015e  f7fffffe          BL       _SetActive
000162  e011              B        |L1.392|
                  |L1.356|
000164  2100              MOVS     r1,#0                 ;535
000166  4630              MOV      r0,r6                 ;535
000168  f7fffffe          BL       _SetActive
00016c  f9b70000          LDRSH    r0,[r7,#0]            ;535
000170  4631              MOV      r1,r6                 ;535
000172  f7fffffe          BL       WM__IsAncestor
000176  b110              CBZ      r0,|L1.382|
000178  8838              LDRH     r0,[r7,#0]            ;535
00017a  f8a5005c          STRH     r0,[r5,#0x5c]         ;535
                  |L1.382|
00017e  e003              B        |L1.392|
                  |L1.384|
000180  f1050050          ADD      r0,r5,#0x50           ;545
000184  f7fffffe          BL       GUI_ALLOC_FreePtr
                  |L1.392|
000188  4621              MOV      r1,r4                 ;549
00018a  4630              MOV      r0,r6                 ;549
00018c  f7fffffe          BL       WIDGET_HandleActive
000190  2800              CMP      r0,#0                 ;549
000192  d08e              BEQ      |L1.178|
000194  4620              MOV      r0,r4                 ;552
000196  f7fffffe          BL       WM_DefaultProc
00019a  e763              B        |L1.100|
;;;554    
                          ENDP

                  |L1.412|
                          DCD      ||.data||

                          AREA ||i.FRAMEWIN_CreateEx||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_CreateEx PROC
;;;564    */
;;;565    FRAMEWIN_Handle FRAMEWIN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;566                                      int WinFlags, int ExFlags, int Id, const char* pTitle, WM_CALLBACK* cb)
;;;567    {
000004  b089              SUB      sp,sp,#0x24
000006  ae12              ADD      r6,sp,#0x48
;;;568      FRAMEWIN_Handle hObj;
;;;569      /* Create the window */
;;;570      GUI_LOCK();
;;;571      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
;;;572      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, FRAMEWIN_Callback,
000008  f8dd905c          LDR      r9,[sp,#0x5c]
00000c  e8960cb0          LDM      r6,{r4,r5,r7,r10,r11} ;567
000010  f4455680          ORR      r6,r5,#0x1000         ;571
000014  2548              MOVS     r5,#0x48
000016  f8dfc098          LDR      r12,|L2.176|
00001a  fa1ff886          UXTH     r8,r6
00001e  9503              STR      r5,[sp,#0xc]
000020  e88d1110          STM      sp,{r4,r8,r12}
000024  f7fffffe          BL       WM_CreateWindowAsChild
000028  0005              MOVS     r5,r0
;;;573                                    sizeof(FRAMEWIN_Obj) - sizeof(WM_Obj));
;;;574      if (hObj) {
00002a  d03c              BEQ      |L2.166|
;;;575        FRAMEWIN_Obj* pObj;
;;;576        POSITIONS Pos;
;;;577        pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4604              MOV      r4,r0
;;;578        /* init widget specific variables */
;;;579        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | FRAMEWIN_SF_TITLEVIS);
000032  2230              MOVS     r2,#0x30
000034  4651              MOV      r1,r10
000036  f7fffffe          BL       WIDGET__Init
;;;580        /* init member variables */
;;;581        FRAMEWIN_INIT_ID(pObj);
;;;582        pObj->Props = FRAMEWIN__DefaultProps;
00003a  2220              MOVS     r2,#0x20
00003c  491d              LDR      r1,|L2.180|
00003e  f1040028          ADD      r0,r4,#0x28
000042  f7fffffe          BL       __aeabi_memcpy4
;;;583        pObj->cb             = cb;
;;;584        pObj->Flags          = ExFlags;
000046  f8c49048          STR      r9,[r4,#0x48]
00004a  f8a4705a          STRH     r7,[r4,#0x5a]
;;;585        pObj->hFocussedChild = 0;
00004e  2700              MOVS     r7,#0
000050  f8a4705c          STRH     r7,[r4,#0x5c]
;;;586        pObj->hMenu          = 0;
000054  f8a4704e          STRH     r7,[r4,#0x4e]
;;;587        pObj->pFirstHook     = NULL;
;;;588        FRAMEWIN__CalcPositions(pObj, &Pos);
000058  a904              ADD      r1,sp,#0x10
00005a  4620              MOV      r0,r4
00005c  6667              STR      r7,[r4,#0x64]
00005e  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;589        pObj->hClient = WM_CreateWindowAsChild(Pos.rClient.x0,Pos.rClient.y0,
000062  4815              LDR      r0,|L2.184|
000064  f2417182          MOV      r1,#0x1782
000068  9703              STR      r7,[sp,#0xc]
00006a  9500              STR      r5,[sp,#0]
00006c  e9cd1001          STRD     r1,r0,[sp,#4]
000070  f9bd001a          LDRSH    r0,[sp,#0x1a]
000074  f9bd1016          LDRSH    r1,[sp,#0x16]
000078  f9bd2018          LDRSH    r2,[sp,#0x18]
00007c  1a43              SUBS     r3,r0,r1
00007e  f9bd0014          LDRSH    r0,[sp,#0x14]
000082  1c5b              ADDS     r3,r3,#1
000084  1a12              SUBS     r2,r2,r0
000086  1c52              ADDS     r2,r2,#1
000088  f7fffffe          BL       WM_CreateWindowAsChild
00008c  f8a4004c          STRH     r0,[r4,#0x4c]
;;;590                                               Pos.rClient.x1 - Pos.rClient.x0 +1,
;;;591                                               Pos.rClient.y1 - Pos.rClient.y0 +1,
;;;592                                               hObj, 
;;;593                                               WM_CF_ANCHOR_RIGHT | WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_TOP | WM_CF_ANCHOR_BOTTOM | WM_CF_SHOW | WM_CF_LATE_CLIP, 
;;;594                                               FRAMEWIN__cbClient, 0);
;;;595        /* Normally we disable memory devices for the frame window:
;;;596         * The frame window does not flicker, and not using memory devices is usually faster.
;;;597         * You can still use memory by explicitly specifying the flag
;;;598         */
;;;599        if ((WinFlags & (WM_CF_MEMDEV | (WM_CF_MEMDEV_ON_REDRAW))) == 0) {
000090  f2420004          MOV      r0,#0x2004
000094  4206              TST      r6,r0
000096  d102              BNE      |L2.158|
;;;600          WM_DisableMemdev(hObj);
000098  4628              MOV      r0,r5
00009a  f7fffffe          BL       WM_DisableMemdev
                  |L2.158|
;;;601        }
;;;602        FRAMEWIN_SetText(hObj, pTitle);
00009e  4659              MOV      r1,r11
0000a0  4628              MOV      r0,r5
0000a2  f7fffffe          BL       FRAMEWIN_SetText
                  |L2.166|
;;;603      }
;;;604      GUI_UNLOCK();
;;;605      return hObj;
;;;606    }
0000a6  b009              ADD      sp,sp,#0x24
0000a8  4628              MOV      r0,r5                 ;605
0000aa  e8bd8ff0          POP      {r4-r11,pc}
;;;607    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L2.176|
                          DCD      FRAMEWIN_Callback
                  |L2.180|
                          DCD      ||.data||+0x4
                  |L2.184|
                          DCD      FRAMEWIN__cbClient

                          AREA ||i.FRAMEWIN_SetActive||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetActive PROC
;;;668    */
;;;669    void FRAMEWIN_SetActive(FRAMEWIN_Handle hObj, int State) {
000000  2800              CMP      r0,#0
000002  d001              BEQ      |L3.8|
;;;670      if (hObj) {
;;;671        WM_LOCK();
;;;672        _SetActive(hObj, State);
000004  f7ffbffe          B.W      _SetActive
                  |L3.8|
;;;673        WM_UNLOCK();
;;;674      }
;;;675    }
000008  4770              BX       lr
;;;676    
                          ENDP


                          AREA ||i.FRAMEWIN_SetMoveable||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetMoveable PROC
;;;650    */
;;;651    void FRAMEWIN_SetMoveable(FRAMEWIN_Handle hObj, int State) {
000000  b510              PUSH     {r4,lr}
000002  460c              MOV      r4,r1
000004  2800              CMP      r0,#0
000006  d00a              BEQ      |L4.30|
;;;652      if (hObj) {
;;;653        FRAMEWIN_Obj* pObj;
;;;654        GUI_LOCK();
;;;655        pObj = FRAMEWIN_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;656        if (State) {
;;;657          pObj->Flags |= FRAMEWIN_CF_MOVEABLE;
;;;658        } else {
;;;659          pObj->Flags &= ~FRAMEWIN_CF_MOVEABLE;
00000c  f8301f5a          LDRH     r1,[r0,#0x5a]!
000010  b114              CBZ      r4,|L4.24|
000012  f0410110          ORR      r1,r1,#0x10           ;657
000016  e001              B        |L4.28|
                  |L4.24|
000018  f0210110          BIC      r1,r1,#0x10
                  |L4.28|
00001c  8001              STRH     r1,[r0,#0]
                  |L4.30|
;;;660        }
;;;661        GUI_UNLOCK();
;;;662      }
;;;663    }
00001e  bd10              POP      {r4,pc}
;;;664    
                          ENDP


                          AREA ||i.FRAMEWIN_SetText||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetText PROC
;;;617    */
;;;618    void FRAMEWIN_SetText(FRAMEWIN_Handle hObj, const char* s) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
000006  d00c              BEQ      |L5.34|
;;;619      if (hObj) {
;;;620        FRAMEWIN_Obj* pObj;
;;;621        GUI_LOCK();
;;;622        pObj = FRAMEWIN_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;623        if (GUI__SetText(&pObj->hText, s)) {
00000c  4629              MOV      r1,r5
00000e  3050              ADDS     r0,r0,#0x50
000010  f7fffffe          BL       GUI__SetText
000014  2800              CMP      r0,#0
000016  d004              BEQ      |L5.34|
;;;624          FRAMEWIN_Invalidate(hObj);
000018  4620              MOV      r0,r4
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f7ffbffe          B.W      WM_InvalidateWindow
                  |L5.34|
;;;625        }
;;;626        GUI_UNLOCK();
;;;627      }
;;;628    }
000022  bd70              POP      {r4-r6,pc}
;;;629    
                          ENDP


                          AREA ||i.FRAMEWIN_SetTextAlign||, CODE, READONLY, ALIGN=1

                  FRAMEWIN_SetTextAlign PROC
;;;633    */
;;;634    void FRAMEWIN_SetTextAlign(FRAMEWIN_Handle hObj, int Align) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d00c              BEQ      |L6.34|
;;;635      if (hObj) {
;;;636        FRAMEWIN_Obj* pObj;
;;;637        GUI_LOCK();
;;;638        pObj = FRAMEWIN_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;639        if (pObj->Props.TextAlign != Align) {
00000c  f9b01046          LDRSH    r1,[r0,#0x46]
000010  42a1              CMP      r1,r4
000012  d006              BEQ      |L6.34|
;;;640          pObj->Props.TextAlign = Align;
000014  f8a04046          STRH     r4,[r0,#0x46]
;;;641          FRAMEWIN_Invalidate(hObj);
000018  4628              MOV      r0,r5
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f7ffbffe          B.W      WM_InvalidateWindow
                  |L6.34|
;;;642        }
;;;643        GUI_UNLOCK();
;;;644      }
;;;645    }
000022  bd70              POP      {r4-r6,pc}
;;;646    
                          ENDP


                          AREA ||i.FRAMEWIN__CalcPositions||, CODE, READONLY, ALIGN=2

                  FRAMEWIN__CalcPositions PROC
;;;381    */
;;;382    void FRAMEWIN__CalcPositions(FRAMEWIN_Obj* pObj, POSITIONS* pPos) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;383      WM_HWIN hChild;
;;;384      WM_Obj* pChild;
;;;385      int TitleHeight;
;;;386      int MenuHeight = 0;
000004  f04f0800          MOV      r8,#0
000008  460c              MOV      r4,r1                 ;382
00000a  4606              MOV      r6,r0                 ;382
;;;387      int IBorderSize = 0;
00000c  46c1              MOV      r9,r8
;;;388      int BorderSize;
;;;389      int xsize, ysize;
;;;390      int x0, x1, y0;
;;;391      BorderSize = pObj->Props.BorderSize;
00000e  f9b05042          LDRSH    r5,[r0,#0x42]
;;;392      xsize = WM__GetWindowSizeX(&pObj->Widget.Win);
000012  f7fffffe          BL       WM__GetWindowSizeX
000016  4683              MOV      r11,r0
;;;393      ysize = WM__GetWindowSizeY(&pObj->Widget.Win);
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       WM__GetWindowSizeY
00001e  4682              MOV      r10,r0
;;;394      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
000020  f8960026          LDRB     r0,[r6,#0x26]
000024  0680              LSLS     r0,r0,#26
000026  d501              BPL      |L7.44|
;;;395        IBorderSize = pObj->Props.IBorderSize;
000028  f9b69044          LDRSH    r9,[r6,#0x44]
                  |L7.44|
;;;396      }
;;;397      TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
000032  4607              MOV      r7,r0
;;;398      if (pObj->hMenu) {
000034  f9b6004e          LDRSH    r0,[r6,#0x4e]
000038  b110              CBZ      r0,|L7.64|
;;;399        MenuHeight = WM_GetWindowSizeY(pObj->hMenu);
00003a  f7fffffe          BL       WM_GetWindowSizeY
00003e  4680              MOV      r8,r0
                  |L7.64|
;;;400      }
;;;401      pPos->TitleHeight = TitleHeight;
000040  8027              STRH     r7,[r4,#0]
;;;402      pPos->MenuHeight  = MenuHeight;
000042  f8a48002          STRH     r8,[r4,#2]
;;;403      /* Set object properties accordingly */
;;;404      pPos->rClient.x0  =         BorderSize;
;;;405      pPos->rClient.x1  = xsize - BorderSize - 1;
000046  ebab0005          SUB      r0,r11,r5
;;;406      pPos->rClient.y0  =         BorderSize + IBorderSize + TitleHeight + MenuHeight;
00004a  eb050109          ADD      r1,r5,r9
00004e  80a5              STRH     r5,[r4,#4]            ;404
000050  1e40              SUBS     r0,r0,#1              ;405
000052  19ca              ADDS     r2,r1,r7
000054  8120              STRH     r0,[r4,#8]            ;405
000056  eb020108          ADD      r1,r2,r8
00005a  80e1              STRH     r1,[r4,#6]
;;;407      pPos->rClient.y1  = ysize - BorderSize - 1;
00005c  ebaa0105          SUB      r1,r10,r5
000060  1e49              SUBS     r1,r1,#1
000062  8161              STRH     r1,[r4,#0xa]
;;;408      /* Calculate title rect */
;;;409      pPos->rTitleText.x0 =         BorderSize;
000064  81a5              STRH     r5,[r4,#0xc]
;;;410      pPos->rTitleText.x1 = xsize - BorderSize - 1;
000066  8220              STRH     r0,[r4,#0x10]
;;;411      pPos->rTitleText.y0 =         BorderSize;
;;;412      pPos->rTitleText.y1 =         BorderSize + TitleHeight - 1;
000068  19e8              ADDS     r0,r5,r7
00006a  81e5              STRH     r5,[r4,#0xe]          ;411
00006c  1e40              SUBS     r0,r0,#1
00006e  8260              STRH     r0,[r4,#0x12]
;;;413      /* Iterate over all children */
;;;414      for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
000070  f9b60018          LDRSH    r0,[r6,#0x18]
000074  e023              B        |L7.190|
;;;415        pChild = WM_H2P(hChild);
000076  bf00              NOP      
                  |L7.120|
000078  f7fffffe          BL       GUI_ALLOC_h2p
;;;416        x0 = pChild->Rect.x0 - pObj->Widget.Win.Rect.x0;
00007c  f9b02000          LDRSH    r2,[r0,#0]
000080  f9b61000          LDRSH    r1,[r6,#0]
;;;417        x1 = pChild->Rect.x1 - pObj->Widget.Win.Rect.x0;
000084  f9b03004          LDRSH    r3,[r0,#4]
000088  1a52              SUBS     r2,r2,r1              ;416
00008a  1a59              SUBS     r1,r3,r1
;;;418        y0 = pChild->Rect.y0 - pObj->Widget.Win.Rect.y0;
00008c  f9b03002          LDRSH    r3,[r0,#2]
000090  f9b67002          LDRSH    r7,[r6,#2]
000094  1bdb              SUBS     r3,r3,r7
;;;419        if (y0 == BorderSize) {
000096  42ab              CMP      r3,r5
000098  d10f              BNE      |L7.186|
;;;420          if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
00009a  7f03              LDRB     r3,[r0,#0x1c]
00009c  061b              LSLS     r3,r3,#24
00009e  d506              BPL      |L7.174|
;;;421            if (x0 <= pPos->rTitleText.x1) {
0000a0  f9b41010          LDRSH    r1,[r4,#0x10]
0000a4  4291              CMP      r1,r2
0000a6  db08              BLT      |L7.186|
0000a8  1e52              SUBS     r2,r2,#1
;;;422              pPos->rTitleText.x1 = x0 - 1;
0000aa  8222              STRH     r2,[r4,#0x10]
0000ac  e005              B        |L7.186|
                  |L7.174|
;;;423            }
;;;424          } else {
;;;425            if (x1 >= pPos->rTitleText.x0) {
0000ae  f9b4200c          LDRSH    r2,[r4,#0xc]
0000b2  428a              CMP      r2,r1
0000b4  dc01              BGT      |L7.186|
0000b6  1c49              ADDS     r1,r1,#1
;;;426              pPos->rTitleText.x0 = x1 + 1;
0000b8  81a1              STRH     r1,[r4,#0xc]
                  |L7.186|
0000ba  f9b0001a          LDRSH    r0,[r0,#0x1a]         ;414
                  |L7.190|
0000be  2800              CMP      r0,#0                 ;414
0000c0  d1da              BNE      |L7.120|
;;;427            }
;;;428          }
;;;429        }
;;;430      }
;;;431    }
0000c2  e8bd9ff0          POP      {r4-r12,pc}
;;;432    
                          ENDP


                          AREA ||i.FRAMEWIN__CalcTitleHeight||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__CalcTitleHeight PROC
;;;366    */
;;;367    int FRAMEWIN__CalcTitleHeight(FRAMEWIN_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4601              MOV      r1,r0
;;;368      int r = 0;
000004  2000              MOVS     r0,#0
;;;369      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
000006  f8912026          LDRB     r2,[r1,#0x26]
00000a  0692              LSLS     r2,r2,#26
00000c  d507              BPL      |L8.30|
;;;370        r = pObj->Props.TitleHeight;
00000e  f9b10040          LDRSH    r0,[r1,#0x40]
;;;371        if (r == 0) {
000012  2800              CMP      r0,#0
000014  d103              BNE      |L8.30|
;;;372          r = 2 + GUI_GetYSizeOfFont(pObj->Props.pFont);
000016  6a88              LDR      r0,[r1,#0x28]
000018  f7fffffe          BL       GUI_GetYSizeOfFont
00001c  1c80              ADDS     r0,r0,#2
                  |L8.30|
;;;373        }
;;;374      }
;;;375      return r;
;;;376    }
00001e  bd10              POP      {r4,pc}
;;;377    
                          ENDP


                          AREA ||i.FRAMEWIN__UpdatePositions||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__UpdatePositions PROC
;;;436    */
;;;437    void FRAMEWIN__UpdatePositions(FRAMEWIN_Obj* pObj) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;438      /* Move client window accordingly */
;;;439      if (pObj->hClient || pObj->hMenu) {
000004  f8b0004c          LDRH     r0,[r0,#0x4c]
000008  b086              SUB      sp,sp,#0x18           ;437
00000a  b918              CBNZ     r0,|L9.20|
00000c  f8b4004e          LDRH     r0,[r4,#0x4e]
000010  2800              CMP      r0,#0
000012  d029              BEQ      |L9.104|
                  |L9.20|
;;;440        POSITIONS Pos;
;;;441        FRAMEWIN__CalcPositions(pObj, &Pos);
000014  4669              MOV      r1,sp
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;442        if (pObj->hClient) {
00001c  f9b4004c          LDRSH    r0,[r4,#0x4c]
000020  b1a8              CBZ      r0,|L9.78|
;;;443          WM_MoveChildTo(pObj->hClient, Pos.rClient.x0, Pos.rClient.y0);
000022  f9bd2006          LDRSH    r2,[sp,#6]
000026  f9bd1004          LDRSH    r1,[sp,#4]
00002a  f7fffffe          BL       WM_MoveChildTo
;;;444          WM_SetSize(pObj->hClient, 
00002e  f9bd000a          LDRSH    r0,[sp,#0xa]
000032  f9bd1006          LDRSH    r1,[sp,#6]
000036  1a42              SUBS     r2,r0,r1
000038  f9bd0008          LDRSH    r0,[sp,#8]
00003c  f9bd1004          LDRSH    r1,[sp,#4]
000040  1c52              ADDS     r2,r2,#1
000042  1a41              SUBS     r1,r0,r1
000044  f9b4004c          LDRSH    r0,[r4,#0x4c]
000048  1c49              ADDS     r1,r1,#1
00004a  f7fffffe          BL       WM_SetSize
                  |L9.78|
;;;445                     Pos.rClient.x1 - Pos.rClient.x0 + 1, 
;;;446                     Pos.rClient.y1 - Pos.rClient.y0 + 1);
;;;447        }
;;;448        if (pObj->hMenu) {
00004e  f9b4004e          LDRSH    r0,[r4,#0x4e]
000052  2800              CMP      r0,#0
000054  d008              BEQ      |L9.104|
;;;449          WM_MoveChildTo(pObj->hMenu, Pos.rClient.x0, Pos.rClient.y0 - Pos.MenuHeight);
000056  f9bd1006          LDRSH    r1,[sp,#6]
00005a  f9bd2002          LDRSH    r2,[sp,#2]
00005e  1a8a              SUBS     r2,r1,r2
000060  f9bd1004          LDRSH    r1,[sp,#4]
000064  f7fffffe          BL       WM_MoveChildTo
                  |L9.104|
;;;450        }
;;;451      }
;;;452    }
000068  b006              ADD      sp,sp,#0x18
00006a  bd10              POP      {r4,pc}
;;;453    
                          ENDP


                          AREA ||i.FRAMEWIN__cbClient||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__cbClient PROC
;;;270    */
;;;271    static void FRAMEWIN__cbClient(WM_MESSAGE* pMsg) {
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;272      WM_HWIN hWin, hParent;
;;;273      FRAMEWIN_Obj * pObj;
;;;274      WM_CALLBACK * cb;
;;;275    
;;;276      hWin    = pMsg->hWin;
000004  f9b06004          LDRSH    r6,[r0,#4]
000008  4604              MOV      r4,r0                 ;271
;;;277      hParent = WM_GetParent(pMsg->hWin);
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       WM_GetParent
000010  4680              MOV      r8,r0
;;;278      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hParent); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000012  f7fffffe          BL       GUI_ALLOC_h2p
000016  4605              MOV      r5,r0
;;;279      cb = pObj->cb;
;;;280      switch (pMsg->MsgId) {
000018  6c87              LDR      r7,[r0,#0x48]
00001a  6820              LDR      r0,[r4,#0]
00001c  2817              CMP      r0,#0x17
00001e  d05d              BEQ      |L10.220|
000020  dc08              BGT      |L10.52|
000022  280e              CMP      r0,#0xe
000024  d03c              BEQ      |L10.160|
000026  280f              CMP      r0,#0xf
000028  d00b              BEQ      |L10.66|
00002a  2814              CMP      r0,#0x14
00002c  d056              BEQ      |L10.220|
00002e  2815              CMP      r0,#0x15
000030  d13f              BNE      |L10.178|
000032  e053              B        |L10.220|
                  |L10.52|
000034  281e              CMP      r0,#0x1e
000036  d019              BEQ      |L10.108|
000038  281f              CMP      r0,#0x1f
00003a  d02a              BEQ      |L10.146|
00003c  2822              CMP      r0,#0x22
00003e  d138              BNE      |L10.178|
000040  e04a              B        |L10.216|
                  |L10.66|
;;;281      case WM_PAINT:
;;;282        if (pObj->Props.ClientColor != GUI_INVALID_COLOR) {
000042  6be8              LDR      r0,[r5,#0x3c]
000044  f06f4170          MVN      r1,#0xf0000000
000048  4288              CMP      r0,r1
00004a  d003              BEQ      |L10.84|
;;;283          LCD_SetBkColor(pObj->Props.ClientColor);
00004c  f7fffffe          BL       LCD_SetBkColor
;;;284          GUI_Clear();
000050  f7fffffe          BL       GUI_Clear
                  |L10.84|
;;;285        }
;;;286        /* Give the user callback  a chance to draw.
;;;287         * Note that we can not run into the bottom part, as this passes the parents handle
;;;288         */
;;;289        if (cb) {
000054  2f00              CMP      r7,#0
000056  d007              BEQ      |L10.104|
000058  e8940007          LDM      r4,{r0-r2}
00005c  e88d0007          STM      sp,{r0-r2}
;;;290    	    WM_MESSAGE Msg;
;;;291          Msg      = *pMsg;
;;;292          Msg.hWin = hWin;
000060  f8ad6004          STRH     r6,[sp,#4]
;;;293          (*cb)(&Msg);
000064  4668              MOV      r0,sp
000066  47b8              BLX      r7
                  |L10.104|
;;;294        }
;;;295        return;
;;;296      case WM_SET_FOCUS:
;;;297        if (pMsg->Data.v) {     /* Focus received */
;;;298          if (pObj->hFocussedChild && (pObj->hFocussedChild != hWin)) {
;;;299            WM_SetFocus(pObj->hFocussedChild);
;;;300          } else {
;;;301            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;302          }
;;;303          pMsg->Data.v = 0;     /* Focus change accepted */
;;;304        }
;;;305        return;
;;;306      case WM_GET_ACCEPT_FOCUS:
;;;307        WIDGET_HandleActive(hParent, pMsg);
;;;308        return;
;;;309      case WM_KEY:
;;;310        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;311          int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;312          switch (Key) {
;;;313          case GUI_KEY_BACKTAB:
;;;314            pObj->hFocussedChild = WM_SetFocusOnPrevChild(hWin);
;;;315            return;
;;;316          case GUI_KEY_TAB:
;;;317            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;318            return;
;;;319          }
;;;320        }
;;;321        break;	                       /* Send to parent by not doing anything */
;;;322      case WM_GET_BKCOLOR:
;;;323        pMsg->Data.Color = pObj->Props.ClientColor;
;;;324        return;                       /* Message handled */
;;;325      case WM_GET_INSIDE_RECT:        /* This should not be passed to parent ... (We do not want parents coordinates)*/
;;;326      case WM_GET_ID:                 /* This should not be passed to parent ... (Possible recursion problem)*/
;;;327      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;328        WM_DefaultProc(pMsg);
;;;329        return;                       /* We are done ! */
;;;330      }
;;;331      /* Call user callback. Note that the user callback gets the handle of the Framewindow itself, NOT the Client. */
;;;332      if (cb) {
;;;333        pMsg->hWin = hParent;
;;;334        (*cb)(pMsg);
;;;335      } else {
;;;336        WM_DefaultProc(pMsg);
;;;337      }
;;;338    }
000068  e8bd83fe          POP      {r1-r9,pc}
                  |L10.108|
00006c  68a0              LDR      r0,[r4,#8]            ;297
00006e  2800              CMP      r0,#0                 ;297
000070  d0fa              BEQ      |L10.104|
000072  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;298
000076  b120              CBZ      r0,|L10.130|
000078  42b0              CMP      r0,r6                 ;298
00007a  d002              BEQ      |L10.130|
00007c  f7fffffe          BL       WM_SetFocus
000080  e004              B        |L10.140|
                  |L10.130|
000082  4630              MOV      r0,r6                 ;301
000084  f7fffffe          BL       WM_SetFocusOnNextChild
000088  f8a5005c          STRH     r0,[r5,#0x5c]         ;301
                  |L10.140|
00008c  2000              MOVS     r0,#0                 ;303
                  |L10.142|
00008e  60a0              STR      r0,[r4,#8]            ;303
000090  e7ea              B        |L10.104|
                  |L10.146|
000092  b003              ADD      sp,sp,#0xc            ;307
000094  4621              MOV      r1,r4                 ;307
000096  4640              MOV      r0,r8                 ;307
000098  e8bd43f0          POP      {r4-r9,lr}            ;307
00009c  f7ffbffe          B.W      WIDGET_HandleActive
                  |L10.160|
0000a0  68a0              LDR      r0,[r4,#8]            ;310
0000a2  6841              LDR      r1,[r0,#4]            ;310
0000a4  2900              CMP      r1,#0                 ;310
0000a6  dd04              BLE      |L10.178|
0000a8  6800              LDR      r0,[r0,#0]            ;311
0000aa  2809              CMP      r0,#9                 ;312
0000ac  d00e              BEQ      |L10.204|
0000ae  280a              CMP      r0,#0xa               ;312
0000b0  d008              BEQ      |L10.196|
                  |L10.178|
0000b2  b19f              CBZ      r7,|L10.220|
0000b4  f8a48004          STRH     r8,[r4,#4]            ;333
0000b8  b003              ADD      sp,sp,#0xc            ;334
0000ba  4620              MOV      r0,r4                 ;334
0000bc  46bc              MOV      r12,r7                ;334
0000be  e8bd43f0          POP      {r4-r9,lr}            ;334
0000c2  4760              BX       r12                   ;334
                  |L10.196|
0000c4  4630              MOV      r0,r6                 ;314
0000c6  f7fffffe          BL       WM_SetFocusOnPrevChild
0000ca  e002              B        |L10.210|
                  |L10.204|
0000cc  4630              MOV      r0,r6                 ;317
0000ce  f7fffffe          BL       WM_SetFocusOnNextChild
                  |L10.210|
0000d2  f8a5005c          STRH     r0,[r5,#0x5c]         ;317
0000d6  e7c7              B        |L10.104|
                  |L10.216|
0000d8  6be8              LDR      r0,[r5,#0x3c]         ;324
0000da  e7d8              B        |L10.142|
                  |L10.220|
0000dc  4620              MOV      r0,r4                 ;336
0000de  e8bd43fe          POP      {r1-r9,lr}            ;336
0000e2  f7ffbffe          B.W      WM_DefaultProc
;;;339    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;185    */
;;;186    static void _Paint(FRAMEWIN_Obj* pObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4604              MOV      r4,r0
;;;187      WM_HWIN hWin = WM_GetActiveWindow();
000008  f7fffffe          BL       WM_GetActiveWindow
00000c  4606              MOV      r6,r0
;;;188      const char* pText = NULL;
00000e  f04f0b00          MOV      r11,#0
;;;189      int xsize = WM_GetWindowSizeX(hWin);
000012  f7fffffe          BL       WM_GetWindowSizeX
000016  4605              MOV      r5,r0
;;;190      int ysize = WM_GetWindowSizeY(hWin);
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       WM_GetWindowSizeY
00001e  4606              MOV      r6,r0
;;;191      int BorderSize = pObj->Props.BorderSize;
000020  f9b48042          LDRSH    r8,[r4,#0x42]
;;;192      int y0, Index;
;;;193      POSITIONS Pos;
;;;194      GUI_RECT r, rText;
;;;195    
;;;196      /* Perform computations */
;;;197      FRAMEWIN__CalcPositions(pObj, &Pos);
000024  a902              ADD      r1,sp,#8
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;198      Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
00002c  f894005a          LDRB     r0,[r4,#0x5a]
000030  f3c007c0          UBFX     r7,r0,#3,#1
;;;199    
;;;200      if (pObj->hText) {
000034  f9b40050          LDRSH    r0,[r4,#0x50]
000038  b110              CBZ      r0,|L11.64|
;;;201        pText = (const char*) GUI_ALLOC_h2p(pObj->hText);
00003a  f7fffffe          BL       GUI_ALLOC_h2p
00003e  4683              MOV      r11,r0
                  |L11.64|
;;;202      }
;;;203      r.x0 = Pos.rClient.x0;
000040  f8bd000c          LDRH     r0,[sp,#0xc]
000044  f8ad0000          STRH     r0,[sp,#0]
;;;204      r.x1 = Pos.rClient.x1;
000048  f8bd0010          LDRH     r0,[sp,#0x10]
00004c  f8ad0004          STRH     r0,[sp,#4]
;;;205      r.y0 = Pos.rTitleText.y0;
000050  f8bd0016          LDRH     r0,[sp,#0x16]
000054  f8ad0002          STRH     r0,[sp,#2]
;;;206      r.y1 = Pos.rTitleText.y1;
000058  1c40              ADDS     r0,r0,#1
;;;207      Pos.rTitleText.y0++;
00005a  f8ad0016          STRH     r0,[sp,#0x16]
;;;208      Pos.rTitleText.x0++;
00005e  f8bd0014          LDRH     r0,[sp,#0x14]
000062  f8bd101a          LDRH     r1,[sp,#0x1a]         ;206
000066  1c40              ADDS     r0,r0,#1
000068  f8ad1006          STRH     r1,[sp,#6]            ;206
00006c  f8ad0014          STRH     r0,[sp,#0x14]
;;;209      Pos.rTitleText.x1--;
000070  f8bd0018          LDRH     r0,[sp,#0x18]
000074  1e40              SUBS     r0,r0,#1
000076  f8ad0018          STRH     r0,[sp,#0x18]
;;;210      GUI_SetFont(pObj->Props.pFont);
00007a  6aa0              LDR      r0,[r4,#0x28]
00007c  f7fffffe          BL       GUI_SetFont
;;;211      GUI__CalcTextRect(pText, &Pos.rTitleText, &rText, pObj->Props.TextAlign);
000080  f9b43046          LDRSH    r3,[r4,#0x46]
000084  a905              ADD      r1,sp,#0x14
000086  aa08              ADD      r2,sp,#0x20
000088  4658              MOV      r0,r11
00008a  9107              STR      r1,[sp,#0x1c]
00008c  f7fffffe          BL       GUI__CalcTextRect
;;;212      y0 = Pos.TitleHeight + BorderSize;
000090  f9bd1008          LDRSH    r1,[sp,#8]
;;;213    
;;;214      /* Perform drawing operations */
;;;215      WM_ITERATE_START(NULL) {
000094  2000              MOVS     r0,#0
000096  eb010a08          ADD      r10,r1,r8             ;212
00009a  f7fffffe          BL       WM__InitIVRSearch
00009e  2800              CMP      r0,#0
0000a0  d044              BEQ      |L11.300|
;;;216        /* Draw Title */
;;;217        LCD_SetBkColor(pObj->Props.aBarColor[Index]);
;;;218        LCD_SetColor(pObj->Props.aTextColor[Index]);
;;;219        WIDGET__FillStringInRect(pText, &r, &Pos.rTitleText, &rText);
;;;220        /* Draw Frame */
;;;221        LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
;;;222        GUI_FillRect(0, 0, xsize-1, BorderSize-1);
;;;223    	  GUI_FillRect(0, 0, Pos.rClient.x0-1, ysize-1);
;;;224    	  GUI_FillRect(Pos.rClient.x1+1, 0, xsize-1, ysize-1);
;;;225        GUI_FillRect(0, Pos.rClient.y1+1, xsize-1, ysize-1);
;;;226        GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
0000a2  f1aa0901          SUB      r9,r10,#1
0000a6  eb040787          ADD      r7,r4,r7,LSL #2       ;217
                  |L11.170|
0000aa  6af8              LDR      r0,[r7,#0x2c]         ;217
0000ac  f7fffffe          BL       LCD_SetBkColor
0000b0  6b78              LDR      r0,[r7,#0x34]         ;218
0000b2  f7fffffe          BL       LCD_SetColor
0000b6  ab08              ADD      r3,sp,#0x20           ;219
0000b8  4669              MOV      r1,sp                 ;219
0000ba  4658              MOV      r0,r11                ;219
0000bc  9a07              LDR      r2,[sp,#0x1c]         ;219
0000be  f7fffffe          BL       WIDGET__FillStringInRect
0000c2  481c              LDR      r0,|L11.308|
0000c4  f7fffffe          BL       LCD_SetColor
0000c8  2100              MOVS     r1,#0                 ;222
0000ca  f1a80301          SUB      r3,r8,#1              ;222
0000ce  1e6a              SUBS     r2,r5,#1              ;222
0000d0  4608              MOV      r0,r1                 ;222
0000d2  f7fffffe          BL       GUI_FillRect
0000d6  f9bd200c          LDRSH    r2,[sp,#0xc]          ;223
0000da  2100              MOVS     r1,#0                 ;223
0000dc  1e73              SUBS     r3,r6,#1              ;223
0000de  4608              MOV      r0,r1                 ;223
0000e0  1e52              SUBS     r2,r2,#1              ;223
0000e2  f7fffffe          BL       GUI_FillRect
0000e6  f9bd0010          LDRSH    r0,[sp,#0x10]         ;224
0000ea  1e73              SUBS     r3,r6,#1              ;224
0000ec  1e6a              SUBS     r2,r5,#1              ;224
0000ee  2100              MOVS     r1,#0                 ;224
0000f0  1c40              ADDS     r0,r0,#1              ;224
0000f2  f7fffffe          BL       GUI_FillRect
0000f6  f9bd1012          LDRSH    r1,[sp,#0x12]         ;225
0000fa  1e73              SUBS     r3,r6,#1              ;225
0000fc  1e6a              SUBS     r2,r5,#1              ;225
0000fe  2000              MOVS     r0,#0                 ;225
000100  1c49              ADDS     r1,r1,#1              ;225
000102  f7fffffe          BL       GUI_FillRect
000106  f9b41044          LDRSH    r1,[r4,#0x44]
00010a  1e6a              SUBS     r2,r5,#1
00010c  eb010309          ADD      r3,r1,r9
000110  4651              MOV      r1,r10
000112  2000              MOVS     r0,#0
000114  f7fffffe          BL       GUI_FillRect
;;;227        /* Draw the 3D effect (if configured) */
;;;228        if (pObj->Props.BorderSize >= 2) {
000118  f9b40042          LDRSH    r0,[r4,#0x42]
00011c  2802              CMP      r0,#2
00011e  db01              BLT      |L11.292|
;;;229          WIDGET_EFFECT_3D_DrawUp();  /* pObj->Widget.pEffect->pfDrawUp(); */
000120  f7fffffe          BL       WIDGET_EFFECT_3D_DrawUp
                  |L11.292|
;;;230        }
;;;231    
;;;232      } WM_ITERATE_END();
000124  f7fffffe          BL       WM__GetNextIVR
000128  2800              CMP      r0,#0
00012a  d1be              BNE      |L11.170|
                  |L11.300|
;;;233    
;;;234    
;;;235    }
00012c  b00b              ADD      sp,sp,#0x2c
00012e  e8bd8ff0          POP      {r4-r11,pc}
;;;236    
                          ENDP

000132  0000              DCW      0x0000
                  |L11.308|
                          DCD      0x00aaaaaa

                          AREA ||i._SetActive||, CODE, READONLY, ALIGN=1

                  _SetActive PROC
;;;135    */
;;;136    static void _SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
;;;137      FRAMEWIN_Obj* pObj;
;;;138      pObj = FRAMEWIN_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
;;;139      if        (State && !(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;140        pObj->Flags |= FRAMEWIN_CF_ACTIVE;
;;;141        FRAMEWIN_Invalidate(hObj);
;;;142      } else if (!State && (pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00000a  f8b0105a          LDRH     r1,[r0,#0x5a]
00000e  ea4f7201          LSL      r2,r1,#28
000012  b124              CBZ      r4,|L12.30|
000014  2a00              CMP      r2,#0                 ;139
000016  db0d              BLT      |L12.52|
000018  f0410108          ORR      r1,r1,#8              ;140
00001c  e003              B        |L12.38|
                  |L12.30|
00001e  2a00              CMP      r2,#0
000020  da08              BGE      |L12.52|
;;;143        pObj->Flags &= ~FRAMEWIN_CF_ACTIVE;
000022  f0210108          BIC      r1,r1,#8
                  |L12.38|
000026  f8a0105a          STRH     r1,[r0,#0x5a]
;;;144        FRAMEWIN_Invalidate(hObj);
00002a  4628              MOV      r0,r5
00002c  e8bd4070          POP      {r4-r6,lr}
000030  f7ffbffe          B.W      WM_InvalidateWindow
                  |L12.52|
;;;145      }
;;;146    }
000034  bd70              POP      {r4-r6,pc}
;;;147    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  FRAMEWIN__MinVisibility
000000  0005              DCW      0x0005
000002  0000              DCB      0x00,0x00
                  FRAMEWIN__DefaultProps
                          DCD      GUI_Font8_1
                          DCD      0x00404040
                          DCD      0x00ff0000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
00001c  00000003          DCW      0x0000,0x0003
000020  00010000          DCW      0x0001,0x0000
