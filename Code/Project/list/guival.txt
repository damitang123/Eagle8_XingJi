; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guival.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guival.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUIVal.c]
                          THUMB

                          AREA ||i.GUI_DispDec||, CODE, READONLY, ALIGN=1

                  GUI_DispDec PROC
;;;95     */
;;;96     void GUI_DispDec(I32 v, U8 Len) {
000000  2200              MOVS     r2,#0
;;;97       GUI_DispDecShift(v, Len,0);
000002  f7ffbffe          B.W      GUI_DispDecShift
;;;98     }
;;;99     
                          ENDP


                          AREA ||i.GUI_DispDecAt||, CODE, READONLY, ALIGN=1

                  GUI_DispDecAt PROC
;;;103    */
;;;104    void GUI_DispDecAt(I32 v, I16P x, I16P y, U8 Len) {
000000  b57f              PUSH     {r0-r6,lr}
000002  461e              MOV      r6,r3
000004  4614              MOV      r4,r2
000006  460d              MOV      r5,r1
;;;105    	char ac[12];
;;;106    	char* s = ac;
000008  f8cdd00c          STR      sp,[sp,#0xc]
;;;107      GUI_AddDecShift(v, Len, 0, &s);
00000c  ab03              ADD      r3,sp,#0xc
00000e  2200              MOVS     r2,#0
000010  4631              MOV      r1,r6
000012  f7fffffe          BL       GUI_AddDecShift
;;;108      GUI_DispStringAt(ac, x, y);
000016  4622              MOV      r2,r4
000018  4629              MOV      r1,r5
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       GUI_DispStringAt
;;;109    }
000020  bd7f              POP      {r0-r6,pc}
;;;110    
                          ENDP


                          AREA ||i.GUI_DispDecMin||, CODE, READONLY, ALIGN=1

                  GUI_DispDecMin PROC
;;;56     */
;;;57     void GUI_DispDecMin(I32 v) {
000000  b51f              PUSH     {r0-r4,lr}
;;;58     	char ac[12];
;;;59     	char* s = ac;
;;;60       GUI_AddDecMin(v, &s);
000002  a903              ADD      r1,sp,#0xc
000004  f8cdd00c          STR      sp,[sp,#0xc]          ;59
000008  f7fffffe          BL       GUI_AddDecMin
;;;61       GUI_DispString(ac);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI_DispString
;;;62     }
000012  bd1f              POP      {r0-r4,pc}
;;;63     
                          ENDP


                          AREA ||i.GUI_DispDecShift||, CODE, READONLY, ALIGN=1

                  GUI_DispDecShift PROC
;;;33     */
;;;34     void GUI_DispDecShift(I32 v, U8 Len, U8 Shift) {
000000  b51f              PUSH     {r0-r4,lr}
;;;35     	char ac[12];
;;;36     	char* s = ac;
;;;37       GUI_AddDecShift(v, Len, Shift, &s);
000002  ab03              ADD      r3,sp,#0xc
000004  f8cdd00c          STR      sp,[sp,#0xc]          ;36
000008  f7fffffe          BL       GUI_AddDecShift
;;;38       GUI_DispString(ac);
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       GUI_DispString
;;;39     }
000012  bd1f              POP      {r0-r4,pc}
;;;40     
                          ENDP


                          AREA ||i.GUI_DispDecSpace||, CODE, READONLY, ALIGN=1

                  GUI_DispDecSpace PROC
;;;67     */
;;;68     void GUI_DispDecSpace(I32 v, U8 MaxDigits) {
000000  b57f              PUSH     {r0-r6,lr}
000002  0005              MOVS     r5,r0
;;;69     	char ac[12];
;;;70     	char* s = ac;
000004  a801              ADD      r0,sp,#4
000006  460c              MOV      r4,r1                 ;68
000008  9000              STR      r0,[sp,#0]            ;68
00000a  d506              BPL      |L5.26|
;;;71       U8 Len;
;;;72       if (v < 0) {
;;;73         v = GUI_AddSign(v, &s);
00000c  4669              MOV      r1,sp
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       GUI_AddSign
000014  1e64              SUBS     r4,r4,#1
000016  4605              MOV      r5,r0
;;;74         MaxDigits--;
000018  b2e4              UXTB     r4,r4
                  |L5.26|
;;;75       }
;;;76       Len = GUI_Long2Len(v);
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       GUI_Long2Len
000020  b2c1              UXTB     r1,r0
;;;77       while (Len++ < MaxDigits) {
;;;78         *s++ = ' ';
000022  2220              MOVS     r2,#0x20
000024  e003              B        |L5.46|
                  |L5.38|
000026  9800              LDR      r0,[sp,#0]
000028  f8002b01          STRB     r2,[r0],#1
00002c  9000              STR      r0,[sp,#0]
                  |L5.46|
00002e  4608              MOV      r0,r1                 ;77
000030  1c49              ADDS     r1,r1,#1              ;77
000032  b2c9              UXTB     r1,r1                 ;77
000034  42a0              CMP      r0,r4                 ;77
000036  d3f6              BCC      |L5.38|
;;;79       }
;;;80       GUI_AddDecMin(v, &s);
000038  4669              MOV      r1,sp
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       GUI_AddDecMin
;;;81       GUI_DispString(ac);
000040  a801              ADD      r0,sp,#4
000042  f7fffffe          BL       GUI_DispString
;;;82     }
000046  bd7f              POP      {r0-r6,pc}
;;;83     
                          ENDP


                          AREA ||i.GUI_DispSDec||, CODE, READONLY, ALIGN=1

                  GUI_DispSDec PROC
;;;87     */
;;;88     void GUI_DispSDec(I32 v, U8 Len) {
000000  2200              MOVS     r2,#0
;;;89       GUI_DispSDecShift(v,Len,0);
000002  f7ffbffe          B.W      GUI_DispSDecShift
;;;90     }
;;;91     
                          ENDP


                          AREA ||i.GUI_DispSDecShift||, CODE, READONLY, ALIGN=1

                  GUI_DispSDecShift PROC
;;;44     */
;;;45     void GUI_DispSDecShift(I32 v, U8 Len, U8 Shift) {
000000  b57f              PUSH     {r0-r6,lr}
000002  460c              MOV      r4,r1
000004  4615              MOV      r5,r2
;;;46     	char ac[12];
;;;47     	char* s = ac;
000006  f8cdd00c          STR      sp,[sp,#0xc]
;;;48       v = GUI_AddSign(v, &s);
00000a  a903              ADD      r1,sp,#0xc
00000c  f7fffffe          BL       GUI_AddSign
000010  1e64              SUBS     r4,r4,#1
;;;49       GUI_AddDecShift(v, --Len, Shift, &s);
000012  b2e1              UXTB     r1,r4
000014  ab03              ADD      r3,sp,#0xc
000016  462a              MOV      r2,r5
000018  f7fffffe          BL       GUI_AddDecShift
;;;50       GUI_DispString(ac);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       GUI_DispString
;;;51     }
000022  bd7f              POP      {r0-r6,pc}
;;;52     
                          ENDP

