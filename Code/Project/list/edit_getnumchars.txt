; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\edit_getnumchars.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edit_getnumchars.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\EDIT_GetNumChars.c]
                          THUMB

                          AREA ||i.EDIT_GetNumChars||, CODE, READONLY, ALIGN=1

                  EDIT_GetNumChars PROC
;;;34     */
;;;35     int EDIT_GetNumChars(EDIT_Handle hObj) {
000000  b510              PUSH     {r4,lr}
;;;36       int NumChars = 0;
000002  2400              MOVS     r4,#0
000004  b148              CBZ      r0,|L1.26|
;;;37       if (hObj) {
;;;38         EDIT_Obj* pObj;
;;;39         WM_LOCK();
;;;40         pObj = EDIT_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
;;;41         if (pObj->hpText) {
00000a  f9b00028          LDRSH    r0,[r0,#0x28]
00000e  b120              CBZ      r0,|L1.26|
;;;42           char * pText;
;;;43           pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
000010  f7fffffe          BL       GUI_ALLOC_h2p
;;;44           NumChars = GUI__GetNumChars(pText);
000014  f7fffffe          BL       GUI__GetNumChars
000018  4604              MOV      r4,r0
                  |L1.26|
;;;45         }
;;;46         WM_UNLOCK();
;;;47       }
;;;48       return NumChars;
00001a  4620              MOV      r0,r4
;;;49     }
00001c  bd10              POP      {r4,pc}
;;;50     
                          ENDP

