; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\slider.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\slider.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\SLIDER.c]
                          THUMB

                          AREA ||i.SLIDER_Callback||, CODE, READONLY, ALIGN=1

                  SLIDER_Callback PROC
;;;255    */
;;;256    void SLIDER_Callback (WM_MESSAGE *pMsg) {
000000  b570              PUSH     {r4-r6,lr}
;;;257      SLIDER_Handle hObj;
;;;258      SLIDER_Obj* pObj;
;;;259      hObj = pMsg->hWin;
000002  f9b05004          LDRSH    r5,[r0,#4]
000006  4604              MOV      r4,r0                 ;256
;;;260      pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4606              MOV      r6,r0
;;;261      /* Let widget handle the standard messages */
;;;262      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       WIDGET_HandleActive
000018  2800              CMP      r0,#0
00001a  d026              BEQ      |L1.106|
;;;263        return;
;;;264      }
;;;265      switch (pMsg->MsgId) {
00001c  6820              LDR      r0,[r4,#0]
00001e  280c              CMP      r0,#0xc
000020  d009              BEQ      |L1.54|
000022  280e              CMP      r0,#0xe
000024  d00d              BEQ      |L1.66|
000026  280f              CMP      r0,#0xf
000028  d11a              BNE      |L1.96|
;;;266      case WM_PAINT:
;;;267        GUI_DEBUG_LOG("SLIDER: _Callback(WM_PAINT)\n");
;;;268        _Paint(pObj, hObj);
00002a  4629              MOV      r1,r5
00002c  4630              MOV      r0,r6
00002e  e8bd4070          POP      {r4-r6,lr}
000032  f7ffbffe          B.W      _Paint
                  |L1.54|
;;;269        return;
;;;270      case WM_TOUCH:
;;;271        _OnTouch(hObj, pObj, pMsg);
000036  4622              MOV      r2,r4
000038  4631              MOV      r1,r6
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       _OnTouch
;;;272        break;
000040  e00e              B        |L1.96|
                  |L1.66|
000042  68a1              LDR      r1,[r4,#8]
;;;273      case WM_KEY:
;;;274        _OnKey(hObj, pMsg);
000044  4628              MOV      r0,r5
000046  e9d12100          LDRD     r2,r1,[r1,#0]
00004a  2900              CMP      r1,#0
00004c  dd08              BLE      |L1.96|
00004e  2a10              CMP      r2,#0x10
000050  d004              BEQ      |L1.92|
000052  2a12              CMP      r2,#0x12
000054  d104              BNE      |L1.96|
000056  f7fffffe          BL       SLIDER_Inc
00005a  e001              B        |L1.96|
                  |L1.92|
00005c  f7fffffe          BL       SLIDER_Dec
                  |L1.96|
;;;275        break;
;;;276      }
;;;277      WM_DefaultProc(pMsg);
000060  4620              MOV      r0,r4
000062  e8bd4070          POP      {r4-r6,lr}
000066  f7ffbffe          B.W      WM_DefaultProc
                  |L1.106|
;;;278    }
00006a  bd70              POP      {r4-r6,pc}
;;;279    
                          ENDP


                          AREA ||i.SLIDER_CreateEx||, CODE, READONLY, ALIGN=2

                  SLIDER_CreateEx PROC
;;;293    */
;;;294    SLIDER_Handle SLIDER_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;295                                  int WinFlags, int ExFlags, int Id)
;;;296    {
000004  f10d082c          ADD      r8,sp,#0x2c
000008  460c              MOV      r4,r1
00000a  e89800c2          LDM      r8,{r1,r6,r7}
;;;297      SLIDER_Handle hObj;
;;;298      /* Create the window */
;;;299      WM_LOCK();
;;;300      #if SLIDER_SUPPORT_TRANSPARENCY
;;;301        WinFlags |= WM_CF_HASTRANS;
00000e  b289              UXTH     r1,r1
;;;302      #endif
;;;303      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SLIDER_Callback, sizeof(SLIDER_Obj) - sizeof(WM_Obj));
000010  f0410101          ORR      r1,r1,#1
000014  9d0a              LDR      r5,[sp,#0x28]
000016  f04f0e2c          MOV      lr,#0x2c
00001a  f8dfc050          LDR      r12,|L2.108|
00001e  e9cd5100          STRD     r5,r1,[sp,#0]
000022  e9cdce02          STRD     r12,lr,[sp,#8]
000026  4621              MOV      r1,r4
000028  f7fffffe          BL       WM_CreateWindowAsChild
00002c  0005              MOVS     r5,r0
;;;304      if (hObj) {
00002e  d019              BEQ      |L2.100|
;;;305        SLIDER_Obj * pObj;
;;;306        U16 InitState;
;;;307        pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000030  f7fffffe          BL       GUI_ALLOC_h2p
000034  4604              MOV      r4,r0
;;;308        /* Handle SpecialFlags */
;;;309        InitState = WIDGET_STATE_FOCUSSABLE;
000036  2210              MOVS     r2,#0x10
;;;310        if (ExFlags & SLIDER_CF_VERTICAL) {
000038  0730              LSLS     r0,r6,#28
00003a  d500              BPL      |L2.62|
;;;311          InitState |= WIDGET_CF_VERTICAL;
00003c  2218              MOVS     r2,#0x18
                  |L2.62|
;;;312        }
;;;313        /* init widget specific variables */
;;;314        WIDGET__Init(&pObj->Widget, Id, InitState);
00003e  4639              MOV      r1,r7
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       WIDGET__Init
;;;315        /* init member variables */
;;;316        SLIDER_INIT_ID(pObj);
;;;317        pObj->Props = SLIDER__DefaultProps;
000046  4a0a              LDR      r2,|L2.112|
000048  f1040328          ADD      r3,r4,#0x28
00004c  ca07              LDM      r2,{r0-r2}
00004e  e8830007          STM      r3,{r0-r2}
;;;318        pObj->Width       = 8;
000052  2008              MOVS     r0,#8
000054  f8a40048          STRH     r0,[r4,#0x48]
;;;319        pObj->Max         = 100;
000058  2064              MOVS     r0,#0x64
;;;320        pObj->Min         = 0;
00005a  63a0              STR      r0,[r4,#0x38]
00005c  2000              MOVS     r0,#0
;;;321        pObj->NumTicks    = -1;
00005e  6360              STR      r0,[r4,#0x34]
000060  1e40              SUBS     r0,r0,#1
000062  6460              STR      r0,[r4,#0x44]
                  |L2.100|
;;;322      } else {
;;;323        GUI_DEBUG_ERROROUT_IF(hObj==0, "SLIDER_Create failed")
;;;324      }
;;;325      WM_UNLOCK();
;;;326      return hObj;
;;;327    }
000064  b004              ADD      sp,sp,#0x10
000066  4628              MOV      r0,r5                 ;326
000068  e8bd81f0          POP      {r4-r8,pc}
;;;328    
                          ENDP

                  |L2.108|
                          DCD      SLIDER_Callback
                  |L2.112|
                          DCD      ||.data||

                          AREA ||i.SLIDER_Dec||, CODE, READONLY, ALIGN=1

                  SLIDER_Dec PROC
;;;338    */
;;;339    void SLIDER_Dec(SLIDER_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  0004              MOVS     r4,r0
000004  d010              BEQ      |L3.40|
;;;340      SLIDER_Obj* pObj;
;;;341      if (hObj) {
;;;342        WM_LOCK();
;;;343        pObj = SLIDER_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
;;;344        if (pObj->v > pObj->Min) {
00000a  6b42              LDR      r2,[r0,#0x34]
00000c  6bc1              LDR      r1,[r0,#0x3c]
00000e  4291              CMP      r1,r2
000010  dd0a              BLE      |L3.40|
000012  1e49              SUBS     r1,r1,#1
;;;345          pObj->v--;
;;;346          WM_InvalidateWindow(hObj);
000014  63c1              STR      r1,[r0,#0x3c]
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       WM_InvalidateWindow
;;;347          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00001c  4620              MOV      r0,r4
00001e  e8bd4010          POP      {r4,lr}
000022  2105              MOVS     r1,#5
000024  f7ffbffe          B.W      WM_NotifyParent
                  |L3.40|
;;;348        }
;;;349        WM_UNLOCK();
;;;350      }
;;;351    }
000028  bd10              POP      {r4,pc}
;;;352    
                          ENDP


                          AREA ||i.SLIDER_GetValue||, CODE, READONLY, ALIGN=1

                  SLIDER_GetValue PROC
;;;492    */
;;;493    int SLIDER_GetValue(SLIDER_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  0001              MOVS     r1,r0
;;;494      int r = 0;
000004  f04f0000          MOV      r0,#0
000008  d003              BEQ      |L4.18|
;;;495      SLIDER_Obj* pObj;
;;;496      if (hObj) {
;;;497        WM_LOCK();
;;;498        pObj = SLIDER_H2P(hObj);
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;499        r = pObj->v;
000010  6bc0              LDR      r0,[r0,#0x3c]
                  |L4.18|
;;;500        WM_UNLOCK();
;;;501      }
;;;502      return r;
;;;503    }
000012  bd10              POP      {r4,pc}
;;;504    
                          ENDP


                          AREA ||i.SLIDER_Inc||, CODE, READONLY, ALIGN=1

                  SLIDER_Inc PROC
;;;356    */
;;;357    void SLIDER_Inc(SLIDER_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  0004              MOVS     r4,r0
000004  d010              BEQ      |L5.40|
;;;358      SLIDER_Obj* pObj;
;;;359      if (hObj) {
;;;360        WM_LOCK();
;;;361        pObj = SLIDER_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  e9d0210e          LDRD     r2,r1,[r0,#0x38]
;;;362        if (pObj->v < pObj->Max) {
00000e  4291              CMP      r1,r2
000010  da0a              BGE      |L5.40|
000012  1c49              ADDS     r1,r1,#1
;;;363          pObj->v++;
;;;364          WM_InvalidateWindow(hObj);
000014  63c1              STR      r1,[r0,#0x3c]
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       WM_InvalidateWindow
;;;365          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00001c  4620              MOV      r0,r4
00001e  e8bd4010          POP      {r4,lr}
000022  2105              MOVS     r1,#5
000024  f7ffbffe          B.W      WM_NotifyParent
                  |L5.40|
;;;366        }
;;;367        WM_UNLOCK();
;;;368      }
;;;369    }
000028  bd10              POP      {r4,pc}
;;;370    
                          ENDP


                          AREA ||i.SLIDER_SetBkColor||, CODE, READONLY, ALIGN=1

                  SLIDER_SetBkColor PROC
;;;456    */
;;;457    void SLIDER_SetBkColor(SLIDER_Handle hObj, GUI_COLOR Color) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d010              BEQ      |L6.42|
;;;458      if (hObj) {
;;;459        SLIDER_Obj * pObj;
;;;460        WM_LOCK();
;;;461        pObj = SLIDER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;462        pObj->Props.BkColor = Color;
;;;463        #if SLIDER_SUPPORT_TRANSPARENCY
;;;464          if (Color <= 0xFFFFFF) {
00000c  6284              STR      r4,[r0,#0x28]
00000e  f1b47f80          CMP      r4,#0x1000000
;;;465            WM_ClrHasTrans(hObj);
;;;466          } else {
;;;467            WM_SetHasTrans(hObj);
000012  4628              MOV      r0,r5
000014  d202              BCS      |L6.28|
000016  f7fffffe          BL       WM_ClrHasTrans
00001a  e001              B        |L6.32|
                  |L6.28|
00001c  f7fffffe          BL       WM_SetHasTrans
                  |L6.32|
;;;468          }
;;;469        #endif
;;;470        WM_InvalidateWindow(hObj);
000020  4628              MOV      r0,r5
000022  e8bd4070          POP      {r4-r6,lr}
000026  f7ffbffe          B.W      WM_InvalidateWindow
                  |L6.42|
;;;471        WM_UNLOCK();
;;;472      }
;;;473    }
00002a  bd70              POP      {r4-r6,pc}
;;;474    
                          ENDP


                          AREA ||i.SLIDER_SetDefaultBkColor||, CODE, READONLY, ALIGN=2

                  SLIDER_SetDefaultBkColor PROC
;;;478    */
;;;479    void SLIDER_SetDefaultBkColor(GUI_COLOR Color) {
000000  4901              LDR      r1,|L7.8|
;;;480      SLIDER__DefaultProps.BkColor = Color;
000002  6008              STR      r0,[r1,#0]  ; SLIDER__DefaultProps
;;;481    }
000004  4770              BX       lr
;;;482    
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      ||.data||

                          AREA ||i.SLIDER_SetNumTicks||, CODE, READONLY, ALIGN=1

                  SLIDER_SetNumTicks PROC
;;;441    */
;;;442    void SLIDER_SetNumTicks(SLIDER_Handle hObj, int NumTicks) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d009              BEQ      |L8.28|
;;;443      if (hObj && (NumTicks >= 0)) {
000008  2c00              CMP      r4,#0
00000a  db07              BLT      |L8.28|
;;;444        SLIDER_Obj* pObj;
;;;445        WM_LOCK();
;;;446        pObj = SLIDER_H2P(hObj);
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;447        pObj->NumTicks = NumTicks;
;;;448        WM_InvalidateWindow(hObj);
000010  6444              STR      r4,[r0,#0x44]
000012  4628              MOV      r0,r5
000014  e8bd4070          POP      {r4-r6,lr}
000018  f7ffbffe          B.W      WM_InvalidateWindow
                  |L8.28|
;;;449        WM_UNLOCK();
;;;450      }
;;;451    }
00001c  bd70              POP      {r4-r6,pc}
;;;452    
                          ENDP


                          AREA ||i.SLIDER_SetRange||, CODE, READONLY, ALIGN=1

                  SLIDER_SetRange PROC
;;;416    */
;;;417    void SLIDER_SetRange(SLIDER_Handle hObj, int Min, int Max) {
000000  b570              PUSH     {r4-r6,lr}
000002  4614              MOV      r4,r2
000004  460d              MOV      r5,r1
000006  0006              MOVS     r6,r0
000008  d013              BEQ      |L9.50|
;;;418      if (hObj) {
;;;419        SLIDER_Obj* pObj;
;;;420        WM_LOCK();
;;;421        pObj = SLIDER_H2P(hObj);
00000a  f7fffffe          BL       GUI_ALLOC_h2p
;;;422        if (Max < Min) {
00000e  42ac              CMP      r4,r5
000010  da00              BGE      |L9.20|
;;;423          Max = Min;
000012  462c              MOV      r4,r5
                  |L9.20|
000014  e9c0540d          STRD     r5,r4,[r0,#0x34]
;;;424        }
;;;425        pObj->Min = Min;
;;;426        pObj->Max = Max;
;;;427        if (pObj->v < Min) {
000018  6bc1              LDR      r1,[r0,#0x3c]
00001a  42a9              CMP      r1,r5
00001c  da00              BGE      |L9.32|
;;;428          pObj->v = Min;
00001e  63c5              STR      r5,[r0,#0x3c]
                  |L9.32|
;;;429        }
;;;430        if (pObj->v > Max) {
000020  6bc1              LDR      r1,[r0,#0x3c]
000022  42a1              CMP      r1,r4
000024  dd00              BLE      |L9.40|
;;;431          pObj->v = Max;
000026  63c4              STR      r4,[r0,#0x3c]
                  |L9.40|
;;;432        }
;;;433        WM_InvalidateWindow(hObj);
000028  4630              MOV      r0,r6
00002a  e8bd4070          POP      {r4-r6,lr}
00002e  f7ffbffe          B.W      WM_InvalidateWindow
                  |L9.50|
;;;434        WM_UNLOCK();
;;;435      }
;;;436    }
000032  bd70              POP      {r4-r6,pc}
;;;437    
                          ENDP


                          AREA ||i.SLIDER_SetValue||, CODE, READONLY, ALIGN=1

                  SLIDER_SetValue PROC
;;;391    */
;;;392    void SLIDER_SetValue(SLIDER_Handle hObj, int v) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d016              BEQ      |L10.54|
;;;393      SLIDER_Obj* pObj;
;;;394      if (hObj) {
;;;395        WM_LOCK();
;;;396        pObj = SLIDER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;397        /* Put in min/max range */
;;;398        if (v < pObj->Min) {
00000c  6b41              LDR      r1,[r0,#0x34]
00000e  42a1              CMP      r1,r4
000010  dd00              BLE      |L10.20|
;;;399          v = pObj->Min;
000012  460c              MOV      r4,r1
                  |L10.20|
;;;400        }
;;;401        if (v > pObj->Max) {
000014  6b81              LDR      r1,[r0,#0x38]
000016  42a1              CMP      r1,r4
000018  da00              BGE      |L10.28|
;;;402          v = pObj->Max;
00001a  460c              MOV      r4,r1
                  |L10.28|
;;;403        }
;;;404        if (pObj->v != v) {
00001c  6bc1              LDR      r1,[r0,#0x3c]
00001e  42a1              CMP      r1,r4
000020  d009              BEQ      |L10.54|
;;;405          pObj->v = v;
;;;406          WM_InvalidateWindow(hObj);
000022  63c4              STR      r4,[r0,#0x3c]
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       WM_InvalidateWindow
;;;407          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00002a  4628              MOV      r0,r5
00002c  e8bd4070          POP      {r4-r6,lr}
000030  2105              MOVS     r1,#5
000032  f7ffbffe          B.W      WM_NotifyParent
                  |L10.54|
;;;408        }
;;;409        WM_UNLOCK();
;;;410      }
;;;411    }
000036  bd70              POP      {r4-r6,pc}
;;;412    
                          ENDP


                          AREA ||i.SLIDER_SetWidth||, CODE, READONLY, ALIGN=1

                  SLIDER_SetWidth PROC
;;;374    */
;;;375    void SLIDER_SetWidth(SLIDER_Handle hObj, int Width) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d00c              BEQ      |L11.34|
;;;376      SLIDER_Obj* pObj;
;;;377      if (hObj) {
;;;378        WM_LOCK();
;;;379        pObj = SLIDER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;380        if (pObj->Width != Width) {
00000c  f9b01048          LDRSH    r1,[r0,#0x48]
000010  42a1              CMP      r1,r4
000012  d006              BEQ      |L11.34|
;;;381          pObj->Width = Width;
000014  f8a04048          STRH     r4,[r0,#0x48]
;;;382          WM_InvalidateWindow(hObj);
000018  4628              MOV      r0,r5
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f7ffbffe          B.W      WM_InvalidateWindow
                  |L11.34|
;;;383        }
;;;384        WM_UNLOCK();
;;;385      }
;;;386    }
000022  bd70              POP      {r4-r6,pc}
;;;387    
                          ENDP


                          AREA ||i._OnTouch||, CODE, READONLY, ALIGN=1

                  _OnTouch PROC
;;;163    */
;;;164    static void _OnTouch(SLIDER_Handle hObj, SLIDER_Obj* pObj, WM_MESSAGE*pMsg) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4605              MOV      r5,r0
000006  6890              LDR      r0,[r2,#8]
000008  460c              MOV      r4,r1
00000a  2800              CMP      r0,#0
00000c  d05d              BEQ      |L12.202|
;;;165      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
;;;166      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
;;;167        if (pState->Pressed) {
00000e  7a01              LDRB     r1,[r0,#8]
000010  f44f7980          MOV      r9,#0x100
000014  b3f1              CBZ      r1,|L12.148|
000016  e9d4210d          LDRD     r2,r1,[r4,#0x34]
;;;168          int x0, xsize, x, Sel, Range;
;;;169          Range = (pObj->Max - pObj->Min);
00001a  eba10802          SUB      r8,r1,r2
;;;170          x0    = 1 + pObj->Width / 2;  /* 1 pixel focus rectangle + width of actual slider */
00001e  f9b41048          LDRSH    r1,[r4,#0x48]
000022  2201              MOVS     r2,#1
000024  eb0171d1          ADD      r1,r1,r1,LSR #31
000028  eb020761          ADD      r7,r2,r1,ASR #1
;;;171          x     = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? pState->y : pState->x;
00002c  f8941026          LDRB     r1,[r4,#0x26]
000030  0709              LSLS     r1,r1,#28
000032  d501              BPL      |L12.56|
000034  6840              LDR      r0,[r0,#4]
000036  e000              B        |L12.58|
                  |L12.56|
000038  6800              LDR      r0,[r0,#0]
                  |L12.58|
;;;172          x    -= x0;
00003a  1bc6              SUBS     r6,r0,r7
;;;173          xsize = WIDGET__GetWindowSizeX(hObj) - 2 * x0;
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       WIDGET__GetWindowSizeX
000042  4279              RSBS     r1,r7,#0
000044  eb000141          ADD      r1,r0,r1,LSL #1
;;;174          if (x <= 0) {
000048  2e00              CMP      r6,#0
00004a  dc01              BGT      |L12.80|
;;;175            Sel = pObj->Min;
00004c  6b66              LDR      r6,[r4,#0x34]
00004e  e00f              B        |L12.112|
                  |L12.80|
;;;176          } else if (x >= xsize) {
000050  428e              CMP      r6,r1
000052  db01              BLT      |L12.88|
;;;177            Sel = pObj->Max;
000054  6ba6              LDR      r6,[r4,#0x38]
000056  e00b              B        |L12.112|
                  |L12.88|
;;;178          } else {
;;;179            int Div;
;;;180            Div = xsize ? xsize : 1;     /* Make sure we do not divide by 0, even though xsize should never be 0 in this case anyhow */
000058  b901              CBNZ     r1,|L12.92|
00005a  2101              MOVS     r1,#1
                  |L12.92|
;;;181            Sel = pObj->Min + ((U32)Range * (U32)x + Div / 2) / Div;
00005c  fb08f006          MUL      r0,r8,r6
000060  eb0172d1          ADD      r2,r1,r1,LSR #31
000064  eb000062          ADD      r0,r0,r2,ASR #1
000068  fbb0f0f1          UDIV     r0,r0,r1
00006c  6b61              LDR      r1,[r4,#0x34]
00006e  1846              ADDS     r6,r0,r1
                  |L12.112|
;;;182          }
;;;183          if (WM_IsFocussable(hObj)) {
000070  4628              MOV      r0,r5
000072  f7fffffe          BL       WM_IsFocussable
000076  b110              CBZ      r0,|L12.126|
;;;184            WM_SetFocus(hObj);
000078  4628              MOV      r0,r5
00007a  f7fffffe          BL       WM_SetFocus
                  |L12.126|
;;;185          }
;;;186          WM_SetCapture(hObj, 1);
00007e  2101              MOVS     r1,#1
000080  4628              MOV      r0,r5
000082  f7fffffe          BL       WM_SetCapture
;;;187          SLIDER_SetValue(hObj, Sel);
000086  4631              MOV      r1,r6
000088  4628              MOV      r0,r5
00008a  f7fffffe          BL       SLIDER_SetValue
;;;188          if ((pObj->Widget.State & SLIDER_STATE_PRESSED) == 0){   
00008e  8ce0              LDRH     r0,[r4,#0x26]
000090  05c0              LSLS     r0,r0,#23
000092  e000              B        |L12.150|
                  |L12.148|
000094  e009              B        |L12.170|
                  |L12.150|
000096  d418              BMI      |L12.202|
000098  4649              MOV      r1,r9
00009a  4628              MOV      r0,r5
00009c  f7fffffe          BL       WIDGET_OrState
0000a0  7f20              LDRB     r0,[r4,#0x1c]
0000a2  0780              LSLS     r0,r0,#30
0000a4  d511              BPL      |L12.202|
0000a6  2101              MOVS     r1,#1
0000a8  e00a              B        |L12.192|
                  |L12.170|
;;;189            _SliderPressed(hObj, pObj);
;;;190          }
;;;191        } else {
;;;192          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;193          if (pObj->Widget.State & SLIDER_STATE_PRESSED) {   
0000aa  8ce0              LDRH     r0,[r4,#0x26]
0000ac  05c0              LSLS     r0,r0,#23
0000ae  d50c              BPL      |L12.202|
0000b0  4649              MOV      r1,r9
0000b2  4628              MOV      r0,r5
0000b4  f7fffffe          BL       WIDGET_AndState
0000b8  7f20              LDRB     r0,[r4,#0x1c]
0000ba  0780              LSLS     r0,r0,#30
0000bc  d505              BPL      |L12.202|
0000be  2102              MOVS     r1,#2
                  |L12.192|
0000c0  4628              MOV      r0,r5
0000c2  e8bd47f0          POP      {r4-r10,lr}
0000c6  f7ffbffe          B.W      WM_NotifyParent
                  |L12.202|
;;;194            _SliderReleased(hObj, pObj);
;;;195          }
;;;196        }
;;;197      }
;;;198    }
0000ca  e8bd87f0          POP      {r4-r10,pc}
;;;199    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=1

                  _Paint PROC
;;;74     */
;;;75     static void _Paint(SLIDER_Obj* pObj, WM_HWIN hObj) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  b08f              SUB      sp,sp,#0x3c
000006  4689              MOV      r9,r1
000008  4604              MOV      r4,r0
;;;76       GUI_RECT r, rFocus, rSlider, rSlot;
;;;77       int x0, xsize, i, Range, NumTicks;
;;;78       WIDGET__GetClientRect(&pObj->Widget, &rFocus);
00000a  a90c              ADD      r1,sp,#0x30
00000c  f7fffffe          BL       WIDGET__GetClientRect
;;;79       GUI__ReduceRect(&r, &rFocus, 1);
000010  2201              MOVS     r2,#1
000012  a90c              ADD      r1,sp,#0x30
000014  a809              ADD      r0,sp,#0x24
000016  f7fffffe          BL       GUI__ReduceRect
;;;80       NumTicks = pObj->NumTicks;
;;;81       xsize    = r.x1 - r.x0  + 1 - pObj->Width;
00001a  f9bd0028          LDRSH    r0,[sp,#0x28]
00001e  f9bd1024          LDRSH    r1,[sp,#0x24]
000022  1a42              SUBS     r2,r0,r1
000024  f9b40048          LDRSH    r0,[r4,#0x48]
000028  1a17              SUBS     r7,r2,r0
;;;82       x0       = r.x0 + pObj->Width / 2;
00002a  eb0070d0          ADD      r0,r0,r0,LSR #31
00002e  eb010860          ADD      r8,r1,r0,ASR #1
000032  e9d4010d          LDRD     r0,r1,[r4,#0x34]
000036  1c7f              ADDS     r7,r7,#1
;;;83       Range    = pObj->Max - pObj->Min;
000038  6c65              LDR      r5,[r4,#0x44]
00003a  1a0e              SUBS     r6,r1,r0
;;;84       if (Range == 0) {
00003c  d100              BNE      |L13.64|
;;;85         Range = 1;
00003e  2601              MOVS     r6,#1
                  |L13.64|
;;;86       }
;;;87       /* Fill with parents background color */
;;;88       #if !SLIDER_SUPPORT_TRANSPARENCY   /* Not needed any more, since window is transparent*/
;;;89         if (pObj->Props.BkColor == GUI_INVALID_COLOR) {
;;;90           LCD_SetBkColor(WIDGET__GetBkColor(hObj));
;;;91         } else {
;;;92           LCD_SetBkColor(pObj->Props.BkColor);
;;;93         }
;;;94         GUI_Clear();
;;;95       #else
;;;96         if (!WM_GetHasTrans(hObj)) {
000040  4648              MOV      r0,r9
000042  f7fffffe          BL       WM_GetHasTrans
000046  b920              CBNZ     r0,|L13.82|
;;;97           LCD_SetBkColor(pObj->Props.BkColor);
000048  6aa0              LDR      r0,[r4,#0x28]
00004a  f7fffffe          BL       LCD_SetBkColor
;;;98           GUI_Clear();
00004e  f7fffffe          BL       GUI_Clear
                  |L13.82|
000052  e9dd0109          LDRD     r0,r1,[sp,#0x24]
;;;99         }
;;;100      #endif
;;;101      /* Calculate Slider position */
;;;102      rSlider    = r;
;;;103      rSlider.y0 = 5;
000056  f04f0905          MOV      r9,#5
00005a  e9cd0101          STRD     r0,r1,[sp,#4]
00005e  f8ad9006          STRH     r9,[sp,#6]
;;;104      rSlider.x0 = x0 + (U32)xsize * (U32)(pObj->v - pObj->Min) / Range - pObj->Width / 2;
000062  6b62              LDR      r2,[r4,#0x34]
000064  6be1              LDR      r1,[r4,#0x3c]
000066  f9b40048          LDRSH    r0,[r4,#0x48]
00006a  1a89              SUBS     r1,r1,r2
00006c  4379              MULS     r1,r7,r1
00006e  fbb1f2f6          UDIV     r2,r1,r6
000072  eb020108          ADD      r1,r2,r8
000076  eb0072d0          ADD      r2,r0,r0,LSR #31
00007a  eba10162          SUB      r1,r1,r2,ASR #1
;;;105      rSlider.x1 = rSlider.x0 + pObj->Width;
00007e  4408              ADD      r0,r0,r1
000080  f8ad0008          STRH     r0,[sp,#8]
000084  f8ad1004          STRH     r1,[sp,#4]            ;104
;;;106      /* Calculate Slot position */
;;;107      rSlot.x0 = x0;
;;;108      rSlot.x1 = x0 + xsize;
000088  eb080007          ADD      r0,r8,r7
00008c  f8ad0018          STRH     r0,[sp,#0x18]
;;;109      rSlot.y0 = (rSlider.y0 + rSlider.y1) / 2 - 1;
000090  f9bd000a          LDRSH    r0,[sp,#0xa]
000094  f04f31ff          MOV      r1,#0xffffffff
000098  1d40              ADDS     r0,r0,#5
00009a  eb0070d0          ADD      r0,r0,r0,LSR #31
00009e  eb010060          ADD      r0,r1,r0,ASR #1
0000a2  f8ad8014          STRH     r8,[sp,#0x14]         ;107
0000a6  f8ad0016          STRH     r0,[sp,#0x16]
0000aa  1cc0              ADDS     r0,r0,#3
;;;110      rSlot.y1 = rSlot.y0 + 3;
0000ac  f8ad001a          STRH     r0,[sp,#0x1a]
;;;111      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rSlot);        /* Draw slot */
0000b0  a905              ADD      r1,sp,#0x14
0000b2  4620              MOV      r0,r4
0000b4  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;112      /* Draw the ticks */
;;;113      if (NumTicks < 0) {
0000b8  2d00              CMP      r5,#0
0000ba  da06              BGE      |L13.202|
;;;114        NumTicks = Range + 1;
;;;115        if (NumTicks > (xsize / 5)) {
0000bc  fb97f0f9          SDIV     r0,r7,r9
0000c0  1c75              ADDS     r5,r6,#1              ;114
0000c2  42a8              CMP      r0,r5
0000c4  da01              BGE      |L13.202|
;;;116          NumTicks = 11;
0000c6  250b              MOVS     r5,#0xb
0000c8  e001              B        |L13.206|
                  |L13.202|
;;;117        }
;;;118      }
;;;119      if (NumTicks > 1) {
0000ca  2d01              CMP      r5,#1
0000cc  dd13              BLE      |L13.246|
                  |L13.206|
;;;120        LCD_SetColor(GUI_BLACK);
0000ce  2000              MOVS     r0,#0
0000d0  f7fffffe          BL       LCD_SetColor
;;;121        for (i = 0; i < NumTicks; i++) {
0000d4  2600              MOVS     r6,#0
;;;122          int x = x0 + xsize * i / (NumTicks - 1);
0000d6  f1a50901          SUB      r9,r5,#1
0000da  e00a              B        |L13.242|
                  |L13.220|
0000dc  fb07f006          MUL      r0,r7,r6
0000e0  fb90f1f9          SDIV     r1,r0,r9
0000e4  4441              ADD      r1,r1,r8
;;;123          WIDGET__DrawVLine(&pObj->Widget, x, 1, 3);
0000e6  2303              MOVS     r3,#3
0000e8  2201              MOVS     r2,#1
0000ea  4620              MOV      r0,r4
0000ec  f7fffffe          BL       WIDGET__DrawVLine
0000f0  1c76              ADDS     r6,r6,#1
                  |L13.242|
0000f2  42ae              CMP      r6,r5                 ;121
0000f4  dbf2              BLT      |L13.220|
                  |L13.246|
;;;124        }
;;;125      }
;;;126      /* Draw the slider itself */
;;;127      LCD_SetColor(pObj->Props.Color);
0000f6  6ae0              LDR      r0,[r4,#0x2c]
0000f8  f7fffffe          BL       LCD_SetColor
;;;128      WIDGET__FillRectEx(&pObj->Widget, &rSlider);
0000fc  a901              ADD      r1,sp,#4
0000fe  4620              MOV      r0,r4
000100  f7fffffe          BL       WIDGET__FillRectEx
;;;129      LCD_SetColor(GUI_BLACK);
000104  2000              MOVS     r0,#0
000106  f7fffffe          BL       LCD_SetColor
;;;130      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &rSlider);
00010a  a901              ADD      r1,sp,#4
00010c  4620              MOV      r0,r4
00010e  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;131      /* Draw focus */
;;;132      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
000112  f8940026          LDRB     r0,[r4,#0x26]
000116  07c0              LSLS     r0,r0,#31
000118  d007              BEQ      |L13.298|
;;;133        LCD_SetColor(pObj->Props.FocusColor);
00011a  6b20              LDR      r0,[r4,#0x30]
00011c  f7fffffe          BL       LCD_SetColor
;;;134        WIDGET__DrawFocusRect(&pObj->Widget, &rFocus, 0);
000120  2200              MOVS     r2,#0
000122  a90c              ADD      r1,sp,#0x30
000124  4620              MOV      r0,r4
000126  f7fffffe          BL       WIDGET__DrawFocusRect
                  |L13.298|
;;;135      }
;;;136    }
00012a  b00f              ADD      sp,sp,#0x3c
00012c  e8bd83f0          POP      {r4-r9,pc}
;;;137    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  SLIDER__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00c0c0c0
                          DCD      0x00000000
