; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\i2c.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\i2c.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\Board_Support_Package\i2c.c]
                          THUMB

                          AREA ||i.I2C_Block_Read||, CODE, READONLY, ALIGN=2

                  I2C_Block_Read PROC
;;;342    
;;;343    void I2C_Block_Read(unsigned char nDEV_Address, unsigned char *aBuffer, unsigned char nReg_Addr, unsigned char nCount)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;344    {
000004  461e              MOV      r6,r3
000006  4617              MOV      r7,r2
000008  460d              MOV      r5,r1
00000a  4604              MOV      r4,r0
;;;345    	unsigned char i;
;;;346    	I2C_Start();
00000c  f7fffffe          BL       I2C_Start
;;;347    	I2C_SendByte(nDEV_Address);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       I2C_SendByte
;;;348    	I2C_SendByte(nReg_Addr);
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       I2C_SendByte
;;;349    	I2C_Start();
00001c  f7fffffe          BL       I2C_Start
000020  1c64              ADDS     r4,r4,#1
;;;350    	I2C_SendByte(nDEV_Address + 1);
000022  b2e0              UXTB     r0,r4
000024  f7fffffe          BL       I2C_SendByte
;;;351    	if(nCount > 1)
000028  2e01              CMP      r6,#1
00002a  d90e              BLS      |L1.74|
;;;352    	{
;;;353    		for(i = 0; i < nCount - 1; i++)
00002c  2400              MOVS     r4,#0
00002e  1e76              SUBS     r6,r6,#1
000030  e009              B        |L1.70|
;;;354    		{
;;;355    			*aBuffer++ = I2C_RecvByte();
000032  bf00              NOP      
                  |L1.52|
000034  f7fffffe          BL       I2C_RecvByte
000038  f8050b01          STRB     r0,[r5],#1
;;;356    			I2C_SendACK(0);
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       I2C_SendACK
000042  1c64              ADDS     r4,r4,#1
000044  b2e4              UXTB     r4,r4                 ;353
                  |L1.70|
000046  42b4              CMP      r4,r6                 ;353
000048  dbf4              BLT      |L1.52|
                  |L1.74|
;;;357    		}
;;;358    	}
;;;359    	*aBuffer = I2C_RecvByte();
00004a  f7fffffe          BL       I2C_RecvByte
00004e  7028              STRB     r0,[r5,#0]
;;;360    	I2C_SendACK(1);
000050  2001              MOVS     r0,#1
000052  f7fffffe          BL       I2C_SendACK
;;;361    	I2C_Stop();
000056  e8bd41f0          POP      {r4-r8,lr}
00005a  f7ffbffe          B.W      I2C_Stop
;;;362    }
;;;363    
                          ENDP


                          AREA ||i.I2C_Block_Read_2Reg||, CODE, READONLY, ALIGN=1

                  I2C_Block_Read_2Reg PROC
;;;379    
;;;380    void I2C_Block_Read_2Reg(unsigned char nDEV_Address, unsigned char *aBuffer, unsigned short nReg_Addr, unsigned char nCount)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;381    {
000004  461e              MOV      r6,r3
000006  4614              MOV      r4,r2
000008  460d              MOV      r5,r1
00000a  4607              MOV      r7,r0
;;;382    	unsigned char i;
;;;383    	I2C_Start();
00000c  f7fffffe          BL       I2C_Start
;;;384    	I2C_SendByte(nDEV_Address);
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       I2C_SendByte
;;;385    	I2C_SendByte((unsigned char)(nReg_Addr >> 8));
000016  0a20              LSRS     r0,r4,#8
000018  f7fffffe          BL       I2C_SendByte
;;;386    	I2C_SendByte((unsigned char)nReg_Addr);
00001c  b2e0              UXTB     r0,r4
00001e  f7fffffe          BL       I2C_SendByte
;;;387    	I2C_Start();
000022  f7fffffe          BL       I2C_Start
000026  1c7f              ADDS     r7,r7,#1
;;;388    	I2C_SendByte(nDEV_Address + 1);
000028  b2f8              UXTB     r0,r7
00002a  f7fffffe          BL       I2C_SendByte
;;;389    	if(nCount > 1)
00002e  2e01              CMP      r6,#1
000030  d90d              BLS      |L2.78|
;;;390    	{
;;;391    		for(i = 0; i < nCount - 1; i++)
000032  2400              MOVS     r4,#0
000034  1e76              SUBS     r6,r6,#1
000036  e008              B        |L2.74|
                  |L2.56|
;;;392    		{
;;;393    			*aBuffer++ = I2C_RecvByte();
000038  f7fffffe          BL       I2C_RecvByte
00003c  f8050b01          STRB     r0,[r5],#1
;;;394    			I2C_SendACK(0);
000040  2000              MOVS     r0,#0
000042  f7fffffe          BL       I2C_SendACK
000046  1c64              ADDS     r4,r4,#1
000048  b2e4              UXTB     r4,r4                 ;391
                  |L2.74|
00004a  42b4              CMP      r4,r6                 ;391
00004c  dbf4              BLT      |L2.56|
                  |L2.78|
;;;395    		}
;;;396    	}
;;;397    	*aBuffer = I2C_RecvByte();
00004e  f7fffffe          BL       I2C_RecvByte
000052  7028              STRB     r0,[r5,#0]
;;;398    	I2C_SendACK(1);
000054  2001              MOVS     r0,#1
000056  f7fffffe          BL       I2C_SendACK
;;;399    	I2C_Stop();
00005a  e8bd41f0          POP      {r4-r8,lr}
00005e  f7ffbffe          B.W      I2C_Stop
;;;400    }
;;;401    
                          ENDP


                          AREA ||i.I2C_Block_Write||, CODE, READONLY, ALIGN=1

                  I2C_Block_Write PROC
;;;329    
;;;330    void I2C_Block_Write(unsigned char nDEV_Address, unsigned char *aBuffer, unsigned char nReg_Addr, unsigned char nCount)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;331    {
000004  461e              MOV      r6,r3
000006  4617              MOV      r7,r2
000008  460d              MOV      r5,r1
00000a  4604              MOV      r4,r0
;;;332    	unsigned char i;
;;;333    	I2C_Start();
00000c  f7fffffe          BL       I2C_Start
;;;334    	I2C_SendByte(nDEV_Address);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       I2C_SendByte
;;;335    	I2C_SendByte(nReg_Addr);
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       I2C_SendByte
;;;336    	for(i = 0; i < nCount; i++)
00001c  2400              MOVS     r4,#0
00001e  e005              B        |L3.44|
                  |L3.32|
;;;337    	{
;;;338    		I2C_SendByte(*aBuffer++);
000020  f8150b01          LDRB     r0,[r5],#1
000024  f7fffffe          BL       I2C_SendByte
000028  1c64              ADDS     r4,r4,#1
00002a  b2e4              UXTB     r4,r4                 ;336
                  |L3.44|
00002c  42b4              CMP      r4,r6                 ;336
00002e  d3f7              BCC      |L3.32|
;;;339    	}
;;;340    	I2C_Stop();
000030  e8bd41f0          POP      {r4-r8,lr}
000034  f7ffbffe          B.W      I2C_Stop
;;;341    }
;;;342    
                          ENDP


                          AREA ||i.I2C_Block_Write_2Reg||, CODE, READONLY, ALIGN=2

                  I2C_Block_Write_2Reg PROC
;;;365    /*扩展的I2C读写,专供给摄像头使用.*/
;;;366    void I2C_Block_Write_2Reg(unsigned char nDEV_Address, unsigned char *aBuffer, unsigned short nReg_Addr, unsigned char nCount)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;367    {
000004  461e              MOV      r6,r3
000006  4614              MOV      r4,r2
000008  460d              MOV      r5,r1
00000a  4607              MOV      r7,r0
;;;368    	unsigned char i;
;;;369    	I2C_Start();
00000c  f7fffffe          BL       I2C_Start
;;;370    	I2C_SendByte(nDEV_Address);
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       I2C_SendByte
;;;371    	I2C_SendByte((unsigned char)(nReg_Addr >> 8));
000016  0a20              LSRS     r0,r4,#8
000018  f7fffffe          BL       I2C_SendByte
;;;372    	I2C_SendByte((unsigned char)nReg_Addr);
00001c  b2e0              UXTB     r0,r4
00001e  f7fffffe          BL       I2C_SendByte
;;;373    	for(i = 0; i < nCount; i++)
000022  2400              MOVS     r4,#0
000024  e006              B        |L4.52|
;;;374    	{
;;;375    		I2C_SendByte(*aBuffer++);
000026  bf00              NOP      
                  |L4.40|
000028  f8150b01          LDRB     r0,[r5],#1
00002c  f7fffffe          BL       I2C_SendByte
000030  1c64              ADDS     r4,r4,#1
000032  b2e4              UXTB     r4,r4                 ;373
                  |L4.52|
000034  42b4              CMP      r4,r6                 ;373
000036  d3f7              BCC      |L4.40|
;;;376    	}
;;;377    	I2C_Stop();
000038  e8bd41f0          POP      {r4-r8,lr}
00003c  f7ffbffe          B.W      I2C_Stop
;;;378    }
;;;379    
                          ENDP


                          AREA ||i.I2C_Hal_Init||, CODE, READONLY, ALIGN=2

                  I2C_Hal_Init PROC
;;;142    
;;;143    void I2C_Hal_Init(void)
000000  b538              PUSH     {r3-r5,lr}
;;;144    {
;;;145    	GPIO_InitTypeDef GPIO_InitStructure;
;;;146    	
;;;147    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6|GPIO_Pin_7;
000002  24c0              MOVS     r4,#0xc0
000004  f8ad4000          STRH     r4,[sp,#0]
;;;148      	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000008  2003              MOVS     r0,#3
00000a  f88d0002          STRB     r0,[sp,#2]
;;;149      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00000e  2010              MOVS     r0,#0x10
000010  f88d0003          STRB     r0,[sp,#3]
;;;150      	GPIO_Init(GPIOB, &GPIO_InitStructure);
000014  4669              MOV      r1,sp
000016  4803              LDR      r0,|L5.36|
000018  f7fffffe          BL       GPIO_Init
;;;151    
;;;152    	GPIOB->BSRR=GPIO_Pin_6|GPIO_Pin_7;
00001c  4801              LDR      r0,|L5.36|
00001e  3010              ADDS     r0,r0,#0x10
000020  6004              STR      r4,[r0,#0]
;;;153    }
000022  bd38              POP      {r3-r5,pc}
;;;154    
                          ENDP

                  |L5.36|
                          DCD      0x40010c00

                          AREA ||i.I2C_RecvByte||, CODE, READONLY, ALIGN=2

                  I2C_RecvByte PROC
;;;267    
;;;268    static unsigned char I2C_RecvByte(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;269    {
;;;270    	unsigned char i;
;;;271    	unsigned char dat = 0;
;;;272    	unsigned char cy;
;;;273    	
;;;274    	SDA1;
000004  4f13              LDR      r7,|L6.84|
000006  2080              MOVS     r0,#0x80
000008  2400              MOVS     r4,#0                 ;271
00000a  6038              STR      r0,[r7,#0]
;;;275    	I2C_SDA_In();
00000c  f7fffffe          BL       I2C_SDA_In
;;;276    	
;;;277    	for (i = 0; i < 8; i++)
;;;278    	{
;;;279    		dat <<= 1;
;;;280    		SCL1;
;;;281    		I2C_Delay();;
;;;282    		if(SDADATA)
000010  f8df8040          LDR      r8,|L6.84|
000014  2500              MOVS     r5,#0                 ;277
000016  f1a80808          SUB      r8,r8,#8
00001a  2640              MOVS     r6,#0x40              ;280
;;;283    		{
;;;284    			cy = 1;
;;;285    		}
;;;286    		else
;;;287    		{
;;;288    			cy = 0;
;;;289    		}
;;;290    		dat |= cy;
;;;291    		SCL0;
00001c  f1070904          ADD      r9,r7,#4
                  |L6.32|
000020  0660              LSLS     r0,r4,#25             ;279
000022  0e04              LSRS     r4,r0,#24             ;279
000024  603e              STR      r6,[r7,#0]            ;280
000026  2005              MOVS     r0,#5                 ;280
000028  f7fffffe          BL       delay_us
00002c  f8d80000          LDR      r0,[r8,#0]            ;282
000030  0600              LSLS     r0,r0,#24             ;282
000032  d501              BPL      |L6.56|
000034  2001              MOVS     r0,#1                 ;284
000036  e000              B        |L6.58|
                  |L6.56|
000038  2000              MOVS     r0,#0                 ;288
                  |L6.58|
00003a  4304              ORRS     r4,r4,r0              ;290
00003c  f8c96000          STR      r6,[r9,#0]
000040  2005              MOVS     r0,#5
000042  f7fffffe          BL       delay_us
000046  1c6d              ADDS     r5,r5,#1
000048  b2ed              UXTB     r5,r5                 ;277
00004a  2d08              CMP      r5,#8                 ;277
00004c  d3e8              BCC      |L6.32|
;;;292    		I2C_Delay();
;;;293    	}
;;;294    	return dat;
00004e  4620              MOV      r0,r4
;;;295    }
000050  e8bd87f0          POP      {r4-r10,pc}
;;;296    
                          ENDP

                  |L6.84|
                          DCD      0x40010c10

                          AREA ||i.I2C_SDA_In||, CODE, READONLY, ALIGN=2

                  I2C_SDA_In PROC
;;;182    
;;;183    static void I2C_SDA_In(void)
000000  b508              PUSH     {r3,lr}
;;;184    {
;;;185    	GPIO_InitTypeDef GPIO_InitStructure;
;;;186    	
;;;187    	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_7;
000002  2080              MOVS     r0,#0x80
000004  f8ad0000          STRH     r0,[sp,#0]
;;;188      	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000008  2003              MOVS     r0,#3
00000a  f88d0002          STRB     r0,[sp,#2]
;;;189      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
00000e  2048              MOVS     r0,#0x48
000010  f88d0003          STRB     r0,[sp,#3]
;;;190      	GPIO_Init(GPIOB, &GPIO_InitStructure);
000014  4669              MOV      r1,sp
000016  4802              LDR      r0,|L7.32|
000018  f7fffffe          BL       GPIO_Init
;;;191    }
00001c  bd08              POP      {r3,pc}
;;;192    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      0x40010c00

                          AREA ||i.I2C_SDA_Out||, CODE, READONLY, ALIGN=2

                  I2C_SDA_Out PROC
;;;192    
;;;193    static void I2C_SDA_Out(void)
000000  b508              PUSH     {r3,lr}
;;;194    {
;;;195    	GPIO_InitTypeDef GPIO_InitStructure;
;;;196    	
;;;197    	GPIO_InitStructure.GPIO_Pin =GPIO_Pin_7;
000002  2080              MOVS     r0,#0x80
000004  f8ad0000          STRH     r0,[sp,#0]
;;;198      	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000008  2003              MOVS     r0,#3
00000a  f88d0002          STRB     r0,[sp,#2]
;;;199      	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00000e  2010              MOVS     r0,#0x10
000010  f88d0003          STRB     r0,[sp,#3]
;;;200      	GPIO_Init(GPIOB, &GPIO_InitStructure);
000014  4669              MOV      r1,sp
000016  4802              LDR      r0,|L8.32|
000018  f7fffffe          BL       GPIO_Init
;;;201    }
00001c  bd08              POP      {r3,pc}
;;;202    
                          ENDP

00001e  0000              DCW      0x0000
                  |L8.32|
                          DCD      0x40010c00

                          AREA ||i.I2C_SendACK||, CODE, READONLY, ALIGN=2

                  I2C_SendACK PROC
;;;202    
;;;203    static void I2C_SendACK(unsigned char nAckValue)
000000  b570              PUSH     {r4-r6,lr}
;;;204    {
000002  4606              MOV      r6,r0
;;;205    	I2C_SDA_Out();
000004  f7fffffe          BL       I2C_SDA_Out
;;;206    	if(nAckValue)
;;;207    	{
;;;208    		SDA1;
000008  4c0a              LDR      r4,|L9.52|
00000a  2080              MOVS     r0,#0x80
;;;209    	}
;;;210    	else
;;;211    	{
;;;212    		SDA0;
00000c  1d25              ADDS     r5,r4,#4
00000e  b10e              CBZ      r6,|L9.20|
000010  6020              STR      r0,[r4,#0]            ;208
000012  e000              B        |L9.22|
                  |L9.20|
000014  6028              STR      r0,[r5,#0]
                  |L9.22|
000016  2005              MOVS     r0,#5
000018  f7fffffe          BL       delay_us
;;;213    	}
;;;214    	I2C_Delay();
;;;215    	SCL1;
00001c  2640              MOVS     r6,#0x40
00001e  6026              STR      r6,[r4,#0]
000020  2005              MOVS     r0,#5
000022  f7fffffe          BL       delay_us
;;;216    	I2C_Delay();
;;;217    	SCL0;
000026  602e              STR      r6,[r5,#0]
000028  e8bd4070          POP      {r4-r6,lr}
00002c  2005              MOVS     r0,#5
00002e  f7ffbffe          B.W      delay_us
;;;218    	I2C_Delay();
;;;219    }
;;;220    
                          ENDP

000032  0000              DCW      0x0000
                  |L9.52|
                          DCD      0x40010c10

                          AREA ||i.I2C_SendByte||, CODE, READONLY, ALIGN=2

                  I2C_SendByte PROC
;;;242    
;;;243    static bool I2C_SendByte(unsigned char dat)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;244    {
000004  4681              MOV      r9,r0
;;;245    	unsigned char i;
;;;246    
;;;247    	I2C_SDA_Out();
000006  f7fffffe          BL       I2C_SDA_Out
;;;248    	
;;;249    	for (i = 0; i < 8; i++)
;;;250    	{
;;;251    		if((dat << i) & 0x80)
;;;252    		{
;;;253    			SDA1;
00000a  4e1e              LDR      r6,|L10.132|
00000c  2400              MOVS     r4,#0                 ;249
;;;254    		}
;;;255    		else
;;;256    		{
;;;257    			SDA0;
00000e  1d37              ADDS     r7,r6,#4
000010  f04f0880          MOV      r8,#0x80              ;253
;;;258    		}
;;;259    		I2C_Delay();
;;;260    		SCL1;
000014  f05f0540          MOVS.W   r5,#0x40
                  |L10.24|
000018  fa09f004          LSL      r0,r9,r4              ;251
00001c  0600              LSLS     r0,r0,#24             ;251
00001e  4640              MOV      r0,r8                 ;257
000020  d501              BPL      |L10.38|
000022  6030              STR      r0,[r6,#0]            ;253
000024  e000              B        |L10.40|
                  |L10.38|
000026  6038              STR      r0,[r7,#0]            ;257
                  |L10.40|
000028  2005              MOVS     r0,#5                 ;257
00002a  f7fffffe          BL       delay_us
00002e  6035              STR      r5,[r6,#0]
000030  2005              MOVS     r0,#5
000032  f7fffffe          BL       delay_us
;;;261    		I2C_Delay();
;;;262    		SCL0;
000036  603d              STR      r5,[r7,#0]
000038  2005              MOVS     r0,#5
00003a  f7fffffe          BL       delay_us
00003e  1c64              ADDS     r4,r4,#1
000040  b2e4              UXTB     r4,r4                 ;249
000042  2c08              CMP      r4,#8                 ;249
000044  d3e8              BCC      |L10.24|
000046  f8c68000          STR      r8,[r6,#0]            ;249
00004a  f7fffffe          BL       I2C_SDA_In
00004e  2005              MOVS     r0,#5                 ;249
000050  f7fffffe          BL       delay_us
000054  6035              STR      r5,[r6,#0]            ;249
000056  2005              MOVS     r0,#5                 ;249
000058  f7fffffe          BL       delay_us
00005c  4809              LDR      r0,|L10.132|
00005e  3808              SUBS     r0,r0,#8              ;249
000060  6800              LDR      r0,[r0,#0]            ;249
000062  0600              LSLS     r0,r0,#24             ;249
000064  d501              BPL      |L10.106|
000066  2401              MOVS     r4,#1                 ;249
000068  e000              B        |L10.108|
                  |L10.106|
00006a  2400              MOVS     r4,#0                 ;249
                  |L10.108|
00006c  603d              STR      r5,[r7,#0]            ;249
00006e  2005              MOVS     r0,#5                 ;249
000070  f7fffffe          BL       delay_us
000074  f7fffffe          BL       I2C_SDA_Out
;;;263    		I2C_Delay();
;;;264    	}
;;;265    	return  (I2C_RecvACK() == 0 ?  true : false);
000078  b114              CBZ      r4,|L10.128|
00007a  2000              MOVS     r0,#0
                  |L10.124|
;;;266    }
00007c  e8bd87f0          POP      {r4-r10,pc}
                  |L10.128|
000080  2001              MOVS     r0,#1                 ;265
000082  e7fb              B        |L10.124|
;;;267    
                          ENDP

                  |L10.132|
                          DCD      0x40010c10

                          AREA ||i.I2C_Single_Read||, CODE, READONLY, ALIGN=1

                  I2C_Single_Read PROC
;;;315    
;;;316    unsigned char I2C_Single_Read(unsigned char nDEV_Address, unsigned char nREG_Address)
000000  b570              PUSH     {r4-r6,lr}
;;;317    {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;318    	unsigned char nREG_data;
;;;319    	I2C_Start();
000006  f7fffffe          BL       I2C_Start
;;;320    	I2C_SendByte(nDEV_Address);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       I2C_SendByte
;;;321    	I2C_SendByte(nREG_Address);
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       I2C_SendByte
;;;322    	I2C_Start();
000016  f7fffffe          BL       I2C_Start
00001a  1c64              ADDS     r4,r4,#1
;;;323    	I2C_SendByte(nDEV_Address + 1);
00001c  b2e0              UXTB     r0,r4
00001e  f7fffffe          BL       I2C_SendByte
;;;324    	nREG_data = I2C_RecvByte();
000022  f7fffffe          BL       I2C_RecvByte
000026  4604              MOV      r4,r0
;;;325    	I2C_SendACK(1);
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       I2C_SendACK
;;;326    	I2C_Stop();
00002e  f7fffffe          BL       I2C_Stop
;;;327    	return nREG_data;
000032  4620              MOV      r0,r4
;;;328    }
000034  bd70              POP      {r4-r6,pc}
;;;329    
                          ENDP


                          AREA ||i.I2C_Single_Write||, CODE, READONLY, ALIGN=1

                  I2C_Single_Write PROC
;;;306    
;;;307    void I2C_Single_Write(unsigned char nDEV_Address, unsigned char nREG_Address, unsigned char nREG_data)
000000  b570              PUSH     {r4-r6,lr}
;;;308    {
000002  4615              MOV      r5,r2
000004  460e              MOV      r6,r1
000006  4604              MOV      r4,r0
;;;309    	I2C_Start();
000008  f7fffffe          BL       I2C_Start
;;;310    	I2C_SendByte(nDEV_Address);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       I2C_SendByte
;;;311    	I2C_SendByte(nREG_Address);
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       I2C_SendByte
;;;312    	I2C_SendByte(nREG_data);
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       I2C_SendByte
;;;313    	I2C_Stop();
00001e  e8bd4070          POP      {r4-r6,lr}
000022  f7ffbffe          B.W      I2C_Stop
;;;314    }
;;;315    
                          ENDP


                          AREA ||i.I2C_Start||, CODE, READONLY, ALIGN=2

                  I2C_Start PROC
;;;161    
;;;162    static void I2C_Start(void)
000000  b570              PUSH     {r4-r6,lr}
;;;163    {
;;;164    	SDA1;
000002  480a              LDR      r0,|L13.44|
000004  2580              MOVS     r5,#0x80
000006  6005              STR      r5,[r0,#0]
;;;165    	SCL1;
000008  2440              MOVS     r4,#0x40
00000a  6004              STR      r4,[r0,#0]
00000c  2005              MOVS     r0,#5
00000e  f7fffffe          BL       delay_us
;;;166    	I2C_Delay();
;;;167    	SDA0;
000012  4e06              LDR      r6,|L13.44|
000014  1d36              ADDS     r6,r6,#4
000016  6035              STR      r5,[r6,#0]
000018  2005              MOVS     r0,#5
00001a  f7fffffe          BL       delay_us
;;;168    	I2C_Delay();
;;;169    	SCL0;
00001e  6034              STR      r4,[r6,#0]
000020  e8bd4070          POP      {r4-r6,lr}
000024  2005              MOVS     r0,#5
000026  f7ffbffe          B.W      delay_us
;;;170    	I2C_Delay();
;;;171    }
;;;172    
                          ENDP

00002a  0000              DCW      0x0000
                  |L13.44|
                          DCD      0x40010c10

                          AREA ||i.I2C_Stop||, CODE, READONLY, ALIGN=2

                  I2C_Stop PROC
;;;172    
;;;173    static void I2C_Stop(void)
000000  b570              PUSH     {r4-r6,lr}
;;;174    {
;;;175    	SDA0;
000002  4809              LDR      r0,|L14.40|
000004  2480              MOVS     r4,#0x80
000006  6004              STR      r4,[r0,#0]
000008  2005              MOVS     r0,#5
00000a  f7fffffe          BL       delay_us
;;;176    	I2C_Delay();
;;;177    	SCL1;
00000e  4d06              LDR      r5,|L14.40|
000010  2040              MOVS     r0,#0x40
000012  1f2d              SUBS     r5,r5,#4
000014  6028              STR      r0,[r5,#0]
000016  2005              MOVS     r0,#5
000018  f7fffffe          BL       delay_us
;;;178    	I2C_Delay();
;;;179    	SDA1;
00001c  602c              STR      r4,[r5,#0]
00001e  e8bd4070          POP      {r4-r6,lr}
000022  2005              MOVS     r0,#5
000024  f7ffbffe          B.W      delay_us
;;;180    	I2C_Delay();
;;;181    }
;;;182    
                          ENDP

                  |L14.40|
                          DCD      0x40010c14

                          AREA ||i.I2C_Write_Command||, CODE, READONLY, ALIGN=2

                  I2C_Write_Command PROC
;;;298    
;;;299    void I2C_Write_Command(unsigned char nDEV_Address, unsigned char nREG_Address)
000000  b570              PUSH     {r4-r6,lr}
;;;300    {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;301    	I2C_Start();
000006  f7fffffe          BL       I2C_Start
;;;302    	g_bI2CValidAck = I2C_SendByte(nDEV_Address);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       I2C_SendByte
000010  4c04              LDR      r4,|L15.36|
000012  7020              STRB     r0,[r4,#0]
;;;303    	g_bI2CValidAck = I2C_SendByte(nREG_Address);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       I2C_SendByte
00001a  7020              STRB     r0,[r4,#0]
;;;304    	I2C_Stop();
00001c  e8bd4070          POP      {r4-r6,lr}
000020  f7ffbffe          B.W      I2C_Stop
;;;305    }
;;;306    
                          ENDP

                  |L15.36|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=0

                  g_bI2CValidAck
000000  00                DCB      0x00
