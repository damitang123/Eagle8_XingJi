; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_adddecshift.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_adddecshift.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_AddDecShift.c]
                          THUMB

                          AREA ||i.GUI_AddDecShift||, CODE, READONLY, ALIGN=2

                  GUI_AddDecShift PROC
;;;103    */
;;;104    void GUI_AddDecShift(I32 v, U8 Len, U8 Shift, char**ps) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  2800              CMP      r0,#0
000004  da07              BGE      |L1.22|
000006  681c              LDR      r4,[r3,#0]
000008  262d              MOVS     r6,#0x2d
00000a  1c65              ADDS     r5,r4,#1
00000c  601d              STR      r5,[r3,#0]
00000e  7026              STRB     r6,[r4,#0]
000010  4240              RSBS     r0,r0,#0
000012  2401              MOVS     r4,#1
000014  e000              B        |L1.24|
                  |L1.22|
000016  2400              MOVS     r4,#0
                  |L1.24|
;;;105      char c;
;;;106      long d;
;;;107      #ifndef _CM16C
;;;108        Len -= _Check_NegLong(&v, ps); /* TASKING: Tool internal error S003: asertion failed - please report */
000018  1b09              SUBS     r1,r1,r4
00001a  b2c9              UXTB     r1,r1
;;;109      #else
;;;110        if (v < 0) {
;;;111          *(*ps)++ = '-';
;;;112          v = -v;
;;;113        }
;;;114      #endif
;;;115      if (Shift) {
00001c  b10a              CBZ      r2,|L1.34|
00001e  1e49              SUBS     r1,r1,#1
;;;116        Len--;
000020  b2c9              UXTB     r1,r1
                  |L1.34|
;;;117      }
;;;118    #if GUI_DEBUG_LEVEL >1
;;;119      if (Len > 9) {
;;;120        Len = 9;
;;;121        GUI_DEBUG_ERROROUT("Can not display more than 9 dec. digits");
;;;122      }
;;;123    #endif
;;;124      if ((U32)v >= GUI_Pow10[Len])
000022  4e13              LDR      r6,|L1.112|
000024  f8564021          LDR      r4,[r6,r1,LSL #2]
000028  4284              CMP      r4,r0
00002a  d800              BHI      |L1.46|
;;;125    	v = GUI_Pow10[Len] - 1;
00002c  1e60              SUBS     r0,r4,#1
                  |L1.46|
;;;126      while (Len) {
;;;127        if (Len-- == Shift)
;;;128          *(*ps)++ = GUI_DecChar;
00002e  4f11              LDR      r7,|L1.116|
                  |L1.48|
000030  b1d1              CBZ      r1,|L1.104|
000032  460c              MOV      r4,r1                 ;127
000034  1e49              SUBS     r1,r1,#1              ;127
000036  b2c9              UXTB     r1,r1                 ;127
000038  4294              CMP      r4,r2                 ;127
00003a  d106              BNE      |L1.74|
00003c  681c              LDR      r4,[r3,#0]
00003e  783d              LDRB     r5,[r7,#0]  ; GUI_DecChar
000040  f1040c01          ADD      r12,r4,#1
000044  f8c3c000          STR      r12,[r3,#0]
000048  7025              STRB     r5,[r4,#0]
                  |L1.74|
;;;129        d = GUI_Pow10[Len];
00004a  f8564021          LDR      r4,[r6,r1,LSL #2]
;;;130        c = (char) (v / d);
00004e  fb90f5f4          SDIV     r5,r0,r4
000052  b2ed              UXTB     r5,r5
;;;131        v -= c * d;
000054  fb050014          MLS      r0,r5,r4,r0
;;;132        *(*ps)++ = c + '0';
000058  681c              LDR      r4,[r3,#0]
00005a  3530              ADDS     r5,r5,#0x30
00005c  f1040c01          ADD      r12,r4,#1
000060  f8c3c000          STR      r12,[r3,#0]
000064  7025              STRB     r5,[r4,#0]
000066  e7e3              B        |L1.48|
                  |L1.104|
;;;133      }
;;;134      **ps = 0;
000068  6819              LDR      r1,[r3,#0]
00006a  2000              MOVS     r0,#0
00006c  7008              STRB     r0,[r1,#0]
;;;135    }
00006e  bdf0              POP      {r4-r7,pc}
;;;136    
                          ENDP

                  |L1.112|
                          DCD      ||.constdata||
                  |L1.116|
                          DCD      GUI_DecChar

                          AREA ||i.GUI_AddSign||, CODE, READONLY, ALIGN=1

                  GUI_AddSign PROC
;;;80     */
;;;81     long GUI_AddSign(long v, char**ps) {
000000  b510              PUSH     {r4,lr}
;;;82       char c;
;;;83       if (v < 0) {
000002  2800              CMP      r0,#0
000004  da02              BGE      |L2.12|
;;;84         c = '-';
000006  222d              MOVS     r2,#0x2d
;;;85         v = -v;
000008  4240              RSBS     r0,r0,#0
00000a  e000              B        |L2.14|
                  |L2.12|
;;;86       } else {
;;;87         c = '+';
00000c  222b              MOVS     r2,#0x2b
                  |L2.14|
;;;88       }
;;;89       *(*ps)++ = c;
00000e  680b              LDR      r3,[r1,#0]
000010  1c5c              ADDS     r4,r3,#1
000012  600c              STR      r4,[r1,#0]
000014  701a              STRB     r2,[r3,#0]
;;;90       **ps     = '\0';
000016  6809              LDR      r1,[r1,#0]
000018  2200              MOVS     r2,#0
00001a  700a              STRB     r2,[r1,#0]
;;;91       return v;
;;;92     }
00001c  bd10              POP      {r4,pc}
;;;93     
                          ENDP


                          AREA ||i.GUI_Long2Len||, CODE, READONLY, ALIGN=2

                  GUI_Long2Len PROC
;;;64     */
;;;65     int GUI_Long2Len(I32 vSign) {
000000  b510              PUSH     {r4,lr}
000002  1e01              SUBS     r1,r0,#0
;;;66       int Len = 1;
000004  f04f0001          MOV      r0,#1
000008  dd01              BLE      |L3.14|
;;;67       I32 v = (vSign > 0) ? vSign : -vSign;
00000a  460a              MOV      r2,r1
00000c  e000              B        |L3.16|
                  |L3.14|
00000e  424a              RSBS     r2,r1,#0
                  |L3.16|
;;;68       while (( ((U32)v) >= GUI_Pow10[Len]) && (Len < 9)) {
000010  4b06              LDR      r3,|L3.44|
000012  e000              B        |L3.22|
                  |L3.20|
000014  1c40              ADDS     r0,r0,#1
                  |L3.22|
000016  f8534020          LDR      r4,[r3,r0,LSL #2]
00001a  4294              CMP      r4,r2
00001c  d801              BHI      |L3.34|
00001e  2809              CMP      r0,#9
000020  dbf8              BLT      |L3.20|
                  |L3.34|
;;;69         Len++;
;;;70       }
;;;71       if (vSign < 0) {
000022  2900              CMP      r1,#0
000024  da00              BGE      |L3.40|
000026  1c40              ADDS     r0,r0,#1
                  |L3.40|
;;;72     		Len++;
;;;73       }
;;;74       return Len;
;;;75     }
000028  bd10              POP      {r4,pc}
;;;76     
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_Pow10
                          DCD      0x00000001
                          DCD      0x0000000a
                          DCD      0x00000064
                          DCD      0x000003e8
                          DCD      0x00002710
                          DCD      0x000186a0
                          DCD      0x000f4240
                          DCD      0x00989680
                          DCD      0x05f5e100
                          DCD      0x3b9aca00
