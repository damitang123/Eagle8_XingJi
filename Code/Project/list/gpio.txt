; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gpio.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gpio.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\Board_Support_Package\gpio.c]
                          THUMB

                          AREA ||i.Gpio_Ctrl||, CODE, READONLY, ALIGN=2

                  Gpio_Ctrl PROC
;;;76     
;;;77     void Gpio_Ctrl(eGpioControls eGpio, bool bNewState)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;78     {
;;;79     	switch(eGpio)
;;;80     	{
;;;81     		case eGpio_Power_On:
;;;82     			if(bNewState)
;;;83     			{
;;;84     				GPIOA->BSRR = GPIO_Pin_0;
000004  4e29              LDR      r6,|L1.172|
000006  2202              MOVS     r2,#2                 ;78
;;;85     			}
;;;86     			else
;;;87     			{
;;;88     				GPIOA->BRR = GPIO_Pin_0;
;;;89     			}
;;;90     			break;
;;;91     
;;;92     		case eGpio_System_Work_Led:
;;;93     			if(bNewState)
;;;94     			{
;;;95     				GPIOD->BSRR = GPIO_Pin_13;
;;;96     			}
;;;97     			else
;;;98     			{
;;;99     				GPIOD->BRR = GPIO_Pin_13;
;;;100    			}
;;;101    			break;
;;;102    
;;;103    		case eGpio_Gps_Power_On:
;;;104    			if(bNewState)
;;;105    			{
;;;106    				GPIOA->BSRR = GPIO_Pin_1;
;;;107    			}
;;;108    			else
;;;109    			{
;;;110    				GPIOA->BRR = GPIO_Pin_1;
;;;111    			}
;;;112    			break;
;;;113    
;;;114    		case eGpio_Lcd_BackLight:
;;;115    			if(bNewState)
;;;116    			{
;;;117    				GPIOE->BSRR = GPIO_Pin_6;
000008  f8dfc0a4          LDR      r12,|L1.176|
;;;118    			}
;;;119    			else
;;;120    			{
;;;121    				GPIOE->BRR = GPIO_Pin_6;
;;;122    			}
;;;123    			break;
;;;124    
;;;125    		case eGpio_Sample_Power_On:
;;;126    			if(bNewState)
;;;127    			{
;;;128    				GPIOB->BSRR = GPIO_Pin_1;
00000c  f8dfa0a4          LDR      r10,|L1.180|
000010  1d37              ADDS     r7,r6,#4              ;88
000012  2340              MOVS     r3,#0x40              ;117
;;;129    			}
;;;130    			else
;;;131    			{
;;;132    				GPIOB->BRR = GPIO_Pin_1;
;;;133    			}
;;;134    			break;
;;;135    
;;;136    		case eGpio_Pump_Charge_Sw_Ctrl:
;;;137    			if(bNewState)
;;;138    			{
;;;139    				GPIOC->BSRR = GPIO_Pin_8;
000014  4c28              LDR      r4,|L1.184|
;;;140    			}
;;;141    			else
;;;142    			{
;;;143    				GPIOC->BRR = GPIO_Pin_8;
;;;144    			}
;;;145    			break;
;;;146    
;;;147    		case eGpio_Pump_On_Sw_Ctrl:
;;;148    			if(bNewState)
;;;149    			{
;;;150    				GPIOC->BSRR = GPIO_Pin_7;
;;;151    			}
;;;152    			else
;;;153    			{
;;;154    				GPIOC->BRR = GPIO_Pin_7;
;;;155    			}
;;;156    			break;
;;;157    
;;;158    		case eGpio_Alc_Clean_Sw_Ctrl:
;;;159    			/*低时清零..高时可采样实时酒精ADC*/
;;;160    			if(bNewState)
;;;161    			{
;;;162    				GPIOB->BRR = GPIO_Pin_15;
000016  0395              LSLS     r5,r2,#14
000018  f10c0904          ADD      r9,r12,#4             ;121
00001c  f10a0b04          ADD      r11,r10,#4            ;132
000020  280c              CMP      r0,#0xc               ;79
000022  d20a              BCS      |L1.58|
000024  e8dff000          TBB      [pc,r0]               ;79
000028  060d161b          DCB      0x06,0x0d,0x16,0x1b
00002c  22282f33          DCB      0x22,0x28,0x2f,0x33
000030  3909093c          DCB      0x39,0x09,0x09,0x3c
000034  2001              MOVS     r0,#1                 ;78
000036  b111              CBZ      r1,|L1.62|
000038  6030              STR      r0,[r6,#0]            ;84
                  |L1.58|
;;;163    			}
;;;164    			else
;;;165    			{
;;;166    				GPIOB->BSRR = GPIO_Pin_15;
;;;167    			}
;;;168    			break;
;;;169    
;;;170    		case eGpio_QuickTest_Alc_Clean_Sw_Ctrl:
;;;171    			/*低时清零..高时可采样实时酒精ADC*/
;;;172    			if(bNewState)
;;;173    			{
;;;174    				GPIOE->BRR = GPIO_Pin_6;
;;;175    			}
;;;176    			else
;;;177    			{
;;;178    				GPIOE->BSRR = GPIO_Pin_6;
;;;179    			}
;;;180    			break;
;;;181    
;;;182    		case eGpio_Moto_Ctrl:
;;;183    			if(bNewState)
;;;184    			{
;;;185    				GPIOA->BSRR = GPIO_Pin_15;
;;;186    			}
;;;187    			else
;;;188    			{
;;;189    				GPIOA->BRR = GPIO_Pin_15;
;;;190    			}
;;;191    			break;
;;;192    	}
;;;193    }
00003a  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.62|
00003e  6038              STR      r0,[r7,#0]            ;88
000040  e7fb              B        |L1.58|
000042  f44f5000          MOV      r0,#0x2000            ;95
000046  b109              CBZ      r1,|L1.76|
000048  491c              LDR      r1,|L1.188|
00004a  e001              B        |L1.80|
                  |L1.76|
00004c  491b              LDR      r1,|L1.188|
00004e  1d09              ADDS     r1,r1,#4              ;99
                  |L1.80|
000050  6008              STR      r0,[r1,#0]            ;99
000052  e7f2              B        |L1.58|
000054  b109              CBZ      r1,|L1.90|
000056  6032              STR      r2,[r6,#0]            ;106
000058  e7ef              B        |L1.58|
                  |L1.90|
00005a  603a              STR      r2,[r7,#0]            ;110
00005c  e7ed              B        |L1.58|
00005e  b111              CBZ      r1,|L1.102|
                  |L1.96|
000060  f8cc3000          STR      r3,[r12,#0]           ;117
000064  e7e9              B        |L1.58|
                  |L1.102|
000066  f8c93000          STR      r3,[r9,#0]            ;121
00006a  e7e6              B        |L1.58|
00006c  b109              CBZ      r1,|L1.114|
00006e  4650              MOV      r0,r10                ;128
000070  e000              B        |L1.116|
                  |L1.114|
000072  4658              MOV      r0,r11                ;132
                  |L1.116|
000074  6002              STR      r2,[r0,#0]            ;132
000076  e7e0              B        |L1.58|
000078  f44f7080          MOV      r0,#0x100             ;139
00007c  e004              B        |L1.136|
                  |L1.126|
00007e  6120              STR      r0,[r4,#0x10]         ;139
000080  e7db              B        |L1.58|
                  |L1.130|
000082  6160              STR      r0,[r4,#0x14]         ;143
000084  e7d9              B        |L1.58|
000086  2080              MOVS     r0,#0x80              ;150
                  |L1.136|
000088  2900              CMP      r1,#0                 ;150
00008a  d0fa              BEQ      |L1.130|
00008c  e7f7              B        |L1.126|
00008e  b109              CBZ      r1,|L1.148|
000090  4658              MOV      r0,r11                ;162
000092  e000              B        |L1.150|
                  |L1.148|
000094  4650              MOV      r0,r10                ;166
                  |L1.150|
000096  6005              STR      r5,[r0,#0]            ;166
000098  e7cf              B        |L1.58|
00009a  2900              CMP      r1,#0                 ;172
00009c  d1e3              BNE      |L1.102|
00009e  e7df              B        |L1.96|
0000a0  b109              CBZ      r1,|L1.166|
0000a2  6035              STR      r5,[r6,#0]            ;185
0000a4  e7c9              B        |L1.58|
                  |L1.166|
0000a6  603d              STR      r5,[r7,#0]            ;189
0000a8  e7c7              B        |L1.58|
;;;194    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L1.172|
                          DCD      0x40010810
                  |L1.176|
                          DCD      0x40011810
                  |L1.180|
                          DCD      0x40010c10
                  |L1.184|
                          DCD      0x40011000
                  |L1.188|
                          DCD      0x40011410

                          AREA ||i.Gpio_Init||, CODE, READONLY, ALIGN=2

                  Gpio_Init PROC
;;;3      
;;;4      void Gpio_Init(void)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;5      {
;;;6      	GPIO_InitTypeDef GPIO_InitStructure;
;;;7      
;;;8      	/*System Power IO*/
;;;9      	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
000004  2001              MOVS     r0,#1
000006  f8ad0000          STRH     r0,[sp,#0]
;;;10     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00000a  2110              MOVS     r1,#0x10
00000c  f88d1003          STRB     r1,[sp,#3]
;;;11     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
;;;12     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000010  4f47              LDR      r7,|L2.304|
000012  f88d0002          STRB     r0,[sp,#2]            ;11
000016  4669              MOV      r1,sp
000018  4638              MOV      r0,r7
00001a  f7fffffe          BL       GPIO_Init
;;;13     	Gpio_Ctrl(eGpio_Power_On, false);
00001e  2100              MOVS     r1,#0
000020  4608              MOV      r0,r1
000022  f7fffffe          BL       Gpio_Ctrl
;;;14     
;;;15     	/*LED指示灯*/
;;;16     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;
000026  1478              ASRS     r0,r7,#17
000028  f8ad0000          STRH     r0,[sp,#0]
;;;17     	GPIO_Init(GPIOD, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  4841              LDR      r0,|L2.308|
000030  f7fffffe          BL       GPIO_Init
;;;18     	Gpio_Ctrl(eGpio_System_Work_Led, true);
000034  2101              MOVS     r1,#1
000036  4608              MOV      r0,r1
000038  f7fffffe          BL       Gpio_Ctrl
;;;19     
;;;20     	/*Gps 电源使能*/
;;;21     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
00003c  2402              MOVS     r4,#2
00003e  f8ad4000          STRH     r4,[sp,#0]
;;;22     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000042  4669              MOV      r1,sp
000044  4638              MOV      r0,r7
000046  f7fffffe          BL       GPIO_Init
;;;23     	Gpio_Ctrl(eGpio_Gps_Power_On, true);
00004a  2101              MOVS     r1,#1
00004c  2002              MOVS     r0,#2
00004e  f7fffffe          BL       Gpio_Ctrl
;;;24     
;;;25     	/*采样板电源总开关.*/
;;;26     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
;;;27     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000052  f8df80e4          LDR      r8,|L2.312|
000056  f8ad4000          STRH     r4,[sp,#0]            ;26
00005a  4669              MOV      r1,sp
00005c  4640              MOV      r0,r8
00005e  f7fffffe          BL       GPIO_Init
;;;28     	Gpio_Ctrl(eGpio_Sample_Power_On, true);
000062  2101              MOVS     r1,#1
000064  2004              MOVS     r0,#4
000066  f7fffffe          BL       Gpio_Ctrl
;;;29     
;;;30     	/*ALCOHOL SENSOR CLEAN*/
;;;31     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;
00006a  03a5              LSLS     r5,r4,#14
00006c  f8ad5000          STRH     r5,[sp,#0]
;;;32     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000070  4669              MOV      r1,sp
000072  4640              MOV      r0,r8
000074  f7fffffe          BL       GPIO_Init
;;;33     	Gpio_Ctrl(eGpio_Alc_Clean_Sw_Ctrl, true);
000078  2101              MOVS     r1,#1
00007a  2007              MOVS     r0,#7
00007c  f7fffffe          BL       Gpio_Ctrl
;;;34     
;;;35     	/*PUMP Discharge switch,放电开关*/
;;;36     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;
000080  2080              MOVS     r0,#0x80
;;;37     	GPIO_Init(GPIOC, &GPIO_InitStructure);
000082  4e2e              LDR      r6,|L2.316|
000084  f8ad0000          STRH     r0,[sp,#0]            ;36
000088  4669              MOV      r1,sp
00008a  4630              MOV      r0,r6
00008c  f7fffffe          BL       GPIO_Init
;;;38     	Gpio_Ctrl(eGpio_Pump_On_Sw_Ctrl, false);
000090  2100              MOVS     r1,#0
000092  2006              MOVS     r0,#6
000094  f7fffffe          BL       Gpio_Ctrl
;;;39     
;;;40     	/*PUMP Charge EN,充电开关*/
;;;41     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
000098  01e4              LSLS     r4,r4,#7
00009a  f8ad4000          STRH     r4,[sp,#0]
;;;42     	GPIO_Init(GPIOC, &GPIO_InitStructure);
00009e  4669              MOV      r1,sp
0000a0  4630              MOV      r0,r6
0000a2  f7fffffe          BL       GPIO_Init
;;;43     	Gpio_Ctrl(eGpio_Pump_Charge_Sw_Ctrl, false);
0000a6  2100              MOVS     r1,#0
0000a8  2005              MOVS     r0,#5
0000aa  f7fffffe          BL       Gpio_Ctrl
;;;44     
;;;45     #if QUICK_TEST
;;;46     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;
0000ae  f8ad5000          STRH     r5,[sp,#0]
;;;47     	GPIO_Init(GPIOA, &GPIO_InitStructure);
0000b2  4669              MOV      r1,sp
0000b4  4638              MOV      r0,r7
0000b6  f7fffffe          BL       GPIO_Init
;;;48     	Gpio_Ctrl(eGpio_Moto_Ctrl, false);
0000ba  2100              MOVS     r1,#0
0000bc  200b              MOVS     r0,#0xb
0000be  f7fffffe          BL       Gpio_Ctrl
;;;49     
;;;50     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
;;;51     	GPIO_Init(GPIOE, &GPIO_InitStructure);
0000c2  4e1f              LDR      r6,|L2.320|
0000c4  2540              MOVS     r5,#0x40              ;50
0000c6  f8ad5000          STRH     r5,[sp,#0]            ;50
0000ca  4669              MOV      r1,sp
0000cc  4630              MOV      r0,r6
0000ce  f7fffffe          BL       GPIO_Init
;;;52     	Gpio_Ctrl(eGpio_QuickTest_Alc_Clean_Sw_Ctrl, true);
0000d2  2101              MOVS     r1,#1
0000d4  2008              MOVS     r0,#8
0000d6  f7fffffe          BL       Gpio_Ctrl
;;;53     #endif	
;;;54     
;;;55     	/*AD8320 CS*/
;;;56     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;
0000da  f8ad4000          STRH     r4,[sp,#0]
;;;57     	GPIO_Init(GPIOA, &GPIO_InitStructure);
0000de  4669              MOV      r1,sp
0000e0  4638              MOV      r0,r7
0000e2  f7fffffe          BL       GPIO_Init
;;;58     	GPIOA->BSRR = GPIO_Pin_6;
0000e6  4812              LDR      r0,|L2.304|
0000e8  3010              ADDS     r0,r0,#0x10
0000ea  6005              STR      r5,[r0,#0]
;;;59     
;;;60     	/*RTC CS*/
;;;61     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
0000ec  1484              ASRS     r4,r0,#18
0000ee  f8ad4000          STRH     r4,[sp,#0]
;;;62     	GPIO_Init(GPIOB, &GPIO_InitStructure);
0000f2  4669              MOV      r1,sp
0000f4  4640              MOV      r0,r8
0000f6  f7fffffe          BL       GPIO_Init
;;;63     	GPIOB->BRR = GPIO_Pin_12;
0000fa  480f              LDR      r0,|L2.312|
0000fc  3014              ADDS     r0,r0,#0x14
0000fe  6004              STR      r4,[r0,#0]
;;;64     
;;;65     	/*Extern printer*/
;;;66     	GPIOE->BRR = GPIO_Pin_2;
000100  4d0f              LDR      r5,|L2.320|
000102  2404              MOVS     r4,#4
000104  3514              ADDS     r5,r5,#0x14
000106  602c              STR      r4,[r5,#0]
;;;67     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000108  f8ad4000          STRH     r4,[sp,#0]
;;;68     	GPIO_Init(GPIOE, &GPIO_InitStructure);
00010c  4669              MOV      r1,sp
00010e  4630              MOV      r0,r6
000110  f7fffffe          BL       GPIO_Init
;;;69     	GPIOE->BRR = GPIO_Pin_2;
000114  602c              STR      r4,[r5,#0]
;;;70     
;;;71     	/*触摸屏探测IO.*/
;;;72     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
000116  2020              MOVS     r0,#0x20
000118  f8ad0000          STRH     r0,[sp,#0]
;;;73     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
00011c  2048              MOVS     r0,#0x48
00011e  f88d0003          STRB     r0,[sp,#3]
;;;74     	GPIO_Init(GPIOB, &GPIO_InitStructure);
000122  4669              MOV      r1,sp
000124  4640              MOV      r0,r8
000126  f7fffffe          BL       GPIO_Init
;;;75     }
00012a  e8bd83f8          POP      {r3-r9,pc}
;;;76     
                          ENDP

00012e  0000              DCW      0x0000
                  |L2.304|
                          DCD      0x40010800
                  |L2.308|
                          DCD      0x40011400
                  |L2.312|
                          DCD      0x40010c00
                  |L2.316|
                          DCD      0x40011000
                  |L2.320|
                          DCD      0x40011800

                          AREA ||i.System_Led_Flash||, CODE, READONLY, ALIGN=2

                  System_Led_Flash PROC
;;;194    
;;;195    void System_Led_Flash(void)
000000  490d              LDR      r1,|L3.56|
;;;196    {
;;;197    	static unsigned char nLedFlashCnt = 0;
;;;198    	switch(nLedFlashCnt++)
000002  7808              LDRB     r0,[r1,#0]  ; nLedFlashCnt
000004  1c42              ADDS     r2,r0,#1
000006  700a              STRB     r2,[r1,#0]
000008  2832              CMP      r0,#0x32
00000a  d011              BEQ      |L3.48|
00000c  dc05              BGT      |L3.26|
00000e  b168              CBZ      r0,|L3.44|
000010  2814              CMP      r0,#0x14
000012  d00d              BEQ      |L3.48|
000014  2828              CMP      r0,#0x28
000016  d108              BNE      |L3.42|
000018  e008              B        |L3.44|
                  |L3.26|
00001a  283c              CMP      r0,#0x3c
00001c  d006              BEQ      |L3.44|
00001e  2846              CMP      r0,#0x46
000020  d006              BEQ      |L3.48|
000022  28c8              CMP      r0,#0xc8
000024  d101              BNE      |L3.42|
;;;199    	{
;;;200    		case 0:
;;;201    			Gpio_Ctrl(eGpio_System_Work_Led, true);
;;;202    			break;
;;;203    		case 20:
;;;204    			Gpio_Ctrl(eGpio_System_Work_Led, false);
;;;205    			break;
;;;206    		case 40:
;;;207    			Gpio_Ctrl(eGpio_System_Work_Led, true);
;;;208    			break;
;;;209    		case 50:
;;;210    			Gpio_Ctrl(eGpio_System_Work_Led, false);
;;;211    			break;
;;;212    		case 60:
;;;213    			Gpio_Ctrl(eGpio_System_Work_Led, true);
;;;214    			break;
;;;215    		case 70:
;;;216    			Gpio_Ctrl(eGpio_System_Work_Led, false);
;;;217    			break;
;;;218    		case 200:
;;;219    			nLedFlashCnt = 0;
000026  2000              MOVS     r0,#0
000028  7008              STRB     r0,[r1,#0]
                  |L3.42|
;;;220    			break;
;;;221    	}
;;;222    }
00002a  4770              BX       lr
                  |L3.44|
00002c  2101              MOVS     r1,#1                 ;201
00002e  e000              B        |L3.50|
                  |L3.48|
000030  2100              MOVS     r1,#0                 ;204
                  |L3.50|
000032  2001              MOVS     r0,#1                 ;216
000034  f7ffbffe          B.W      Gpio_Ctrl
                          ENDP

                  |L3.56|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=0

                  nLedFlashCnt
000000  00                DCB      0x00
