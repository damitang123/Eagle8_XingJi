; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\edithex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edithex.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\EDITHex.c]
                          THUMB

                          AREA ||i.EDIT_SetHexMode||, CODE, READONLY, ALIGN=2

                  EDIT_SetHexMode PROC
;;;187    */
;;;188    void EDIT_SetHexMode(EDIT_Handle hEdit, U32 Value, U32 Min, U32 Max) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  461d              MOV      r5,r3
000006  4616              MOV      r6,r2
000008  460f              MOV      r7,r1
00000a  ea5f0800          MOVS     r8,r0
00000e  d029              BEQ      |L1.100|
;;;189      EDIT_Obj* pObj;
;;;190      WM_LOCK();
;;;191      if (hEdit) {
;;;192        int MaxLen;
;;;193        pObj = EDIT_H2P(hEdit);
000010  f7fffffe          BL       GUI_ALLOC_h2p
;;;194        pObj->pfAddKeyEx = _AddKeyHex;
000014  4914              LDR      r1,|L1.104|
;;;195        pObj->pfUpdateBuffer= _UpdateBuffer;
000016  64c1              STR      r1,[r0,#0x4c]
000018  4914              LDR      r1,|L1.108|
00001a  4604              MOV      r4,r0                 ;193
;;;196        pObj->CurrentValue = Value;
;;;197        pObj->CursorPos = 0;
00001c  6501              STR      r1,[r0,#0x50]
00001e  2100              MOVS     r1,#0
000020  e9c4710f          STRD     r7,r1,[r4,#0x3c]
;;;198        MaxLen = pObj->MaxLen;
000024  f9b0102a          LDRSH    r1,[r0,#0x2a]
000028  1e0a              SUBS     r2,r1,#0
;;;199        if (MaxLen <= 0 ) {
00002a  dc06              BGT      |L1.58|
;;;200          MaxLen = _GetNumDigits(Max);
00002c  4628              MOV      r0,r5
00002e  2100              MOVS     r1,#0
000030  e001              B        |L1.54|
                  |L1.50|
000032  0900              LSRS     r0,r0,#4
000034  1c49              ADDS     r1,r1,#1
                  |L1.54|
000036  2800              CMP      r0,#0
000038  d1fb              BNE      |L1.50|
                  |L1.58|
;;;201        }
;;;202        if (MaxLen > 8) {
00003a  2908              CMP      r1,#8
00003c  dd00              BLE      |L1.64|
;;;203          MaxLen = 8;
00003e  2108              MOVS     r1,#8
                  |L1.64|
;;;204        }
;;;205        if (MaxLen != pObj->MaxLen) {
000040  428a              CMP      r2,r1
000042  d002              BEQ      |L1.74|
;;;206          EDIT_SetMaxLen(hEdit, MaxLen);
000044  4640              MOV      r0,r8
000046  f7fffffe          BL       EDIT_SetMaxLen
                  |L1.74|
;;;207        }
;;;208        pObj->Min = Min;
;;;209        pObj->Max = Max;
;;;210        pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
00004a  e9c4650c          STRD     r6,r5,[r4,#0x30]
00004e  2001              MOVS     r0,#1
000050  f8840048          STRB     r0,[r4,#0x48]
;;;211        _UpdateBuffer(hEdit);
000054  4640              MOV      r0,r8
000056  f7fffffe          BL       _UpdateBuffer
;;;212        WM_Invalidate(hEdit);
00005a  4640              MOV      r0,r8
00005c  e8bd41f0          POP      {r4-r8,lr}
000060  f7ffbffe          B.W      WM_InvalidateWindow
                  |L1.100|
;;;213      }
;;;214      WM_UNLOCK();
;;;215    }
000064  e8bd81f0          POP      {r4-r8,pc}
;;;216    
                          ENDP

                  |L1.104|
                          DCD      _AddKeyHex
                  |L1.108|
                          DCD      _UpdateBuffer

                          AREA ||i._AddKeyHex||, CODE, READONLY, ALIGN=2

                  _AddKeyHex PROC
;;;131    */
;;;132    static void _AddKeyHex(EDIT_Handle hObj, int Key) {
000000  b570              PUSH     {r4-r6,lr}
000002  460e              MOV      r6,r1
000004  4605              MOV      r5,r0
;;;133      EDIT_Obj * pObj;
;;;134      pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  0004              MOVS     r4,r0
;;;135      if (pObj) {
00000c  d02c              BEQ      |L2.104|
;;;136        switch (Key) {
00000e  2e10              CMP      r6,#0x10
000010  d036              BEQ      |L2.128|
000012  2e11              CMP      r6,#0x11
000014  d02d              BEQ      |L2.114|
000016  2e12              CMP      r6,#0x12
000018  d030              BEQ      |L2.124|
;;;137          #if EDIT_HEX_DIGITONLY
;;;138          case GUI_KEY_UP:
;;;139            {
;;;140              int Nibble = (_GetCurrentNibble(pObj) + 1) & 15;
;;;141              _EditHex(Nibble, pObj, hObj);
;;;142            }
;;;143            break;
;;;144          case GUI_KEY_DOWN:
;;;145            {
;;;146              int Nibble = (_GetCurrentNibble(pObj) + 1) & 15;
;;;147              _EditHex(Nibble, pObj, hObj);
;;;148            }
;;;149            break;
;;;150          #else
;;;151          case GUI_KEY_UP:
;;;152            _AddPosition(pObj, hObj, 1);
;;;153            break;
;;;154          case GUI_KEY_DOWN:
;;;155            _AddPosition(pObj, hObj, -1);
00001a  f04f32ff          MOV      r2,#0xffffffff
00001e  2e13              CMP      r6,#0x13              ;136
000020  d028              BEQ      |L2.116|
000022  f1a60130          SUB      r1,r6,#0x30           ;136
000026  2909              CMP      r1,#9                 ;136
000028  d906              BLS      |L2.56|
00002a  f0260120          BIC      r1,r6,#0x20           ;136
00002e  f1a10041          SUB      r0,r1,#0x41           ;136
000032  2805              CMP      r0,#5                 ;136
000034  d818              BHI      |L2.104|
000036  3937              SUBS     r1,r1,#0x37           ;136
                  |L2.56|
;;;156            break;
;;;157          #endif
;;;158          case GUI_KEY_RIGHT:
;;;159            EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
;;;160            break;
;;;161          case GUI_KEY_LEFT:
;;;162            EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
;;;163            break;
;;;164          default:
;;;165            {
;;;166              int Nibble = _HexChar2Int(Key);
;;;167              if (Nibble >= 0) {
000038  2900              CMP      r1,#0
00003a  db15              BLT      |L2.104|
00003c  f894002a          LDRB     r0,[r4,#0x2a]
000040  f8942040          LDRB     r2,[r4,#0x40]
000044  1a80              SUBS     r0,r0,r2
000046  1e40              SUBS     r0,r0,#1
000048  0080              LSLS     r0,r0,#2
00004a  220f              MOVS     r2,#0xf
00004c  4082              LSLS     r2,r2,r0
00004e  4081              LSLS     r1,r1,r0
000050  6be0              LDR      r0,[r4,#0x3c]
000052  4390              BICS     r0,r0,r2
000054  4301              ORRS     r1,r1,r0
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       EDIT__SetValueUnsigned
;;;168                _EditHex(Nibble, pObj, hObj);
;;;169                EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
00005c  6c21              LDR      r1,[r4,#0x40]
00005e  4620              MOV      r0,r4
                  |L2.96|
000060  f1110101          ADDS.W   r1,r1,#1
                  |L2.100|
000064  f7fffffe          BL       EDIT__SetCursorPos
                  |L2.104|
;;;170              }
;;;171            }
;;;172            break;
;;;173        }
;;;174      }
;;;175      _UpdateBuffer(hObj);
000068  4628              MOV      r0,r5
00006a  e8bd4070          POP      {r4-r6,lr}
00006e  f7ffbffe          B.W      _UpdateBuffer
                  |L2.114|
000072  2201              MOVS     r2,#1                 ;152
                  |L2.116|
000074  4629              MOV      r1,r5                 ;155
000076  f7fffffe          BL       _AddPosition
00007a  e7f5              B        |L2.104|
                  |L2.124|
00007c  6c21              LDR      r1,[r4,#0x40]         ;160
00007e  e7ef              B        |L2.96|
                  |L2.128|
000080  6c21              LDR      r1,[r4,#0x40]         ;162
000082  1e49              SUBS     r1,r1,#1              ;162
000084  e7ee              B        |L2.100|
;;;176    }
;;;177    
                          ENDP


                          AREA ||i._AddPosition||, CODE, READONLY, ALIGN=1

                  _AddPosition PROC
;;;107    */
;;;108    static void _AddPosition(EDIT_Obj* pObj, EDIT_Handle hObj, int Sign) {
000000  b430              PUSH     {r4,r5}
000002  4603              MOV      r3,r0
000004  460d              MOV      r5,r1
;;;109      int Pos;
;;;110      U32 v;
;;;111      v = 1;
;;;112      Pos = pObj->MaxLen - pObj->CursorPos - 1;
000006  f9b3102a          LDRSH    r1,[r3,#0x2a]
00000a  6c1c              LDR      r4,[r3,#0x40]
00000c  2001              MOVS     r0,#1                 ;111
00000e  1b0c              SUBS     r4,r1,r4
000010  1e64              SUBS     r4,r4,#1
000012  e000              B        |L3.22|
                  |L3.20|
;;;113      while (Pos--) {
;;;114        v <<= 4;
000014  0100              LSLS     r0,r0,#4
                  |L3.22|
000016  1e64              SUBS     r4,r4,#1
000018  d2fc              BCS      |L3.20|
;;;115      }
;;;116      if (Sign < 0) {
00001a  2a00              CMP      r2,#0
00001c  da01              BGE      |L3.34|
;;;117        v = ~v + 1;
00001e  43c0              MVNS     r0,r0
000020  1c40              ADDS     r0,r0,#1
                  |L3.34|
;;;118      }
;;;119      EDIT__SetValueUnsigned(hObj, pObj->CurrentValue + v);
000022  6bd9              LDR      r1,[r3,#0x3c]
000024  4401              ADD      r1,r1,r0
000026  4628              MOV      r0,r5
000028  bc30              POP      {r4,r5}
00002a  f7ffbffe          B.W      EDIT__SetValueUnsigned
;;;120    }
;;;121    
                          ENDP


                          AREA ||i._UpdateBuffer||, CODE, READONLY, ALIGN=1

                  _UpdateBuffer PROC
;;;59     */
;;;60     static void _UpdateBuffer(EDIT_Handle hObj) {
000000  b538              PUSH     {r3-r5,lr}
;;;61       char * s;
;;;62       EDIT_Obj * pObj;
;;;63       pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000002  f7fffffe          BL       GUI_ALLOC_h2p
000006  4604              MOV      r4,r0
;;;64       s = (char*) GUI_ALLOC_h2p(pObj->hpText);
000008  f9b00028          LDRSH    r0,[r0,#0x28]
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;65       GUI_AddHex(pObj->CurrentValue, pObj->MaxLen, &s);
000010  9000              STR      r0,[sp,#0]
000012  f894102a          LDRB     r1,[r4,#0x2a]
000016  466a              MOV      r2,sp
000018  6be0              LDR      r0,[r4,#0x3c]
00001a  f7fffffe          BL       GUI_AddHex
;;;66     }
00001e  bd38              POP      {r3-r5,pc}
;;;67     
                          ENDP

