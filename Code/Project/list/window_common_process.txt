; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\window_common_process.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\window_common_process.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\User\UserWindow\Window_Common_Process.c]
                          THUMB

                          AREA ||i.AddWindowToList||, CODE, READONLY, ALIGN=2

                  AddWindowToList PROC
;;;282    
;;;283    void AddWindowToList(sWinManageList *pWin)
000000  4a06              LDR      r2,|L1.28|
;;;284    {
000002  6851              LDR      r1,[r2,#4]  ; _pWM_List
000004  b911              CBNZ     r1,|L1.12|
;;;285    	sWinManageList *pIndex;
;;;286    
;;;287    	if(_pWM_List == NULL)
;;;288    	{
;;;289    		_pWM_List = pWin;
000006  6050              STR      r0,[r2,#4]  ; _pWM_List
;;;290    	}
;;;291    	else
;;;292    	{
;;;293    		pIndex = _pWM_List;
;;;294    		while(pIndex->pNext)
;;;295    		{
;;;296    			pIndex = pIndex->pNext;
;;;297    		}
;;;298    
;;;299    		pWin->pPrev = pIndex;
;;;300    		pWin->pNext = pIndex->pNext;
;;;301    		pIndex->pNext = pWin;
;;;302    	}
;;;303    }
000008  4770              BX       lr
                  |L1.10|
00000a  4611              MOV      r1,r2
                  |L1.12|
00000c  690a              LDR      r2,[r1,#0x10]         ;294
00000e  2a00              CMP      r2,#0                 ;294
000010  d1fb              BNE      |L1.10|
000012  60c1              STR      r1,[r0,#0xc]          ;300
000014  690a              LDR      r2,[r1,#0x10]         ;300
000016  6102              STR      r2,[r0,#0x10]         ;301
000018  6108              STR      r0,[r1,#0x10]         ;301
00001a  4770              BX       lr
;;;304    
                          ENDP

                  |L1.28|
                          DCD      ||.data||

                          AREA ||i.CallBack_Draw_Battery||, CODE, READONLY, ALIGN=1

                  CallBack_Draw_Battery PROC
;;;103    
;;;104    void CallBack_Draw_Battery(WM_MESSAGE *pMsg)
000000  4770              BX       lr
;;;105    {
;;;106    #if 0
;;;107    	if(pMsg->MsgId == WM_PAINT)
;;;108    	{
;;;109    		switch(g_nBatteryLevel)
;;;110    		{
;;;111    			case 0:
;;;112    			case 1:
;;;113    				GUI_SetColor(g_nGlobalBKColor == GUI_BLACK ? GUI_RED  : GUI_RED);
;;;114    				/*Ìî³äÈÝÁ¿*/
;;;115    				break;
;;;116    			case 2:
;;;117    				GUI_SetColor(g_nGlobalBKColor == GUI_BLACK ? GUI_RED  : GUI_RED);
;;;118    				/*Ìî³äÈÝÁ¿*/
;;;119    				GUI_FillRect(24, 3 , 27, 9);
;;;120    				break;
;;;121    			case 3:
;;;122    				/*³ÈÉ«*/
;;;123    				GUI_SetColor(g_nGlobalBKColor == GUI_BLACK ? RGB2Hex(246, 186, 64) : RGB2Hex(226, 159, 54));
;;;124    				/*Ìî³äÈÝÁ¿*/
;;;125    				GUI_FillRect(24, 3 , 27, 9);
;;;126    				GUI_FillRect(18, 3 , 21, 9);
;;;127    				break;
;;;128    			case 4:
;;;129    				GUI_SetColor(g_nGlobalBKColor == GUI_BLACK ? GUI_GREEN : GUI_DARKGREEN);
;;;130    				/*Ìî³äÈÝÁ¿*/
;;;131    				GUI_FillRect(24, 3 , 27, 9);
;;;132    				GUI_FillRect(18, 3 , 21, 9);
;;;133    				GUI_FillRect(12, 3 , 15, 9);
;;;134    				break;
;;;135    			case 5:
;;;136    				GUI_SetColor(g_nGlobalBKColor == GUI_BLACK ? GUI_GREEN : GUI_DARKGREEN);
;;;137    				/*Ìî³äÈÝÁ¿*/
;;;138    				GUI_FillRect(24, 3 , 27, 9);
;;;139    				GUI_FillRect(18, 3 , 21, 9);
;;;140    				GUI_FillRect(12, 3 , 15, 9);
;;;141    				GUI_FillRect(6, 3 , 9, 9);
;;;142    				break;
;;;143    		}
;;;144    		/*»­µç³ØÍâÐÎ*/
;;;145    		GUI_FillRect(0, 4 , 1, 8);
;;;146    		GUI_DrawRect(2, 0, WIN_BATTERY_XSIZE - 1, WIN_BATTERY_YSIZE - 1);
;;;147    	}
;;;148    #endif
;;;149    }
;;;150    
                          ENDP


                          AREA ||i.Config_Button_Property||, CODE, READONLY, ALIGN=2

                  Config_Button_Property PROC
;;;180    
;;;181    void Config_Button_Property(WM_HWIN hWin)
000000  b510              PUSH     {r4,lr}
;;;182    {
000002  4604              MOV      r4,r0
;;;183    	BUTTON_SetBkColor(hWin, 0, _RGB(94, 109, 131));
000004  4a0d              LDR      r2,|L3.60|
000006  2100              MOVS     r1,#0
000008  f7fffffe          BL       BUTTON_SetBkColor
;;;184    	BUTTON_SetBkColor(hWin, 1, _RGB(50, 60, 80));
00000c  4a0c              LDR      r2,|L3.64|
00000e  2101              MOVS     r1,#1
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       BUTTON_SetBkColor
;;;185    	BUTTON_SetTextColor(hWin, 0, BUTTON_TEXT_COLOR_RELEASED);
000016  f06f427f          MVN      r2,#0xff000000
00001a  2100              MOVS     r1,#0
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       BUTTON_SetTextColor
;;;186    	BUTTON_SetTextColor(hWin, 1, GUI_YELLOW);
000022  f64f72ff          MOV      r2,#0xffff
000026  2101              MOVS     r1,#1
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       BUTTON_SetTextColor
;;;187    	BUTTON_SetFocussable(hWin, 0);
00002e  4620              MOV      r0,r4
000030  e8bd4010          POP      {r4,lr}
000034  2100              MOVS     r1,#0
000036  f7ffbffe          B.W      BUTTON_SetFocussable
;;;188    }
;;;189    
                          ENDP

00003a  0000              DCW      0x0000
                  |L3.60|
                          DCD      0x00836d5e
                  |L3.64|
                          DCD      0x00503c32

                          AREA ||i.Create_Dialog_Caption||, CODE, READONLY, ALIGN=2

                  Create_Dialog_Caption PROC
;;;223    
;;;224    WM_HWIN Create_Dialog_Caption(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;225    {
000002  6884              LDR      r4,[r0,#8]
000004  b088              SUB      sp,sp,#0x20
000006  4606              MOV      r6,r0
;;;226    	WM_HWIN hWin = NULL;
000008  2500              MOVS     r5,#0
00000a  b37c              CBZ      r4,|L4.108|
;;;227    	GUI_RECT rect;
;;;228    	const char *pStr = (const char *)(pMsg->Data.p);
;;;229    
;;;230    	if(pStr)
;;;231    	{
;;;232    		GUI_SetFont(_GetFont(Font_Title));
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       _GetFont
000012  f7fffffe          BL       GUI_SetFont
;;;233    		GUI_GetTextExtend(&rect, pStr, 50);
000016  2232              MOVS     r2,#0x32
000018  4621              MOV      r1,r4
00001a  a805              ADD      r0,sp,#0x14
00001c  f7fffffe          BL       GUI_GetTextExtend
;;;234    		hWin = TEXT_CreateEx(0, (Caption_Height - (rect.y1 - rect.y0 + 1)) >> 1, LCD_XSIZE, rect.y1 - rect.y0 + 3,
000020  2000              MOVS     r0,#0
000022  2102              MOVS     r1,#2
000024  e9cd1001          STRD     r1,r0,[sp,#4]
000028  e9cd0403          STRD     r0,r4,[sp,#0xc]
00002c  f9b60004          LDRSH    r0,[r6,#4]
000030  9000              STR      r0,[sp,#0]
000032  f9bd001a          LDRSH    r0,[sp,#0x1a]
000036  f9bd1016          LDRSH    r1,[sp,#0x16]
00003a  22f0              MOVS     r2,#0xf0
00003c  1a40              SUBS     r0,r0,r1
00003e  1cc3              ADDS     r3,r0,#3
000040  f1c0001d          RSB      r0,r0,#0x1d
000044  1041              ASRS     r1,r0,#1
000046  2000              MOVS     r0,#0
000048  f7fffffe          BL       TEXT_CreateEx
00004c  4605              MOV      r5,r0
;;;235    							 pMsg->hWin,
;;;236    							 WM_CF_SHOW, 0, 0, pStr);
;;;237    		TEXT_SetFont(hWin, _GetFont(Font_Title));
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       _GetFont
000054  4601              MOV      r1,r0
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       TEXT_SetFont
;;;238    		TEXT_SetTextColor(hWin, _RGB(80, 0, 71));
00005c  4905              LDR      r1,|L4.116|
00005e  4628              MOV      r0,r5
000060  f7fffffe          BL       TEXT_SetTextColor
;;;239    		TEXT_SetTextAlign(hWin, GUI_TA_CENTER);
000064  2102              MOVS     r1,#2
000066  4628              MOV      r0,r5
000068  f7fffffe          BL       TEXT_SetTextAlign
                  |L4.108|
;;;240    	}
;;;241    
;;;242    	return hWin;
;;;243    }
00006c  b008              ADD      sp,sp,#0x20
00006e  4628              MOV      r0,r5                 ;242
000070  bd70              POP      {r4-r6,pc}
;;;244    
                          ENDP

000072  0000              DCW      0x0000
                  |L4.116|
                          DCD      0x00470050

                          AREA ||i.Create_Left_Button||, CODE, READONLY, ALIGN=1

                  Create_Left_Button PROC
;;;189    
;;;190    WM_HWIN Create_Left_Button(WM_HWIN hParent)
000000  b51f              PUSH     {r0-r4,lr}
;;;191    {
;;;192    	WM_HWIN hWin;
;;;193    	hWin = BUTTON_CreateEx(2,  LCD_YSIZE - Bottom_Height + 2, LEFT_BUTTON_WIDTH, Bottom_Height - 4,
000002  f44f72b8          MOV      r2,#0x170
000006  2102              MOVS     r1,#2
000008  2303              MOVS     r3,#3
00000a  e9cd0300          STRD     r0,r3,[sp,#0]
00000e  e9cd1202          STRD     r1,r2,[sp,#8]
000012  231a              MOVS     r3,#0x1a
000014  2246              MOVS     r2,#0x46
000016  f44f7192          MOV      r1,#0x124
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       BUTTON_CreateEx
000020  4604              MOV      r4,r0
;;;194    						   hParent,
;;;195    						   WM_CF_SHOW | WM_CF_HASTRANS, BUTTON_CF_CIRCLE_ANGLE, BUTTON_ID_LEFT);
;;;196    	BUTTON_SetFont(hWin, _GetFont(Font_Left_Button));
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       _GetFont
000028  4601              MOV      r1,r0
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       BUTTON_SetFont
;;;197    	Config_Button_Property(hWin);
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       Config_Button_Property
;;;198    	return hWin;
;;;199    }
000036  b004              ADD      sp,sp,#0x10
000038  4620              MOV      r0,r4                 ;198
00003a  bd10              POP      {r4,pc}
;;;200    
                          ENDP


                          AREA ||i.Create_Middle_Button||, CODE, READONLY, ALIGN=1

                  Create_Middle_Button PROC
;;;211    
;;;212    WM_HWIN Create_Middle_Button(WM_HWIN hParent)
000000  b51f              PUSH     {r0-r4,lr}
;;;213    {
;;;214    	WM_HWIN hWin;
;;;215    	hWin = BUTTON_CreateEx((LCD_XSIZE - MIDDLE_BUTTON_WIDTH) >> 1,  LCD_YSIZE - Bottom_Height + 2, MIDDLE_BUTTON_WIDTH, Bottom_Height - 4,
000002  f44f72b9          MOV      r2,#0x172
000006  2102              MOVS     r1,#2
000008  2303              MOVS     r3,#3
00000a  e9cd1202          STRD     r1,r2,[sp,#8]
00000e  e9cd0300          STRD     r0,r3,[sp,#0]
000012  2250              MOVS     r2,#0x50
000014  231a              MOVS     r3,#0x1a
000016  f44f7192          MOV      r1,#0x124
00001a  4610              MOV      r0,r2
00001c  f7fffffe          BL       BUTTON_CreateEx
000020  4604              MOV      r4,r0
;;;216    						   hParent,
;;;217    						   WM_CF_SHOW | WM_CF_HASTRANS, BUTTON_CF_CIRCLE_ANGLE , BUTTON_ID_MIDDLE);
;;;218    	BUTTON_SetFont(hWin, _GetFont(Font_Middle_Button));
000022  2003              MOVS     r0,#3
000024  f7fffffe          BL       _GetFont
000028  4601              MOV      r1,r0
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       BUTTON_SetFont
;;;219    	Config_Button_Property(hWin);
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       Config_Button_Property
;;;220    	return hWin;
;;;221    }
000036  b004              ADD      sp,sp,#0x10
000038  4620              MOV      r0,r4                 ;220
00003a  bd10              POP      {r4,pc}
;;;222    
                          ENDP


                          AREA ||i.Create_Right_Button||, CODE, READONLY, ALIGN=1

                  Create_Right_Button PROC
;;;200    
;;;201    WM_HWIN Create_Right_Button(WM_HWIN hParent)
000000  b51f              PUSH     {r0-r4,lr}
;;;202    {
;;;203    	WM_HWIN hWin;
;;;204    	hWin = BUTTON_CreateEx(LCD_XSIZE - RIGHT_BUTTON_WIDTH - 2,  LCD_YSIZE - Bottom_Height + 2, RIGHT_BUTTON_WIDTH, Bottom_Height - 4,
000002  f2401271          MOV      r2,#0x171
000006  2102              MOVS     r1,#2
000008  2303              MOVS     r3,#3
00000a  e9cd0300          STRD     r0,r3,[sp,#0]
00000e  e9cd1202          STRD     r1,r2,[sp,#8]
000012  231a              MOVS     r3,#0x1a
000014  2246              MOVS     r2,#0x46
000016  f44f7192          MOV      r1,#0x124
00001a  20a8              MOVS     r0,#0xa8
00001c  f7fffffe          BL       BUTTON_CreateEx
000020  4604              MOV      r4,r0
;;;205    						   hParent,
;;;206    						   WM_CF_SHOW | WM_CF_HASTRANS, BUTTON_CF_CIRCLE_ANGLE , BUTTON_ID_RIGHT);
;;;207    	BUTTON_SetFont(hWin, _GetFont(Font_Right_Button));
000022  2002              MOVS     r0,#2
000024  f7fffffe          BL       _GetFont
000028  4601              MOV      r1,r0
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       BUTTON_SetFont
;;;208    	Config_Button_Property(hWin);
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       Config_Button_Property
;;;209    	return hWin;
;;;210    }
000036  b004              ADD      sp,sp,#0x10
000038  4620              MOV      r0,r4                 ;209
00003a  bd10              POP      {r4,pc}
;;;211    
                          ENDP


                          AREA ||i.DeleteWindowFromList||, CODE, READONLY, ALIGN=2

                  DeleteWindowFromList PROC
;;;304    
;;;305    void DeleteWindowFromList(WM_HWIN hWin)
000000  4a10              LDR      r2,|L8.68|
;;;306    {
000002  b510              PUSH     {r4,lr}
000004  6853              LDR      r3,[r2,#4]  ; _pWM_List
000006  2b00              CMP      r3,#0
000008  d007              BEQ      |L8.26|
00000a  4619              MOV      r1,r3
                  |L8.12|
;;;307    	sWinManageList *pIndex;
;;;308    
;;;309    	if(_pWM_List == NULL)
;;;310    	{
;;;311    		return;
;;;312    	}
;;;313    
;;;314    	/*ÔÚÁ´±íÖÐ²éÕÒ*/
;;;315    	pIndex = _pWM_List;
;;;316    	while(pIndex)
;;;317    	{
;;;318    		if(pIndex->hWin == hWin)
00000c  f9b14000          LDRSH    r4,[r1,#0]
000010  4284              CMP      r4,r0
000012  d003              BEQ      |L8.28|
;;;319    		{
;;;320    			break;
;;;321    		}
;;;322    		pIndex = pIndex->pNext;
000014  6909              LDR      r1,[r1,#0x10]
000016  2900              CMP      r1,#0
000018  d1f8              BNE      |L8.12|
                  |L8.26|
;;;323    	}
;;;324    
;;;325    	if(pIndex == NULL)
;;;326    	{
;;;327    		return;
;;;328    	}
;;;329    
;;;330    	if(pIndex == _pWM_List)
;;;331    	{
;;;332    		if(pIndex->pNext == NULL)
;;;333    		{
;;;334    			_pWM_List = NULL;
;;;335    		}
;;;336    		else
;;;337    		{
;;;338    			_pWM_List = pIndex->pNext;
;;;339    			_pWM_List->pPrev = NULL;
;;;340    		}
;;;341    	}
;;;342    	else
;;;343    	{
;;;344    		if(pIndex->pNext)
;;;345    		{
;;;346    			pIndex->pNext->pPrev = pIndex->pPrev;
;;;347    		}
;;;348    		pIndex->pPrev->pNext = pIndex->pNext;
;;;349    	}
;;;350    }
00001a  bd10              POP      {r4,pc}
                  |L8.28|
00001c  2900              CMP      r1,#0                 ;325
00001e  d0fc              BEQ      |L8.26|
000020  6908              LDR      r0,[r1,#0x10]         ;330
000022  4299              CMP      r1,r3                 ;330
000024  d106              BNE      |L8.52|
000026  2100              MOVS     r1,#0                 ;330
000028  b110              CBZ      r0,|L8.48|
00002a  6050              STR      r0,[r2,#4]            ;339  ; _pWM_List
00002c  60c1              STR      r1,[r0,#0xc]          ;339
00002e  bd10              POP      {r4,pc}
                  |L8.48|
000030  6051              STR      r1,[r2,#4]            ;334  ; _pWM_List
000032  bd10              POP      {r4,pc}
                  |L8.52|
000034  b108              CBZ      r0,|L8.58|
000036  68ca              LDR      r2,[r1,#0xc]          ;346
000038  60c2              STR      r2,[r0,#0xc]          ;346
                  |L8.58|
00003a  6908              LDR      r0,[r1,#0x10]         ;348
00003c  68c9              LDR      r1,[r1,#0xc]          ;348
00003e  6108              STR      r0,[r1,#0x10]         ;348
000040  bd10              POP      {r4,pc}
;;;351    
                          ENDP

000042  0000              DCW      0x0000
                  |L8.68|
                          DCD      ||.data||

                          AREA ||i.Draw_Dot_Line_Frame||, CODE, READONLY, ALIGN=2

                  Draw_Dot_Line_Frame PROC
;;;93     
;;;94     void Draw_Dot_Line_Frame(void)
000000  4813              LDR      r0,|L9.80|
;;;95     {
000002  b510              PUSH     {r4,lr}
;;;96     	GUI_SetColor(g_nGlobalBKColor == GUI_BLACK ? GUI_WHITE : GUI_BLACK);
000004  6800              LDR      r0,[r0,#0]  ; g_nGlobalBKColor
000006  b300              CBZ      r0,|L9.74|
000008  f05f0000          MOVS.W   r0,#0
                  |L9.12|
00000c  f7fffffe          BL       GUI_SetColor
;;;97     	GUI_SetLineStyle(GUI_LS_DOT);
000010  2002              MOVS     r0,#2
000012  f7fffffe          BL       GUI_SetLineStyle
;;;98     	GUI_DrawLine(0, 0, 0, 195);
000016  2200              MOVS     r2,#0
000018  23c3              MOVS     r3,#0xc3
00001a  4611              MOV      r1,r2
00001c  4610              MOV      r0,r2
00001e  f7fffffe          BL       GUI_DrawLine
;;;99     	GUI_DrawLine(0, 0, 239, 0);
000022  2300              MOVS     r3,#0
000024  22ef              MOVS     r2,#0xef
000026  4619              MOV      r1,r3
000028  4618              MOV      r0,r3
00002a  f7fffffe          BL       GUI_DrawLine
;;;100    	GUI_DrawLine(239, 0, 239, 195);
00002e  22ef              MOVS     r2,#0xef
000030  23c3              MOVS     r3,#0xc3
000032  2100              MOVS     r1,#0
000034  4610              MOV      r0,r2
000036  f7fffffe          BL       GUI_DrawLine
;;;101    	GUI_DrawLine(0, 195, 239, 195);
00003a  23c3              MOVS     r3,#0xc3
00003c  22ef              MOVS     r2,#0xef
00003e  e8bd4010          POP      {r4,lr}
000042  4619              MOV      r1,r3
000044  2000              MOVS     r0,#0
000046  f7ffbffe          B.W      GUI_DrawLine
                  |L9.74|
00004a  f06f407f          MVN      r0,#0xff000000        ;96
00004e  e7dd              B        |L9.12|
;;;102    }
;;;103    
                          ENDP

                  |L9.80|
                          DCD      ||.data||

                          AREA ||i.Enter_Callback_Hook||, CODE, READONLY, ALIGN=2

                  Enter_Callback_Hook PROC
;;;29     
;;;30     void Enter_Callback_Hook(WM_MESSAGE *pMsg)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;31     {
000004  4604              MOV      r4,r0
;;;32     	switch(pMsg->MsgId)
;;;33     	{
;;;34     		case WM_PAINT:
;;;35     			_Paint_Dialog_BackGround();
;;;36     			break;
;;;37     
;;;38     		case WM_KEY:
;;;39     			switch (WM_Key_Code)
;;;40     			{
;;;41     				case GUI_KEY_LEFT_FUN:
;;;42     					BUTTON_SetPressed(WM_GetDialogItem(pMsg->hWin, BUTTON_ID_LEFT), WM_Key_Status == 1 ? 1 : 0);
000006  f44f75b8          MOV      r5,#0x170
00000a  6800              LDR      r0,[r0,#0]            ;32
;;;43     					break;
;;;44     				case GUI_KEY_RIGHT_FUN:
;;;45     					BUTTON_SetPressed(WM_GetDialogItem(pMsg->hWin, BUTTON_ID_RIGHT), WM_Key_Status == 1 ? 1 : 0);
00000c  1c6e              ADDS     r6,r5,#1
;;;46     					break;
;;;47     				case GUI_KEY_MIDDLE_FUN:
;;;48     					BUTTON_SetPressed(WM_GetDialogItem(pMsg->hWin, BUTTON_ID_MIDDLE), WM_Key_Status == 1 ? 1 : 0);
00000e  1caf              ADDS     r7,r5,#2
000010  280e              CMP      r0,#0xe               ;32
000012  d017              BEQ      |L10.68|
000014  280f              CMP      r0,#0xf               ;32
000016  d011              BEQ      |L10.60|
000018  2826              CMP      r0,#0x26              ;32
00001a  d163              BNE      |L10.228|
;;;49     					break;
;;;50     			}
;;;51     			if(WM_Key_Status == eKeyIgnore)
;;;52     			{
;;;53     				BUTTON_SetPressed(WM_GetDialogItem(pMsg->hWin, BUTTON_ID_LEFT), 0);
;;;54     				BUTTON_SetPressed(WM_GetDialogItem(pMsg->hWin, BUTTON_ID_RIGHT), 0);
;;;55     				BUTTON_SetPressed(WM_GetDialogItem(pMsg->hWin, BUTTON_ID_MIDDLE), 0);
;;;56     			}
;;;57     			return;
;;;58     			
;;;59     		case WM_NOTIFY_PARENT:
;;;60     			if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
00001c  68a0              LDR      r0,[r4,#8]
00001e  2802              CMP      r0,#2
000020  d160              BNE      |L10.228|
;;;61     			{
;;;62     				if(pMsg->hWinSrc == WM_GetDialogItem(pMsg->hWin, BUTTON_ID_LEFT))
000022  f9b40004          LDRSH    r0,[r4,#4]
000026  4629              MOV      r1,r5
000028  f7fffffe          BL       WM_GetDialogItem
00002c  f9b41006          LDRSH    r1,[r4,#6]
000030  2500              MOVS     r5,#0
000032  4288              CMP      r0,r1
000034  d143              BNE      |L10.190|
;;;63     				{
;;;64     					GUI_StoreKeyMsg(GUI_KEY_LEFT_FUN, 0);
000036  2100              MOVS     r1,#0
000038  2005              MOVS     r0,#5
;;;65     					WM_SendMessageNoPara(pMsg->hWin, WM_KEY);
;;;66     					pMsg->Data.v = 0;
00003a  e04b              B        |L10.212|
                  |L10.60|
00003c  e8bd41f0          POP      {r4-r8,lr}            ;35
000040  f7ffbffe          B.W      _Paint_Dialog_BackGround
                  |L10.68|
000044  68a0              LDR      r0,[r4,#8]            ;39
000046  6800              LDR      r0,[r0,#0]            ;39
000048  2805              CMP      r0,#5                 ;39
00004a  d004              BEQ      |L10.86|
00004c  2806              CMP      r0,#6                 ;39
00004e  d027              BEQ      |L10.160|
000050  280d              CMP      r0,#0xd               ;39
000052  d107              BNE      |L10.100|
000054  e028              B        |L10.168|
                  |L10.86|
000056  f9b40004          LDRSH    r0,[r4,#4]            ;42
00005a  4629              MOV      r1,r5                 ;42
00005c  e027              B        |L10.174|
00005e  bf00              NOP                            ;42
                  |L10.96|
000060  f7fffffe          BL       BUTTON_SetPressed
                  |L10.100|
000064  68a0              LDR      r0,[r4,#8]            ;51
000066  6840              LDR      r0,[r0,#4]            ;51
000068  2803              CMP      r0,#3                 ;51
00006a  d13b              BNE      |L10.228|
00006c  f9b40004          LDRSH    r0,[r4,#4]            ;53
000070  4629              MOV      r1,r5                 ;53
000072  f7fffffe          BL       WM_GetDialogItem
000076  2100              MOVS     r1,#0                 ;53
000078  f7fffffe          BL       BUTTON_SetPressed
00007c  f9b40004          LDRSH    r0,[r4,#4]            ;54
000080  4631              MOV      r1,r6                 ;54
000082  f7fffffe          BL       WM_GetDialogItem
000086  2100              MOVS     r1,#0                 ;54
000088  f7fffffe          BL       BUTTON_SetPressed
00008c  f9b40004          LDRSH    r0,[r4,#4]            ;55
000090  4639              MOV      r1,r7                 ;55
000092  f7fffffe          BL       WM_GetDialogItem
000096  e8bd41f0          POP      {r4-r8,lr}            ;55
00009a  2100              MOVS     r1,#0                 ;55
00009c  f7ffbffe          B.W      BUTTON_SetPressed
                  |L10.160|
0000a0  f9b40004          LDRSH    r0,[r4,#4]            ;45
0000a4  4631              MOV      r1,r6                 ;45
0000a6  e002              B        |L10.174|
                  |L10.168|
0000a8  f9b40004          LDRSH    r0,[r4,#4]            ;48
0000ac  4639              MOV      r1,r7                 ;48
                  |L10.174|
0000ae  f7fffffe          BL       WM_GetDialogItem
0000b2  68a1              LDR      r1,[r4,#8]            ;48
0000b4  6849              LDR      r1,[r1,#4]            ;48
0000b6  2901              CMP      r1,#1                 ;48
0000b8  d0d2              BEQ      |L10.96|
0000ba  2100              MOVS     r1,#0                 ;48
0000bc  e7d0              B        |L10.96|
                  |L10.190|
;;;67     				}
;;;68     				else if(pMsg->hWinSrc == WM_GetDialogItem(pMsg->hWin, BUTTON_ID_RIGHT))
0000be  f9b40004          LDRSH    r0,[r4,#4]
0000c2  4631              MOV      r1,r6
0000c4  f7fffffe          BL       WM_GetDialogItem
0000c8  f9b41006          LDRSH    r1,[r4,#6]
0000cc  4288              CMP      r0,r1
0000ce  d10b              BNE      |L10.232|
;;;69     				{
;;;70     					GUI_StoreKeyMsg(GUI_KEY_RIGHT_FUN, 0);
0000d0  2100              MOVS     r1,#0
0000d2  2006              MOVS     r0,#6
                  |L10.212|
0000d4  f7fffffe          BL       GUI_StoreKeyMsg
0000d8  f9b40004          LDRSH    r0,[r4,#4]            ;65
0000dc  210e              MOVS     r1,#0xe               ;65
0000de  f7fffffe          BL       WM_SendMessageNoPara
0000e2  60a5              STR      r5,[r4,#8]            ;66
                  |L10.228|
;;;71     					WM_SendMessageNoPara(pMsg->hWin, WM_KEY);
;;;72     					pMsg->Data.v = 0;
;;;73     				}
;;;74     				else if(pMsg->hWinSrc == WM_GetDialogItem(pMsg->hWin, BUTTON_ID_MIDDLE))
;;;75     				{
;;;76     					GUI_StoreKeyMsg(GUI_KEY_MIDDLE_FUN, 0);
;;;77     					WM_SendMessageNoPara(pMsg->hWin, WM_KEY);
;;;78     					pMsg->Data.v = 0;
;;;79     				}
;;;80     			}
;;;81     			break;
;;;82     	}
;;;83     }
0000e4  e8bd81f0          POP      {r4-r8,pc}
                  |L10.232|
0000e8  f9b40004          LDRSH    r0,[r4,#4]            ;74
0000ec  4639              MOV      r1,r7                 ;74
0000ee  f7fffffe          BL       WM_GetDialogItem
0000f2  f9b41006          LDRSH    r1,[r4,#6]            ;74
0000f6  4288              CMP      r0,r1                 ;74
0000f8  d1f4              BNE      |L10.228|
0000fa  2100              MOVS     r1,#0                 ;76
0000fc  200d              MOVS     r0,#0xd               ;76
0000fe  e7e9              B        |L10.212|
;;;84     
                          ENDP


                          AREA ||i.Exit_Callback_Hook||, CODE, READONLY, ALIGN=1

                  Exit_Callback_Hook PROC
;;;84     
;;;85     void Exit_Callback_Hook(WM_MESSAGE *pMsg)
000000  f7ffbffe          B.W      WM_DefaultProc
;;;86     {
;;;87     	switch(pMsg->MsgId)
;;;88     	{
;;;89     		
;;;90     	}
;;;91     	WM_DefaultProc(pMsg);
;;;92     }
;;;93     
                          ENDP


                          AREA ||i.FindWMBByWinType||, CODE, READONLY, ALIGN=2

                  FindWMBByWinType PROC
;;;352    /*ÔÚÁ´±íÖÐ²éÕÒÖ¸¶¨´°¿ÚÀàÐÍµÄ¹ÜÀíÄ£¿é*/
;;;353    sWinManageList *FindWMBByWinType(eUserWindow WinType)
000000  4601              MOV      r1,r0
;;;354    {
;;;355    	sWinManageList *pResult;
;;;356    
;;;357    	if(_pWM_List == NULL)
000002  4805              LDR      r0,|L12.24|
000004  6840              LDR      r0,[r0,#4]  ; _pWM_List
000006  2800              CMP      r0,#0                 ;354
000008  d005              BEQ      |L12.22|
                  |L12.10|
;;;358    	{
;;;359    		return 0;
;;;360    	}
;;;361    
;;;362    	pResult = _pWM_List;
;;;363    
;;;364    	while(pResult)
;;;365    	{
;;;366    		if(pResult->eWinType == WinType)
00000a  7a02              LDRB     r2,[r0,#8]
00000c  428a              CMP      r2,r1
00000e  d002              BEQ      |L12.22|
;;;367    		{
;;;368    			return pResult;
;;;369    		}
;;;370    		pResult = pResult->pNext;
000010  6900              LDR      r0,[r0,#0x10]
000012  2800              CMP      r0,#0
000014  d1f9              BNE      |L12.10|
                  |L12.22|
;;;371    	}
;;;372    
;;;373    	return NULL;
;;;374    }
000016  4770              BX       lr
;;;375    
                          ENDP

                  |L12.24|
                          DCD      ||.data||

                          AREA ||i.FindWMBFromListByWin||, CODE, READONLY, ALIGN=2

                  FindWMBFromListByWin PROC
;;;400    /*´ÓÁ´±íÖÐ²éÕÒÖ¸¶¨¾ä±úµÄ¹ÜÀíÄ£¿é*/
;;;401    sWinManageList *FindWMBFromListByWin(WM_HWIN  hWin)
000000  4601              MOV      r1,r0
;;;402    {
;;;403    	sWinManageList *pResult;
;;;404    
;;;405    	if(_pWM_List == NULL)
000002  4806              LDR      r0,|L13.28|
000004  6840              LDR      r0,[r0,#4]  ; _pWM_List
000006  2800              CMP      r0,#0                 ;402
000008  d007              BEQ      |L13.26|
;;;406    	{
;;;407    		return NULL;
;;;408    	}
;;;409    
;;;410    	pResult = _pWM_List;
;;;411    
;;;412    	while(pResult)
;;;413    	{
;;;414    		if(pResult->hWin == hWin)
00000a  bf00              NOP      
                  |L13.12|
00000c  f9b02000          LDRSH    r2,[r0,#0]
000010  428a              CMP      r2,r1
000012  d002              BEQ      |L13.26|
;;;415    		{
;;;416    			return pResult;
;;;417    		}
;;;418    
;;;419    		pResult = pResult->pNext;
000014  6900              LDR      r0,[r0,#0x10]
000016  2800              CMP      r0,#0
000018  d1f8              BNE      |L13.12|
                  |L13.26|
;;;420    	}
;;;421    
;;;422    	return NULL;
;;;423    }
00001a  4770              BX       lr
;;;424    
                          ENDP

                  |L13.28|
                          DCD      ||.data||

                          AREA ||i.GetFirstWinFromList||, CODE, READONLY, ALIGN=2

                  GetFirstWinFromList PROC
;;;425    /*²éÕÒÁ´±íÖÐµÚÒ»¸ö´°Ìå¾ä±ú*/
;;;426    WM_HWIN GetFirstWinFromList(void)
000000  4803              LDR      r0,|L14.16|
;;;427    {
;;;428    	sWinManageList *pResult;
;;;429    
;;;430    	if(_pWM_List == NULL)
000002  6840              LDR      r0,[r0,#4]  ; _pWM_List
000004  2800              CMP      r0,#0                 ;427
000006  d001              BEQ      |L14.12|
;;;431    	{
;;;432    		return (WM_HWIN)NULL;
;;;433    	}
;;;434    
;;;435    	pResult = _pWM_List;
;;;436    
;;;437    	return (pResult->hWin);
000008  f9b00000          LDRSH    r0,[r0,#0]
                  |L14.12|
;;;438    }
00000c  4770              BX       lr
;;;439    
                          ENDP

00000e  0000              DCW      0x0000
                  |L14.16|
                          DCD      ||.data||

                          AREA ||i.GetLastWMBFromList||, CODE, READONLY, ALIGN=2

                  GetLastWMBFromList PROC
;;;460    /*²éÕÒÁ´±íÖÐ×îºóÒ»¸ö´°ÌåµÄ½á¹¹ÌåÖ¸Õë*/
;;;461    sWinManageList *GetLastWMBFromList(void)
000000  4804              LDR      r0,|L15.20|
;;;462    {
;;;463    	sWinManageList *pResult;
;;;464    
;;;465    	if(_pWM_List == NULL)
000002  6840              LDR      r0,[r0,#4]  ; _pWM_List
000004  2800              CMP      r0,#0                 ;462
000006  d004              BEQ      |L15.18|
000008  e000              B        |L15.12|
                  |L15.10|
00000a  4608              MOV      r0,r1                 ;462
                  |L15.12|
;;;466    	{
;;;467    		return (sWinManageList *)NULL;
;;;468    	}
;;;469    
;;;470    	pResult = _pWM_List;
;;;471    
;;;472    	while(pResult->pNext)
00000c  6901              LDR      r1,[r0,#0x10]
00000e  2900              CMP      r1,#0
000010  d1fb              BNE      |L15.10|
                  |L15.18|
;;;473    	{
;;;474    		pResult = pResult->pNext;
;;;475    	}
;;;476    
;;;477    	return (pResult);
;;;478    }
000012  4770              BX       lr
;;;479    
                          ENDP

                  |L15.20|
                          DCD      ||.data||

                          AREA ||i.GetLastWinFromList||, CODE, READONLY, ALIGN=2

                  GetLastWinFromList PROC
;;;440    /*²éÕÒÁ´±íÖÐ×îºóÒ»¸ö´°Ìå¾ä±ú*/
;;;441    WM_HWIN GetLastWinFromList(void)
000000  4805              LDR      r0,|L16.24|
;;;442    {
;;;443    	sWinManageList *pResult;
;;;444    
;;;445    	if(_pWM_List == NULL)
000002  6840              LDR      r0,[r0,#4]  ; _pWM_List
000004  2800              CMP      r0,#0                 ;442
000006  d006              BEQ      |L16.22|
000008  e000              B        |L16.12|
                  |L16.10|
00000a  4608              MOV      r0,r1                 ;442
                  |L16.12|
;;;446    	{
;;;447    		return (WM_HWIN)NULL;
;;;448    	}
;;;449    
;;;450    	pResult = _pWM_List;
;;;451    
;;;452    	while(pResult->pNext)
00000c  6901              LDR      r1,[r0,#0x10]
00000e  2900              CMP      r1,#0
000010  d1fb              BNE      |L16.10|
;;;453    	{
;;;454    		pResult = pResult->pNext;
;;;455    	}
;;;456    
;;;457    	return (pResult->hWin);
000012  f9b00000          LDRSH    r0,[r0,#0]
                  |L16.22|
;;;458    }
000016  4770              BX       lr
;;;459    
                          ENDP

                  |L16.24|
                          DCD      ||.data||

                          AREA ||i.GetLastWinTypeFromList||, CODE, READONLY, ALIGN=2

                  GetLastWinTypeFromList PROC
;;;480    /*²éÕÒÁ´±íÖÐ×îºóÒ»¸ö´°ÌåµÄ´°ÌåÀàÐÍ*/
;;;481    eUserWindow GetLastWinTypeFromList(void)
000000  4805              LDR      r0,|L17.24|
;;;482    {
;;;483    	sWinManageList *pResult;
;;;484    
;;;485    	if(_pWM_List == NULL)
000002  6840              LDR      r0,[r0,#4]  ; _pWM_List
000004  2800              CMP      r0,#0                 ;482
000006  d005              BEQ      |L17.20|
000008  e000              B        |L17.12|
                  |L17.10|
00000a  4608              MOV      r0,r1                 ;482
                  |L17.12|
;;;486    	{
;;;487    		return (eUserWindow)NULL;
;;;488    	}
;;;489    
;;;490    	pResult = _pWM_List;
;;;491    
;;;492    	while(pResult->pNext)
00000c  6901              LDR      r1,[r0,#0x10]
00000e  2900              CMP      r1,#0
000010  d1fb              BNE      |L17.10|
;;;493    	{
;;;494    		pResult = pResult->pNext;
;;;495    	}
;;;496    
;;;497    	return (pResult->eWinType);
000012  7a00              LDRB     r0,[r0,#8]
                  |L17.20|
;;;498    }
000014  4770              BX       lr
;;;499    
                          ENDP

000016  0000              DCW      0x0000
                  |L17.24|
                          DCD      ||.data||

                          AREA ||i.GetWinHandleByWinType||, CODE, READONLY, ALIGN=2

                  GetWinHandleByWinType PROC
;;;376    /*ÔÚÁ´±íÖÐ²éÕÒÖ¸¶¨µÄ´°¿ÚÀàÐÍÊÇ·ñÒÑ´æÔÚ*/
;;;377    WM_HWIN GetWinHandleByWinType(eUserWindow WinType)
000000  4906              LDR      r1,|L18.28|
;;;378    {
;;;379    	sWinManageList *pResult;
;;;380    
;;;381    	if(_pWM_List == NULL)
000002  6849              LDR      r1,[r1,#4]  ; _pWM_List
000004  b141              CBZ      r1,|L18.24|
                  |L18.6|
;;;382    	{
;;;383    		return 0;
;;;384    	}
;;;385    
;;;386    	pResult = _pWM_List;
;;;387    
;;;388    	while(pResult)
;;;389    	{
;;;390    		if(pResult->eWinType == WinType)
000006  7a0a              LDRB     r2,[r1,#8]
000008  4282              CMP      r2,r0
00000a  d102              BNE      |L18.18|
;;;391    		{
;;;392    			return pResult->hWin;
00000c  f9b10000          LDRSH    r0,[r1,#0]
;;;393    		}
;;;394    		pResult = pResult->pNext;
;;;395    	}
;;;396    
;;;397    	return NULL;
;;;398    }
000010  4770              BX       lr
                  |L18.18|
000012  6909              LDR      r1,[r1,#0x10]         ;394
000014  2900              CMP      r1,#0                 ;394
000016  d1f6              BNE      |L18.6|
                  |L18.24|
000018  2000              MOVS     r0,#0                 ;397
00001a  4770              BX       lr
;;;399    
                          ENDP

                  |L18.28|
                          DCD      ||.data||

                          AREA ||i.Get_Display_Number_Of_Lines||, CODE, READONLY, ALIGN=1

                  Get_Display_Number_Of_Lines PROC
;;;150    
;;;151    int Get_Display_Number_Of_Lines(const char GUI_UNI_PTR *s, GUI_RECT *pRect, int TextAlign, GUI_WRAPMODE WrapMode)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;152    {
;;;153    	GUI_RECT Rect;
;;;154    	int xSize, NumBytesToNextLine, NumLines = 0;
000004  2500              MOVS     r5,#0
000006  461f              MOV      r7,r3                 ;152
000008  2800              CMP      r0,#0                 ;152
00000a  d010              BEQ      |L19.46|
;;;155    	if (!s)
;;;156    	{
;;;157    		return 0;
;;;158    	}
;;;159    	Rect      = *pRect;
00000c  880a              LDRH     r2,[r1,#0]
00000e  8889              LDRH     r1,[r1,#4]
000010  b212              SXTH     r2,r2
000012  b209              SXTH     r1,r1
;;;160    	xSize     = Rect.x1 - Rect.x0 + 1;
000014  1a8e              SUBS     r6,r1,r2
;;;161    	/* Vertical alignment */
;;;162    //    if ((TextAlign & GUI_TA_VERTICAL) != GUI_TA_TOP)
;;;163    	{
;;;164    		const char GUI_UNI_PTR *pText;
;;;165    		pText = s;
000016  4604              MOV      r4,r0
000018  1c76              ADDS     r6,r6,#1
                  |L19.26|
;;;166    		/* Count the number of lines */
;;;167    		do
;;;168    		{
;;;169    			NumBytesToNextLine = GUI__WrapGetNumBytesToNextLine(pText, xSize, WrapMode);
00001a  463a              MOV      r2,r7
00001c  4631              MOV      r1,r6
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
;;;170    			pText += NumBytesToNextLine;
000024  4404              ADD      r4,r4,r0
;;;171    			if (NumBytesToNextLine)
000026  b108              CBZ      r0,|L19.44|
000028  1c6d              ADDS     r5,r5,#1
;;;172    			{
;;;173    				NumLines++;
00002a  e7f6              B        |L19.26|
                  |L19.44|
;;;174    			}
;;;175    		}
;;;176    		while (NumBytesToNextLine);
;;;177    	}
;;;178    	return NumLines;
00002c  4628              MOV      r0,r5
                  |L19.46|
;;;179    }
00002e  e8bd81f0          POP      {r4-r8,pc}
;;;180    
                          ENDP


                          AREA ||i.Get_Language_String||, CODE, READONLY, ALIGN=2

                  Get_Language_String PROC
;;;249    
;;;250    char * Get_Language_String(unsigned short nStringIndex)
000000  4a04              LDR      r2,|L20.20|
;;;251    {    
;;;252    	return (char *)Strings[g_Language][nStringIndex];
000002  4903              LDR      r1,|L20.16|
000004  7812              LDRB     r2,[r2,#0]  ; g_Language
000006  f8511022          LDR      r1,[r1,r2,LSL #2]
00000a  f8510020          LDR      r0,[r1,r0,LSL #2]
;;;253    }
00000e  4770              BX       lr
;;;254    
                          ENDP

                  |L20.16|
                          DCD      Strings
                  |L20.20|
                          DCD      g_Language

                          AREA ||i.Paint_BackGround||, CODE, READONLY, ALIGN=2

                  Paint_BackGround PROC
;;;14     
;;;15     void Paint_BackGround(void)
000000  b510              PUSH     {r4,lr}
;;;16     {
;;;17     	GUI_SetColor(BK_COLOR_CLIENT);
000002  4806              LDR      r0,|L21.28|
000004  f7fffffe          BL       GUI_SetColor
;;;18     	GUI_FillRect(0, Caption_Height, LCD_XSIZE - 1, LCD_YSIZE - 1 - Bottom_Height);
000008  22ef              MOVS     r2,#0xef
00000a  211e              MOVS     r1,#0x1e
00000c  e8bd4010          POP      {r4,lr}
000010  f2401321          MOV      r3,#0x121
000014  2000              MOVS     r0,#0
000016  f7ffbffe          B.W      GUI_FillRect
;;;19     }
;;;20     
                          ENDP

00001a  0000              DCW      0x0000
                  |L21.28|
                          DCD      0x00c0c0c0

                          AREA ||i.Paint_Dialog_Header_Bottom||, CODE, READONLY, ALIGN=2

                  Paint_Dialog_Header_Bottom PROC
;;;8      
;;;9      void Paint_Dialog_Header_Bottom(void)
000000  b510              PUSH     {r4,lr}
;;;10     {
;;;11     	GUI_DrawBitmap(&bmCaption_Bottom, 0, 0);
000002  2200              MOVS     r2,#0
000004  4611              MOV      r1,r2
000006  4805              LDR      r0,|L22.28|
000008  f7fffffe          BL       GUI_DrawBitmap
;;;12     	GUI_DrawBitmap(&bmCaption_Bottom, 0, LCD_YSIZE - Bottom_Height);
00000c  e8bd4010          POP      {r4,lr}
000010  f44f7291          MOV      r2,#0x122
000014  2100              MOVS     r1,#0
000016  4801              LDR      r0,|L22.28|
000018  f7ffbffe          B.W      GUI_DrawBitmap
;;;13     }
;;;14     
                          ENDP

                  |L22.28|
                          DCD      bmCaption_Bottom

                          AREA ||i.Set_Dialog_Caption_Content||, CODE, READONLY, ALIGN=1

                  Set_Dialog_Caption_Content PROC
;;;244    
;;;245    void Set_Dialog_Caption_Content(const char *s,WM_HWIN hCaption)
000000  460a              MOV      r2,r1
;;;246    {
;;;247    	TEXT_SetText(hCaption, s);
000002  4601              MOV      r1,r0
000004  4610              MOV      r0,r2
000006  f7ffbffe          B.W      TEXT_SetText
;;;248    }
;;;249    
                          ENDP


                          AREA ||i._GetFont||, CODE, READONLY, ALIGN=2

                  _GetFont PROC
;;;254    
;;;255    const GUI_FONT *_GetFont(eWindowFontSelection nWindowIndex)
000000  4908              LDR      r1,|L24.36|
;;;256    {
;;;257    	if(g_Language == eLanguage_Chinese)
000002  7809              LDRB     r1,[r1,#0]  ; g_Language
000004  2901              CMP      r1,#1
000006  d104              BNE      |L24.18|
;;;258    	{
;;;259    		switch(nWindowIndex)
000008  b128              CBZ      r0,|L24.22|
00000a  2804              CMP      r0,#4
00000c  d005              BEQ      |L24.26|
00000e  2812              CMP      r0,#0x12
000010  d005              BEQ      |L24.30|
                  |L24.18|
;;;260    		{
;;;261    			case Font_Title:
;;;262    				return &GUI_FontSongTiBold19;
;;;263    
;;;264    			case Font_Content:
;;;265    				return &GUI_FontSongTi24;
;;;266    
;;;267    			case Font_WarningContent:
;;;268    				return &GUI_FontSongTi18_Warning;
;;;269    
;;;270    			default:
;;;271    				return &GUI_Font16_UTF8;
;;;272    		}
;;;273    		
;;;274    	}
;;;275    	
;;;276    	return &GUI_Font16_UTF8;
000012  4805              LDR      r0,|L24.40|
;;;277    }
000014  4770              BX       lr
                  |L24.22|
000016  4805              LDR      r0,|L24.44|
000018  4770              BX       lr
                  |L24.26|
00001a  4805              LDR      r0,|L24.48|
00001c  4770              BX       lr
                  |L24.30|
00001e  4805              LDR      r0,|L24.52|
000020  4770              BX       lr
;;;278    
                          ENDP

000022  0000              DCW      0x0000
                  |L24.36|
                          DCD      g_Language
                  |L24.40|
                          DCD      GUI_Font16_UTF8
                  |L24.44|
                          DCD      GUI_FontSongTiBold19
                  |L24.48|
                          DCD      GUI_FontSongTi24
                  |L24.52|
                          DCD      GUI_FontSongTi18_Warning

                          AREA ||i._Paint_Dialog_BackGround||, CODE, READONLY, ALIGN=2

                  _Paint_Dialog_BackGround PROC
;;;20     
;;;21     void _Paint_Dialog_BackGround(void)
000000  b510              PUSH     {r4,lr}
;;;22     {
;;;23     	GUI_DrawBitmap(&bmCaption_Bottom, 0, 0);
000002  2200              MOVS     r2,#0
000004  4611              MOV      r1,r2
000006  480a              LDR      r0,|L25.48|
000008  f7fffffe          BL       GUI_DrawBitmap
;;;24     	GUI_DrawBitmap(&bmCaption_Bottom, 0, LCD_YSIZE - Bottom_Height);
00000c  f44f7291          MOV      r2,#0x122
000010  2100              MOVS     r1,#0
000012  4807              LDR      r0,|L25.48|
000014  f7fffffe          BL       GUI_DrawBitmap
;;;25     
;;;26     	GUI_SetColor(BK_COLOR_CLIENT);
000018  4806              LDR      r0,|L25.52|
00001a  f7fffffe          BL       GUI_SetColor
;;;27     	GUI_FillRect(0, Caption_Height, LCD_XSIZE - 1, LCD_YSIZE - 1 - Bottom_Height);
00001e  22ef              MOVS     r2,#0xef
000020  211e              MOVS     r1,#0x1e
000022  e8bd4010          POP      {r4,lr}
000026  f2401321          MOV      r3,#0x121
00002a  2000              MOVS     r0,#0
00002c  f7ffbffe          B.W      GUI_FillRect
;;;28     }
;;;29     
                          ENDP

                  |L25.48|
                          DCD      bmCaption_Bottom
                  |L25.52|
                          DCD      0x00c0c0c0

                          AREA ||.data||, DATA, ALIGN=2

                  g_nGlobalBKColor
                          DCD      0x00000000
                  _pWM_List
                          DCD      0x00000000

                          AREA ||area_number.29||, DATA, ALIGN=1

                          EXPORTAS ||area_number.29||, ||.data||
                  g_nLastWindowHandle
000000  0000              DCW      0x0000
