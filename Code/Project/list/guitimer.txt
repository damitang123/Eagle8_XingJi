; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guitimer.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guitimer.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUITimer.c]
                          THUMB

                          AREA ||i.GUI_TIMER_Create||, CODE, READONLY, ALIGN=2

                  GUI_TIMER_Create PROC
;;;207    */
;;;208    GUI_TIMER_HANDLE GUI_TIMER_Create(GUI_TIMER_CALLBACK *cb, int Time, U32 Context, int Flags)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;209    {
000004  460e              MOV      r6,r1
;;;210    	GUI_TIMER_HANDLE hObj;
;;;211    	GUI_TIMER_Obj *pObj;
;;;212    	GUI_LOCK();
;;;213    	GUI_USE_PARA(Flags);
;;;214    	GUI_USE_PARA(Time);
;;;215    	GUI_pfTimerExec = GUI_TIMER_Exec;
000006  490b              LDR      r1,|L1.52|
000008  4607              MOV      r7,r0                 ;209
00000a  4809              LDR      r0,|L1.48|
;;;216    	{
;;;217    		/* Alloc memory for obj */
;;;218    		hObj = GUI_ALLOC_AllocZero(sizeof(GUI_TIMER_Obj));
00000c  6008              STR      r0,[r1,#0]  ; GUI_pfTimerExec
00000e  4615              MOV      r5,r2                 ;209
000010  2018              MOVS     r0,#0x18
000012  f7fffffe          BL       GUI_ALLOC_AllocZero
000016  4604              MOV      r4,r0
;;;219    		pObj = GUI_TIMER_H2P(hObj);
000018  f7fffffe          BL       GUI_ALLOC_h2p
;;;220    		/* init member variables */
;;;221    		pObj->cb = cb;
00001c  6007              STR      r7,[r0,#0]
00001e  e9c05603          STRD     r5,r6,[r0,#0xc]
;;;222    		pObj->Context = Context;
;;;223    		pObj->t0 = Time;	//houhh 20061018...
;;;224    		/* Link it */
;;;225    		_Link(hObj);
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       _Link
;;;226    	}
;;;227    	GUI_UNLOCK();
;;;228    	return hObj;
000028  4620              MOV      r0,r4
;;;229    }
00002a  e8bd81f0          POP      {r4-r8,pc}
;;;230    
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      GUI_TIMER_Exec
                  |L1.52|
                          DCD      GUI_pfTimerExec

                          AREA ||i.GUI_TIMER_Delete||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_Delete PROC
;;;234    */
;;;235    void GUI_TIMER_Delete(GUI_TIMER_HANDLE hObj)
000000  b510              PUSH     {r4,lr}
;;;236    {
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L2.20|
;;;237    	/* Unlink Timer */
;;;238    	if(hObj == NULL) return;
;;;239    	GUI_LOCK();
;;;240    	_Unlink(hObj);
000006  f7fffffe          BL       _Unlink
;;;241    	GUI_ALLOC_Free(hObj);
00000a  4620              MOV      r0,r4
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      GUI_ALLOC_Free
                  |L2.20|
;;;242    	GUI_UNLOCK();
;;;243    }
000014  bd10              POP      {r4,pc}
;;;244    
                          ENDP


                          AREA ||i.GUI_TIMER_Exec||, CODE, READONLY, ALIGN=2

                  GUI_TIMER_Exec PROC
;;;169    */
;;;170    int GUI_TIMER_Exec(void)
000000  b5fe              PUSH     {r1-r7,lr}
;;;171    {
;;;172    	int r = 0;
000002  2600              MOVS     r6,#0
;;;173    	GUI_TIMER_TIME t = GUI_GetTime();
000004  f7fffffe          BL       GUI_GetTime
000008  4604              MOV      r4,r0
;;;174    	GUI_LOCK();
;;;175    	{
;;;176    		while (hFirstTimer)
;;;177    		{
;;;178    			GUI_TIMER_Obj *pTimer = GUI_TIMER_H2P(hFirstTimer);
00000a  4d0e              LDR      r5,|L3.68|
00000c  e013              B        |L3.54|
00000e  bf00              NOP      
                  |L3.16|
000010  f7fffffe          BL       GUI_ALLOC_h2p
;;;179    			if ((pTimer->t0 - t) <= 0)
000014  6901              LDR      r1,[r0,#0x10]
000016  1b09              SUBS     r1,r1,r4
000018  2900              CMP      r1,#0
00001a  dc10              BGT      |L3.62|
;;;180    			{
;;;181    				GUI_TIMER_MESSAGE tm;
;;;182    				tm.Time = t;
;;;183    				tm.Context = pTimer->Context;
00001c  9400              STR      r4,[sp,#0]
00001e  68c1              LDR      r1,[r0,#0xc]
;;;184    				tm.hTimer = hFirstTimer;
000020  9101              STR      r1,[sp,#4]
000022  8829              LDRH     r1,[r5,#0]  ; hFirstTimer
000024  f8ad1008          STRH     r1,[sp,#8]
;;;185    				_hActiveTimer = hFirstTimer;
000028  8069              STRH     r1,[r5,#2]
;;;186    				hFirstTimer = pTimer->hNext;
00002a  8881              LDRH     r1,[r0,#4]
00002c  8029              STRH     r1,[r5,#0]
;;;187    				pTimer->cb(&tm);
00002e  6801              LDR      r1,[r0,#0]
000030  4668              MOV      r0,sp
000032  4788              BLX      r1
;;;188    				r = 1;
000034  2601              MOVS     r6,#1
                  |L3.54|
000036  f9b50000          LDRSH    r0,[r5,#0]            ;176  ; hFirstTimer
00003a  2800              CMP      r0,#0                 ;176
00003c  d1e8              BNE      |L3.16|
                  |L3.62|
;;;189    			}
;;;190    			else
;;;191    			{
;;;192    				break;
;;;193    			}
;;;194    		}
;;;195    		/*
;;;196    			GUI_TIMER_Obj* pObj = GUI_TIMER_H2P(hObj);
;;;197    		    pObj->t0 = Time;
;;;198    		*/
;;;199    	}
;;;200    	GUI_UNLOCK();
;;;201    	return r;
00003e  4630              MOV      r0,r6
;;;202    }
000040  bdfe              POP      {r1-r7,pc}
;;;203    
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
                          DCD      ||.data||

                          AREA ||i.GUI_TIMER_Restart||, CODE, READONLY, ALIGN=2

                  GUI_TIMER_Restart PROC
;;;292    */
;;;293    void GUI_TIMER_Restart(GUI_TIMER_HANDLE hObj)
000000  b570              PUSH     {r4-r6,lr}
;;;294    {
000002  0004              MOVS     r4,r0
000004  d102              BNE      |L4.12|
;;;295    	GUI_TIMER_Obj *pObj;
;;;296    	GUI_LOCK();
;;;297    	{
;;;298    		if (hObj == 0)
;;;299    		{
;;;300    			hObj = _hActiveTimer;
000006  480a              LDR      r0,|L4.48|
000008  f9b04002          LDRSH    r4,[r0,#2]  ; _hActiveTimer
                  |L4.12|
;;;301    		}
;;;302    		pObj = GUI_TIMER_H2P(hObj);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4605              MOV      r5,r0
;;;303    		pObj->t0 = GUI_GetTime() + pObj->Period;
000014  f7fffffe          BL       GUI_GetTime
000018  6969              LDR      r1,[r5,#0x14]
00001a  4408              ADD      r0,r0,r1
;;;304    		_Unlink(hObj);
00001c  6128              STR      r0,[r5,#0x10]
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       _Unlink
;;;305    		_Link(hObj);
000024  4620              MOV      r0,r4
000026  e8bd4070          POP      {r4-r6,lr}
00002a  f7ffbffe          B.W      _Link
;;;306    	}
;;;307    	GUI_UNLOCK();
;;;308    }
;;;309    
                          ENDP

00002e  0000              DCW      0x0000
                  |L4.48|
                          DCD      ||.data||

                          AREA ||i.GUI_TIMER_SetDelay||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_SetDelay PROC
;;;276    */
;;;277    void GUI_TIMER_SetDelay(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Delay)
000000  b570              PUSH     {r4-r6,lr}
;;;278    {
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
;;;279    	GUI_LOCK();
;;;280    	{
;;;281    		GUI_TIMER_Obj *pObj = GUI_TIMER_H2P(hObj);
000006  f7fffffe          BL       GUI_ALLOC_h2p
;;;282    		pObj->t0 = Delay;
;;;283    		_Unlink(hObj);
00000a  6104              STR      r4,[r0,#0x10]
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       _Unlink
;;;284    		_Link(hObj);
000012  4628              MOV      r0,r5
000014  e8bd4070          POP      {r4-r6,lr}
000018  f7ffbffe          B.W      _Link
;;;285    	}
;;;286    	GUI_UNLOCK();
;;;287    }
;;;288    
                          ENDP


                          AREA ||i.GUI_TIMER_SetPeriod||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_SetPeriod PROC
;;;248    */
;;;249    void GUI_TIMER_SetPeriod(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Period)
000000  b510              PUSH     {r4,lr}
;;;250    {
000002  460c              MOV      r4,r1
;;;251    	GUI_LOCK();
;;;252    	{
;;;253    		GUI_TIMER_Obj *pObj = GUI_TIMER_H2P(hObj);
000004  f7fffffe          BL       GUI_ALLOC_h2p
;;;254    		pObj->Period = Period;
000008  6144              STR      r4,[r0,#0x14]
;;;255    	}
;;;256    	GUI_UNLOCK();
;;;257    }
00000a  bd10              POP      {r4,pc}
;;;258    
                          ENDP


                          AREA ||i.GUI_TIMER_SetTime||, CODE, READONLY, ALIGN=1

                  GUI_TIMER_SetTime PROC
;;;262    */
;;;263    void GUI_TIMER_SetTime(GUI_TIMER_HANDLE hObj, GUI_TIMER_TIME Time)
000000  b510              PUSH     {r4,lr}
;;;264    {
000002  460c              MOV      r4,r1
;;;265    	GUI_LOCK();
;;;266    	{
;;;267    		GUI_TIMER_Obj *pObj = GUI_TIMER_H2P(hObj);
000004  f7fffffe          BL       GUI_ALLOC_h2p
;;;268    		pObj->t0 = Time;
000008  6104              STR      r4,[r0,#0x10]
;;;269    	}
;;;270    	GUI_UNLOCK();
;;;271    }
00000a  bd10              POP      {r4,pc}
;;;272    
                          ENDP


                          AREA ||i._Link||, CODE, READONLY, ALIGN=2

                  _Link PROC
;;;104    */
;;;105    static void _Link(GUI_TIMER_HANDLE hNew)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;106    {
000004  4606              MOV      r6,r0
;;;107    	GUI_TIMER_Obj   *pNew        = GUI_TIMER_H2P(hNew);
000006  f7fffffe          BL       GUI_ALLOC_h2p
;;;108    	GUI_TIMER_Obj   *pTimer;
;;;109    	GUI_TIMER_Obj   *pNext;
;;;110    	GUI_TIMER_HANDLE hNext;
;;;111    	if (hFirstTimer == 0)  /* List is empty, make it the only element */
00000a  4d16              LDR      r5,|L8.100|
00000c  4604              MOV      r4,r0                 ;107
00000e  f9b50000          LDRSH    r0,[r5,#0]  ; hFirstTimer
000012  b158              CBZ      r0,|L8.44|
;;;112    	{
;;;113    		hFirstTimer = hNew;
;;;114    		pNew->hNext = 0;
;;;115    	}
;;;116    	else
;;;117    	{
;;;118    		GUI_TIMER_Obj *pFirstTimer      = GUI_TIMER_H2P(hFirstTimer);
000014  f7fffffe          BL       GUI_ALLOC_h2p
;;;119    		/* Check if we have to make it the first element */
;;;120    		if ((pNew->t0 - pFirstTimer->t0) <= 0)
000018  6921              LDR      r1,[r4,#0x10]
00001a  6900              LDR      r0,[r0,#0x10]
00001c  1a08              SUBS     r0,r1,r0
00001e  2800              CMP      r0,#0
000020  dc08              BGT      |L8.52|
;;;121    		{
;;;122    			pNew->hNext = hFirstTimer;
000022  8828              LDRH     r0,[r5,#0]  ; hFirstTimer
000024  80a0              STRH     r0,[r4,#4]
;;;123    			hFirstTimer = hNew;
000026  802e              STRH     r6,[r5,#0]
                  |L8.40|
;;;124    			return;
;;;125    		}
;;;126    		else
;;;127    		{
;;;128    			GUI_TIMER_HANDLE hTimer = hFirstTimer;
;;;129    			/* Put it into the list */
;;;130    			do
;;;131    			{
;;;132    				pTimer       = GUI_TIMER_H2P(hTimer);
;;;133    				hNext        = pTimer->hNext;
;;;134    				if (hNext == 0)
;;;135    				{
;;;136    					goto Append;
;;;137    				}
;;;138    				pNext      = GUI_TIMER_H2P(hNext);
;;;139    				if ((pNew->t0 - pNext->t0) <= 0)
;;;140    				{
;;;141    					pNew->hNext  = hNext;
;;;142    					pTimer->hNext = hNew;
;;;143    					return;
;;;144    				}
;;;145    				else
;;;146    				{
;;;147    					hTimer = hNext;							/*add by elvin*/
;;;148    				}
;;;149    			}
;;;150    			while(1);
;;;151    			/* Put it at the end of the list */
;;;152    Append:
;;;153    			pNew->hNext  = hNext;
;;;154    			pTimer->hNext = hNew;
;;;155    			return;
;;;156    		}
;;;157    	}
;;;158    }
000028  e8bd81f0          POP      {r4-r8,pc}
                  |L8.44|
00002c  802e              STRH     r6,[r5,#0]            ;113
00002e  2000              MOVS     r0,#0                 ;114
000030  80a0              STRH     r0,[r4,#4]            ;114
000032  e7f9              B        |L8.40|
                  |L8.52|
000034  f9b50000          LDRSH    r0,[r5,#0]            ;128  ; hFirstTimer
                  |L8.56|
000038  f7fffffe          BL       GUI_ALLOC_h2p
00003c  f9b05004          LDRSH    r5,[r0,#4]            ;133
000040  4607              MOV      r7,r0                 ;132
000042  b165              CBZ      r5,|L8.94|
000044  4628              MOV      r0,r5                 ;138
000046  f7fffffe          BL       GUI_ALLOC_h2p
00004a  6921              LDR      r1,[r4,#0x10]         ;139
00004c  6900              LDR      r0,[r0,#0x10]         ;139
00004e  1a08              SUBS     r0,r1,r0              ;139
000050  2800              CMP      r0,#0                 ;139
000052  dc02              BGT      |L8.90|
000054  80a5              STRH     r5,[r4,#4]            ;141
000056  80be              STRH     r6,[r7,#4]            ;142
000058  e7e6              B        |L8.40|
                  |L8.90|
00005a  4628              MOV      r0,r5                 ;147
00005c  e7ec              B        |L8.56|
                  |L8.94|
00005e  80a5              STRH     r5,[r4,#4]            ;153
000060  8086              STRH     r6,[r0,#4]            ;154
000062  e7e1              B        |L8.40|
;;;159    
                          ENDP

                  |L8.100|
                          DCD      ||.data||

                          AREA ||i._Unlink||, CODE, READONLY, ALIGN=2

                  _Unlink PROC
;;;69     */
;;;70     static void _Unlink(GUI_TIMER_HANDLE hTimer)
000000  b570              PUSH     {r4-r6,lr}
;;;71     {
000002  4605              MOV      r5,r0
;;;72     	GUI_TIMER_Obj *pTimer = GUI_TIMER_H2P(hTimer);
000004  f7fffffe          BL       GUI_ALLOC_h2p
;;;73     	GUI_TIMER_HANDLE hi;
;;;74     	GUI_TIMER_Obj   *pi;
;;;75     	/* Check if it is the first element */
;;;76     	if (hFirstTimer == hTimer)
000008  490b              LDR      r1,|L9.56|
00000a  4604              MOV      r4,r0                 ;72
00000c  f9b10000          LDRSH    r0,[r1,#0]  ; hFirstTimer
000010  42a8              CMP      r0,r5
000012  d10d              BNE      |L9.48|
;;;77     	{
;;;78     		hFirstTimer = pTimer->hNext;
000014  88a0              LDRH     r0,[r4,#4]
000016  8008              STRH     r0,[r1,#0]
;;;79     		return;
;;;80     	}
;;;81     	hi = hFirstTimer;
;;;82     	/* Try to find it in the list ... */
;;;83     	while(hi)
;;;84     	{
;;;85     		/* GUI_ASSERT(hi<1000,0); */
;;;86     		pi = GUI_TIMER_H2P(hi);
;;;87     		if (pi->hNext == hTimer)
;;;88     		{
;;;89     			pi->hNext = pTimer->hNext;
;;;90     			break;
;;;91     		}
;;;92     		hi = pi->hNext;
;;;93     	}
;;;94     }
000018  bd70              POP      {r4-r6,pc}
00001a  bf00              NOP                            ;86
                  |L9.28|
00001c  f7fffffe          BL       GUI_ALLOC_h2p
000020  4601              MOV      r1,r0                 ;86
000022  f9b00004          LDRSH    r0,[r0,#4]            ;87
000026  42a8              CMP      r0,r5                 ;87
000028  d102              BNE      |L9.48|
00002a  88a0              LDRH     r0,[r4,#4]            ;89
00002c  8088              STRH     r0,[r1,#4]            ;89
00002e  bd70              POP      {r4-r6,pc}
                  |L9.48|
000030  2800              CMP      r0,#0                 ;83
000032  d1f3              BNE      |L9.28|
000034  bd70              POP      {r4-r6,pc}
;;;95     
                          ENDP

000036  0000              DCW      0x0000
                  |L9.56|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=1

                  hFirstTimer
000000  0000              DCB      0x00,0x00
                  _hActiveTimer
000002  0000              DCB      0x00,0x00
