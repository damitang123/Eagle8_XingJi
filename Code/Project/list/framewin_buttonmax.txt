; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\framewin_buttonmax.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin_buttonmax.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\FRAMEWIN_ButtonMax.c]
                          THUMB

                          AREA ||i.FRAMEWIN_AddMaxButton||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_AddMaxButton PROC
;;;131    */
;;;132    WM_HWIN FRAMEWIN_AddMaxButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
000000  b510              PUSH     {r4,lr}
;;;133      WM_HWIN hButton;
;;;134      hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_MAXIMIZE);
000002  2307              MOVS     r3,#7
000004  f7fffffe          BL       FRAMEWIN_AddButton
000008  4604              MOV      r4,r0
;;;135      BUTTON_SetSelfDraw(hButton, 0, &_Draw);
00000a  4a05              LDR      r2,|L1.32|
00000c  2100              MOVS     r1,#0
00000e  f7fffffe          BL       BUTTON_SetSelfDraw
;;;136      WM_SetCallback(hButton, _cbMax);
000012  4904              LDR      r1,|L1.36|
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       WM_SetCallback
;;;137      return hButton;
00001a  4620              MOV      r0,r4
;;;138    }
00001c  bd10              POP      {r4,pc}
;;;139    
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      _Draw
                  |L1.36|
                          DCD      _cbMax

                          AREA ||i._Draw||, CODE, READONLY, ALIGN=1

                  _Draw PROC
;;;108    */
;;;109    static void _Draw(void) {
000000  b510              PUSH     {r4,lr}
;;;110      FRAMEWIN_Obj* pObj;
;;;111      WM_HWIN hWin;
;;;112      hWin = WM_GetActiveWindow();
000002  f7fffffe          BL       WM_GetActiveWindow
;;;113      hWin = WM_GetParent(hWin);
000006  f7fffffe          BL       WM_GetParent
;;;114      pObj = FRAMEWIN_H2P(hWin);
00000a  f7fffffe          BL       GUI_ALLOC_h2p
;;;115      if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
00000e  f890005a          LDRB     r0,[r0,#0x5a]
000012  0600              LSLS     r0,r0,#24
000014  d503              BPL      |L2.30|
;;;116        _DrawRestore();
000016  e8bd4010          POP      {r4,lr}
00001a  f7ffbffe          B.W      _DrawRestore
                  |L2.30|
;;;117      } else {
;;;118        _DrawMax();
00001e  e8bd4010          POP      {r4,lr}
000022  f7ffbffe          B.W      _DrawMax
;;;119      }
;;;120    }
;;;121    
                          ENDP


                          AREA ||i._DrawMax||, CODE, READONLY, ALIGN=2

                  _DrawMax PROC
;;;65     */
;;;66     static void _DrawMax(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;67       GUI_RECT r;
;;;68       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;69       WM_ADDORG(r.x0, r.y0);
000008  482b              LDR      r0,|L3.184|
00000a  f8bd2000          LDRH     r2,[sp,#0]
00000e  f8301f44          LDRH     r1,[r0,#0x44]!  ; GUI_Context
000012  440a              ADD      r2,r2,r1
000014  f8ad2000          STRH     r2,[sp,#0]
000018  f8bd2002          LDRH     r2,[sp,#2]
00001c  8880              LDRH     r0,[r0,#4]  ; GUI_Context
00001e  4402              ADD      r2,r2,r0
000020  f8ad2002          STRH     r2,[sp,#2]
;;;70       WM_ADDORG(r.x1, r.y1);
000024  f8bd2004          LDRH     r2,[sp,#4]
000028  4411              ADD      r1,r1,r2
00002a  f8ad1004          STRH     r1,[sp,#4]
00002e  f8bd1006          LDRH     r1,[sp,#6]
000032  4408              ADD      r0,r0,r1
000034  f8ad0006          STRH     r0,[sp,#6]
;;;71       WM_ITERATE_START(&r); {
000038  4668              MOV      r0,sp
00003a  f7fffffe          BL       WM__InitIVRSearch
00003e  e038              B        |L3.178|
                  |L3.64|
;;;72         LCD_DrawHLine(r.x0 + 1, r.y0 + 1, r.x1 - 1);
000040  f9bd2004          LDRSH    r2,[sp,#4]
000044  f9bd1002          LDRSH    r1,[sp,#2]
000048  f9bd0000          LDRSH    r0,[sp,#0]
00004c  1c49              ADDS     r1,r1,#1
00004e  1c40              ADDS     r0,r0,#1
000050  1e52              SUBS     r2,r2,#1
000052  f7fffffe          BL       LCD_DrawHLine
;;;73         LCD_DrawHLine(r.x0 + 1, r.y0 + 2, r.x1 - 1);
000056  f9bd2004          LDRSH    r2,[sp,#4]
00005a  f9bd1002          LDRSH    r1,[sp,#2]
00005e  f9bd0000          LDRSH    r0,[sp,#0]
000062  1c89              ADDS     r1,r1,#2
000064  1c40              ADDS     r0,r0,#1
000066  1e52              SUBS     r2,r2,#1
000068  f7fffffe          BL       LCD_DrawHLine
;;;74         LCD_DrawHLine(r.x0 + 1, r.y1 - 1, r.x1 - 1);
00006c  f9bd2004          LDRSH    r2,[sp,#4]
000070  f9bd1006          LDRSH    r1,[sp,#6]
000074  f9bd0000          LDRSH    r0,[sp,#0]
000078  1e49              SUBS     r1,r1,#1
00007a  1c40              ADDS     r0,r0,#1
00007c  1e52              SUBS     r2,r2,#1
00007e  f7fffffe          BL       LCD_DrawHLine
;;;75         LCD_DrawVLine(r.x0 + 1, r.y0 + 1, r.y1 - 1);
000082  f9bd2006          LDRSH    r2,[sp,#6]
000086  f9bd1002          LDRSH    r1,[sp,#2]
00008a  f9bd0000          LDRSH    r0,[sp,#0]
00008e  1c49              ADDS     r1,r1,#1
000090  1c40              ADDS     r0,r0,#1
000092  1e52              SUBS     r2,r2,#1
000094  f7fffffe          BL       LCD_DrawVLine
;;;76         LCD_DrawVLine(r.x1 - 1, r.y0 + 1, r.y1 - 1);
000098  f9bd2006          LDRSH    r2,[sp,#6]
00009c  f9bd1002          LDRSH    r1,[sp,#2]
0000a0  f9bd0004          LDRSH    r0,[sp,#4]
0000a4  1c49              ADDS     r1,r1,#1
0000a6  1e40              SUBS     r0,r0,#1
0000a8  1e52              SUBS     r2,r2,#1
0000aa  f7fffffe          BL       LCD_DrawVLine
;;;77       } WM_ITERATE_END();
0000ae  f7fffffe          BL       WM__GetNextIVR
                  |L3.178|
0000b2  2800              CMP      r0,#0
0000b4  d1c4              BNE      |L3.64|
;;;78     }
0000b6  bd1c              POP      {r2-r4,pc}
;;;79     
                          ENDP

                  |L3.184|
                          DCD      GUI_Context

                          AREA ||i._DrawRestore||, CODE, READONLY, ALIGN=2

                  _DrawRestore PROC
;;;83     */
;;;84     static void _DrawRestore(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;85       GUI_RECT r;
;;;86       int Size;
;;;87       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;88       WM_ADDORG(r.x0, r.y0);
000008  4943              LDR      r1,|L4.280|
00000a  f8bd2000          LDRH     r2,[sp,#0]
00000e  f8310f44          LDRH     r0,[r1,#0x44]!  ; GUI_Context
000012  4402              ADD      r2,r2,r0
000014  b212              SXTH     r2,r2
000016  f8ad2000          STRH     r2,[sp,#0]
00001a  f8bd3002          LDRH     r3,[sp,#2]
00001e  8889              LDRH     r1,[r1,#4]  ; GUI_Context
000020  440b              ADD      r3,r3,r1
000022  f8ad3002          STRH     r3,[sp,#2]
;;;89       WM_ADDORG(r.x1, r.y1);
000026  f8bd3004          LDRH     r3,[sp,#4]
00002a  4418              ADD      r0,r0,r3
00002c  b200              SXTH     r0,r0
00002e  f8ad0004          STRH     r0,[sp,#4]
000032  f8bd3006          LDRH     r3,[sp,#6]
;;;90       Size = ((r.x1 - r.x0 + 1) << 1) / 3;
000036  1a80              SUBS     r0,r0,r2
000038  4419              ADD      r1,r1,r3              ;89
00003a  f8ad1006          STRH     r1,[sp,#6]            ;89
00003e  0040              LSLS     r0,r0,#1
000040  2103              MOVS     r1,#3
000042  1c80              ADDS     r0,r0,#2
000044  fb90f4f1          SDIV     r4,r0,r1
;;;91       WM_ITERATE_START(&r); {
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       WM__InitIVRSearch
00004e  e060              B        |L4.274|
                  |L4.80|
;;;92         LCD_DrawHLine(r.x1 - Size, r.y0 + 1,        r.x1 - 1);
000050  f9bd0004          LDRSH    r0,[sp,#4]
000054  f9bd1002          LDRSH    r1,[sp,#2]
000058  1e42              SUBS     r2,r0,#1
00005a  1b00              SUBS     r0,r0,r4
00005c  1c49              ADDS     r1,r1,#1
00005e  f7fffffe          BL       LCD_DrawHLine
;;;93         LCD_DrawHLine(r.x1 - Size, r.y0 + 2,        r.x1 - 1);
000062  f9bd0004          LDRSH    r0,[sp,#4]
000066  f9bd1002          LDRSH    r1,[sp,#2]
00006a  1e42              SUBS     r2,r0,#1
00006c  1b00              SUBS     r0,r0,r4
00006e  1c89              ADDS     r1,r1,#2
000070  f7fffffe          BL       LCD_DrawHLine
;;;94         LCD_DrawHLine(r.x0 + Size, r.y0 + Size,     r.x1 - 1);
000074  f9bd0002          LDRSH    r0,[sp,#2]
000078  f9bd2004          LDRSH    r2,[sp,#4]
00007c  1901              ADDS     r1,r0,r4
00007e  f9bd0000          LDRSH    r0,[sp,#0]
000082  1e52              SUBS     r2,r2,#1
000084  4420              ADD      r0,r0,r4
000086  f7fffffe          BL       LCD_DrawHLine
;;;95         LCD_DrawVLine(r.x1 - Size, r.y0 + 1,        r.y1 - Size);
00008a  f9bd0006          LDRSH    r0,[sp,#6]
00008e  f9bd1002          LDRSH    r1,[sp,#2]
000092  1b02              SUBS     r2,r0,r4
000094  f9bd0004          LDRSH    r0,[sp,#4]
000098  1c49              ADDS     r1,r1,#1
00009a  1b00              SUBS     r0,r0,r4
00009c  f7fffffe          BL       LCD_DrawVLine
;;;96         LCD_DrawVLine(r.x1 - 1,    r.y0 + 1,        r.y0 + Size);
0000a0  f9bd1002          LDRSH    r1,[sp,#2]
0000a4  f9bd0004          LDRSH    r0,[sp,#4]
0000a8  190a              ADDS     r2,r1,r4
0000aa  1e40              SUBS     r0,r0,#1
0000ac  1c49              ADDS     r1,r1,#1
0000ae  f7fffffe          BL       LCD_DrawVLine
;;;97         LCD_DrawHLine(r.x0 + 1,    r.y1 - Size,     r.x0 + Size);
0000b2  f9bd0000          LDRSH    r0,[sp,#0]
0000b6  f9bd1006          LDRSH    r1,[sp,#6]
0000ba  1902              ADDS     r2,r0,r4
0000bc  1b09              SUBS     r1,r1,r4
0000be  1c40              ADDS     r0,r0,#1
0000c0  f7fffffe          BL       LCD_DrawHLine
;;;98         LCD_DrawHLine(r.x0 + 1,    r.y1 - Size + 1, r.x0 + Size);
0000c4  f9bd0000          LDRSH    r0,[sp,#0]
0000c8  f9bd1006          LDRSH    r1,[sp,#6]
0000cc  1902              ADDS     r2,r0,r4
0000ce  1b09              SUBS     r1,r1,r4
0000d0  1c40              ADDS     r0,r0,#1
0000d2  1c49              ADDS     r1,r1,#1
0000d4  f7fffffe          BL       LCD_DrawHLine
;;;99         LCD_DrawHLine(r.x0 + 1,    r.y1 - 1,        r.x0 + Size);
0000d8  f9bd0000          LDRSH    r0,[sp,#0]
0000dc  f9bd1006          LDRSH    r1,[sp,#6]
0000e0  1902              ADDS     r2,r0,r4
0000e2  1c40              ADDS     r0,r0,#1
0000e4  1e49              SUBS     r1,r1,#1
0000e6  f7fffffe          BL       LCD_DrawHLine
;;;100        LCD_DrawVLine(r.x0 + 1,    r.y1 - Size,     r.y1 - 1);
0000ea  f9bd3006          LDRSH    r3,[sp,#6]
0000ee  f9bd0000          LDRSH    r0,[sp,#0]
0000f2  1e5a              SUBS     r2,r3,#1
0000f4  1b19              SUBS     r1,r3,r4
0000f6  1c40              ADDS     r0,r0,#1
0000f8  f7fffffe          BL       LCD_DrawVLine
;;;101        LCD_DrawVLine(r.x0 + Size, r.y1 - Size,     r.y1 - 1);
0000fc  f9bd0006          LDRSH    r0,[sp,#6]
000100  1e42              SUBS     r2,r0,#1
000102  1b01              SUBS     r1,r0,r4
000104  f9bd0000          LDRSH    r0,[sp,#0]
000108  4420              ADD      r0,r0,r4
00010a  f7fffffe          BL       LCD_DrawVLine
;;;102      } WM_ITERATE_END();
00010e  f7fffffe          BL       WM__GetNextIVR
                  |L4.274|
000112  2800              CMP      r0,#0
000114  d19c              BNE      |L4.80|
;;;103    }
000116  bd1c              POP      {r2-r4,pc}
;;;104    
                          ENDP

                  |L4.280|
                          DCD      GUI_Context

                          AREA ||i._cbMax||, CODE, READONLY, ALIGN=1

                  _cbMax PROC
;;;47     */
;;;48     static void _cbMax(WM_MESSAGE* pMsg) {
000000  b510              PUSH     {r4,lr}
;;;49       if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
000002  6801              LDR      r1,[r0,#0]
000004  2927              CMP      r1,#0x27
000006  d003              BEQ      |L5.16|
;;;50         WM_HWIN hWin = pMsg->hWinSrc;
;;;51         FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
;;;52         if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
;;;53           FRAMEWIN_Restore(hWin);
;;;54         } else {
;;;55           FRAMEWIN_Maximize(hWin);
;;;56         }
;;;57         return;                                       /* We are done ! */
;;;58       }
;;;59       BUTTON_Callback(pMsg);
000008  e8bd4010          POP      {r4,lr}
00000c  f7ffbffe          B.W      BUTTON_Callback
                  |L5.16|
000010  f9b04006          LDRSH    r4,[r0,#6]            ;50
000014  4620              MOV      r0,r4                 ;51
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  f890005a          LDRB     r0,[r0,#0x5a]         ;52
00001e  0600              LSLS     r0,r0,#24             ;52
000020  4620              MOV      r0,r4                 ;55
000022  d503              BPL      |L5.44|
000024  e8bd4010          POP      {r4,lr}               ;53
000028  f7ffbffe          B.W      FRAMEWIN_Restore
                  |L5.44|
00002c  e8bd4010          POP      {r4,lr}               ;55
000030  f7ffbffe          B.W      FRAMEWIN_Maximize
;;;60     }
;;;61     
                          ENDP

