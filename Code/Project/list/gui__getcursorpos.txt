; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui__getcursorpos.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__getcursorpos.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI__GetCursorPos.c]
                          THUMB

                          AREA ||i.GUI__GetCursorCharacter||, CODE, READONLY, ALIGN=1

                  GUI__GetCursorCharacter PROC
;;;90     */
;;;91     U16 GUI__GetCursorCharacter(const char GUI_UNI_PTR * s, int Index, int MaxNumChars, int * pIsRTL) {
000000  b10b              CBZ      r3,|L1.6|
;;;92       #if GUI_SUPPORT_ARABIC
;;;93         return GUI__GetCursorCharacterArabic(s, Index, MaxNumChars, pIsRTL);
;;;94       #else
;;;95         GUI_USE_PARA(MaxNumChars);
;;;96         if (pIsRTL) {
;;;97           *pIsRTL = 0;
000002  2200              MOVS     r2,#0
000004  601a              STR      r2,[r3,#0]
                  |L1.6|
;;;98         }
;;;99         return GUI_UC_GetCharCode(s + Index);
000006  4408              ADD      r0,r0,r1
000008  f7ffbffe          B.W      GUI_UC_GetCharCode
;;;100      #endif
;;;101    }
;;;102    
                          ENDP


                          AREA ||i.GUI__GetCursorPosChar||, CODE, READONLY, ALIGN=1

                  GUI__GetCursorPosChar PROC
;;;66     */
;;;67     int GUI__GetCursorPosChar(const char GUI_UNI_PTR * s, int x, int MaxNumChars) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4617              MOV      r7,r2
000006  4689              MOV      r9,r1
000008  4604              MOV      r4,r0
;;;68       #if GUI_SUPPORT_ARABIC
;;;69         return GUI__GetCursorPosCharArabic(s, x, MaxNumChars);
;;;70       #else
;;;71         int SizeX = 0;
00000a  2500              MOVS     r5,#0
;;;72         const char GUI_UNI_PTR * p;
;;;73         p = s;
00000c  4606              MOV      r6,r0
00000e  e00f              B        |L2.48|
                  |L2.16|
;;;74         while (--MaxNumChars> 0) {
;;;75           U16 Char;
;;;76           Char   = GUI_UC_GetCharCode(s);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       GUI_UC_GetCharCode
000016  4680              MOV      r8,r0
;;;77           SizeX += GUI_GetCharDistX(Char);
000018  f7fffffe          BL       GUI_GetCharDistX
00001c  4405              ADD      r5,r5,r0
;;;78           if (!Char || (SizeX > x)) {
00001e  f1b80f00          CMP      r8,#0
000022  d008              BEQ      |L2.54|
000024  454d              CMP      r5,r9
000026  dc06              BGT      |L2.54|
;;;79             break;
;;;80           }
;;;81           s += GUI_UC_GetCharSize(s);
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       GUI_UC_GetCharSize
00002e  4404              ADD      r4,r4,r0
                  |L2.48|
000030  1e7f              SUBS     r7,r7,#1
000032  2f00              CMP      r7,#0                 ;74
000034  dcec              BGT      |L2.16|
                  |L2.54|
;;;82         }
;;;83         return GUI_UC__NumBytes2NumChars(p, s - p);
000036  1ba1              SUBS     r1,r4,r6
000038  4630              MOV      r0,r6
00003a  e8bd47f0          POP      {r4-r10,lr}
00003e  f7ffbffe          B.W      GUI_UC__NumBytes2NumChars
;;;84       #endif
;;;85     }
;;;86     
                          ENDP


                          AREA ||i.GUI__GetCursorPosX||, CODE, READONLY, ALIGN=1

                  GUI__GetCursorPosX PROC
;;;39     */
;;;40     int GUI__GetCursorPosX(const char GUI_UNI_PTR * s, int Index, int MaxNumChars) {
000000  b537              PUSH     {r0-r2,r4,r5,lr}
000002  460d              MOV      r5,r1
;;;41       #if GUI_SUPPORT_ARABIC
;;;42         return GUI__GetCursorPosXArabic(s, Index, MaxNumChars);
;;;43       #else
;;;44         int CursorPosX = 0;
000004  2400              MOVS     r4,#0
000006  e005              B        |L3.20|
                  |L3.8|
;;;45         U16 Char;
;;;46         GUI_USE_PARA(MaxNumChars);
;;;47         while (Index--) {
;;;48           Char        = GUI_UC__GetCharCodeInc(&s);
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       GUI_UC__GetCharCodeInc
;;;49           CursorPosX += GUI_GetCharDistX(Char);
00000e  f7fffffe          BL       GUI_GetCharDistX
000012  4404              ADD      r4,r4,r0
                  |L3.20|
000014  1e6d              SUBS     r5,r5,#1
000016  d2f7              BCS      |L3.8|
;;;50         }
;;;51         return CursorPosX;
000018  4620              MOV      r0,r4
;;;52       #endif
;;;53     }
00001a  bd3e              POP      {r1-r5,pc}
;;;54     
                          ENDP

