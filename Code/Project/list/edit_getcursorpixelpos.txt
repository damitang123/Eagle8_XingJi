; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\edit_getcursorpixelpos.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\edit_getcursorpixelpos.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\EDIT_GetCursorPixelPos.c]
                          THUMB

                          AREA ||i.EDIT_GetCursorPixelPos||, CODE, READONLY, ALIGN=1

                  EDIT_GetCursorPixelPos PROC
;;;33     */
;;;34     void EDIT_GetCursorPixelPos(EDIT_Handle hObj, int * pxPos, int * pyPos) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b088              SUB      sp,sp,#0x20
000006  4690              MOV      r8,r2
000008  460e              MOV      r6,r1
00000a  2800              CMP      r0,#0
00000c  d038              BEQ      |L1.128|
;;;35       if (hObj) {
;;;36         int NumChars;
;;;37         EDIT_Obj * pObj;
;;;38         const char GUI_UNI_PTR * pText;
;;;39         GUI_RECT rInside, rText;
;;;40         WM_LOCK();
;;;41         pObj = EDIT_H2P(hObj);
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4604              MOV      r4,r0
;;;42         if (pObj->hpText) {
000014  8d00              LDRH     r0,[r0,#0x28]
000016  2800              CMP      r0,#0
000018  d032              BEQ      |L1.128|
;;;43           GUI_SetFont(pObj->Props.pFont);
00001a  6de0              LDR      r0,[r4,#0x5c]
00001c  f7fffffe          BL       GUI_SetFont
;;;44           WIDGET__GetInsideRect(&pObj->Widget, &rInside);
000020  4669              MOV      r1,sp
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       WIDGET__GetInsideRect
;;;45           pText       = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000028  f9b40028          LDRSH    r0,[r4,#0x28]
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4607              MOV      r7,r0
;;;46           NumChars    = GUI__GetNumChars(pText);
000032  f7fffffe          BL       GUI__GetNumChars
000036  4605              MOV      r5,r0
;;;47           rInside.x0 += pObj->Props.Border + EDIT_XOFF;
000038  f8bd1000          LDRH     r1,[sp,#0]
00003c  f8b40058          LDRH     r0,[r4,#0x58]
;;;48           rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
;;;49           GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
000040  aa02              ADD      r2,sp,#8
000042  4401              ADD      r1,r1,r0              ;47
000044  1c49              ADDS     r1,r1,#1              ;47
000046  f8ad1000          STRH     r1,[sp,#0]            ;47
00004a  f8bd1004          LDRH     r1,[sp,#4]            ;48
00004e  1a08              SUBS     r0,r1,r0              ;48
000050  1e40              SUBS     r0,r0,#1              ;48
000052  f8ad0004          STRH     r0,[sp,#4]            ;48
000056  4669              MOV      r1,sp
000058  4638              MOV      r0,r7
00005a  6d63              LDR      r3,[r4,#0x54]
00005c  f7fffffe          BL       GUI__CalcTextRect
;;;50           rText.x0 += GUI__GetCursorPosX(pText, pObj->CursorPos, NumChars);
000060  462a              MOV      r2,r5
000062  4638              MOV      r0,r7
000064  6c21              LDR      r1,[r4,#0x40]
000066  f7fffffe          BL       GUI__GetCursorPosX
00006a  f8bd1008          LDRH     r1,[sp,#8]
00006e  4408              ADD      r0,r0,r1
000070  b200              SXTH     r0,r0
000072  f8ad0008          STRH     r0,[sp,#8]
;;;51           *pxPos = rText.x0;
;;;52           *pyPos = rText.y0;
000076  6030              STR      r0,[r6,#0]
000078  f9bd100a          LDRSH    r1,[sp,#0xa]
00007c  f8c81000          STR      r1,[r8,#0]
                  |L1.128|
;;;53         }
;;;54         WM_UNLOCK();
;;;55       }
;;;56     }
000080  b008              ADD      sp,sp,#0x20
000082  e8bd81f0          POP      {r4-r8,pc}
;;;57     
                          ENDP

