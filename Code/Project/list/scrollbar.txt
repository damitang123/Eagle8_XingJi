; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\scrollbar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\scrollbar.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\SCROLLBAR.c]
                          THUMB

                          AREA ||i.SCROLLBAR_AddValue||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_AddValue PROC
;;;553    */
;;;554    void SCROLLBAR_AddValue(SCROLLBAR_Handle hObj, int Add) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
000006  d008              BEQ      |L1.26|
;;;555      SCROLLBAR_Obj* pObj;
;;;556      if (hObj) {
;;;557        WM_LOCK();
;;;558        pObj = SCROLLBAR_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;559        SCROLLBAR_SetValue(hObj, pObj->v + Add);
00000c  6b80              LDR      r0,[r0,#0x38]
00000e  1941              ADDS     r1,r0,r5
000010  4620              MOV      r0,r4
000012  e8bd4070          POP      {r4-r6,lr}
000016  f7ffbffe          B.W      SCROLLBAR_SetValue
                  |L1.26|
;;;560        WM_UNLOCK();
;;;561      }
;;;562    }
00001a  bd70              POP      {r4-r6,pc}
;;;563    
                          ENDP


                          AREA ||i.SCROLLBAR_Callback||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_Callback PROC
;;;423    */
;;;424    void SCROLLBAR_Callback (WM_MESSAGE *pMsg) {
000000  b570              PUSH     {r4-r6,lr}
;;;425      SCROLLBAR_Handle hObj;
;;;426      SCROLLBAR_Obj* pObj;
;;;427      hObj = pMsg->hWin;
000002  f9b06004          LDRSH    r6,[r0,#4]
000006  4605              MOV      r5,r0                 ;424
;;;428      pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4604              MOV      r4,r0
;;;429      /* Let widget handle the standard messages */
;;;430      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000010  4629              MOV      r1,r5
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       WIDGET_HandleActive
000018  2800              CMP      r0,#0
00001a  d05a              BEQ      |L2.210|
;;;431        return;
;;;432      }
;;;433      switch (pMsg->MsgId) {
00001c  6828              LDR      r0,[r5,#0]
00001e  280f              CMP      r0,#0xf
000020  d010              BEQ      |L2.68|
000022  dc06              BGT      |L2.50|
000024  280b              CMP      r0,#0xb
000026  d009              BEQ      |L2.60|
000028  280c              CMP      r0,#0xc
00002a  d010              BEQ      |L2.78|
00002c  280e              CMP      r0,#0xe
00002e  d14b              BNE      |L2.200|
000030  e013              B        |L2.90|
                  |L2.50|
000032  2823              CMP      r0,#0x23
000034  d03f              BEQ      |L2.182|
000036  2824              CMP      r0,#0x24
000038  d146              BNE      |L2.200|
00003a  e022              B        |L2.130|
                  |L2.60|
;;;434      case WM_DELETE:
;;;435        SCROLLBAR__InvalidatePartner(hObj);
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       SCROLLBAR__InvalidatePartner
;;;436        break;
000042  e041              B        |L2.200|
                  |L2.68|
;;;437      case WM_PAINT:
;;;438        GUI_DEBUG_LOG("SCROLLBAR: _Callback(WM_PAINT)\n");
;;;439        _Paint(pObj);
000044  4620              MOV      r0,r4
000046  e8bd4070          POP      {r4-r6,lr}
00004a  f7ffbffe          B.W      _Paint
                  |L2.78|
;;;440        return;
;;;441      case WM_TOUCH:
;;;442        _OnTouch(hObj, pObj, pMsg);
00004e  462a              MOV      r2,r5
000050  4621              MOV      r1,r4
000052  4630              MOV      r0,r6
000054  f7fffffe          BL       _OnTouch
;;;443        break;
000058  e036              B        |L2.200|
                  |L2.90|
00005a  68a9              LDR      r1,[r5,#8]
;;;444      case WM_KEY:
;;;445        _OnKey(hObj, pMsg);
00005c  4630              MOV      r0,r6
00005e  e9d12100          LDRD     r2,r1,[r1,#0]
000062  2900              CMP      r1,#0
000064  dd30              BLE      |L2.200|
000066  2a10              CMP      r2,#0x10
000068  d008              BEQ      |L2.124|
00006a  2a11              CMP      r2,#0x11
00006c  d006              BEQ      |L2.124|
00006e  2a12              CMP      r2,#0x12
000070  d001              BEQ      |L2.118|
000072  2a13              CMP      r2,#0x13
000074  d128              BNE      |L2.200|
                  |L2.118|
000076  f7fffffe          BL       SCROLLBAR_Inc
00007a  e025              B        |L2.200|
                  |L2.124|
00007c  f7fffffe          BL       SCROLLBAR_Dec
000080  e022              B        |L2.200|
                  |L2.130|
000082  68a8              LDR      r0,[r5,#8]
000084  6b62              LDR      r2,[r4,#0x34]
000086  6801              LDR      r1,[r0,#0]
000088  4291              CMP      r1,r2
;;;446        break;
;;;447      case WM_SET_SCROLL_STATE:
;;;448        _OnSetScrollState(hObj, pObj, (const WM_SCROLL_STATE*)pMsg->Data.p);
00008a  d107              BNE      |L2.156|
00008c  6be2              LDR      r2,[r4,#0x3c]
00008e  6883              LDR      r3,[r0,#8]
000090  429a              CMP      r2,r3
000092  d103              BNE      |L2.156|
000094  6ba2              LDR      r2,[r4,#0x38]
000096  6843              LDR      r3,[r0,#4]
000098  429a              CMP      r2,r3
00009a  d015              BEQ      |L2.200|
                  |L2.156|
00009c  6361              STR      r1,[r4,#0x34]
00009e  6881              LDR      r1,[r0,#8]
0000a0  63e1              STR      r1,[r4,#0x3c]
0000a2  6840              LDR      r0,[r0,#4]
0000a4  63a0              STR      r0,[r4,#0x38]
0000a6  4630              MOV      r0,r6
0000a8  f7fffffe          BL       WM_InvalidateWindow
0000ac  2105              MOVS     r1,#5
0000ae  4630              MOV      r0,r6
0000b0  f7fffffe          BL       WM_NotifyParent
0000b4  e008              B        |L2.200|
                  |L2.182|
;;;449        break;
;;;450      case WM_GET_SCROLL_STATE:
;;;451        ((WM_SCROLL_STATE*)pMsg->Data.p)->NumItems = pObj->NumItems;
0000b6  68a9              LDR      r1,[r5,#8]
0000b8  6b60              LDR      r0,[r4,#0x34]
;;;452        ((WM_SCROLL_STATE*)pMsg->Data.p)->PageSize = pObj->PageSize;
0000ba  6008              STR      r0,[r1,#0]
0000bc  68a9              LDR      r1,[r5,#8]
0000be  6be0              LDR      r0,[r4,#0x3c]
;;;453        ((WM_SCROLL_STATE*)pMsg->Data.p)->v        = pObj->v;
0000c0  6088              STR      r0,[r1,#8]
0000c2  68a9              LDR      r1,[r5,#8]
0000c4  6ba0              LDR      r0,[r4,#0x38]
0000c6  6048              STR      r0,[r1,#4]
                  |L2.200|
;;;454        break;
;;;455      }
;;;456      WM_DefaultProc(pMsg);
0000c8  4628              MOV      r0,r5
0000ca  e8bd4070          POP      {r4-r6,lr}
0000ce  f7ffbffe          B.W      WM_DefaultProc
                  |L2.210|
;;;457    }
0000d2  bd70              POP      {r4-r6,pc}
;;;458    
                          ENDP


                          AREA ||i.SCROLLBAR_CreateEx||, CODE, READONLY, ALIGN=2

                  SCROLLBAR_CreateEx PROC
;;;472    */
;;;473    SCROLLBAR_Handle SCROLLBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;474                                        int WinFlags, int ExFlags, int Id)
;;;475    {
;;;476      SCROLLBAR_Handle hObj;
;;;477      WM_LOCK();
;;;478      /* Set defaults if necessary */
;;;479      if ((xsize == 0) && (ysize == 0)) {
;;;480        GUI_RECT Rect;
;;;481        WM_GetInsideRectEx(hParent, &Rect);
;;;482        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
;;;483          xsize = SCROLLBAR__DefaultWidth;
000004  4d2f              LDR      r5,|L3.196|
000006  e9dd740d          LDRD     r7,r4,[sp,#0x34]      ;475
00000a  f8dd903c          LDR      r9,[sp,#0x3c]         ;479
00000e  9e0c              LDR      r6,[sp,#0x30]         ;479
000010  ea520c03          ORRS     r12,r2,r3             ;479
000014  d11e              BNE      |L3.84|
000016  4669              MOV      r1,sp                 ;481
000018  4630              MOV      r0,r6                 ;481
00001a  f7fffffe          BL       WM_GetInsideRectEx
00001e  0720              LSLS     r0,r4,#28             ;482
000020  d50c              BPL      |L3.60|
000022  f9b52000          LDRSH    r2,[r5,#0]  ; SCROLLBAR__DefaultWidth
;;;484          x0    = Rect.x1 + 1 - xsize;
000026  f9bd0004          LDRSH    r0,[sp,#4]
;;;485          y0    = Rect.y0;
00002a  f9bd1002          LDRSH    r1,[sp,#2]
;;;486          ysize = Rect.y1 - Rect.y0 + 1;
00002e  f9bd3006          LDRSH    r3,[sp,#6]
000032  1a80              SUBS     r0,r0,r2              ;484
000034  1a5b              SUBS     r3,r3,r1
000036  1c40              ADDS     r0,r0,#1
000038  1c5b              ADDS     r3,r3,#1
00003a  e00b              B        |L3.84|
                  |L3.60|
;;;487        } else {
;;;488          ysize = SCROLLBAR__DefaultWidth;
00003c  f9b53000          LDRSH    r3,[r5,#0]  ; SCROLLBAR__DefaultWidth
;;;489          y0    = Rect.y1 + 1 - ysize;
000040  f9bd0006          LDRSH    r0,[sp,#6]
;;;490          x0    = Rect.x0;
;;;491          xsize = Rect.x1 - Rect.x0 + 1;
000044  f9bd2004          LDRSH    r2,[sp,#4]
000048  1ac1              SUBS     r1,r0,r3              ;489
00004a  f9bd0000          LDRSH    r0,[sp,#0]            ;490
00004e  1c49              ADDS     r1,r1,#1
000050  1a12              SUBS     r2,r2,r0
000052  1c52              ADDS     r2,r2,#1
                  |L3.84|
;;;492        }
;;;493      }
;;;494      /* Create the window */
;;;495      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SCROLLBAR_Callback,
000054  f04f0c20          MOV      r12,#0x20
000058  f8df806c          LDR      r8,|L3.200|
00005c  b2bf              UXTH     r7,r7
00005e  e88d11c0          STM      sp,{r6-r8,r12}
000062  f7fffffe          BL       WM_CreateWindowAsChild
000066  0007              MOVS     r7,r0
;;;496                                    sizeof(SCROLLBAR_Obj) - sizeof(WM_Obj));
;;;497      if (hObj) {
000068  d027              BEQ      |L3.186|
;;;498        SCROLLBAR_Obj * pObj;
;;;499        U16 InitState;
;;;500        pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00006a  f7fffffe          BL       GUI_ALLOC_h2p
00006e  4606              MOV      r6,r0
;;;501        /* Handle SpecialFlags */
;;;502        InitState = 0;
000070  2200              MOVS     r2,#0
;;;503        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000072  0720              LSLS     r0,r4,#28
000074  d500              BPL      |L3.120|
;;;504          InitState |= WIDGET_CF_VERTICAL;
000076  2208              MOVS     r2,#8
                  |L3.120|
;;;505        }
;;;506        if (ExFlags & SCROLLBAR_CF_FOCUSSABLE) {
000078  06e0              LSLS     r0,r4,#27
00007a  d501              BPL      |L3.128|
;;;507          InitState |= WIDGET_STATE_FOCUSSABLE;
00007c  f0420210          ORR      r2,r2,#0x10
                  |L3.128|
;;;508        }
;;;509        if ((Id != GUI_ID_HSCROLL) && (Id != GUI_ID_VSCROLL)) {
000080  4648              MOV      r0,r9
000082  f1b90fff          CMP      r9,#0xff
000086  d004              BEQ      |L3.146|
000088  f1b90ffe          CMP      r9,#0xfe
00008c  d001              BEQ      |L3.146|
;;;510          InitState |= WIDGET_STATE_FOCUSSABLE;
00008e  f0420210          ORR      r2,r2,#0x10
                  |L3.146|
;;;511        }
;;;512        /* init widget specific variables */
;;;513        WIDGET__Init(&pObj->Widget, Id, InitState);
000092  4601              MOV      r1,r0
000094  4630              MOV      r0,r6
000096  f7fffffe          BL       WIDGET__Init
00009a  1d2d              ADDS     r5,r5,#4
00009c  f1060328          ADD      r3,r6,#0x28
0000a0  e8950007          LDM      r5,{r0-r2}
0000a4  e8830007          STM      r3,{r0-r2}
;;;514        /* init member variables */
;;;515        SCROLLBAR_INIT_ID(pObj);
;;;516        pObj->Props         = SCROLLBAR__DefaultProps;
;;;517        pObj->NumItems      = 100;
0000a8  2064              MOVS     r0,#0x64
;;;518        pObj->PageSize      =  10;
0000aa  6370              STR      r0,[r6,#0x34]
0000ac  200a              MOVS     r0,#0xa
;;;519        pObj->v             =   0;
0000ae  63f0              STR      r0,[r6,#0x3c]
0000b0  2000              MOVS     r0,#0
;;;520        SCROLLBAR__InvalidatePartner(hObj);
0000b2  63b0              STR      r0,[r6,#0x38]
0000b4  4638              MOV      r0,r7
0000b6  f7fffffe          BL       SCROLLBAR__InvalidatePartner
                  |L3.186|
;;;521      } else {
;;;522        GUI_DEBUG_ERROROUT_IF(hObj==0, "SCROLLBAR_Create failed")
;;;523      }
;;;524      WM_UNLOCK();
;;;525      return hObj;
;;;526    }
0000ba  b004              ADD      sp,sp,#0x10
0000bc  4638              MOV      r0,r7                 ;525
0000be  e8bd87f0          POP      {r4-r10,pc}
;;;527    
                          ENDP

0000c2  0000              DCW      0x0000
                  |L3.196|
                          DCD      ||.data||
                  |L3.200|
                          DCD      SCROLLBAR_Callback

                          AREA ||i.SCROLLBAR_Dec||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_Dec PROC
;;;537    */
;;;538    void SCROLLBAR_Dec(SCROLLBAR_Handle hObj) {
000000  f04f31ff          MOV      r1,#0xffffffff
;;;539      SCROLLBAR_AddValue(hObj, -1);
000004  f7ffbffe          B.W      SCROLLBAR_AddValue
;;;540    }
;;;541    
                          ENDP


                          AREA ||i.SCROLLBAR_Inc||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_Inc PROC
;;;545    */
;;;546    void SCROLLBAR_Inc(SCROLLBAR_Handle hObj) {
000000  2101              MOVS     r1,#1
;;;547      SCROLLBAR_AddValue(hObj,  1);
000002  f7ffbffe          B.W      SCROLLBAR_AddValue
;;;548    }
;;;549    
                          ENDP


                          AREA ||i.SCROLLBAR_SetNumItems||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_SetNumItems PROC
;;;596    */
;;;597    void SCROLLBAR_SetNumItems(SCROLLBAR_Handle hObj, int NumItems) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d00a              BEQ      |L6.30|
;;;598      SCROLLBAR_Obj* pObj;
;;;599      if (hObj) {
;;;600        WM_LOCK();
;;;601        pObj = SCROLLBAR_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;602        if (pObj->NumItems != NumItems) {
00000c  6b41              LDR      r1,[r0,#0x34]
00000e  42a1              CMP      r1,r4
000010  d005              BEQ      |L6.30|
;;;603          pObj->NumItems = NumItems;
;;;604          WM_InvalidateWindow(hObj);
000012  6344              STR      r4,[r0,#0x34]
000014  4628              MOV      r0,r5
000016  e8bd4070          POP      {r4-r6,lr}
00001a  f7ffbffe          B.W      WM_InvalidateWindow
                  |L6.30|
;;;605        }
;;;606        WM_UNLOCK();
;;;607      }
;;;608    }
00001e  bd70              POP      {r4-r6,pc}
;;;609    
                          ENDP


                          AREA ||i.SCROLLBAR_SetPageSize||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_SetPageSize PROC
;;;613    */
;;;614    void SCROLLBAR_SetPageSize(SCROLLBAR_Handle hObj, int PageSize) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d00a              BEQ      |L7.30|
;;;615      SCROLLBAR_Obj* pObj;
;;;616      if (hObj) {
;;;617        WM_LOCK();
;;;618        pObj = SCROLLBAR_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;619        if (pObj->PageSize != PageSize) {
00000c  6bc1              LDR      r1,[r0,#0x3c]
00000e  42a1              CMP      r1,r4
000010  d005              BEQ      |L7.30|
;;;620          pObj->PageSize = PageSize;
;;;621          WM_InvalidateWindow(hObj);
000012  63c4              STR      r4,[r0,#0x3c]
000014  4628              MOV      r0,r5
000016  e8bd4070          POP      {r4-r6,lr}
00001a  f7ffbffe          B.W      WM_InvalidateWindow
                  |L7.30|
;;;622        }
;;;623        WM_UNLOCK();
;;;624      }
;;;625    }
00001e  bd70              POP      {r4-r6,pc}
;;;626    
                          ENDP


                          AREA ||i.SCROLLBAR_SetState||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_SetState PROC
;;;630    */
;;;631    void  SCROLLBAR_SetState   (SCROLLBAR_Handle hObj, const WM_SCROLL_STATE* pState) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d00c              BEQ      |L8.34|
;;;632      if (hObj) {
;;;633        SCROLLBAR_SetPageSize(hObj, pState->PageSize);
000008  68a1              LDR      r1,[r4,#8]
00000a  f7fffffe          BL       SCROLLBAR_SetPageSize
;;;634        SCROLLBAR_SetNumItems(hObj, pState->NumItems);
00000e  4628              MOV      r0,r5
000010  6821              LDR      r1,[r4,#0]
000012  f7fffffe          BL       SCROLLBAR_SetNumItems
;;;635        SCROLLBAR_SetValue   (hObj, pState->v);
000016  4628              MOV      r0,r5
000018  6861              LDR      r1,[r4,#4]
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f7ffbffe          B.W      SCROLLBAR_SetValue
                  |L8.34|
;;;636      }
;;;637    }
000022  bd70              POP      {r4-r6,pc}
;;;638    
                          ENDP


                          AREA ||i.SCROLLBAR_SetValue||, CODE, READONLY, ALIGN=1

                  SCROLLBAR_SetValue PROC
;;;567    */
;;;568    void SCROLLBAR_SetValue(SCROLLBAR_Handle hObj, int v) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d019              BEQ      |L9.60|
;;;569      SCROLLBAR_Obj* pObj;
;;;570      int Max;
;;;571      if (hObj) {
;;;572        WM_LOCK();
;;;573        pObj = SCROLLBAR_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;574        Max = pObj->NumItems - pObj->PageSize;
00000c  6bc2              LDR      r2,[r0,#0x3c]
00000e  6b41              LDR      r1,[r0,#0x34]
000010  1a89              SUBS     r1,r1,r2
;;;575        if (Max < 0)
000012  d500              BPL      |L9.22|
;;;576          Max =0;
000014  2100              MOVS     r1,#0
                  |L9.22|
;;;577        /* Put in min/max range */
;;;578        if (v < 0) {
000016  2c00              CMP      r4,#0
000018  da00              BGE      |L9.28|
;;;579          v = 0;
00001a  2400              MOVS     r4,#0
                  |L9.28|
;;;580        }
;;;581        if (v > Max) {
00001c  428c              CMP      r4,r1
00001e  dd00              BLE      |L9.34|
;;;582          v = Max;
000020  460c              MOV      r4,r1
                  |L9.34|
;;;583        }
;;;584        if (pObj->v != v) {
000022  6b81              LDR      r1,[r0,#0x38]
000024  42a1              CMP      r1,r4
000026  d009              BEQ      |L9.60|
;;;585          pObj->v = v;
;;;586          WM_InvalidateWindow(hObj);
000028  6384              STR      r4,[r0,#0x38]
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       WM_InvalidateWindow
;;;587          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000030  4628              MOV      r0,r5
000032  e8bd4070          POP      {r4-r6,lr}
000036  2105              MOVS     r1,#5
000038  f7ffbffe          B.W      WM_NotifyParent
                  |L9.60|
;;;588        }
;;;589        WM_UNLOCK();
;;;590      }
;;;591    }
00003c  bd70              POP      {r4-r6,pc}
;;;592    
                          ENDP


                          AREA ||i.SCROLLBAR__InvalidatePartner||, CODE, READONLY, ALIGN=1

                  SCROLLBAR__InvalidatePartner PROC
;;;408    */
;;;409    void SCROLLBAR__InvalidatePartner(SCROLLBAR_Handle hObj) {     /* Invalidate the partner, since it is also affected */
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;410      WM_InvalidateWindow(WM_GetScrollPartner(hObj));
000004  f7fffffe          BL       WM_GetScrollPartner
000008  f7fffffe          BL       WM_InvalidateWindow
;;;411      WM_SendMessageNoPara(WM_GetParent(hObj), WM_NOTIFY_CLIENTCHANGE);   /* Client area may have changed */
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       WM_GetParent
000012  e8bd4010          POP      {r4,lr}
000016  2125              MOVS     r1,#0x25
000018  f7ffbffe          B.W      WM_SendMessageNoPara
;;;412    }
;;;413    
                          ENDP


                          AREA ||i._CalcPositions||, CODE, READONLY, ALIGN=1

                  _CalcPositions PROC
;;;128    */
;;;129    static void _CalcPositions(SCROLLBAR_Obj* pObj, SCROLLBAR_POSITIONS* pPos) {
000000  e92d47ff          PUSH     {r0-r10,lr}
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  e9d40100          LDRD     r0,r1,[r4,#0]
00000c  e9cd0102          STRD     r0,r1,[sp,#8]
;;;130      int xSizeArrow, xSize, xSizeMoveable, ThumbSize, NumItems, xSizeThumbArea;
;;;131      WM_HWIN hWin;
;;;132      GUI_RECT r, rSub;
;;;133      int x0, y0;
;;;134      r = pObj->Widget.Win.Rect;
;;;135      x0 = r.x0;
;;;136      y0 = r.y0;
;;;137      pPos->x1  = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? r.y1 : r.x1;
000010  f8940026          LDRB     r0,[r4,#0x26]
000014  f9bd7008          LDRSH    r7,[sp,#8]            ;135
000018  f9bd500a          LDRSH    r5,[sp,#0xa]          ;136
00001c  0700              LSLS     r0,r0,#28
00001e  d502              BPL      |L11.38|
000020  f9bd000e          LDRSH    r0,[sp,#0xe]
000024  e001              B        |L11.42|
                  |L11.38|
000026  f9bd000c          LDRSH    r0,[sp,#0xc]
                  |L11.42|
;;;138      /* Subtract the rectangle of the other scrollbar (if existing and visible) */
;;;139      if (pObj->Widget.Id == GUI_ID_HSCROLL) {
00002a  61b0              STR      r0,[r6,#0x18]
00002c  8ca0              LDRH     r0,[r4,#0x24]
00002e  28ff              CMP      r0,#0xff
000030  d112              BNE      |L11.88|
;;;140        hWin = WM_GetScrollbarV(pObj->Widget.Win.hParent);
000032  f9b40016          LDRSH    r0,[r4,#0x16]
000036  f7fffffe          BL       WM_GetScrollbarV
;;;141        if (hWin) {
00003a  b168              CBZ      r0,|L11.88|
;;;142          WM_GetWindowRectEx(hWin, &rSub);
00003c  4669              MOV      r1,sp
00003e  f7fffffe          BL       WM_GetWindowRectEx
;;;143          if (r.x1 == rSub.x1) {
000042  f9bd000c          LDRSH    r0,[sp,#0xc]
000046  f9bd1004          LDRSH    r1,[sp,#4]
00004a  4288              CMP      r0,r1
00004c  d104              BNE      |L11.88|
;;;144            r.x1 = rSub.x0 -1;
00004e  f8bd0000          LDRH     r0,[sp,#0]
000052  1e40              SUBS     r0,r0,#1
000054  f8ad000c          STRH     r0,[sp,#0xc]
                  |L11.88|
;;;145          }
;;;146        }
;;;147      }
;;;148      if (pObj->Widget.Id == GUI_ID_VSCROLL) {
000058  8ca0              LDRH     r0,[r4,#0x24]
00005a  28fe              CMP      r0,#0xfe
00005c  d112              BNE      |L11.132|
;;;149        hWin = WM_GetScrollbarH(pObj->Widget.Win.hParent);
00005e  f9b40016          LDRSH    r0,[r4,#0x16]
000062  f7fffffe          BL       WM_GetScrollbarH
;;;150        if (hWin) {
000066  b168              CBZ      r0,|L11.132|
;;;151          WM_GetWindowRectEx(hWin, &rSub);
000068  4669              MOV      r1,sp
00006a  f7fffffe          BL       WM_GetWindowRectEx
;;;152          if (r.y1 == rSub.y1) {
00006e  f9bd000e          LDRSH    r0,[sp,#0xe]
000072  f9bd1006          LDRSH    r1,[sp,#6]
000076  4288              CMP      r0,r1
000078  d104              BNE      |L11.132|
;;;153            r.y1 = rSub.y0 -1;
00007a  f8bd0002          LDRH     r0,[sp,#2]
00007e  1e40              SUBS     r0,r0,#1
000080  f8ad000e          STRH     r0,[sp,#0xe]
                  |L11.132|
;;;154          }
;;;155        }
;;;156      }
;;;157      /* Convert coordinates of this window */
;;;158      GUI_MoveRect(&r, -x0, -y0);
000084  426a              RSBS     r2,r5,#0
000086  4279              RSBS     r1,r7,#0
000088  a802              ADD      r0,sp,#8
00008a  f7fffffe          BL       GUI_MoveRect
00008e  f8940026          LDRB     r0,[r4,#0x26]
000092  0700              LSLS     r0,r0,#28
000094  d517              BPL      |L11.198|
000096  88a0              LDRH     r0,[r4,#4]
000098  8821              LDRH     r1,[r4,#0]
00009a  f8bd2008          LDRH     r2,[sp,#8]
00009e  1a40              SUBS     r0,r0,r1
0000a0  1c40              ADDS     r0,r0,#1
0000a2  f8bd100c          LDRH     r1,[sp,#0xc]
0000a6  f8bd300a          LDRH     r3,[sp,#0xa]
0000aa  1a82              SUBS     r2,r0,r2
0000ac  f8ad3008          STRH     r3,[sp,#8]
0000b0  1e52              SUBS     r2,r2,#1
0000b2  f8bd300e          LDRH     r3,[sp,#0xe]
0000b6  1a40              SUBS     r0,r0,r1
0000b8  f8ad300c          STRH     r3,[sp,#0xc]
0000bc  1e40              SUBS     r0,r0,#1
0000be  f8ad200e          STRH     r2,[sp,#0xe]
0000c2  f8ad000a          STRH     r0,[sp,#0xa]
                  |L11.198|
;;;159      /* Convert real into virtual coordinates */
;;;160      _WIDGET__RECT2VRECT(&pObj->Widget, &r);
;;;161      NumItems      = pObj->NumItems;
;;;162      xSize         = r.x1 - r.x0 + 1;
0000c6  f9bd000c          LDRSH    r0,[sp,#0xc]
0000ca  f9bd1008          LDRSH    r1,[sp,#8]
0000ce  f8d4a034          LDR      r10,[r4,#0x34]
0000d2  1a40              SUBS     r0,r0,r1
0000d4  f1000901          ADD      r9,r0,#1
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       WIDGET__GetXSize
0000de  4607              MOV      r7,r0
0000e0  4620              MOV      r0,r4
0000e2  f7fffffe          BL       WIDGET__GetYSize
0000e6  2105              MOVS     r1,#5
0000e8  eb010550          ADD      r5,r1,r0,LSR #1
0000ec  1f78              SUBS     r0,r7,#5
0000ee  4285              CMP      r5,r0
0000f0  d900              BLS      |L11.244|
0000f2  4605              MOV      r5,r0
                  |L11.244|
;;;163      xSizeArrow    = _GetArrowSize(pObj);
0000f4  46a8              MOV      r8,r5
;;;164      xSizeThumbArea= xSize - 2 * xSizeArrow;     /* Number of pixels available for thumb and movement */
0000f6  f1c80100          RSB      r1,r8,#0
0000fa  eb090741          ADD      r7,r9,r1,LSL #1
;;;165      ThumbSize     = GUI__DivideRound(xSizeThumbArea * pObj->PageSize, NumItems);
0000fe  6be0              LDR      r0,[r4,#0x3c]
000100  4651              MOV      r1,r10
000102  4378              MULS     r0,r7,r0
000104  f7fffffe          BL       GUI__DivideRound
000108  4605              MOV      r5,r0
;;;166      if (ThumbSize < SCROLLBAR_THUMB_SIZE_MIN_DEFAULT) {
00010a  2804              CMP      r0,#4
00010c  da00              BGE      |L11.272|
;;;167        ThumbSize = SCROLLBAR_THUMB_SIZE_MIN_DEFAULT;
00010e  2504              MOVS     r5,#4
                  |L11.272|
;;;168      }
;;;169      if (ThumbSize > xSizeThumbArea) {
000110  42bd              CMP      r5,r7
000112  dd00              BLE      |L11.278|
;;;170        ThumbSize = xSizeThumbArea;
000114  463d              MOV      r5,r7
                  |L11.278|
;;;171      }
;;;172      xSizeMoveable = xSizeThumbArea - ThumbSize;
;;;173      pPos->x0_LeftArrow  = r.x0;
000116  f9bd0008          LDRSH    r0,[sp,#8]
;;;174      pPos->x1_LeftArrow  = xSizeArrow - 1;
00011a  6030              STR      r0,[r6,#0]
00011c  f1a80001          SUB      r0,r8,#1
;;;175      pPos->x1_RightArrow = xSize - 1;
000120  6070              STR      r0,[r6,#4]
000122  f1a90001          SUB      r0,r9,#1
;;;176      pPos->x0_RightArrow = xSize - xSizeArrow;
000126  6170              STR      r0,[r6,#0x14]
000128  eba90008          SUB      r0,r9,r8
;;;177      pPos->x0_Thumb      = pPos->x1_LeftArrow + 1+ GUI__DivideRound(xSizeMoveable * pObj->v, NumItems - pObj->PageSize);
00012c  6130              STR      r0,[r6,#0x10]
00012e  6be1              LDR      r1,[r4,#0x3c]
000130  6ba0              LDR      r0,[r4,#0x38]
000132  1b7f              SUBS     r7,r7,r5              ;172
000134  ebaa0101          SUB      r1,r10,r1
000138  4378              MULS     r0,r7,r0
00013a  f7fffffe          BL       GUI__DivideRound
00013e  6871              LDR      r1,[r6,#4]
000140  1c40              ADDS     r0,r0,#1
000142  4408              ADD      r0,r0,r1
;;;178      pPos->x1_Thumb      = pPos->x0_Thumb + ThumbSize - 1;
000144  1e69              SUBS     r1,r5,#1
000146  60b0              STR      r0,[r6,#8]
000148  4408              ADD      r0,r0,r1
00014a  60f0              STR      r0,[r6,#0xc]
00014c  e9c67507          STRD     r7,r5,[r6,#0x1c]
;;;179      pPos->xSizeMoveable = xSizeMoveable;
;;;180      pPos->ThumbSize     = ThumbSize;
;;;181    }
000150  e8bd87ff          POP      {r0-r10,pc}
;;;182    
                          ENDP


                          AREA ||i._DrawTriangle||, CODE, READONLY, ALIGN=1

                  _DrawTriangle PROC
;;;186    */
;;;187    static void _DrawTriangle(WIDGET* pWidget, int x, int y, int Size, int Inc) {
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;188      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000004  f8900026          LDRB     r0,[r0,#0x26]
000008  9f06              LDR      r7,[sp,#0x18]
00000a  461c              MOV      r4,r3                 ;187
00000c  4616              MOV      r6,r2                 ;187
00000e  460d              MOV      r5,r1                 ;187
000010  0700              LSLS     r0,r0,#28
000012  d407              BMI      |L12.36|
000014  e011              B        |L12.58|
                  |L12.22|
;;;189        for (; Size >= 0; Size--, x += Inc) {
;;;190          GUI_DrawHLine(x, y - Size, y + Size);
000016  1932              ADDS     r2,r6,r4
000018  1b31              SUBS     r1,r6,r4
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       GUI_DrawHLine
000020  443d              ADD      r5,r5,r7              ;189
000022  1e64              SUBS     r4,r4,#1              ;189
                  |L12.36|
000024  2c00              CMP      r4,#0                 ;189
000026  daf6              BGE      |L12.22|
                  |L12.40|
;;;191        }
;;;192      } else {
;;;193        for (; Size >= 0; Size--, x += Inc) {
;;;194          GUI_DrawVLine(x, y - Size, y + Size);
;;;195        }
;;;196      }
;;;197    }
000028  e8bd81f0          POP      {r4-r8,pc}
                  |L12.44|
00002c  1932              ADDS     r2,r6,r4              ;194
00002e  1b31              SUBS     r1,r6,r4              ;194
000030  4628              MOV      r0,r5                 ;194
000032  f7fffffe          BL       GUI_DrawVLine
000036  443d              ADD      r5,r5,r7              ;193
000038  1e64              SUBS     r4,r4,#1              ;193
                  |L12.58|
00003a  2c00              CMP      r4,#0                 ;193
00003c  daf6              BGE      |L12.44|
00003e  e7f3              B        |L12.40|
;;;198    
                          ENDP


                          AREA ||i._OnTouch||, CODE, READONLY, ALIGN=1

                  _OnTouch PROC
;;;292    */
;;;293    static void _OnTouch(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, WM_MESSAGE*pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  6896              LDR      r6,[r2,#8]
000006  b08a              SUB      sp,sp,#0x28
000008  460c              MOV      r4,r1
00000a  4607              MOV      r7,r0
00000c  2e00              CMP      r6,#0
00000e  d060              BEQ      |L13.210|
;;;294      SCROLLBAR_POSITIONS Pos;
;;;295      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
;;;296      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
;;;297        if (pState->Pressed) {
000010  7a30              LDRB     r0,[r6,#8]
000012  f44f7880          MOV      r8,#0x100
000016  b378              CBZ      r0,|L13.120|
;;;298          int Sel;
;;;299          int Range;
;;;300          int x;
;;;301          Sel = pObj->v;
;;;302          _CalcPositions(pObj, &Pos);
000018  4669              MOV      r1,sp
00001a  4620              MOV      r0,r4
00001c  6ba5              LDR      r5,[r4,#0x38]
00001e  f7fffffe          BL       _CalcPositions
;;;303          Range = pObj->NumItems - pObj->PageSize;
000022  6be1              LDR      r1,[r4,#0x3c]
000024  6b60              LDR      r0,[r4,#0x34]
000026  1a42              SUBS     r2,r0,r1
;;;304          /* Swap mouse coordinates if necessary */
;;;305          if (pObj->Widget.State & WIDGET_STATE_VERTICAL) {
000028  f8940026          LDRB     r0,[r4,#0x26]
00002c  0700              LSLS     r0,r0,#28
00002e  d503              BPL      |L13.56|
000030  e9d61000          LDRD     r1,r0,[r6,#0]
000034  e9c60100          STRD     r0,r1,[r6,#0]
                  |L13.56|
;;;306            int t = pState->x;
;;;307            pState->x = pState->y;
;;;308            pState->y = t;
;;;309          }
;;;310          x = pState->x;
;;;311          if (x <= Pos.x1_LeftArrow) {         /* left arrow (line left) */
000038  6830              LDR      r0,[r6,#0]
00003a  9901              LDR      r1,[sp,#4]
00003c  4281              CMP      r1,r0
00003e  db01              BLT      |L13.68|
000040  1e6d              SUBS     r5,r5,#1
;;;312            Sel--;
000042  e024              B        |L13.142|
                  |L13.68|
;;;313          } else if (x < Pos.x0_Thumb) {       /* left area  (page left) */
000044  9902              LDR      r1,[sp,#8]
000046  4281              CMP      r1,r0
000048  dd02              BLE      |L13.80|
;;;314            Sel -= pObj->PageSize;
00004a  6be0              LDR      r0,[r4,#0x3c]
00004c  1a2d              SUBS     r5,r5,r0
00004e  e01e              B        |L13.142|
                  |L13.80|
;;;315          } else if (x <= Pos.x1_Thumb) {      /* Thumb area */
000050  9903              LDR      r1,[sp,#0xc]
000052  4281              CMP      r1,r0
000054  db11              BLT      |L13.122|
;;;316            if (Pos.xSizeMoveable > 0) {
000056  9907              LDR      r1,[sp,#0x1c]
000058  2900              CMP      r1,#0
00005a  dd18              BLE      |L13.142|
;;;317              x = x - Pos.ThumbSize/2 - Pos.x1_LeftArrow-1;
00005c  9908              LDR      r1,[sp,#0x20]
00005e  eb0171d1          ADD      r1,r1,r1,LSR #31
000062  eba00061          SUB      r0,r0,r1,ASR #1
000066  9901              LDR      r1,[sp,#4]
000068  1a40              SUBS     r0,r0,r1
;;;318              Sel = GUI__DivideRound(Range * x, Pos.xSizeMoveable);
00006a  1e40              SUBS     r0,r0,#1
00006c  4350              MULS     r0,r2,r0
00006e  9907              LDR      r1,[sp,#0x1c]
000070  f7fffffe          BL       GUI__DivideRound
000074  4605              MOV      r5,r0
000076  e00a              B        |L13.142|
                  |L13.120|
000078  e01d              B        |L13.182|
                  |L13.122|
;;;319            }
;;;320          } else if (x < Pos.x0_RightArrow) {  /* right area (page right) */
00007a  9904              LDR      r1,[sp,#0x10]
00007c  4281              CMP      r1,r0
00007e  dd02              BLE      |L13.134|
;;;321            Sel += pObj->PageSize;
000080  6be0              LDR      r0,[r4,#0x3c]
000082  4405              ADD      r5,r5,r0
000084  e003              B        |L13.142|
                  |L13.134|
;;;322          } else  if (x <= Pos.x1_RightArrow) {
000086  9905              LDR      r1,[sp,#0x14]
000088  4281              CMP      r1,r0
00008a  db00              BLT      |L13.142|
00008c  1c6d              ADDS     r5,r5,#1
                  |L13.142|
;;;323            Sel++;
;;;324          }
;;;325          /* WM_SetFocus(hObj); */
;;;326          WM_SetCapture(hObj, 1);
00008e  2101              MOVS     r1,#1
000090  4638              MOV      r0,r7
000092  f7fffffe          BL       WM_SetCapture
;;;327          SCROLLBAR_SetValue(hObj, Sel);
000096  4629              MOV      r1,r5
000098  4638              MOV      r0,r7
00009a  f7fffffe          BL       SCROLLBAR_SetValue
;;;328          if ((pObj->Widget.State & SCROLLBAR_STATE_PRESSED) == 0){   
00009e  8ce0              LDRH     r0,[r4,#0x26]
0000a0  05c0              LSLS     r0,r0,#23
0000a2  d416              BMI      |L13.210|
0000a4  4641              MOV      r1,r8
0000a6  4638              MOV      r0,r7
0000a8  f7fffffe          BL       WIDGET_OrState
0000ac  7f20              LDRB     r0,[r4,#0x1c]
0000ae  0780              LSLS     r0,r0,#30
0000b0  d50f              BPL      |L13.210|
0000b2  2101              MOVS     r1,#1
0000b4  e00a              B        |L13.204|
                  |L13.182|
;;;329            _ScrollbarPressed(hObj, pObj);
;;;330          }
;;;331        } else {
;;;332          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;333          if (pObj->Widget.State & SCROLLBAR_STATE_PRESSED) {   
0000b6  8ce0              LDRH     r0,[r4,#0x26]
0000b8  05c0              LSLS     r0,r0,#23
0000ba  d50a              BPL      |L13.210|
0000bc  4641              MOV      r1,r8
0000be  4638              MOV      r0,r7
0000c0  f7fffffe          BL       WIDGET_AndState
0000c4  7f20              LDRB     r0,[r4,#0x1c]
0000c6  0780              LSLS     r0,r0,#30
0000c8  d503              BPL      |L13.210|
0000ca  2102              MOVS     r1,#2
                  |L13.204|
0000cc  4638              MOV      r0,r7
0000ce  f7fffffe          BL       WM_NotifyParent
                  |L13.210|
;;;334            _ScrollbarReleased(hObj, pObj);
;;;335          }
;;;336        }
;;;337      }
;;;338    }
0000d2  b00a              ADD      sp,sp,#0x28
0000d4  e8bd81f0          POP      {r4-r8,pc}
;;;339    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=1

                  _Paint PROC
;;;202    */
;;;203    static void _Paint(SCROLLBAR_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  b08e              SUB      sp,sp,#0x38
000004  4604              MOV      r4,r0
;;;204      int ArrowSize, ArrowOff;
;;;205      SCROLLBAR_POSITIONS Pos;
;;;206      GUI_RECT r, rClient;
;;;207      /*
;;;208        Get / calc position info
;;;209      */
;;;210      _CalcPositions(pObj, &Pos);
000006  a905              ADD      r1,sp,#0x14
000008  f7fffffe          BL       _CalcPositions
;;;211      WIDGET__GetClientRect(&pObj->Widget, &rClient);
00000c  a903              ADD      r1,sp,#0xc
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       WIDGET__GetClientRect
000014  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000018  e9cd0101          STRD     r0,r1,[sp,#4]
;;;212      r = rClient;
;;;213      ArrowSize = ((r.y1 - r.y0) /3) - 1;
00001c  f9bd000a          LDRSH    r0,[sp,#0xa]
000020  f9bd1006          LDRSH    r1,[sp,#6]
000024  1a41              SUBS     r1,r0,r1
000026  2003              MOVS     r0,#3
000028  fb91f5f0          SDIV     r5,r1,r0
00002c  1e6d              SUBS     r5,r5,#1
;;;214      ArrowOff = 3 + ArrowSize+ ArrowSize/3;
00002e  fb95f0f0          SDIV     r0,r5,r0
000032  1946              ADDS     r6,r0,r5
;;;215      /*
;;;216        Draw left Arrow
;;;217      */
;;;218      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000034  1cf6              ADDS     r6,r6,#3
000036  6aa0              LDR      r0,[r4,#0x28]
000038  f7fffffe          BL       LCD_SetColor
00003c  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000040  e9cd0101          STRD     r0,r1,[sp,#4]
;;;219      r = rClient;
;;;220      r.x0 = Pos.x0_LeftArrow;
000044  9805              LDR      r0,[sp,#0x14]
000046  f8ad0004          STRH     r0,[sp,#4]
;;;221      r.x1 = Pos.x1_LeftArrow;
00004a  9806              LDR      r0,[sp,#0x18]
00004c  f8ad0008          STRH     r0,[sp,#8]
;;;222      WIDGET__FillRectEx(&pObj->Widget, &r);
000050  a901              ADD      r1,sp,#4
000052  4620              MOV      r0,r4
000054  f7fffffe          BL       WIDGET__FillRectEx
;;;223      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
000058  6b20              LDR      r0,[r4,#0x30]
00005a  f7fffffe          BL       LCD_SetColor
;;;224      _DrawTriangle(&pObj->Widget, r.x0 + ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, -1);
00005e  f04f30ff          MOV      r0,#0xffffffff
000062  9000              STR      r0,[sp,#0]
000064  f9bd000a          LDRSH    r0,[sp,#0xa]
000068  f9bd1006          LDRSH    r1,[sp,#6]
00006c  462b              MOV      r3,r5
00006e  1a40              SUBS     r0,r0,r1
000070  1042              ASRS     r2,r0,#1
000072  f9bd0004          LDRSH    r0,[sp,#4]
000076  1981              ADDS     r1,r0,r6
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       _DrawTriangle
;;;225      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
00007e  a901              ADD      r1,sp,#4
000080  4620              MOV      r0,r4
000082  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;226      /*
;;;227        Draw the thumb area which is not covered by the thumb
;;;228      */
;;;229      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_SHAFT]);
000086  6ae0              LDR      r0,[r4,#0x2c]
000088  f7fffffe          BL       LCD_SetColor
;;;230      r.x0 = Pos.x1_LeftArrow + 1;
00008c  9806              LDR      r0,[sp,#0x18]
;;;231      r.x1 = Pos.x0_Thumb - 1;
;;;232      WIDGET__FillRectEx(&pObj->Widget, &r);
00008e  a901              ADD      r1,sp,#4
000090  1c40              ADDS     r0,r0,#1              ;230
000092  f8ad0004          STRH     r0,[sp,#4]            ;230
000096  9807              LDR      r0,[sp,#0x1c]         ;231
000098  1e40              SUBS     r0,r0,#1              ;231
00009a  f8ad0008          STRH     r0,[sp,#8]            ;231
00009e  4620              MOV      r0,r4
0000a0  f7fffffe          BL       WIDGET__FillRectEx
0000a4  e9dd0103          LDRD     r0,r1,[sp,#0xc]
0000a8  e9cd0101          STRD     r0,r1,[sp,#4]
;;;233      r = rClient;
;;;234      r.x0 = Pos.x1_Thumb + 1;
0000ac  9808              LDR      r0,[sp,#0x20]
;;;235      r.x1 = Pos.x0_RightArrow - 1;
;;;236      WIDGET__FillRectEx(&pObj->Widget, &r);
0000ae  a901              ADD      r1,sp,#4
0000b0  1c40              ADDS     r0,r0,#1              ;234
0000b2  f8ad0004          STRH     r0,[sp,#4]            ;234
0000b6  9809              LDR      r0,[sp,#0x24]         ;235
0000b8  1e40              SUBS     r0,r0,#1              ;235
0000ba  f8ad0008          STRH     r0,[sp,#8]            ;235
0000be  4620              MOV      r0,r4
0000c0  f7fffffe          BL       WIDGET__FillRectEx
0000c4  e9dd0103          LDRD     r0,r1,[sp,#0xc]
0000c8  e9cd0101          STRD     r0,r1,[sp,#4]
;;;237      /*
;;;238        Draw Thumb
;;;239      */
;;;240      r = rClient;
;;;241      r.x0 = Pos.x0_Thumb;
0000cc  9807              LDR      r0,[sp,#0x1c]
0000ce  f8ad0004          STRH     r0,[sp,#4]
;;;242      r.x1 = Pos.x1_Thumb;
0000d2  9808              LDR      r0,[sp,#0x20]
0000d4  f8ad0008          STRH     r0,[sp,#8]
;;;243      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
0000d8  6aa0              LDR      r0,[r4,#0x28]
0000da  f7fffffe          BL       LCD_SetColor
;;;244      WIDGET__FillRectEx(&pObj->Widget, &r);
0000de  a901              ADD      r1,sp,#4
0000e0  4620              MOV      r0,r4
0000e2  f7fffffe          BL       WIDGET__FillRectEx
;;;245      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
0000e6  a901              ADD      r1,sp,#4
0000e8  4620              MOV      r0,r4
0000ea  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;246      /*
;;;247        Draw right Arrow
;;;248      */
;;;249      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
0000ee  6aa0              LDR      r0,[r4,#0x28]
0000f0  f7fffffe          BL       LCD_SetColor
;;;250      r.x0 = Pos.x0_RightArrow;
0000f4  9809              LDR      r0,[sp,#0x24]
0000f6  f8ad0004          STRH     r0,[sp,#4]
;;;251      r.x1 = Pos.x1_RightArrow;
0000fa  980a              LDR      r0,[sp,#0x28]
0000fc  f8ad0008          STRH     r0,[sp,#8]
;;;252      WIDGET__FillRectEx(&pObj->Widget, &r);
000100  a901              ADD      r1,sp,#4
000102  4620              MOV      r0,r4
000104  f7fffffe          BL       WIDGET__FillRectEx
;;;253      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
000108  6b20              LDR      r0,[r4,#0x30]
00010a  f7fffffe          BL       LCD_SetColor
;;;254      _DrawTriangle(&pObj->Widget, r.x1 - ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, 1);
00010e  2001              MOVS     r0,#1
000110  9000              STR      r0,[sp,#0]
000112  f9bd000a          LDRSH    r0,[sp,#0xa]
000116  f9bd1006          LDRSH    r1,[sp,#6]
00011a  462b              MOV      r3,r5
00011c  1a40              SUBS     r0,r0,r1
00011e  1042              ASRS     r2,r0,#1
000120  f9bd0008          LDRSH    r0,[sp,#8]
000124  1b81              SUBS     r1,r0,r6
000126  4620              MOV      r0,r4
000128  f7fffffe          BL       _DrawTriangle
;;;255      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
00012c  a901              ADD      r1,sp,#4
00012e  4620              MOV      r0,r4
000130  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
000134  e9dd010a          LDRD     r0,r1,[sp,#0x28]
;;;256      /*
;;;257        Draw overlap area (if any ...)
;;;258      */
;;;259      if (Pos.x1_RightArrow != Pos.x1) {
000138  4288              CMP      r0,r1
00013a  d00b              BEQ      |L14.340|
00013c  1c40              ADDS     r0,r0,#1
;;;260        r.x0 = Pos.x1_RightArrow + 1;
00013e  f8ad0004          STRH     r0,[sp,#4]
;;;261        r.x1 = Pos.x1;
000142  f8ad1008          STRH     r1,[sp,#8]
;;;262        LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000146  6aa0              LDR      r0,[r4,#0x28]
000148  f7fffffe          BL       LCD_SetColor
;;;263        WIDGET__FillRectEx(&pObj->Widget, &r);
00014c  a901              ADD      r1,sp,#4
00014e  4620              MOV      r0,r4
000150  f7fffffe          BL       WIDGET__FillRectEx
                  |L14.340|
;;;264      }
;;;265    }
000154  b00e              ADD      sp,sp,#0x38
000156  bd70              POP      {r4-r6,pc}
;;;266    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  SCROLLBAR__DefaultWidth
000000  000b              DCW      0x000b
000002  0000              DCB      0x00,0x00
                  SCROLLBAR__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00808080
                          DCD      0x00000000
