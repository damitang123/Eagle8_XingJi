; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\ads8320.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\ads8320.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\Board_Support_Package\ads8320.c]
                          THUMB

                          AREA ||i.AD8320_Test||, CODE, READONLY, ALIGN=2

                  AD8320_Test PROC
;;;185    
;;;186    void AD8320_Test(void)
000000  b510              PUSH     {r4,lr}
;;;187    {
;;;188    	Ad8320_Gpio_Init();
000002  f7fffffe          BL       Ad8320_Gpio_Init
;;;189    	TRACE_PRINTF("Adc_Get_Alcohol_Sensor_Value=%d\r\n", Adc_Get_Alcohol_Sensor_Value());
000006  f7fffffe          BL       Adc_Get_Alcohol_Sensor_Value
00000a  4601              MOV      r1,r0
00000c  e8bd4010          POP      {r4,lr}
000010  a001              ADR      r0,|L1.24|
000012  f7ffbffe          B.W      User_Debug_Printf
;;;190    }
;;;191    
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
000018  4164635f          DCB      "Adc_Get_Alcohol_Sensor_Value=%d\r\n",0
00001c  4765745f
000020  416c636f
000024  686f6c5f
000028  53656e73
00002c  6f725f56
000030  616c7565
000034  3d25640d
000038  0a00    
00003a  00                DCB      0
00003b  00                DCB      0

                          AREA ||i.Ad8320_CS_Disable||, CODE, READONLY, ALIGN=2

                  Ad8320_CS_Disable PROC
;;;35     
;;;36     void Ad8320_CS_Disable(void)
000000  4901              LDR      r1,|L2.8|
;;;37     {
;;;38     	CS_ADS8320_H()	;
000002  2040              MOVS     r0,#0x40
000004  6108              STR      r0,[r1,#0x10]
;;;39     }
000006  4770              BX       lr
;;;40     
                          ENDP

                  |L2.8|
                          DCD      0x40011000

                          AREA ||i.Ad8320_CS_Enable||, CODE, READONLY, ALIGN=2

                  Ad8320_CS_Enable PROC
;;;30     
;;;31     void Ad8320_CS_Enable(void)
000000  4901              LDR      r1,|L3.8|
;;;32     {
;;;33     	CS_ADS8320_L()	;
000002  2040              MOVS     r0,#0x40
000004  6148              STR      r0,[r1,#0x14]
;;;34     }
000006  4770              BX       lr
;;;35     
                          ENDP

                  |L3.8|
                          DCD      0x40011000

                          AREA ||i.Ad8320_Gpio_Init||, CODE, READONLY, ALIGN=2

                  Ad8320_Gpio_Init PROC
;;;40     
;;;41     void Ad8320_Gpio_Init(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;42     {
;;;43     	GPIO_InitTypeDef GPIO_InitStructure; 
;;;44     
;;;45     	/*SCLK ,CS*/
;;;46     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
000002  f44f7000          MOV      r0,#0x200
000006  f8ad0000          STRH     r0,[sp,#0]
;;;47     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00000a  2410              MOVS     r4,#0x10
;;;48     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
;;;49     	GPIO_Init(GPIOC, &GPIO_InitStructure); 
00000c  4f10              LDR      r7,|L4.80|
00000e  f88d4003          STRB     r4,[sp,#3]            ;47
000012  2503              MOVS     r5,#3                 ;48
000014  f88d5002          STRB     r5,[sp,#2]            ;48
000018  4669              MOV      r1,sp
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       GPIO_Init
;;;50     
;;;51     	/*MISO*/
;;;52     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
000020  2001              MOVS     r0,#1
000022  f8ad0000          STRH     r0,[sp,#0]
;;;53     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000026  2004              MOVS     r0,#4
000028  f88d0003          STRB     r0,[sp,#3]
;;;54     	GPIO_Init(GPIOE, &GPIO_InitStructure); 
00002c  4669              MOV      r1,sp
00002e  4809              LDR      r0,|L4.84|
000030  f7fffffe          BL       GPIO_Init
;;;55     
;;;56     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
000034  2640              MOVS     r6,#0x40
000036  f8ad6000          STRH     r6,[sp,#0]
;;;57     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00003a  f88d4003          STRB     r4,[sp,#3]
;;;58     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00003e  f88d5002          STRB     r5,[sp,#2]
;;;59     	GPIO_Init(GPIOC, &GPIO_InitStructure); 
000042  4669              MOV      r1,sp
000044  4638              MOV      r0,r7
000046  f7fffffe          BL       GPIO_Init
;;;60     
;;;61     	CS_ADS8320_H();
00004a  613e              STR      r6,[r7,#0x10]
;;;62     }
00004c  bdf8              POP      {r3-r7,pc}
;;;63     
                          ENDP

00004e  0000              DCW      0x0000
                  |L4.80|
                          DCD      0x40011000
                  |L4.84|
                          DCD      0x40011800

                          AREA ||i.Adc_Get_Alcohol_Sensor_Value||, CODE, READONLY, ALIGN=1

                  Adc_Get_Alcohol_Sensor_Value PROC
;;;160    
;;;161    unsigned short Adc_Get_Alcohol_Sensor_Value(void)
000000  b510              PUSH     {r4,lr}
;;;162    {
;;;163    	unsigned short ret;
;;;164    	Ad8320_Gpio_Init();
000002  f7fffffe          BL       Ad8320_Gpio_Init
;;;165    	ret = Get_Ads8320_Value();
000006  e8bd4010          POP      {r4,lr}
00000a  f7ffbffe          B.W      Get_Ads8320_Value
;;;166    	return ret;
;;;167    }
;;;168    
                          ENDP


                          AREA ||i.Adc_Get_Alcohol_Sensor_Value_Fast||, CODE, READONLY, ALIGN=1

                  Adc_Get_Alcohol_Sensor_Value_Fast PROC
;;;155    
;;;156    unsigned short Adc_Get_Alcohol_Sensor_Value_Fast(void)
000000  f7ffbffe          B.W      Get_Ads8320_Value
;;;157    {
;;;158    	return Get_Ads8320_Value();
;;;159    }
;;;160    
                          ENDP


                          AREA ||i.Adc_Is_Alcohol_Sensor_Ready||, CODE, READONLY, ALIGN=1

                  Adc_Is_Alcohol_Sensor_Ready PROC
;;;168    
;;;169    BOOL Adc_Is_Alcohol_Sensor_Ready(void)
000000  b570              PUSH     {r4-r6,lr}
;;;170    {
;;;171    	unsigned char i = 4;
000002  2504              MOVS     r5,#4
;;;172    	unsigned short adc_value = 0;
000004  2400              MOVS     r4,#0
000006  e006              B        |L7.22|
                  |L7.8|
;;;173    	while(i--)
;;;174    	{
;;;175    		delay_ms(5);
000008  2005              MOVS     r0,#5
00000a  f7fffffe          BL       delay_ms
;;;176    		adc_value += Adc_Get_Alcohol_Sensor_Value();
00000e  f7fffffe          BL       Adc_Get_Alcohol_Sensor_Value
000012  4420              ADD      r0,r0,r4
000014  b284              UXTH     r4,r0
                  |L7.22|
000016  1e6d              SUBS     r5,r5,#1              ;173
000018  b2ed              UXTB     r5,r5                 ;173
00001a  d2f5              BCS      |L7.8|
;;;177    	}
;;;178    
;;;179    	if((adc_value / 4) < ALCOHOL_SENSOR_CLEAN_AD)
00001c  f5b47fc8          CMP      r4,#0x190
000020  d201              BCS      |L7.38|
;;;180    		return TRUE;
000022  2001              MOVS     r0,#1
;;;181    	else
;;;182    		return FALSE;
;;;183    }
000024  bd70              POP      {r4-r6,pc}
                  |L7.38|
000026  2000              MOVS     r0,#0                 ;182
000028  bd70              POP      {r4-r6,pc}
;;;184    
                          ENDP


                          AREA ||i.Get_Ads8320_Value||, CODE, READONLY, ALIGN=2

                  Get_Ads8320_Value PROC
;;;64     
;;;65     unsigned short Get_Ads8320_Value()
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;66     {
;;;67     	int i;
;;;68     	unsigned short nData = 0;
;;;69     
;;;70     	SCL_ADS8320_L();
000004  4c29              LDR      r4,|L8.172|
000006  f44f7500          MOV      r5,#0x200
00000a  2600              MOVS     r6,#0                 ;68
00000c  6165              STR      r5,[r4,#0x14]
;;;71     	CS_ADS8320_L();
00000e  f04f0840          MOV      r8,#0x40
000012  f8c48014          STR      r8,[r4,#0x14]
;;;72     	Sample_Delay(1);
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       Sample_Delay
;;;73     
;;;74     #if USE_ADS8320
;;;75     
;;;76     	SCL_ADS8320_H();
00001c  6125              STR      r5,[r4,#0x10]
;;;77     	Sample_Delay(1);
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       Sample_Delay
;;;78     	SCL_ADS8320_L();
000024  6165              STR      r5,[r4,#0x14]
;;;79     
;;;80     	Sample_Delay(1);
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       Sample_Delay
;;;81     
;;;82     	SCL_ADS8320_H();
00002c  6125              STR      r5,[r4,#0x10]
;;;83     	Sample_Delay(1);
00002e  2001              MOVS     r0,#1
000030  f7fffffe          BL       Sample_Delay
;;;84     	SCL_ADS8320_L();
000034  6165              STR      r5,[r4,#0x14]
;;;85     
;;;86     	Sample_Delay(1);
000036  2001              MOVS     r0,#1
000038  f7fffffe          BL       Sample_Delay
;;;87     
;;;88     	SCL_ADS8320_H();
00003c  6125              STR      r5,[r4,#0x10]
;;;89     	Sample_Delay(1);
00003e  2001              MOVS     r0,#1
000040  f7fffffe          BL       Sample_Delay
;;;90     	SCL_ADS8320_L();
000044  6165              STR      r5,[r4,#0x14]
;;;91     
;;;92     	Sample_Delay(1);
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       Sample_Delay
;;;93     
;;;94     	SCL_ADS8320_H();
00004c  6125              STR      r5,[r4,#0x10]
;;;95     	Sample_Delay(1);
00004e  2001              MOVS     r0,#1
000050  f7fffffe          BL       Sample_Delay
;;;96     	SCL_ADS8320_L();
000054  6165              STR      r5,[r4,#0x14]
;;;97     
;;;98     	Sample_Delay(1);
000056  2001              MOVS     r0,#1
000058  f7fffffe          BL       Sample_Delay
;;;99     
;;;100    	SCL_ADS8320_H();
00005c  6125              STR      r5,[r4,#0x10]
;;;101    	Sample_Delay(1);
00005e  2001              MOVS     r0,#1
000060  f7fffffe          BL       Sample_Delay
;;;102    	SCL_ADS8320_L();
000064  6165              STR      r5,[r4,#0x14]
;;;103    
;;;104    	SCL_ADS8320_H();
000066  6125              STR      r5,[r4,#0x10]
;;;105    	Sample_Delay(1);
000068  2001              MOVS     r0,#1
00006a  f7fffffe          BL       Sample_Delay
;;;106    	SCL_ADS8320_L();
00006e  6165              STR      r5,[r4,#0x14]
;;;107    
;;;108    #elif USE_ADS3201
;;;109    
;;;110    	SCL_ADS8320_H();
;;;111    	Sample_Delay(1);
;;;112    	SCL_ADS8320_L();
;;;113    	Sample_Delay(1);
;;;114    	SCL_ADS8320_H();
;;;115    	Sample_Delay(1);
;;;116    	SCL_ADS8320_L();
;;;117    	Sample_Delay(1);
;;;118    	SCL_ADS8320_H();
;;;119    	Sample_Delay(1);
;;;120    	SCL_ADS8320_L();
;;;121    
;;;122    	Sample_Delay(1);
;;;123    
;;;124    #endif
;;;125    
;;;126    #if	USE_ADS8320
;;;127    	for(i = 0; i < 16; i++)
;;;128    	{
;;;129    		SCL_ADS8320_H();
;;;130    		Sample_Delay(1);
;;;131    		nData <<= 1;
;;;132    		if(READ_SDA_DATA())
000070  f8dfa03c          LDR      r10,|L8.176|
000074  2700              MOVS     r7,#0                 ;127
000076  f64f79ff          MOV      r9,#0xffff            ;131
                  |L8.122|
00007a  6125              STR      r5,[r4,#0x10]         ;129
00007c  2001              MOVS     r0,#1                 ;130
00007e  f7fffffe          BL       Sample_Delay
000082  f8da0000          LDR      r0,[r10,#0]
000086  ea090646          AND      r6,r9,r6,LSL #1       ;131
00008a  07c0              LSLS     r0,r0,#31
00008c  d001              BEQ      |L8.146|
;;;133    			nData |= 0x01;
00008e  f0460601          ORR      r6,r6,#1
                  |L8.146|
;;;134    		SCL_ADS8320_L();
000092  6165              STR      r5,[r4,#0x14]
000094  1c7f              ADDS     r7,r7,#1
000096  2f10              CMP      r7,#0x10              ;127
000098  dbef              BLT      |L8.122|
;;;135    	}
;;;136    #elif USE_ADS3201
;;;137    	for (i = 0x0800; i > 0 ; i /= 2)
;;;138    	{
;;;139    		SCL_ADS8320_H();
;;;140    		Sample_Delay(1);
;;;141    		if (READ_SDA_DATA())
;;;142    			nData = (nData | i);
;;;143    		Sample_Delay(1);
;;;144    		SCL_ADS8320_L();
;;;145    		Sample_Delay(1);
;;;146    	}
;;;147    #endif
;;;148    
;;;149    	CS_ADS8320_H();
00009a  f8c48010          STR      r8,[r4,#0x10]
;;;150    	Sample_Delay(1);
00009e  2001              MOVS     r0,#1
0000a0  f7fffffe          BL       Sample_Delay
;;;151    
;;;152    	return nData;
0000a4  4630              MOV      r0,r6
;;;153    }
0000a6  e8bd87f0          POP      {r4-r10,pc}
;;;154    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L8.172|
                          DCD      0x40011000
                  |L8.176|
                          DCD      0x40011808

                          AREA ||i.Sample_Delay||, CODE, READONLY, ALIGN=1

                  Sample_Delay PROC
;;;24     
;;;25     static void Sample_Delay(long dwCount)
000000  eb000040          ADD      r0,r0,r0,LSL #1
;;;26     {
;;;27     	long lcount = 6 * dwCount;
000004  0040              LSLS     r0,r0,#1
                  |L9.6|
000006  1e40              SUBS     r0,r0,#1
;;;28     	while(--lcount >= 0);
000008  d5fd              BPL      |L9.6|
;;;29     }
00000a  4770              BX       lr
;;;30     
                          ENDP

