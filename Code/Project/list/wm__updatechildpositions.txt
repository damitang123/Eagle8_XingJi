; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\wm__updatechildpositions.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm__updatechildpositions.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\WM\WM__UpdateChildPositions.c]
                          THUMB

                          AREA ||i.WM__UpdateChildPositions||, CODE, READONLY, ALIGN=1

                  WM__UpdateChildPositions PROC
;;;41     */
;;;42     void WM__UpdateChildPositions(WM_Obj* pObj, int dx0, int dy0, int dx1, int dy1) {
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;43       WM_HWIN hChild;
;;;44       WM_Obj* pChild;
;;;45       int dx, dy, dw, dh;
;;;46       for (hChild = pObj->hFirstChild; hChild; hChild = pChild->hNext) {
000004  f9b07018          LDRSH    r7,[r0,#0x18]
000008  e05e              B        |L1.200|
                  |L1.10|
;;;47         int Status;
;;;48         GUI_RECT rOld, rNew;
;;;49         pChild = WM_H2P(hChild);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4606              MOV      r6,r0
000012  e9d62400          LDRD     r2,r4,[r6,#0]
;;;50         /* Compute size of new rectangle */
;;;51         rOld = pChild->Rect;
;;;52         rNew = rOld;
;;;53         Status = pChild->Status & (WM_SF_ANCHOR_RIGHT | WM_SF_ANCHOR_LEFT);
000016  8bb1              LDRH     r1,[r6,#0x1c]
000018  4610              MOV      r0,r2                 ;52
00001a  f4017320          AND      r3,r1,#0x280
;;;54         switch (Status) {
00001e  2b80              CMP      r3,#0x80
000020  d008              BEQ      |L1.52|
000022  f5b37f20          CMP      r3,#0x280
000026  9b01              LDR      r3,[sp,#4]
000028  d005              BEQ      |L1.54|
;;;55           case WM_SF_ANCHOR_RIGHT:                      /* Right ANCHOR : Move window with right side */
;;;56             rNew.x0 += dx1;
;;;57             rNew.x1 += dx1;
;;;58             break;
;;;59           case WM_SF_ANCHOR_RIGHT | WM_SF_ANCHOR_LEFT:    /* Left & Right ANCHOR: Resize window */
;;;60             rNew.x0 += dx0;
;;;61             rNew.x1 += dx1;
;;;62             break;
;;;63           default:                                    /* Left ANCHOR: Move window with left side of parent */
;;;64             rNew.x0 += dx0;
00002a  4403              ADD      r3,r3,r0
00002c  f363000f          BFI      r0,r3,#0,#16
000030  9d01              LDR      r5,[sp,#4]            ;54
000032  e004              B        |L1.62|
                  |L1.52|
000034  9b03              LDR      r3,[sp,#0xc]          ;56
                  |L1.54|
000036  9d03              LDR      r5,[sp,#0xc]          ;57
000038  4403              ADD      r3,r3,r0              ;56
00003a  f363000f          BFI      r0,r3,#0,#16          ;56
                  |L1.62|
00003e  1963              ADDS     r3,r4,r5              ;57
000040  4625              MOV      r5,r4                 ;57
;;;65             rNew.x1 += dx0;
;;;66         }
;;;67         Status = pChild->Status & (WM_SF_ANCHOR_TOP   | WM_SF_ANCHOR_BOTTOM);
000042  f40161a0          AND      r1,r1,#0x500
000046  f363050f          BFI      r5,r3,#0,#16          ;57
;;;68         switch (Status) {
00004a  f5b17f80          CMP      r1,#0x100
00004e  d00b              BEQ      |L1.104|
000050  f5b16fa0          CMP      r1,#0x500
000054  9902              LDR      r1,[sp,#8]
000056  ea4f4320          ASR      r3,r0,#16
00005a  d007              BEQ      |L1.108|
;;;69           case WM_SF_ANCHOR_BOTTOM:                     /* Bottom ANCHOR */
;;;70             rNew.y0 += dy1;
;;;71             rNew.y1 += dy1;
;;;72             break;
;;;73           case WM_SF_ANCHOR_BOTTOM | WM_SF_ANCHOR_TOP:    /* resize window */
;;;74             rNew.y0 += dy0;
;;;75             rNew.y1 += dy1;
;;;76             break;
;;;77           default:                                    /* Top ANCHOR */
;;;78             rNew.y0 += dy0;
00005c  4419              ADD      r1,r1,r3
00005e  f361401f          BFI      r0,r1,#16,#16
000062  142b              ASRS     r3,r5,#16
000064  9902              LDR      r1,[sp,#8]            ;68
000066  e006              B        |L1.118|
                  |L1.104|
000068  990e              LDR      r1,[sp,#0x38]         ;70
00006a  1403              ASRS     r3,r0,#16             ;68
                  |L1.108|
00006c  4419              ADD      r1,r1,r3              ;70
00006e  f361401f          BFI      r0,r1,#16,#16         ;70
000072  990e              LDR      r1,[sp,#0x38]         ;71
000074  142b              ASRS     r3,r5,#16             ;70
                  |L1.118|
000076  4419              ADD      r1,r1,r3              ;71
000078  fa0ffb82          SXTH     r11,r2                ;71
00007c  f361451f          BFI      r5,r1,#16,#16         ;71
000080  fa0ffa80          SXTH     r10,r0                ;71
;;;79             rNew.y1 += dy0;
;;;80         }
;;;81         /* Set new window position using Move and Resize as required */
;;;82         dx = rNew.x0 - rOld.x0;
000084  ea4f4820          ASR      r8,r0,#16
000088  ea4f4922          ASR      r9,r2,#16
00008c  ebaa010b          SUB      r1,r10,r11
;;;83         dy = rNew.y0 - rOld.y0;
000090  eba80209          SUB      r2,r8,r9
;;;84         if (dx || dy) {
000094  ea510002          ORRS     r0,r1,r2
000098  d002              BEQ      |L1.160|
;;;85           WM_MoveWindow(hChild, dx, dy);
00009a  4638              MOV      r0,r7
00009c  f7fffffe          BL       WM_MoveWindow
                  |L1.160|
;;;86         }
;;;87         dw = (rNew.x1 - rNew.x0) - (rOld.x1 - rOld.x0);
0000a0  b222              SXTH     r2,r4
0000a2  b229              SXTH     r1,r5                 ;85
0000a4  eba2000b          SUB      r0,r2,r11
0000a8  eba1010a          SUB      r1,r1,r10
0000ac  1a09              SUBS     r1,r1,r0
;;;88         dh = (rNew.y1 - rNew.y0) - (rOld.y1 - rOld.y0);
0000ae  ebc84225          RSB      r2,r8,r5,ASR #16
0000b2  ebc94024          RSB      r0,r9,r4,ASR #16
0000b6  1a12              SUBS     r2,r2,r0
;;;89         if (dw || dh) {
0000b8  ea510002          ORRS     r0,r1,r2
0000bc  d002              BEQ      |L1.196|
;;;90           WM_ResizeWindow(hChild, dw, dh);
0000be  4638              MOV      r0,r7
0000c0  f7fffffe          BL       WM_ResizeWindow
                  |L1.196|
0000c4  f9b6701a          LDRSH    r7,[r6,#0x1a]         ;46
                  |L1.200|
0000c8  2f00              CMP      r7,#0                 ;46
0000ca  d19e              BNE      |L1.10|
;;;91         }
;;;92       }
;;;93     }
0000cc  e8bd9fff          POP      {r0-r12,pc}
;;;94     
                          ENDP

