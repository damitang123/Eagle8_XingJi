; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\framewin_buttonclose.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin_buttonclose.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\FRAMEWIN_ButtonClose.c]
                          THUMB

                          AREA ||i.FRAMEWIN_AddCloseButton||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_AddCloseButton PROC
;;;85     */
;;;86     WM_HWIN FRAMEWIN_AddCloseButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
000000  b510              PUSH     {r4,lr}
;;;87       WM_HWIN hButton;
;;;88       hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_CLOSE);
000002  2305              MOVS     r3,#5
000004  f7fffffe          BL       FRAMEWIN_AddButton
000008  4604              MOV      r4,r0
;;;89       BUTTON_SetSelfDraw(hButton, 0, &_Draw);
00000a  4a05              LDR      r2,|L1.32|
00000c  2100              MOVS     r1,#0
00000e  f7fffffe          BL       BUTTON_SetSelfDraw
;;;90       WM_SetCallback(hButton, _cbClose);
000012  4904              LDR      r1,|L1.36|
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       WM_SetCallback
;;;91       return hButton;
00001a  4620              MOV      r0,r4
;;;92     }
00001c  bd10              POP      {r4,pc}
;;;93     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      _Draw
                  |L1.36|
                          DCD      _cbClose

                          AREA ||i._Draw||, CODE, READONLY, ALIGN=2

                  _Draw PROC
;;;59     */
;;;60     static void _Draw(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;61       GUI_RECT r;
;;;62       int i, Size;
;;;63       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;64       WM_ADDORG(r.x0, r.y0);
000008  491e              LDR      r1,|L2.132|
00000a  f8bd2000          LDRH     r2,[sp,#0]
00000e  f8310f44          LDRH     r0,[r1,#0x44]!  ; GUI_Context
000012  4402              ADD      r2,r2,r0
000014  b212              SXTH     r2,r2
000016  f8ad2000          STRH     r2,[sp,#0]
00001a  f8bd3002          LDRH     r3,[sp,#2]
00001e  8889              LDRH     r1,[r1,#4]  ; GUI_Context
000020  440b              ADD      r3,r3,r1
000022  f8ad3002          STRH     r3,[sp,#2]
;;;65       WM_ADDORG(r.x1, r.y1);
000026  f8bd3004          LDRH     r3,[sp,#4]
00002a  4418              ADD      r0,r0,r3
00002c  b200              SXTH     r0,r0
00002e  f8ad0004          STRH     r0,[sp,#4]
000032  f8bd3006          LDRH     r3,[sp,#6]
;;;66       Size = r.x1 - r.x0 - 2;
000036  1a85              SUBS     r5,r0,r2
000038  4419              ADD      r1,r1,r3              ;65
00003a  f8ad1006          STRH     r1,[sp,#6]            ;65
;;;67       WM_ITERATE_START(&r); {
00003e  4668              MOV      r0,sp
000040  1ead              SUBS     r5,r5,#2
000042  f7fffffe          BL       WM__InitIVRSearch
000046  e019              B        |L2.124|
                  |L2.72|
;;;68         for (i = 2; i < Size; i++) {
000048  2402              MOVS     r4,#2
00004a  e013              B        |L2.116|
                  |L2.76|
;;;69           LCD_DrawHLine(r.x0 + i,     r.y0 + i, r.x0 + i + 1);
00004c  f9bd0000          LDRSH    r0,[sp,#0]
000050  1c61              ADDS     r1,r4,#1
000052  1842              ADDS     r2,r0,r1
000054  f9bd1002          LDRSH    r1,[sp,#2]
000058  4420              ADD      r0,r0,r4
00005a  4421              ADD      r1,r1,r4
00005c  f7fffffe          BL       LCD_DrawHLine
;;;70           LCD_DrawHLine(r.x1 - i - 1, r.y0 + i, r.x1 - i);
000060  f9bd0004          LDRSH    r0,[sp,#4]
000064  f9bd1002          LDRSH    r1,[sp,#2]
000068  1b02              SUBS     r2,r0,r4
00006a  4421              ADD      r1,r1,r4
00006c  1e50              SUBS     r0,r2,#1
00006e  f7fffffe          BL       LCD_DrawHLine
000072  1c64              ADDS     r4,r4,#1
                  |L2.116|
000074  42ac              CMP      r4,r5                 ;68
000076  dbe9              BLT      |L2.76|
;;;71         }
;;;72       } WM_ITERATE_END();
000078  f7fffffe          BL       WM__GetNextIVR
                  |L2.124|
00007c  2800              CMP      r0,#0
00007e  d1e3              BNE      |L2.72|
;;;73     }
000080  bd7c              POP      {r2-r6,pc}
;;;74     
                          ENDP

000082  0000              DCW      0x0000
                  |L2.132|
                          DCD      GUI_Context

                          AREA ||i._cbClose||, CODE, READONLY, ALIGN=1

                  _cbClose PROC
;;;47     */
;;;48     static void _cbClose(WM_MESSAGE* pMsg) {
000000  6801              LDR      r1,[r0,#0]
;;;49       if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
000002  2927              CMP      r1,#0x27
000004  d001              BEQ      |L3.10|
;;;50         WM_DeleteWindow(pMsg->hWinSrc);
;;;51         return;                                       /* We are done ! */
;;;52       }
;;;53       BUTTON_Callback(pMsg);
000006  f7ffbffe          B.W      BUTTON_Callback
                  |L3.10|
00000a  f9b00006          LDRSH    r0,[r0,#6]            ;50
00000e  f7ffbffe          B.W      WM_DeleteWindow
;;;54     }
;;;55     
                          ENDP

