; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\listview_setautoscroll.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\listview_setautoscroll.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\LISTVIEW_SetAutoScroll.c]
                          THUMB

                          AREA ||i.LISTVIEW_SetAutoScrollH||, CODE, READONLY, ALIGN=1

                  LISTVIEW_SetAutoScrollH PROC
;;;40     */
;;;41     void LISTVIEW_SetAutoScrollH(LISTVIEW_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d012              BEQ      |L1.46|
;;;42       if (hObj) {
;;;43         LISTVIEW_Obj* pObj;
;;;44         char Flags;
;;;45         WM_LOCK();
;;;46         pObj = LISTVIEW_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4601              MOV      r1,r0
;;;47         Flags = pObj->Flags & (~LISTVIEW_SF_AUTOSCROLLBAR_H);
00000e  f8900097          LDRB     r0,[r0,#0x97]
000012  f0200201          BIC      r2,r0,#1
;;;48         if (State) {
000016  b10c              CBZ      r4,|L1.28|
;;;49           Flags |= LISTVIEW_SF_AUTOSCROLLBAR_H;
000018  f0420201          ORR      r2,r2,#1
                  |L1.28|
;;;50         }
;;;51         if (pObj->Flags != Flags) {
00001c  4290              CMP      r0,r2
00001e  d006              BEQ      |L1.46|
;;;52           pObj->Flags = Flags;
000020  f8812097          STRB     r2,[r1,#0x97]
;;;53           LISTVIEW__UpdateScrollParas(hObj, pObj);
000024  4628              MOV      r0,r5
000026  e8bd4070          POP      {r4-r6,lr}
00002a  f7ffbffe          B.W      LISTVIEW__UpdateScrollParas
                  |L1.46|
;;;54         }
;;;55         WM_UNLOCK();
;;;56       }
;;;57     }
00002e  bd70              POP      {r4-r6,pc}
;;;58     
                          ENDP


                          AREA ||i.LISTVIEW_SetAutoScrollV||, CODE, READONLY, ALIGN=1

                  LISTVIEW_SetAutoScrollV PROC
;;;62     */
;;;63     void LISTVIEW_SetAutoScrollV(LISTVIEW_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d012              BEQ      |L2.46|
;;;64       if (hObj) {
;;;65         LISTVIEW_Obj* pObj;
;;;66         char Flags;
;;;67         WM_LOCK();
;;;68         pObj = LISTVIEW_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4601              MOV      r1,r0
;;;69         Flags = pObj->Flags & (~LISTVIEW_SF_AUTOSCROLLBAR_V);
00000e  f8900097          LDRB     r0,[r0,#0x97]
000012  f0200202          BIC      r2,r0,#2
;;;70         if (State) {
000016  b10c              CBZ      r4,|L2.28|
;;;71           Flags |= LISTVIEW_SF_AUTOSCROLLBAR_V;
000018  f0420202          ORR      r2,r2,#2
                  |L2.28|
;;;72         }
;;;73         if (pObj->Flags != Flags) {
00001c  4290              CMP      r0,r2
00001e  d006              BEQ      |L2.46|
;;;74           pObj->Flags = Flags;
000020  f8812097          STRB     r2,[r1,#0x97]
;;;75           LISTVIEW__UpdateScrollParas(hObj, pObj);
000024  4628              MOV      r0,r5
000026  e8bd4070          POP      {r4-r6,lr}
00002a  f7ffbffe          B.W      LISTVIEW__UpdateScrollParas
                  |L2.46|
;;;76         }
;;;77         WM_UNLOCK();
;;;78       }
;;;79     }
00002e  bd70              POP      {r4-r6,pc}
;;;80     
                          ENDP

