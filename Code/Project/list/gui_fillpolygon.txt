; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_fillpolygon.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_fillpolygon.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_FillPolygon.c]
                          THUMB

                          AREA ||i.GL_FillPolygon||, CODE, READONLY, ALIGN=2

                  GL_FillPolygon PROC
;;;207    */
;;;208    void GL_FillPolygon  (const GUI_POINT*paPoint, int NumPoints, int xOff, int yOff) {
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;209      int i, y;
;;;210      int yMin = GUI_YMAX;
000004  f64074ff          MOV      r4,#0xfff
000008  460f              MOV      r7,r1                 ;208
;;;211      int yMax = GUI_YMIN;
00000a  4266              RSBS     r6,r4,#0
00000c  b083              SUB      sp,sp,#0xc            ;208
00000e  469b              MOV      r11,r3                ;208
000010  4681              MOV      r9,r0                 ;208
;;;212    /* First step : find uppermost and lowermost coordinates */
;;;213      for (i=0; i<NumPoints; i++) {
000012  2100              MOVS     r1,#0
000014  e00b              B        |L1.46|
;;;214        y = (paPoint + i)->y;
000016  bf00              NOP      
                  |L1.24|
000018  eb090081          ADD      r0,r9,r1,LSL #2
00001c  f9b00002          LDRSH    r0,[r0,#2]
;;;215        if (y < yMin)
000020  42a0              CMP      r0,r4
000022  da00              BGE      |L1.38|
;;;216          yMin = y;
000024  4604              MOV      r4,r0
                  |L1.38|
;;;217        if (y > yMax)
000026  42b0              CMP      r0,r6
000028  dd00              BLE      |L1.44|
;;;218          yMax = y;
00002a  4606              MOV      r6,r0
                  |L1.44|
00002c  1c49              ADDS     r1,r1,#1
                  |L1.46|
00002e  42b9              CMP      r1,r7                 ;213
000030  dbf2              BLT      |L1.24|
;;;219      }
;;;220    /* Use Clipping rect to reduce calculation (if possible) */
;;;221      if (GUI_Context.pClipRect_HL) {
000032  4865              LDR      r0,|L1.456|
000034  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000036  2800              CMP      r0,#0
000038  d00d              BEQ      |L1.86|
;;;222        if (yMax > (GUI_Context.pClipRect_HL->y1 - yOff))
00003a  f9b02006          LDRSH    r2,[r0,#6]
00003e  eba2010b          SUB      r1,r2,r11
000042  42b1              CMP      r1,r6
000044  da00              BGE      |L1.72|
;;;223          yMax = (GUI_Context.pClipRect_HL->y1 - yOff);
000046  460e              MOV      r6,r1
                  |L1.72|
;;;224        if (yMin < (GUI_Context.pClipRect_HL->y0 - yOff))
000048  f9b00002          LDRSH    r0,[r0,#2]
00004c  eba0000b          SUB      r0,r0,r11
000050  42a0              CMP      r0,r4
000052  dd00              BLE      |L1.86|
;;;225          yMin = (GUI_Context.pClipRect_HL->y0 - yOff);
000054  4604              MOV      r4,r0
                  |L1.86|
000056  e0b1              B        |L1.444|
                  |L1.88|
000058  f8dfa170          LDR      r10,|L1.460|
00005c  2000              MOVS     r0,#0
;;;226      }
;;;227    /* Second step: Calculate and draw horizontal lines */
;;;228      for (y=yMin; y<=yMax; y++) {
;;;229        _Init();
;;;230        /* find next intersection and count lines*/
;;;231        for (i=0; i<NumPoints; i++) {
00005e  4605              MOV      r5,r0
000060  f8ca0000          STR      r0,[r10,#0]  ; GL_FP_Cnt
000064  e086              B        |L1.372|
                  |L1.102|
;;;232          int i1 = (i < (NumPoints - 1)) ? i + 1 : 0;
000066  1e78              SUBS     r0,r7,#1
000068  4285              CMP      r5,r0
00006a  da01              BGE      |L1.112|
00006c  1c6b              ADDS     r3,r5,#1
00006e  e000              B        |L1.114|
                  |L1.112|
000070  2300              MOVS     r3,#0
                  |L1.114|
;;;233          int y0 = (paPoint + i )->y;
000072  eb090c85          ADD      r12,r9,r5,LSL #2
;;;234          int y1 = (paPoint + i1)->y;
000076  eb090283          ADD      r2,r9,r3,LSL #2
00007a  f9bc0002          LDRSH    r0,[r12,#2]           ;233
00007e  f9b21002          LDRSH    r1,[r2,#2]
;;;235          /* Check if starting point is on line */
;;;236          if (y0 == y) {
000082  42a0              CMP      r0,r4
000084  d142              BNE      |L1.268|
;;;237            if (y1 == y) {  /* Add the entire line */
000086  42a1              CMP      r1,r4
000088  d114              BNE      |L1.180|
;;;238              _DrawHLine((paPoint + i )->x + xOff , y + yOff, (paPoint + i1)->x + xOff);
00008a  f9393023          LDRSH    r3,[r9,r3,LSL #2]
00008e  9a05              LDR      r2,[sp,#0x14]
000090  f9391025          LDRSH    r1,[r9,r5,LSL #2]
000094  eb030c02          ADD      r12,r3,r2
000098  4a4b              LDR      r2,|L1.456|
00009a  9805              LDR      r0,[sp,#0x14]
00009c  6dd2              LDR      r2,[r2,#0x5c]  ; GUI_Context
00009e  4408              ADD      r0,r0,r1
0000a0  eb04010b          ADD      r1,r4,r11
0000a4  6813              LDR      r3,[r2,#0]
0000a6  4560              CMP      r0,r12
0000a8  da01              BGE      |L1.174|
0000aa  4662              MOV      r2,r12
0000ac  e029              B        |L1.258|
                  |L1.174|
0000ae  4602              MOV      r2,r0
0000b0  4660              MOV      r0,r12
0000b2  e026              B        |L1.258|
                  |L1.180|
;;;239            } else {        /* Add only one point */
;;;240              int yPrev = _GetPrevPointDiffy(paPoint, i, NumPoints, y);
0000b4  4628              MOV      r0,r5
0000b6  46a4              MOV      r12,r4
0000b8  f04f0800          MOV      r8,#0
0000bc  1e7a              SUBS     r2,r7,#1
0000be  e00b              B        |L1.216|
                  |L1.192|
0000c0  b108              CBZ      r0,|L1.198|
0000c2  1e40              SUBS     r0,r0,#1
0000c4  e000              B        |L1.200|
                  |L1.198|
0000c6  1e78              SUBS     r0,r7,#1
                  |L1.200|
0000c8  eb090380          ADD      r3,r9,r0,LSL #2
0000cc  f9b33002          LDRSH    r3,[r3,#2]
0000d0  4563              CMP      r3,r12
0000d2  d104              BNE      |L1.222|
0000d4  f1080801          ADD      r8,r8,#1
                  |L1.216|
0000d8  4590              CMP      r8,r2
0000da  dbf1              BLT      |L1.192|
0000dc  4623              MOV      r3,r4
                  |L1.222|
;;;241              if (yPrev != y) {
0000de  42a3              CMP      r3,r4
0000e0  d047              BEQ      |L1.370|
;;;242                _AddPoint((paPoint + i)->x, y, yPrev - y, y1 - y, xOff, yOff);
0000e2  1b1a              SUBS     r2,r3,r4
0000e4  f9390025          LDRSH    r0,[r9,r5,LSL #2]
0000e8  eba10c04          SUB      r12,r1,r4
0000ec  9b05              LDR      r3,[sp,#0x14]
0000ee  ea920f0c          TEQ      r2,r12
0000f2  d408              BMI      |L1.262|
0000f4  4a34              LDR      r2,|L1.456|
0000f6  4418              ADD      r0,r0,r3
0000f8  eb04010b          ADD      r1,r4,r11
0000fc  6dd2              LDR      r2,[r2,#0x5c]  ; GUI_Context
0000fe  6813              LDR      r3,[r2,#0]
000100  4602              MOV      r2,r0
                  |L1.258|
000102  4798              BLX      r3
000104  e035              B        |L1.370|
                  |L1.262|
000106  f7fffffe          BL       _Add
00010a  e032              B        |L1.370|
                  |L1.268|
;;;243              } 
;;;244            }
;;;245          } else if (y1 != y) {  /* Ignore if end-point is on the line */
00010c  42a1              CMP      r1,r4
00010e  d030              BEQ      |L1.370|
;;;246            if (((y1 >= y) && (y0 <= y)) || ((y0 >= y) && (y1 <= y))) {
000110  db01              BLT      |L1.278|
000112  42a0              CMP      r0,r4
000114  dd03              BLE      |L1.286|
                  |L1.278|
000116  42a0              CMP      r0,r4
000118  db2b              BLT      |L1.370|
00011a  42a1              CMP      r1,r4
00011c  dc29              BGT      |L1.370|
                  |L1.286|
;;;247              int xIntersect;
;;;248              if (_CheckYInterSect(y, &xIntersect, paPoint + i, paPoint + i1)) {
00011e  46e0              MOV      r8,r12
000120  4288              CMP      r0,r1
000122  dc0a              BGT      |L1.314|
000124  4603              MOV      r3,r0
000126  42a0              CMP      r0,r4
000128  dc23              BGT      |L1.370|
00012a  4608              MOV      r0,r1
00012c  42a1              CMP      r1,r4
00012e  db20              BLT      |L1.370|
000130  f9b8c000          LDRSH    r12,[r8,#0]
000134  f9b21000          LDRSH    r1,[r2,#0]
000138  e008              B        |L1.332|
                  |L1.314|
00013a  460b              MOV      r3,r1
00013c  42a1              CMP      r1,r4
00013e  dc18              BGT      |L1.370|
000140  42a0              CMP      r0,r4
000142  db16              BLT      |L1.370|
000144  f9b2c000          LDRSH    r12,[r2,#0]
000148  f9b81000          LDRSH    r1,[r8,#0]
                  |L1.332|
00014c  1ae2              SUBS     r2,r4,r3
00014e  eba1010c          SUB      r1,r1,r12
000152  4351              MULS     r1,r2,r1
000154  2900              CMP      r1,#0
000156  eba00203          SUB      r2,r0,r3
00015a  dd02              BLE      |L1.354|
00015c  eb010162          ADD      r1,r1,r2,ASR #1
000160  e002              B        |L1.360|
                  |L1.354|
000162  eba10162          SUB      r1,r1,r2,ASR #1
000166  1c49              ADDS     r1,r1,#1
                  |L1.360|
000168  1ac0              SUBS     r0,r0,r3
00016a  fb91f0f0          SDIV     r0,r1,r0
00016e  4460              ADD      r0,r0,r12
000170  e7c9              B        |L1.262|
                  |L1.370|
000172  1c6d              ADDS     r5,r5,#1
                  |L1.372|
000174  42bd              CMP      r5,r7                 ;231
000176  f6ffaf76          BLT      |L1.102|
;;;249                _Add(xIntersect);
;;;250              }
;;;251            }
;;;252          }
;;;253        }
;;;254        _Flush(xOff, y + yOff);
00017a  9805              LDR      r0,[sp,#0x14]
00017c  9000              STR      r0,[sp,#0]
00017e  eb04000b          ADD      r0,r4,r11
000182  9001              STR      r0,[sp,#4]
000184  2000              MOVS     r0,#0
000186  4680              MOV      r8,r0
000188  4605              MOV      r5,r0
00018a  e012              B        |L1.434|
                  |L1.396|
00018c  4910              LDR      r1,|L1.464|
00018e  f1b80f00          CMP      r8,#0
000192  f931a015          LDRSH    r10,[r1,r5,LSL #1]
000196  d008              BEQ      |L1.426|
000198  9900              LDR      r1,[sp,#0]
00019a  eb01020a          ADD      r2,r1,r10
00019e  4408              ADD      r0,r0,r1
0001a0  4909              LDR      r1,|L1.456|
0001a2  6dc9              LDR      r1,[r1,#0x5c]  ; GUI_Context
0001a4  680b              LDR      r3,[r1,#0]
0001a6  9901              LDR      r1,[sp,#4]
0001a8  4798              BLX      r3
                  |L1.426|
0001aa  f0880801          EOR      r8,r8,#1
0001ae  4650              MOV      r0,r10
0001b0  1c6d              ADDS     r5,r5,#1
                  |L1.434|
0001b2  4906              LDR      r1,|L1.460|
0001b4  6809              LDR      r1,[r1,#0]  ; GL_FP_Cnt
0001b6  428d              CMP      r5,r1
0001b8  dbe8              BLT      |L1.396|
0001ba  1c64              ADDS     r4,r4,#1
                  |L1.444|
0001bc  42b4              CMP      r4,r6                 ;228
0001be  f77faf4b          BLE      |L1.88|
;;;255      }  
;;;256    }
0001c2  b007              ADD      sp,sp,#0x1c
0001c4  e8bd8ff0          POP      {r4-r11,pc}
;;;257    
                          ENDP

                  |L1.456|
                          DCD      GUI_Context
                  |L1.460|
                          DCD      ||.data||
                  |L1.464|
                          DCD      ||.bss||

                          AREA ||i.GUI_FillPolygon||, CODE, READONLY, ALIGN=2

                  GUI_FillPolygon PROC
;;;261    */
;;;262    void GUI_FillPolygon(const GUI_POINT* pPoints, int NumPoints, int x0, int y0) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
;;;263      GUI_LOCK();
;;;264      #if (GUI_WINSUPPORT)
;;;265        WM_ADDORG(x0, y0);
000006  480b              LDR      r0,|L2.52|
000008  460e              MOV      r6,r1                 ;262
00000a  6c41              LDR      r1,[r0,#0x44]  ; GUI_Context
00000c  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
00000e  188d              ADDS     r5,r1,r2
000010  18c4              ADDS     r4,r0,r3
;;;266        WM_ITERATE_START(NULL); {
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       WM__InitIVRSearch
000018  e007              B        |L2.42|
                  |L2.26|
;;;267      #endif
;;;268      GL_FillPolygon (pPoints, NumPoints, x0, y0);
00001a  4623              MOV      r3,r4
00001c  462a              MOV      r2,r5
00001e  4631              MOV      r1,r6
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       GL_FillPolygon
;;;269      #if (GUI_WINSUPPORT)
;;;270        } WM_ITERATE_END();
000026  f7fffffe          BL       WM__GetNextIVR
                  |L2.42|
00002a  2800              CMP      r0,#0
00002c  d1f5              BNE      |L2.26|
;;;271      #endif
;;;272      GUI_UNLOCK();
;;;273    }
00002e  e8bd81f0          POP      {r4-r8,pc}
;;;274    
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      GUI_Context

                          AREA ||i._Add||, CODE, READONLY, ALIGN=2

                  _Add PROC
;;;115    */
;;;116    static void _Add(int x) {
000000  b530              PUSH     {r4,r5,lr}
;;;117      if (GL_FP_Cnt < GUI_FP_MAXCOUNT) {
000002  4c0b              LDR      r4,|L3.48|
000004  6823              LDR      r3,[r4,#0]  ; GL_FP_Cnt
000006  2b0c              CMP      r3,#0xc
000008  da10              BGE      |L3.44|
;;;118        int i;
;;;119        /* Move all entries to the right (bigger x-value) */
;;;120        for (i=GL_FP_Cnt; i ; i--) {
;;;121          if (_aX[i-1] < x)
00000a  4a0a              LDR      r2,|L3.52|
00000c  0019              MOVS     r1,r3                 ;116
00000e  d009              BEQ      |L3.36|
                  |L3.16|
000010  eb020541          ADD      r5,r2,r1,LSL #1
000014  f9355c02          LDRSH    r5,[r5,#-2]
000018  4285              CMP      r5,r0
00001a  db03              BLT      |L3.36|
;;;122            break;
;;;123          _aX[i] = _aX[i-1];
00001c  f8225011          STRH     r5,[r2,r1,LSL #1]
000020  1e49              SUBS     r1,r1,#1
000022  d1f5              BNE      |L3.16|
                  |L3.36|
;;;124        }
;;;125        /* Insert new entry */
;;;126        _aX[i]    = x;
000024  f8220011          STRH     r0,[r2,r1,LSL #1]
000028  1c5b              ADDS     r3,r3,#1
;;;127        GL_FP_Cnt++;
00002a  6023              STR      r3,[r4,#0]  ; GL_FP_Cnt
                  |L3.44|
;;;128      }
;;;129    }
00002c  bd30              POP      {r4,r5,pc}
;;;130    
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      ||.data||
                  |L3.52|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  _aX
                          %        24

                          AREA ||.data||, DATA, ALIGN=2

                  GL_FP_Cnt
                          DCD      0x00000000
