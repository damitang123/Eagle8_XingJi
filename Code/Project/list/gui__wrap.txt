; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui__wrap.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui__wrap.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI__Wrap.c]
                          THUMB

                          AREA ||i.GUI__WrapGetNumBytesToNextLine||, CODE, READONLY, ALIGN=1

                  GUI__WrapGetNumBytesToNextLine PROC
;;;307    */
;;;308    int GUI__WrapGetNumBytesToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;309      int NumChars, NumBytes;
;;;310      NumChars = GUI__WrapGetNumCharsToNextLine(pText, xSize, WrapMode);
000004  f7fffffe          BL       GUI__WrapGetNumCharsToNextLine
000008  4601              MOV      r1,r0
;;;311      NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
00000a  4620              MOV      r0,r4
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      GUI_UC__NumChars2NumBytes
;;;312      return NumBytes;
;;;313    }
;;;314    
                          ENDP


                          AREA ||i.GUI__WrapGetNumCharsDisp||, CODE, READONLY, ALIGN=1

                  GUI__WrapGetNumCharsDisp PROC
;;;273    */
;;;274    int GUI__WrapGetNumCharsDisp(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
000000  2300              MOVS     r3,#0
;;;275      return _WrapGetNumCharsDisp(pText, xSize, WrapMode, 0);
000002  f7ffbffe          B.W      _WrapGetNumCharsDisp
;;;276    }
;;;277    
                          ENDP


                          AREA ||i.GUI__WrapGetNumCharsToNextLine||, CODE, READONLY, ALIGN=1

                  GUI__WrapGetNumCharsToNextLine PROC
;;;281    */
;;;282    int GUI__WrapGetNumCharsToNextLine(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode) {
000000  b577              PUSH     {r0-r2,r4-r6,lr}
000002  b081              SUB      sp,sp,#4
000004  4615              MOV      r5,r2
000006  460e              MOV      r6,r1
;;;283      int NumChars;
;;;284      int xDist;
;;;285      U16 Char;
;;;286      NumChars = _WrapGetNumCharsDisp(pText, xSize, WrapMode, &xDist);
000008  466b              MOV      r3,sp
00000a  9801              LDR      r0,[sp,#4]
00000c  f7fffffe          BL       _WrapGetNumCharsDisp
000010  4604              MOV      r4,r0
;;;287      pText   += GUI_UC__NumChars2NumBytes(pText, NumChars);
000012  4601              MOV      r1,r0
000014  9801              LDR      r0,[sp,#4]
000016  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00001a  9901              LDR      r1,[sp,#4]
00001c  4408              ADD      r0,r0,r1
;;;288      Char     = GUI_UC__GetCharCodeInc(&pText);
00001e  9001              STR      r0,[sp,#4]
000020  a801              ADD      r0,sp,#4
000022  f7fffffe          BL       GUI_UC__GetCharCodeInc
;;;289      if (Char == '\n') {
000026  280a              CMP      r0,#0xa
000028  d002              BEQ      |L3.48|
;;;290        NumChars++;
;;;291      } else {
;;;292        if ((WrapMode == GUI_WRAPMODE_WORD) && (Char == ' ')) {
00002a  2d01              CMP      r5,#1
00002c  d002              BEQ      |L3.52|
00002e  e012              B        |L3.86|
                  |L3.48|
000030  1c64              ADDS     r4,r4,#1
000032  e010              B        |L3.86|
                  |L3.52|
000034  2820              CMP      r0,#0x20
000036  d10e              BNE      |L3.86|
;;;293          int xDistChar = GUI_GetCharDistX(Char);
000038  f7fffffe          BL       GUI_GetCharDistX
00003c  4605              MOV      r5,r0
;;;294          while ((Char == ' ') && (xSize >= xDist)) {
00003e  e007              B        |L3.80|
                  |L3.64|
;;;295            NumChars++;
;;;296            xDist += xDistChar;
000040  4428              ADD      r0,r0,r5
;;;297            Char = GUI_UC__GetCharCodeInc(&pText);
000042  9000              STR      r0,[sp,#0]
000044  a801              ADD      r0,sp,#4
000046  1c64              ADDS     r4,r4,#1
000048  f7fffffe          BL       GUI_UC__GetCharCodeInc
00004c  2820              CMP      r0,#0x20              ;294
00004e  d102              BNE      |L3.86|
                  |L3.80|
000050  9800              LDR      r0,[sp,#0]            ;294
000052  4286              CMP      r6,r0                 ;294
000054  daf4              BGE      |L3.64|
                  |L3.86|
;;;298          }
;;;299        }
;;;300      }
;;;301      return NumChars;
;;;302    }
000056  b004              ADD      sp,sp,#0x10
000058  4620              MOV      r0,r4                 ;301
00005a  bd70              POP      {r4-r6,pc}
;;;303    
                          ENDP


                          AREA ||i._GetWordWrap||, CODE, READONLY, ALIGN=1

                  _GetWordWrap PROC
;;;177    */
;;;178    static int _GetWordWrap(const char GUI_UNI_PTR * s, int xSize, int * pxDist) {
000000  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;179      int xDist = 0, NumChars = 0, WordWrap = 0, CharDist = 0;
000004  2700              MOVS     r7,#0
000006  4691              MOV      r9,r2                 ;178
000008  468b              MOV      r11,r1                ;178
00000a  463d              MOV      r5,r7
00000c  463e              MOV      r6,r7
00000e  46b8              MOV      r8,r7
;;;180      U16 Char, PrevChar = 0, FirstChar = 0;
000010  46ba              MOV      r10,r7
000012  463c              MOV      r4,r7
                  |L4.20|
;;;181      while (1) {
;;;182        Char = GUI_UC__GetCharCodeInc(&s);   /* Similar to:  *s++ */
000014  4668              MOV      r0,sp
000016  f7fffffe          BL       GUI_UC__GetCharCodeInc
;;;183        if (!FirstChar) {
00001a  b904              CBNZ     r4,|L4.30|
;;;184          FirstChar = Char;
00001c  4604              MOV      r4,r0
                  |L4.30|
;;;185        }
;;;186        /* Let's first check if the line end is reached. In this case we are done. */
;;;187        if (_IsLineEnd(Char)) {
00001e  b130              CBZ      r0,|L4.46|
000020  280a              CMP      r0,#0xa
000022  d004              BEQ      |L4.46|
;;;188          WordWrap = NumChars;
;;;189          break;
;;;190        }
;;;191        /* If the current character is part of leading spaces the position can be used for wrapping */
;;;192        if ((Char != ' ') && (FirstChar == ' ')) {
000024  2820              CMP      r0,#0x20
000026  d005              BEQ      |L4.52|
000028  2c20              CMP      r4,#0x20
00002a  d002              BEQ      |L4.50|
00002c  e003              B        |L4.54|
                  |L4.46|
00002e  462e              MOV      r6,r5                 ;188
000030  e009              B        |L4.70|
                  |L4.50|
;;;193          FirstChar = 0;
000032  2400              MOVS     r4,#0
                  |L4.52|
;;;194          WordWrap = NumChars;
;;;195        /* If the current character is a space and the previous character not, we found a wrapping position */
;;;196        } else if ((Char == ' ') && (Char != PrevChar)) {
;;;197          WordWrap = NumChars;
;;;198        /* If the current character is a trailing space the position can be used for wrapping */
;;;199        } else if ((Char == ' ') && (PrevChar == ' ')) {
;;;200          WordWrap = NumChars;
000034  462e              MOV      r6,r5
                  |L4.54|
;;;201        }
;;;202        PrevChar = Char;
000036  4682              MOV      r10,r0
;;;203        CharDist = GUI_GetCharDistX(Char);
000038  f7fffffe          BL       GUI_GetCharDistX
00003c  4680              MOV      r8,r0
;;;204        xDist += CharDist;
00003e  4447              ADD      r7,r7,r8
;;;205        if ((xDist <= xSize) || (NumChars == 0)) {
000040  455f              CMP      r7,r11
000042  dd02              BLE      |L4.74|
000044  b10d              CBZ      r5,|L4.74|
                  |L4.70|
;;;206          NumChars++;
;;;207        } else {
;;;208          break;
;;;209        }
;;;210      }
;;;211      if (!WordWrap) {
000046  b116              CBZ      r6,|L4.78|
000048  e002              B        |L4.80|
                  |L4.74|
00004a  1c6d              ADDS     r5,r5,#1
00004c  e7e2              B        |L4.20|
                  |L4.78|
;;;212        WordWrap = NumChars;
00004e  462e              MOV      r6,r5
                  |L4.80|
;;;213      }
;;;214      if (pxDist) {
000050  f1b90f00          CMP      r9,#0
000054  d003              BEQ      |L4.94|
;;;215        xDist -= CharDist;
000056  eba70008          SUB      r0,r7,r8
;;;216        *pxDist = xDist;
00005a  f8c90000          STR      r0,[r9,#0]
                  |L4.94|
;;;217      }
;;;218      return WordWrap;
00005e  4630              MOV      r0,r6
;;;219    }
000060  e8bd8ffe          POP      {r1-r11,pc}
;;;220    
                          ENDP


                          AREA ||i._WrapGetNumCharsDisp||, CODE, READONLY, ALIGN=2

                  _WrapGetNumCharsDisp PROC
;;;243    */
;;;244    static int _WrapGetNumCharsDisp(const char GUI_UNI_PTR * pText, int xSize, GUI_WRAPMODE WrapMode, int * pxDist) {
000000  b5f8              PUSH     {r3-r7,lr}
;;;245      int r;
;;;246      switch (WrapMode) {
000002  2a01              CMP      r2,#1
000004  d007              BEQ      |L5.22|
000006  2a02              CMP      r2,#2
000008  d00a              BEQ      |L5.32|
00000a  e8bd40f8          POP      {r3-r7,lr}
00000e  f64771ff          MOV      r1,#0x7fff
000012  f7ffbffe          B.W      GUI__GetLineNumChars
                  |L5.22|
;;;247      case GUI_WRAPMODE_WORD:
;;;248        r = _GetWordWrap(pText, xSize, pxDist);
000016  461a              MOV      r2,r3
000018  e8bd40f8          POP      {r3-r7,lr}
00001c  f7ffbffe          B.W      _GetWordWrap
                  |L5.32|
000020  2600              MOVS     r6,#0
;;;249        break;
;;;250      case GUI_WRAPMODE_CHAR:
;;;251        r = _GetCharWrap(pText, xSize);
000022  460d              MOV      r5,r1
000024  4634              MOV      r4,r6
000026  9000              STR      r0,[sp,#0]
000028  e009              B        |L5.62|
00002a  bf00              NOP      
                  |L5.44|
00002c  f7fffffe          BL       GUI_GetCharDistX
000030  4406              ADD      r6,r6,r0
000032  b10c              CBZ      r4,|L5.56|
000034  42ae              CMP      r6,r5
000036  dc07              BGT      |L5.72|
                  |L5.56|
000038  2f0a              CMP      r7,#0xa
00003a  d005              BEQ      |L5.72|
00003c  1c64              ADDS     r4,r4,#1
                  |L5.62|
00003e  4668              MOV      r0,sp
000040  f7fffffe          BL       GUI_UC__GetCharCodeInc
000044  0007              MOVS     r7,r0
000046  d1f1              BNE      |L5.44|
                  |L5.72|
000048  4620              MOV      r0,r4
;;;252        break;
;;;253      default:
;;;254        r = _GetNoWrap(pText);
;;;255      }
;;;256      return r;
;;;257    }
00004a  bdf8              POP      {r3-r7,pc}
;;;258    
                          ENDP

