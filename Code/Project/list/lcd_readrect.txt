; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcd_readrect.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcd_readrect.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\LCD_ReadRect.c]
                          THUMB

                          AREA ||i.LCD_ReadRect||, CODE, READONLY, ALIGN=1

                  LCD_ReadRect PROC
;;;34     */
;;;35     void LCD_ReadRect(int x0, int y0, int x1, int y1, LCD_PIXELINDEX * pBuffer, const tLCDDEV_APIList * pAPI) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  460e              MOV      r6,r1
000006  e9dd580a          LDRD     r5,r8,[sp,#0x28]
00000a  4682              MOV      r10,r0
;;;36       void (* pfReadRect)(int x0, int y0, int x1, int y1, LCD_PIXELINDEX * pBuffer);
;;;37       pfReadRect = (void (*)(int, int, int, int, LCD_PIXELINDEX *))pAPI->pfGetDevFunc(LCD_DEVFUNC_READRECT);
00000c  f8d81030          LDR      r1,[r8,#0x30]
000010  4699              MOV      r9,r3                 ;35
000012  4617              MOV      r7,r2                 ;35
000014  2001              MOVS     r0,#1
000016  4788              BLX      r1
000018  0004              MOVS     r4,r0
;;;38       if (!pfReadRect) {
00001a  d014              BEQ      |L1.70|
;;;39         while (y0 <= y1) {
;;;40           int x;
;;;41           for (x = x0; x <= x1; x++) {
;;;42             *pBuffer++ = pAPI->pfGetPixelIndex(x, y0);
;;;43           }
;;;44           y0++;
;;;45         }
;;;46       } else {
;;;47         pfReadRect(x0, y0, x1, y1, pBuffer);
00001c  464b              MOV      r3,r9
00001e  463a              MOV      r2,r7
000020  4631              MOV      r1,r6
000022  4650              MOV      r0,r10
000024  9500              STR      r5,[sp,#0]
000026  47a0              BLX      r4
                  |L1.40|
;;;48       }
;;;49     }
000028  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.44|
00002c  4654              MOV      r4,r10                ;41
00002e  e007              B        |L1.64|
                  |L1.48|
000030  f8d8201c          LDR      r2,[r8,#0x1c]         ;42
000034  4631              MOV      r1,r6                 ;42
000036  4620              MOV      r0,r4                 ;42
000038  4790              BLX      r2                    ;42
00003a  f8250b02          STRH     r0,[r5],#2            ;42
00003e  1c64              ADDS     r4,r4,#1              ;42
                  |L1.64|
000040  42bc              CMP      r4,r7                 ;41
000042  ddf5              BLE      |L1.48|
000044  1c76              ADDS     r6,r6,#1              ;41
                  |L1.70|
000046  454e              CMP      r6,r9                 ;39
000048  ddf0              BLE      |L1.44|
00004a  e7ed              B        |L1.40|
;;;50     
                          ENDP

