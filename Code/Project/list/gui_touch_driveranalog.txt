; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_touch_driveranalog.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_touch_driveranalog.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_TOUCH_DriverAnalog.c]
                          THUMB

                          AREA ||i.GUI_TOUCH_Calibrate||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_Calibrate PROC
;;;213    */
;;;214    int GUI_TOUCH_Calibrate(int Coord, int Log0, int Log1, int Phys0, int Phys1) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  461f              MOV      r7,r3
000006  9d0a              LDR      r5,[sp,#0x28]
000008  4690              MOV      r8,r2
00000a  4689              MOV      r9,r1
00000c  0004              MOVS     r4,r0
;;;215      int l0 = 0;
00000e  f04f0c00          MOV      r12,#0
000012  d00f              BEQ      |L1.52|
;;;216      int l1 = (Coord == GUI_COORD_X) ? LCD_XSIZE - 1 : LCD_YSIZE - 1;
000014  f240163f          MOV      r6,#0x13f
                  |L1.24|
;;;217      if (labs(Phys0 - Phys1) < 20) {
000018  1b78              SUBS     r0,r7,r5
00001a  d500              BPL      |L1.30|
00001c  4240              RSBS     r0,r0,#0
                  |L1.30|
00001e  2814              CMP      r0,#0x14
000020  db05              BLT      |L1.46|
;;;218        return 1;
;;;219      }
;;;220      if (labs(Log0 - Log1) < 20) {
000022  ebb90008          SUBS     r0,r9,r8
000026  d500              BPL      |L1.42|
000028  4240              RSBS     r0,r0,#0
                  |L1.42|
00002a  2814              CMP      r0,#0x14
00002c  da04              BGE      |L1.56|
                  |L1.46|
;;;221        return 1;
00002e  2001              MOVS     r0,#1
                  |L1.48|
;;;222      }
;;;223      xyMinMax[Coord].Min = _Log2Phys(l0, Log0, Log1, Phys0, Phys1);  
;;;224      xyMinMax[Coord].Max = _Log2Phys(l1, Log0, Log1, Phys0, Phys1);
;;;225      return 0;
;;;226    }
000030  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.52|
000034  26ef              MOVS     r6,#0xef              ;216
000036  e7ef              B        |L1.24|
                  |L1.56|
000038  4642              MOV      r2,r8                 ;223
00003a  4649              MOV      r1,r9                 ;223
00003c  4660              MOV      r0,r12                ;223
00003e  9500              STR      r5,[sp,#0]            ;223
000040  f7fffffe          BL       _Log2Phys
000044  f8dfa01c          LDR      r10,|L1.100|
000048  463b              MOV      r3,r7                 ;224
00004a  4642              MOV      r2,r8                 ;224
00004c  f84a0034          STR      r0,[r10,r4,LSL #3]    ;223
000050  4649              MOV      r1,r9                 ;224
000052  4630              MOV      r0,r6                 ;224
000054  9500              STR      r5,[sp,#0]            ;224
000056  f7fffffe          BL       _Log2Phys
00005a  eb0a01c4          ADD      r1,r10,r4,LSL #3      ;224
00005e  6048              STR      r0,[r1,#4]            ;225
000060  2000              MOVS     r0,#0                 ;225
000062  e7e5              B        |L1.48|
;;;227    
                          ENDP

                  |L1.100|
                          DCD      ||.data||+0x24

                          AREA ||i.GUI_TOUCH_Exec||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_Exec PROC
;;;249    */
;;;250    void GUI_TOUCH_Exec(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;251      #ifndef WIN32
;;;252      static U8 ReadState;
;;;253      int x,y;
;;;254      /* calculate Min / Max values */
;;;255      if (xyMinMax[GUI_COORD_X].Min < xyMinMax[GUI_COORD_X].Max) {
000002  4d22              LDR      r5,|L2.140|
;;;256        xMin = xyMinMax[GUI_COORD_X].Min;
000004  f1a50424          SUB      r4,r5,#0x24
000008  e9d50100          LDRD     r0,r1,[r5,#0]
00000c  4288              CMP      r0,r1                 ;255
00000e  da02              BGE      |L2.22|
000010  e9c40105          STRD     r0,r1,[r4,#0x14]      ;250
;;;257        xMax = xyMinMax[GUI_COORD_X].Max;
000014  e001              B        |L2.26|
                  |L2.22|
000016  e9c41005          STRD     r1,r0,[r4,#0x14]
                  |L2.26|
00001a  e9d50102          LDRD     r0,r1,[r5,#8]
;;;258      } else {
;;;259        xMax = xyMinMax[GUI_COORD_X].Min;
;;;260        xMin = xyMinMax[GUI_COORD_X].Max;
;;;261      }
;;;262      if (xyMinMax[GUI_COORD_Y].Min < xyMinMax[GUI_COORD_Y].Max) {
00001e  4288              CMP      r0,r1
000020  da02              BGE      |L2.40|
000022  e9c40107          STRD     r0,r1,[r4,#0x1c]
;;;263        yMin = xyMinMax[GUI_COORD_Y].Min;
;;;264        yMax = xyMinMax[GUI_COORD_Y].Max;
000026  e001              B        |L2.44|
                  |L2.40|
000028  e9c41007          STRD     r1,r0,[r4,#0x1c]
                  |L2.44|
;;;265      } else {
;;;266        yMax = xyMinMax[GUI_COORD_Y].Min;
;;;267        yMin = xyMinMax[GUI_COORD_Y].Max;
;;;268      }
;;;269      /* Execute the state machine which reads the touch */
;;;270    	yPhys = TOUCH_X_MeasureY();
00002c  f7fffffe          BL       GUI_TOUCH_X_MeasureY
;;;271    	xPhys = TOUCH_X_MeasureX();
000030  6120              STR      r0,[r4,#0x10]  ; yPhys
000032  f7fffffe          BL       GUI_TOUCH_X_MeasureX
000036  60e0              STR      r0,[r4,#0xc]  ; xPhys
000038  e9d41204          LDRD     r1,r2,[r4,#0x10]
;;;272    #if !GUI_TOUCH_SWAP_XY   /* Is X/Y swapped ? */
;;;273    	  x = xPhys;
;;;274    	  y = yPhys;
;;;275    #else
;;;276    	  x = yPhys;
;;;277    	  y = xPhys;
;;;278    #endif
;;;279    	if ((x < xMin) || (x > xMax)  || (y < yMin) || (y > yMax)) {
00003c  4290              CMP      r0,r2
00003e  db08              BLT      |L2.82|
000040  69a2              LDR      r2,[r4,#0x18]  ; xMax
000042  4290              CMP      r0,r2
000044  dc05              BGT      |L2.82|
000046  69e2              LDR      r2,[r4,#0x1c]  ; yMin
000048  4291              CMP      r1,r2
00004a  db02              BLT      |L2.82|
00004c  6a22              LDR      r2,[r4,#0x20]  ; yMax
00004e  4291              CMP      r1,r2
000050  dd03              BLE      |L2.90|
                  |L2.82|
;;;280    	  _StoreUnstable(-1, -1);
000052  f04f30ff          MOV      r0,#0xffffffff
000056  4601              MOV      r1,r0
000058  e013              B        |L2.130|
                  |L2.90|
00005a  682a              LDR      r2,[r5,#0]  ; xyMinMax
00005c  1a80              SUBS     r0,r0,r2
00005e  eb001300          ADD      r3,r0,r0,LSL #4
000062  ebc32000          RSB      r0,r3,r0,LSL #8
000066  686b              LDR      r3,[r5,#4]  ; xyMinMax
000068  1a9a              SUBS     r2,r3,r2
00006a  fb90f0f2          SDIV     r0,r0,r2
00006e  68ea              LDR      r2,[r5,#0xc]  ; xyMinMax
000070  1a51              SUBS     r1,r2,r1
000072  ebc11381          RSB      r3,r1,r1,LSL #6
000076  eb032101          ADD      r1,r3,r1,LSL #8
00007a  68ab              LDR      r3,[r5,#8]  ; xyMinMax
00007c  1ad2              SUBS     r2,r2,r3
00007e  fb91f1f2          SDIV     r1,r1,r2
                  |L2.130|
;;;281    	} else {
;;;282    	  x = _AD2X(x);
;;;283    	  y = _AD2Y(y);
;;;284    	  _StoreUnstable(x, y);
000082  e8bd4070          POP      {r4-r6,lr}
000086  f7ffbffe          B.W      _StoreUnstable
;;;285    	}
;;;286    	ReadState=ReadState;
;;;287      #endif /* WIN32 */
;;;288    }
;;;289    
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      ||.data||+0x24

                          AREA ||i.GUI_TOUCH_GetCalData||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_GetCalData PROC
;;;231    */
;;;232    void GUI_TOUCH_GetCalData(int Coord, int* pMin,int* pMax) {
000000  4b04              LDR      r3,|L3.20|
000002  b510              PUSH     {r4,lr}
;;;233      *pMin = xyMinMax[Coord].Min;
000004  f8534030          LDR      r4,[r3,r0,LSL #3]
;;;234      *pMax = xyMinMax[Coord].Max; 
000008  eb0300c0          ADD      r0,r3,r0,LSL #3
00000c  600c              STR      r4,[r1,#0]
00000e  6840              LDR      r0,[r0,#4]
000010  6010              STR      r0,[r2,#0]
;;;235    }
000012  bd10              POP      {r4,pc}
;;;236    
                          ENDP

                  |L3.20|
                          DCD      ||.data||+0x24

                          AREA ||i.GUI_TOUCH_GetxPhys||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_GetxPhys PROC
;;;186    */
;;;187    int  GUI_TOUCH_GetxPhys(void) {
000000  4801              LDR      r0,|L4.8|
;;;188      return xPhys;
000002  68c0              LDR      r0,[r0,#0xc]  ; xPhys
;;;189    }
000004  4770              BX       lr
;;;190    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      ||.data||

                          AREA ||i.GUI_TOUCH_GetyPhys||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_GetyPhys PROC
;;;194    */
;;;195    int  GUI_TOUCH_GetyPhys(void) {
000000  4801              LDR      r0,|L5.8|
;;;196      return yPhys;
000002  6900              LDR      r0,[r0,#0x10]  ; yPhys
;;;197    }
000004  4770              BX       lr
;;;198    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      ||.data||

                          AREA ||i.GUI_TOUCH_SetCalData||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_SetCalData PROC
;;;240    */
;;;241    void GUI_TOUCH_SetCalData(int Coord, int* pMin,int* pMax) {
000000  680b              LDR      r3,[r1,#0]
;;;242      xyMinMax[Coord].Min = *pMin;
000002  4904              LDR      r1,|L6.20|
000004  f8413030          STR      r3,[r1,r0,LSL #3]
;;;243      xyMinMax[Coord].Max = *pMax; 
000008  eb0100c0          ADD      r0,r1,r0,LSL #3
00000c  6812              LDR      r2,[r2,#0]
00000e  6042              STR      r2,[r0,#4]
;;;244    }
000010  4770              BX       lr
;;;245    
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      ||.data||+0x24

                          AREA ||i.GUI_TOUCH_SetDefaultCalibration||, CODE, READONLY, ALIGN=2

                  GUI_TOUCH_SetDefaultCalibration PROC
;;;202    */
;;;203    void GUI_TOUCH_SetDefaultCalibration(void) {
000000  4806              LDR      r0,|L7.28|
;;;204      xyMinMax[0].Min = GUI_TOUCH_AD_LEFT;
000002  f6406126          MOV      r1,#0xe26
;;;205      xyMinMax[0].Max = GUI_TOUCH_AD_RIGHT;
000006  6001              STR      r1,[r0,#0]  ; xyMinMax
000008  f44f71c8          MOV      r1,#0x190
;;;206      xyMinMax[1].Min = GUI_TOUCH_AD_TOP;
00000c  6041              STR      r1,[r0,#4]  ; xyMinMax
00000e  f64051cd          MOV      r1,#0xdcd
;;;207      xyMinMax[1].Max = GUI_TOUCH_AD_BOTTOM;
000012  6081              STR      r1,[r0,#8]  ; xyMinMax
000014  f44f718c          MOV      r1,#0x118
000018  60c1              STR      r1,[r0,#0xc]  ; xyMinMax
;;;208    }
00001a  4770              BX       lr
;;;209    
                          ENDP

                  |L7.28|
                          DCD      ||.data||+0x24

                          AREA ||i._Log2Phys||, CODE, READONLY, ALIGN=1

                  _Log2Phys PROC
;;;152    */
;;;153    static int _Log2Phys(int l, I32 l0, I32 l1, I32 p0, I32 p1) {
000000  b510              PUSH     {r4,lr}
;;;154      return p0+ ((p1 - p0) * (l - l0)) / (l1 - l0);
000002  1a40              SUBS     r0,r0,r1
000004  9c02              LDR      r4,[sp,#8]
000006  1ae4              SUBS     r4,r4,r3
000008  4344              MULS     r4,r0,r4
00000a  1a50              SUBS     r0,r2,r1
00000c  fb94f0f0          SDIV     r0,r4,r0
000010  4418              ADD      r0,r0,r3
;;;155    }
000012  bd10              POP      {r4,pc}
;;;156    
                          ENDP


                          AREA ||i._StoreUnstable||, CODE, READONLY, ALIGN=2

                  _StoreUnstable PROC
;;;160    */
;;;161    static void _StoreUnstable(int x, int y) {
000000  b430              PUSH     {r4,r5}
000002  4604              MOV      r4,r0
;;;162      static int _xLast = -1;
;;;163      static int _yLast = -1;
;;;164      int xOut, yOut;
;;;165    
;;;166      if ((x != -1) && (y != -1) && (_xLast != -1) && (_yLast != -1)) {
000004  4a09              LDR      r2,|L9.44|
000006  460b              MOV      r3,r1                 ;161
000008  1c40              ADDS     r0,r0,#1
00000a  d007              BEQ      |L9.28|
00000c  1c58              ADDS     r0,r3,#1
00000e  d005              BEQ      |L9.28|
000010  6850              LDR      r0,[r2,#4]  ; _xLast
000012  1c41              ADDS     r1,r0,#1
000014  d002              BEQ      |L9.28|
000016  6891              LDR      r1,[r2,#8]  ; _yLast
000018  1c4d              ADDS     r5,r1,#1
00001a  d102              BNE      |L9.34|
                  |L9.28|
;;;167        xOut = _xLast;    
;;;168        yOut = _yLast;    
;;;169      } else {
;;;170        xOut = -1;
00001c  f04f30ff          MOV      r0,#0xffffffff
;;;171        yOut = -1;    
000020  4601              MOV      r1,r0
                  |L9.34|
000022  e9c24301          STRD     r4,r3,[r2,#4]
;;;172      }
;;;173      _xLast = x;
;;;174      _yLast = y;
;;;175      GUI_TOUCH_StoreUnstable(xOut, yOut);
000026  bc30              POP      {r4,r5}
000028  f7ffbffe          B.W      GUI_TOUCH_StoreUnstable
;;;176    }
;;;177    /*********************************************************************
                          ENDP

                  |L9.44|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  ReadState
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  _xLast
                          DCD      0xffffffff
                  _yLast
                          DCD      0xffffffff
                  xPhys
                          DCD      0x00000000
                  yPhys
                          DCD      0x00000000
                  xMin
                          DCD      0x00000000
                  xMax
                          DCD      0x00000000
                  yMin
                          DCD      0x00000000
                  yMax
                          DCD      0x00000000
                  xyMinMax
                          DCD      0x00000e26
                          DCD      0x00000190
                          DCD      0x00000dcd
                          DCD      0x00000118
