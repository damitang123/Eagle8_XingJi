; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\touchcaliwindow.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\touchcaliwindow.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\User\UserWindow\TouchCaliWindow.c]
                          THUMB

                          AREA ||i.CW_TouchCalibrate_Create||, CODE, READONLY, ALIGN=2

                  CW_TouchCalibrate_Create PROC
;;;305    
;;;306    CW_TouchCalibrate *CW_TouchCalibrate_Create(WM_HWIN hParent, void *pData)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;307    {
000004  4604              MOV      r4,r0
;;;308    	WM_HWIN hWin;
;;;309    	eUserWindow WinType = eTouchCalibrate;
000006  2520              MOVS     r5,#0x20
000008  460f              MOV      r7,r1                 ;307
;;;310    
;;;311    	if(GetWinHandleByWinType(WinType))
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GetWinHandleByWinType
000010  b130              CBZ      r0,|L1.32|
;;;312    	{
;;;313    		TRACE_PRINTF("eTouchCalibrate window is alreay exist!\r\n");
000012  a019              ADR      r0,|L1.120|
000014  f7fffffe          BL       User_Debug_Printf
;;;314    		return (CW_TouchCalibrate *)0;
000018  2000              MOVS     r0,#0
                  |L1.26|
;;;315    	}
;;;316    
;;;317    	hWin = WM_CreateWindowAsChild(0, 0, LCD_X_SIZE, LCD_Y_SIZE,
;;;318    	                              hParent, WM_CF_SHOW, NULL, sizeof(CW_TouchCalibrate));
;;;319    
;;;320    	if(hWin)
;;;321    	{
;;;322    		TRACE_PRINTF("eTouchCalibrate windows is created!hWin = 0x%04X\r\n",hWin);
;;;323    		
;;;324    		pThisWin = (CW_TouchCalibrate *)((unsigned long)WM_H2P(hWin) + sizeof(WM_Obj));
;;;325    
;;;326    		pThisWin->wObj.hWin = hWin;
;;;327    		pThisWin->wObj.Property = (unsigned long)pData;
;;;328    		pThisWin->wObj.eWinType = (eUserWindow)WinType;
;;;329    		
;;;330    		AddWindowToList(&pThisWin->wObj);
;;;331    
;;;332    		WM_SetCallback(hWin, _Callback);
;;;333    		WM__SendMsgNoData(hWin, WM_CREATE);
;;;334    	}
;;;335    	else
;;;336    	{
;;;337    		TRACE_PRINTF("eTouchCalibrate window can't be created!\r\n");
;;;338    	}
;;;339    
;;;340    	return pThisWin;
;;;341    }
00001a  b004              ADD      sp,sp,#0x10
00001c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.32|
000020  2034              MOVS     r0,#0x34              ;317
000022  2100              MOVS     r1,#0                 ;317
000024  9003              STR      r0,[sp,#0xc]          ;317
000026  2202              MOVS     r2,#2                 ;317
000028  9400              STR      r4,[sp,#0]            ;317
00002a  e9cd2101          STRD     r2,r1,[sp,#4]         ;317
00002e  f44f73a0          MOV      r3,#0x140             ;317
000032  22f0              MOVS     r2,#0xf0              ;317
000034  4608              MOV      r0,r1                 ;317
000036  f7fffffe          BL       WM_CreateWindowAsChild
00003a  4e1a              LDR      r6,|L1.164|
00003c  0004              MOVS     r4,r0                 ;317
00003e  d016              BEQ      |L1.110|
000040  4601              MOV      r1,r0                 ;322
000042  a019              ADR      r0,|L1.168|
000044  f7fffffe          BL       User_Debug_Printf
000048  4620              MOV      r0,r4                 ;324
00004a  f7fffffe          BL       GUI_ALLOC_h2p
00004e  3020              ADDS     r0,r0,#0x20           ;324
000050  6030              STR      r0,[r6,#0]            ;326  ; pThisWin
000052  8004              STRH     r4,[r0,#0]            ;326
000054  6047              STR      r7,[r0,#4]            ;328
000056  7205              STRB     r5,[r0,#8]            ;328
000058  f7fffffe          BL       AddWindowToList
00005c  491f              LDR      r1,|L1.220|
00005e  4620              MOV      r0,r4                 ;332
000060  f7fffffe          BL       WM_SetCallback
000064  2101              MOVS     r1,#1                 ;333
000066  4620              MOV      r0,r4                 ;333
000068  f7fffffe          BL       WM__SendMsgNoData
00006c  e002              B        |L1.116|
                  |L1.110|
00006e  a01c              ADR      r0,|L1.224|
000070  f7fffffe          BL       User_Debug_Printf
                  |L1.116|
000074  6830              LDR      r0,[r6,#0]            ;340  ; pThisWin
000076  e7d0              B        |L1.26|
;;;342    
                          ENDP

                  |L1.120|
000078  65546f75          DCB      "eTouchCalibrate window is alreay exist!\r\n",0
00007c  63684361
000080  6c696272
000084  61746520
000088  77696e64
00008c  6f772069
000090  7320616c
000094  72656179
000098  20657869
00009c  7374210d
0000a0  0a00    
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L1.164|
                          DCD      ||.data||
                  |L1.168|
0000a8  65546f75          DCB      "eTouchCalibrate windows is created!hWin = 0x%04X\r\n",0
0000ac  63684361
0000b0  6c696272
0000b4  61746520
0000b8  77696e64
0000bc  6f777320
0000c0  69732063
0000c4  72656174
0000c8  65642168
0000cc  57696e20
0000d0  3d203078
0000d4  25303458
0000d8  0d0a00  
0000db  00                DCB      0
                  |L1.220|
                          DCD      _Callback
                  |L1.224|
0000e0  65546f75          DCB      "eTouchCalibrate window can't be created!\r\n",0
0000e4  63684361
0000e8  6c696272
0000ec  61746520
0000f0  77696e64
0000f4  6f772063
0000f8  616e2774
0000fc  20626520
000100  63726561
000104  74656421
000108  0d0a00  
00010b  00                DCB      0

                          AREA ||i.GUI_Timer_Callback||, CODE, READONLY, ALIGN=2

                  GUI_Timer_Callback PROC
;;;211    
;;;212    static void GUI_Timer_Callback(GUI_TIMER_MESSAGE *pTM)
000000  b510              PUSH     {r4,lr}
;;;213    {
000002  4604              MOV      r4,r0
;;;214    	GUI_TIMER_Restart(pThisWin->hTimer);
000004  4806              LDR      r0,|L2.32|
000006  6800              LDR      r0,[r0,#0]  ; pThisWin
000008  f9b00030          LDRSH    r0,[r0,#0x30]
00000c  f7fffffe          BL       GUI_TIMER_Restart
;;;215    	WM_SendMessageNoPara((WM_HWIN)pTM->Context, WM_WINDOW_TIMER);
000010  88a0              LDRH     r0,[r4,#4]
000012  e8bd4010          POP      {r4,lr}
000016  b200              SXTH     r0,r0
000018  f2404105          MOV      r1,#0x405
00001c  f7ffbffe          B.W      WM_SendMessageNoPara
;;;216    }
;;;217    
                          ENDP

                  |L2.32|
                          DCD      ||.data||

                          AREA ||i.GetTouchAdcValue||, CODE, READONLY, ALIGN=2

                  GetTouchAdcValue PROC
;;;64     
;;;65     static bool GetTouchAdcValue(u16 *x, u16 *y)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;66     {
000004  460e              MOV      r6,r1
000006  4607              MOV      r7,r0
;;;67     	int xAdc , yAdc;
;;;68     
;;;69     	/*等待按下*/
;;;70     	if((GUI_TOUCH_X_MeasureX() == -1 && GUI_TOUCH_X_MeasureY() == -1))
000008  f7fffffe          BL       GUI_TOUCH_X_MeasureX
00000c  1c40              ADDS     r0,r0,#1
00000e  d103              BNE      |L3.24|
000010  f7fffffe          BL       GUI_TOUCH_X_MeasureY
000014  1c40              ADDS     r0,r0,#1
000016  d039              BEQ      |L3.140|
                  |L3.24|
;;;71     	{
;;;72     		return false;
;;;73     	}
;;;74     
;;;75     	delay_ms(150);
000018  2096              MOVS     r0,#0x96
00001a  f7fffffe          BL       delay_ms
;;;76     	
;;;77     #if GUI_TOUCH_SWAP_XY
;;;78     	xAdc = GUI_TOUCH_X_MeasureY();
;;;79     	yAdc = GUI_TOUCH_X_MeasureX();
;;;80     #else
;;;81     	xAdc = GUI_TOUCH_X_MeasureX();
00001e  f7fffffe          BL       GUI_TOUCH_X_MeasureX
000022  4605              MOV      r5,r0
;;;82     	yAdc = GUI_TOUCH_X_MeasureY();
000024  f7fffffe          BL       GUI_TOUCH_X_MeasureY
000028  4604              MOV      r4,r0
;;;83     #endif
;;;84     	
;;;85     	/*所按下坐标容错性检查*/
;;;86     	if(pThisWin->nCaliIndex == 0)
00002a  4823              LDR      r0,|L3.184|
;;;87     	{
;;;88     		if(abs(xAdc - GUI_TOUCH_AD_LEFT) > TOUCH_MAX_OFFSET || abs(yAdc - GUI_TOUCH_AD_TOP) > TOUCH_MAX_OFFSET)
00002c  f44f7196          MOV      r1,#0x12c
000030  6800              LDR      r0,[r0,#0]            ;86  ; pThisWin
000032  f8900026          LDRB     r0,[r0,#0x26]         ;86
000036  b130              CBZ      r0,|L3.70|
;;;89     		{
;;;90     			return false;
;;;91     		}
;;;92     	}
;;;93     	else if(pThisWin->nCaliIndex == 1)
000038  2801              CMP      r0,#1
00003a  d00f              BEQ      |L3.92|
;;;94     	{
;;;95     		if(abs(xAdc - GUI_TOUCH_AD_LEFT) > TOUCH_MAX_OFFSET || abs(yAdc - GUI_TOUCH_AD_BOTTOM) > TOUCH_MAX_OFFSET)
;;;96     		{
;;;97     			return false;
;;;98     		}
;;;99     	}
;;;100    	else if(pThisWin->nCaliIndex == 2)
00003c  2802              CMP      r0,#2
00003e  d018              BEQ      |L3.114|
;;;101    	{
;;;102    		if(abs(xAdc - GUI_TOUCH_AD_RIGHT) > TOUCH_MAX_OFFSET || abs(yAdc - GUI_TOUCH_AD_TOP) > TOUCH_MAX_OFFSET)
;;;103    		{
;;;104    			return false;
;;;105    		}
;;;106    	}
;;;107    	else if(pThisWin->nCaliIndex == 3)
000040  2803              CMP      r0,#3
000042  d01c              BEQ      |L3.126|
000044  e024              B        |L3.144|
                  |L3.70|
000046  f6a56026          SUB      r0,r5,#0xe26          ;88
00004a  e014              B        |L3.118|
                  |L3.76|
00004c  4288              CMP      r0,r1                 ;88
00004e  dc1c              BGT      |L3.138|
000050  f6a450cd          SUB      r0,r4,#0xdcd          ;88
000054  e009              B        |L3.106|
                  |L3.86|
000056  4288              CMP      r0,r1                 ;88
000058  dc17              BGT      |L3.138|
00005a  e019              B        |L3.144|
                  |L3.92|
00005c  f6a56026          SUB      r0,r5,#0xe26          ;95
000060  e00f              B        |L3.130|
                  |L3.98|
000062  4288              CMP      r0,r1                 ;95
000064  dc11              BGT      |L3.138|
000066  f5a4708c          SUB      r0,r4,#0x118          ;95
                  |L3.106|
;;;108    	{
;;;109    		if(abs(xAdc - GUI_TOUCH_AD_RIGHT) > TOUCH_MAX_OFFSET || abs(yAdc - GUI_TOUCH_AD_BOTTOM) > TOUCH_MAX_OFFSET)
00006a  2800              CMP      r0,#0
00006c  daf3              BGE      |L3.86|
00006e  4240              RSBS     r0,r0,#0
000070  e7f1              B        |L3.86|
                  |L3.114|
000072  f5a570c8          SUB      r0,r5,#0x190          ;102
                  |L3.118|
000076  2800              CMP      r0,#0                 ;102
000078  dae8              BGE      |L3.76|
00007a  4240              RSBS     r0,r0,#0              ;102
00007c  e7e6              B        |L3.76|
                  |L3.126|
00007e  f5a570c8          SUB      r0,r5,#0x190
                  |L3.130|
000082  2800              CMP      r0,#0
000084  daed              BGE      |L3.98|
000086  4240              RSBS     r0,r0,#0
000088  e7eb              B        |L3.98|
                  |L3.138|
;;;110    		{
;;;111    			return false;
00008a  2000              MOVS     r0,#0
                  |L3.140|
;;;112    		}
;;;113    	}
;;;114    	
;;;115    	Buzzer_Beep(eBUZ_PRESSOK);
;;;116    	
;;;117    	/*等待释放*/
;;;118    	while((GUI_TOUCH_X_MeasureX() != -1) && (GUI_TOUCH_X_MeasureY() != -1));
;;;119    	
;;;120    	delay_ms(100);
;;;121    	
;;;122    	*x = xAdc;
;;;123    	*y = yAdc;
;;;124    
;;;125    	return true;
;;;126    }
00008c  e8bd81f0          POP      {r4-r8,pc}
                  |L3.144|
000090  2010              MOVS     r0,#0x10              ;115
000092  f7fffffe          BL       Buzzer_Beep
000096  bf00              NOP                            ;118
                  |L3.152|
000098  f7fffffe          BL       GUI_TOUCH_X_MeasureX
00009c  1c40              ADDS     r0,r0,#1              ;118
00009e  d003              BEQ      |L3.168|
0000a0  f7fffffe          BL       GUI_TOUCH_X_MeasureY
0000a4  1c40              ADDS     r0,r0,#1              ;118
0000a6  d1f7              BNE      |L3.152|
                  |L3.168|
0000a8  2064              MOVS     r0,#0x64              ;120
0000aa  f7fffffe          BL       delay_ms
0000ae  803d              STRH     r5,[r7,#0]            ;122
0000b0  8034              STRH     r4,[r6,#0]            ;123
0000b2  2001              MOVS     r0,#1                 ;125
0000b4  e7ea              B        |L3.140|
;;;127    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L3.184|
                          DCD      ||.data||

                          AREA ||i.GuiDrawTouchCaliPiont||, CODE, READONLY, ALIGN=1

                  GuiDrawTouchCaliPiont PROC
;;;204    
;;;205    static void GuiDrawTouchCaliPiont(unsigned int x, unsigned int y)
000000  b570              PUSH     {r4-r6,lr}
;;;206    {
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
;;;207    	GUI_DrawCircle(x, y, 5);
000006  2205              MOVS     r2,#5
000008  f7fffffe          BL       GUI_DrawCircle
;;;208    	GUI_DrawLine(0, y, LCD_XSIZE - 1, y);
00000c  4623              MOV      r3,r4
00000e  22ef              MOVS     r2,#0xef
000010  4619              MOV      r1,r3
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       GUI_DrawLine
;;;209    	GUI_DrawLine(x, 0, x, LCD_YSIZE - 1);
000018  462a              MOV      r2,r5
00001a  e8bd4070          POP      {r4-r6,lr}
00001e  f240133f          MOV      r3,#0x13f
000022  2100              MOVS     r1,#0
000024  4610              MOV      r0,r2
000026  f7ffbffe          B.W      GUI_DrawLine
;;;210    }
;;;211    
                          ENDP


                          AREA ||i.Process_Touch_Cali_Data||, CODE, READONLY, ALIGN=2

                  Process_Touch_Cali_Data PROC
;;;13     
;;;14     static void Process_Touch_Cali_Data(void)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;15     {
;;;16     	unsigned short x0, y0; //左上
;;;17     	unsigned short x1, y1; //左下
;;;18     	unsigned short x2, y2; //右上
;;;19     	unsigned short x3, y3; //右下
;;;20     
;;;21     	unsigned short xAdc, yAdc;
;;;22     	unsigned short xMin, xMax, yMin, yMax;
;;;23     
;;;24     	x0 = pThisWin->x0;
000004  482e              LDR      r0,|L5.192|
000006  6800              LDR      r0,[r0,#0]  ; pThisWin
;;;25     	y0 = pThisWin->y0;
;;;26     	x1 = pThisWin->x1;
000008  8b43              LDRH     r3,[r0,#0x1a]
;;;27     	y1 = pThisWin->y1;
;;;28     	x2 = pThisWin->x2;
;;;29     	y2 = pThisWin->y2;
;;;30     	x3 = pThisWin->x3;
00000a  8c45              LDRH     r5,[r0,#0x22]
00000c  8ac4              LDRH     r4,[r0,#0x16]         ;24
00000e  f8b09018          LDRH     r9,[r0,#0x18]         ;25
000012  8b82              LDRH     r2,[r0,#0x1c]         ;27
000014  8bc6              LDRH     r6,[r0,#0x1e]         ;28
000016  8c01              LDRH     r1,[r0,#0x20]         ;29
;;;31     	y3 = pThisWin->y3;
000018  f8b0c024          LDRH     r12,[r0,#0x24]
;;;32     	
;;;33     #if	!GUI_TOUCH_SWAP_XY
;;;34     	xAdc = abs(x3 - x1 + x2 - x0) / 2;        			//触摸点的间距
00001c  1ae8              SUBS     r0,r5,r3
00001e  4430              ADD      r0,r0,r6
000020  1b00              SUBS     r0,r0,r4
000022  d500              BPL      |L5.38|
000024  4240              RSBS     r0,r0,#0
                  |L5.38|
000026  eb0070d0          ADD      r0,r0,r0,LSR #31
00002a  f3c0074f          UBFX     r7,r0,#1,#16
;;;35     	yAdc = abs(y3 - y2 + y1 - y0) / 2;
00002e  ebac0001          SUB      r0,r12,r1
000032  eb000802          ADD      r8,r0,r2
000036  ebb80009          SUBS     r0,r8,r9
00003a  d500              BPL      |L5.62|
00003c  4240              RSBS     r0,r0,#0
                  |L5.62|
;;;36     
;;;37     	xAdc = (xAdc * 10) / (LCD_XSIZE - 20);          	//10个点的ADC差值
00003e  eb070787          ADD      r7,r7,r7,LSL #2
000042  007f              LSLS     r7,r7,#1
000044  f04f08dc          MOV      r8,#0xdc
000048  fbb7f7f8          UDIV     r7,r7,r8
00004c  eb0070d0          ADD      r0,r0,r0,LSR #31      ;35
000050  f3c0004f          UBFX     r0,r0,#1,#16          ;35
000054  fa1ff887          UXTH     r8,r7
;;;38     	yAdc = (yAdc * 10) / (LCD_YSIZE - 20);          	//10个点的ADC差值
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  0040              LSLS     r0,r0,#1
00005e  f44f7796          MOV      r7,#0x12c
000062  fbb0f0f7          UDIV     r0,r0,r7
000066  b287              UXTH     r7,r0
;;;39     
;;;40     	xMin = abs((x2 + x3) / 2 - xAdc);          			//计算边界
000068  1970              ADDS     r0,r6,r5
00006a  ebd80050          RSBS     r0,r8,r0,LSR #1
00006e  d500              BPL      |L5.114|
000070  4240              RSBS     r0,r0,#0
                  |L5.114|
000072  b285              UXTH     r5,r0
;;;41     	xMax = (x0 + x1) / 2 + xAdc;
000074  18e0              ADDS     r0,r4,r3
000076  eb080050          ADD      r0,r8,r0,LSR #1
00007a  b283              UXTH     r3,r0
;;;42     	yMin = abs((y1 + y3) / 2 - yAdc);
00007c  eb02000c          ADD      r0,r2,r12
000080  ebd70050          RSBS     r0,r7,r0,LSR #1
000084  d500              BPL      |L5.136|
000086  4240              RSBS     r0,r0,#0
                  |L5.136|
000088  b284              UXTH     r4,r0
;;;43     	yMax = (y0 + y2) / 2 + yAdc;
00008a  eb090001          ADD      r0,r9,r1
00008e  eb070050          ADD      r0,r7,r0,LSR #1
000092  b286              UXTH     r6,r0
;;;44     #else
;;;45     	xAdc = (x1 - x3 + x0 - x2) / 2;
;;;46     	yAdc = (y3 - y2 + y1 - y0) / 2;
;;;47     
;;;48     	xAdc = (xAdc * 10) / (LCD_XSIZE - 20);           //10个点的ADC差值
;;;49     	yAdc = (yAdc * 10) / (LCD_YSIZE - 20);		//10个点的ADC差值
;;;50     
;;;51     	xMin = (x2 + x3) / 2 - xAdc;          			//计算边界
;;;52     	xMax = (x0 + x1) / 2 + xAdc;
;;;53     	yMin = (y0 + y2) / 2 - yAdc;
;;;54     	yMax = (y1 + y3) / 2 + yAdc;
;;;55     #endif
;;;56     
;;;57     	GUI_TOUCH_Calibrate(0, 0, 240, xMax, xMin);
000094  2100              MOVS     r1,#0
000096  22f0              MOVS     r2,#0xf0
000098  4608              MOV      r0,r1
00009a  9500              STR      r5,[sp,#0]
00009c  f7fffffe          BL       GUI_TOUCH_Calibrate
;;;58     	GUI_TOUCH_Calibrate(1, 0, 320, yMin,  yMax);
0000a0  4623              MOV      r3,r4
0000a2  f44f72a0          MOV      r2,#0x140
0000a6  2100              MOVS     r1,#0
0000a8  2001              MOVS     r0,#1
0000aa  9600              STR      r6,[sp,#0]
0000ac  f7fffffe          BL       GUI_TOUCH_Calibrate
;;;59     
;;;60     	Spi_Flash_Init();
0000b0  f7fffffe          BL       Spi_Flash_Init
;;;61     	Data_TouchCalibration_Save();
0000b4  f7fffffe          BL       Data_TouchCalibration_Save
;;;62     	Spi_Flash_DeInit();
0000b8  e8bd43f8          POP      {r3-r9,lr}
0000bc  f7ffbffe          B.W      Spi_Flash_DeInit
;;;63     }
;;;64     
                          ENDP

                  |L5.192|
                          DCD      ||.data||

                          AREA ||i.Touch_Calibrate_Scan||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  Touch_Calibrate_Scan PROC
;;;127    
;;;128    static void Touch_Calibrate_Scan(WM_MESSAGE *pMsg)
000000  b5fe              PUSH     {r1-r7,lr}
;;;129    {
000002  4605              MOV      r5,r0
;;;130    	char aTemp[10];
;;;131    	signed char nRemin;
;;;132    	
;;;133    	nRemin = 30 - ((Get_System_Time() - pThisWin->nStartTime) / 1000);
000004  f7fffffe          BL       Get_System_Time
000008  4c39              LDR      r4,|L6.240|
00000a  6821              LDR      r1,[r4,#0]  ; pThisWin
00000c  6ac9              LDR      r1,[r1,#0x2c]
00000e  1a40              SUBS     r0,r0,r1
000010  f44f717a          MOV      r1,#0x3e8
000014  fbb0f0f1          UDIV     r0,r0,r1
000018  f1c0001e          RSB      r0,r0,#0x1e
00001c  b246              SXTB     r6,r0
;;;134    	sprintf(aTemp, "%02d", nRemin);
00001e  4632              MOV      r2,r6
000020  a134              ADR      r1,|L6.244|
000022  4668              MOV      r0,sp
000024  f7fffffe          BL       __2sprintf
;;;135    	TEXT_SetText(pThisWin->hTextTimer, aTemp);
000028  6820              LDR      r0,[r4,#0]  ; pThisWin
00002a  4669              MOV      r1,sp
00002c  f9b00028          LDRSH    r0,[r0,#0x28]
000030  f7fffffe          BL       TEXT_SetText
;;;136    	
;;;137    	if(nRemin < 0)
000034  2e00              CMP      r6,#0
000036  da04              BGE      |L6.66|
                  |L6.56|
;;;138    	{
;;;139    		WM_DeleteWindow(pMsg->hWin);
000038  f9b50004          LDRSH    r0,[r5,#4]
00003c  f7fffffe          BL       WM_DeleteWindow
                  |L6.64|
;;;140    		return;
;;;141    	}
;;;142    	
;;;143    	switch(pThisWin->nCaliIndex)
;;;144    	{
;;;145    		case 0:
;;;146    			if(pThisWin->bNeedRefeshWindow)
;;;147    			{
;;;148    				pThisWin->bNeedRefeshWindow = false;
;;;149    				WM_InvalidateWindow(pMsg->hWin);
;;;150    			}
;;;151    
;;;152    			if(GetTouchAdcValue(&pThisWin->x0, &pThisWin->y0))
;;;153    			{
;;;154    				pThisWin->nCaliIndex = 1;
;;;155    				pThisWin->bNeedRefeshWindow = true;
;;;156    			}
;;;157    			break;
;;;158    			
;;;159    		case 1:
;;;160    			if(pThisWin->bNeedRefeshWindow)
;;;161    			{
;;;162    				pThisWin->bNeedRefeshWindow = false;
;;;163    				WM_InvalidateWindow(pMsg->hWin);
;;;164    			}
;;;165    
;;;166    			if(GetTouchAdcValue(&pThisWin->x1, &pThisWin->y1))
;;;167    			{
;;;168    				pThisWin->nCaliIndex = 3;
;;;169    				pThisWin->bNeedRefeshWindow = true;
;;;170    			}
;;;171    			break;
;;;172    			
;;;173    		case 2:
;;;174    			if(pThisWin->bNeedRefeshWindow)
;;;175    			{
;;;176    				pThisWin->bNeedRefeshWindow = false;
;;;177    				WM_InvalidateWindow(pMsg->hWin);
;;;178    			}
;;;179    
;;;180    			if(GetTouchAdcValue(&pThisWin->x2, &pThisWin->y2))
;;;181    			{
;;;182    				/*运行到此表明校准完成*/
;;;183    				Process_Touch_Cali_Data();
;;;184    				WM_DeleteWindow(pMsg->hWin);
;;;185    			}
;;;186    			break;
;;;187    			
;;;188    		case 3:
;;;189    			if(pThisWin->bNeedRefeshWindow)
;;;190    			{
;;;191    				pThisWin->bNeedRefeshWindow = false;
;;;192    				WM_InvalidateWindow(pMsg->hWin);
;;;193    			}
;;;194    
;;;195    			if(GetTouchAdcValue(&pThisWin->x3, &pThisWin->y3))
;;;196    			{
;;;197    				pThisWin->nCaliIndex = 2;
;;;198    				pThisWin->bNeedRefeshWindow = true;
;;;199    			}
;;;200    			break;
;;;201    	}
;;;202    	
;;;203    }
000040  bdfe              POP      {r1-r7,pc}
                  |L6.66|
000042  6820              LDR      r0,[r4,#0]            ;143  ; pThisWin
000044  2100              MOVS     r1,#0                 ;143
000046  2601              MOVS     r6,#1                 ;143
000048  f8902026          LDRB     r2,[r0,#0x26]         ;143
00004c  b1ca              CBZ      r2,|L6.130|
00004e  2a01              CMP      r2,#1                 ;143
000050  d02b              BEQ      |L6.170|
000052  2a02              CMP      r2,#2                 ;143
000054  d03a              BEQ      |L6.204|
000056  2a03              CMP      r2,#3                 ;143
000058  d1f2              BNE      |L6.64|
00005a  7d02              LDRB     r2,[r0,#0x14]         ;189
00005c  b122              CBZ      r2,|L6.104|
00005e  7501              STRB     r1,[r0,#0x14]         ;191
000060  f9b50004          LDRSH    r0,[r5,#4]            ;192
000064  f7fffffe          BL       WM_InvalidateWindow
                  |L6.104|
000068  6821              LDR      r1,[r4,#0]            ;195  ; pThisWin
00006a  f1010022          ADD      r0,r1,#0x22           ;195
00006e  3124              ADDS     r1,r1,#0x24           ;195
000070  f7fffffe          BL       GetTouchAdcValue
000074  2800              CMP      r0,#0                 ;195
000076  d0e3              BEQ      |L6.64|
000078  2102              MOVS     r1,#2                 ;197
                  |L6.122|
00007a  6820              LDR      r0,[r4,#0]            ;197  ; pThisWin
00007c  f8801026          STRB     r1,[r0,#0x26]         ;197
000080  e011              B        |L6.166|
                  |L6.130|
000082  7d02              LDRB     r2,[r0,#0x14]         ;146
000084  b122              CBZ      r2,|L6.144|
000086  7501              STRB     r1,[r0,#0x14]         ;148
000088  f9b50004          LDRSH    r0,[r5,#4]            ;149
00008c  f7fffffe          BL       WM_InvalidateWindow
                  |L6.144|
000090  6821              LDR      r1,[r4,#0]            ;152  ; pThisWin
000092  f1010016          ADD      r0,r1,#0x16           ;152
000096  3118              ADDS     r1,r1,#0x18           ;152
000098  f7fffffe          BL       GetTouchAdcValue
00009c  2800              CMP      r0,#0                 ;152
00009e  d0cf              BEQ      |L6.64|
0000a0  6820              LDR      r0,[r4,#0]            ;154  ; pThisWin
0000a2  f8806026          STRB     r6,[r0,#0x26]         ;154
                  |L6.166|
0000a6  7506              STRB     r6,[r0,#0x14]         ;155
                  |L6.168|
0000a8  bdfe              POP      {r1-r7,pc}
                  |L6.170|
0000aa  7d02              LDRB     r2,[r0,#0x14]         ;160
0000ac  b122              CBZ      r2,|L6.184|
0000ae  7501              STRB     r1,[r0,#0x14]         ;162
0000b0  f9b50004          LDRSH    r0,[r5,#4]            ;163
0000b4  f7fffffe          BL       WM_InvalidateWindow
                  |L6.184|
0000b8  6821              LDR      r1,[r4,#0]            ;166  ; pThisWin
0000ba  f101001a          ADD      r0,r1,#0x1a           ;166
0000be  311c              ADDS     r1,r1,#0x1c           ;166
0000c0  f7fffffe          BL       GetTouchAdcValue
0000c4  2800              CMP      r0,#0                 ;166
0000c6  d0ef              BEQ      |L6.168|
0000c8  2103              MOVS     r1,#3                 ;168
0000ca  e7d6              B        |L6.122|
                  |L6.204|
0000cc  7d02              LDRB     r2,[r0,#0x14]         ;174
0000ce  b122              CBZ      r2,|L6.218|
0000d0  7501              STRB     r1,[r0,#0x14]         ;176
0000d2  f9b50004          LDRSH    r0,[r5,#4]            ;177
0000d6  f7fffffe          BL       WM_InvalidateWindow
                  |L6.218|
0000da  6821              LDR      r1,[r4,#0]            ;180  ; pThisWin
0000dc  f101001e          ADD      r0,r1,#0x1e           ;180
0000e0  3120              ADDS     r1,r1,#0x20           ;180
0000e2  f7fffffe          BL       GetTouchAdcValue
0000e6  2800              CMP      r0,#0                 ;180
0000e8  d0de              BEQ      |L6.168|
0000ea  f7fffffe          BL       Process_Touch_Cali_Data
0000ee  e7a3              B        |L6.56|
;;;204    
                          ENDP

                  |L6.240|
                          DCD      ||.data||
                  |L6.244|
0000f4  25303264          DCB      "%02d",0
0000f8  00      
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0

                          AREA ||i._Callback||, CODE, READONLY, ALIGN=2

                  _Callback PROC
;;;249    
;;;250    static void _Callback(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;251    {
000002  4604              MOV      r4,r0
;;;252    	switch(pMsg->MsgId)
000004  6800              LDR      r0,[r0,#0]
;;;253    	{
;;;254    		case WM_CREATE:
;;;255    			_Create(pMsg);
;;;256    			break;
;;;257    
;;;258    		case WM_PAINT:
;;;259    			GUI_SetColor(GUI_WHITE);
;;;260    			GUI_FillRect(0, 0, LCD_XSIZE, LCD_YSIZE);
;;;261    			GUI_SetColor(GUI_RED);
;;;262    			switch(pThisWin->nCaliIndex)
000006  4d2d              LDR      r5,|L7.188|
000008  280f              CMP      r0,#0xf               ;252
00000a  d012              BEQ      |L7.50|
00000c  dc06              BGT      |L7.28|
00000e  2801              CMP      r0,#1                 ;252
000010  d00b              BEQ      |L7.42|
000012  280b              CMP      r0,#0xb               ;252
000014  d03c              BEQ      |L7.144|
000016  280e              CMP      r0,#0xe               ;252
000018  d14b              BNE      |L7.178|
;;;263    			{
;;;264    				case 0:
;;;265    					GuiDrawTouchCaliPiont(10, 10);
;;;266    					break;
;;;267    				case 1:
;;;268    					GuiDrawTouchCaliPiont(10, LCD_YSIZE - 10);
;;;269    					break;
;;;270    				case 2:
;;;271    					GuiDrawTouchCaliPiont(LCD_XSIZE - 10, 10);
;;;272    					break;
;;;273    				case 3:
;;;274    					GuiDrawTouchCaliPiont(LCD_XSIZE - 10, LCD_YSIZE - 10);
;;;275    					break;
;;;276    			}
;;;277    			break;
;;;278    			
;;;279    		case WM_KEY:
;;;280    			return;
;;;281    
;;;282    		case WM_WINDOW_TIMER:
;;;283    			Touch_Calibrate_Scan(pMsg);
;;;284    			break;
;;;285    			
;;;286    		case WM_NOTIFY_PARENT:
;;;287    			switch(pMsg->Data.v)
;;;288    			{
;;;289    				case WM_NOTIFICATION_WIN_DELETE:
;;;290    					WM_SetFocus(pMsg->hWin);
;;;291    					break;
;;;292    			}
;;;293    			break;
;;;294    	
;;;295    		case WM_DELETE:
;;;296    			GUI_TIMER_Delete(pThisWin->hTimer);
;;;297    			pThisWin->hTimer = NULL;
;;;298    			DeleteWindowFromList(pMsg->hWin);
;;;299    			WM_NotifyParent(pMsg->hWin, WM_NOTIFICATION_WIN_DELETE);
;;;300    			break;
;;;301    	}
;;;302    	WM_DefaultProc(pMsg);
;;;303    }
00001a  bd70              POP      {r4-r6,pc}
                  |L7.28|
00001c  2826              CMP      r0,#0x26              ;252
00001e  d02f              BEQ      |L7.128|
000020  f5a06080          SUB      r0,r0,#0x400          ;252
000024  3805              SUBS     r0,#5                 ;252
000026  d144              BNE      |L7.178|
000028  e026              B        |L7.120|
                  |L7.42|
00002a  4620              MOV      r0,r4                 ;255
00002c  f7fffffe          BL       _Create
000030  e03f              B        |L7.178|
                  |L7.50|
000032  f06f407f          MVN      r0,#0xff000000        ;259
000036  f7fffffe          BL       GUI_SetColor
00003a  2100              MOVS     r1,#0                 ;260
00003c  f44f73a0          MOV      r3,#0x140             ;260
000040  22f0              MOVS     r2,#0xf0              ;260
000042  4608              MOV      r0,r1                 ;260
000044  f7fffffe          BL       GUI_FillRect
000048  20ff              MOVS     r0,#0xff              ;261
00004a  f7fffffe          BL       GUI_SetColor
00004e  6828              LDR      r0,[r5,#0]            ;262  ; pThisWin
000050  f8900026          LDRB     r0,[r0,#0x26]         ;262
000054  b140              CBZ      r0,|L7.104|
000056  f44f719b          MOV      r1,#0x136             ;268
00005a  2801              CMP      r0,#1                 ;262
00005c  d005              BEQ      |L7.106|
00005e  2802              CMP      r0,#2                 ;262
000060  d005              BEQ      |L7.110|
000062  2803              CMP      r0,#3                 ;262
000064  d125              BNE      |L7.178|
000066  e003              B        |L7.112|
                  |L7.104|
000068  210a              MOVS     r1,#0xa               ;265
                  |L7.106|
00006a  200a              MOVS     r0,#0xa               ;268
00006c  e001              B        |L7.114|
                  |L7.110|
00006e  210a              MOVS     r1,#0xa               ;271
                  |L7.112|
000070  20e6              MOVS     r0,#0xe6              ;274
                  |L7.114|
000072  f7fffffe          BL       GuiDrawTouchCaliPiont
000076  e01c              B        |L7.178|
                  |L7.120|
000078  4620              MOV      r0,r4                 ;283
00007a  f7fffffe          BL       Touch_Calibrate_Scan
00007e  e018              B        |L7.178|
                  |L7.128|
000080  68a0              LDR      r0,[r4,#8]            ;287
000082  2811              CMP      r0,#0x11              ;287
000084  d115              BNE      |L7.178|
000086  f9b40004          LDRSH    r0,[r4,#4]            ;290
00008a  f7fffffe          BL       WM_SetFocus
00008e  e010              B        |L7.178|
                  |L7.144|
000090  6828              LDR      r0,[r5,#0]            ;296  ; pThisWin
000092  f9b00030          LDRSH    r0,[r0,#0x30]         ;296
000096  f7fffffe          BL       GUI_TIMER_Delete
00009a  6829              LDR      r1,[r5,#0]            ;297  ; pThisWin
00009c  2000              MOVS     r0,#0                 ;297
00009e  8608              STRH     r0,[r1,#0x30]         ;297
0000a0  f9b40004          LDRSH    r0,[r4,#4]            ;298
0000a4  f7fffffe          BL       DeleteWindowFromList
0000a8  f9b40004          LDRSH    r0,[r4,#4]            ;299
0000ac  2111              MOVS     r1,#0x11              ;299
0000ae  f7fffffe          BL       WM_NotifyParent
                  |L7.178|
0000b2  4620              MOV      r0,r4                 ;302
0000b4  e8bd4070          POP      {r4-r6,lr}            ;302
0000b8  f7ffbffe          B.W      WM_DefaultProc
;;;304    
                          ENDP

                  |L7.188|
                          DCD      ||.data||

                          AREA ||i._Create||, CODE, READONLY, ALIGN=2

                  _Create PROC
;;;217    
;;;218    static void _Create(WM_MESSAGE *pMsg)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;219    {
;;;220    	GUI_RECT rect;
;;;221    	char *pStr = "30";
;;;222    	WM_HWIN hWin;
;;;223    	
;;;224    	pThisWin->nCaliIndex = 0;
000004  4d3c              LDR      r5,|L8.248|
000006  4604              MOV      r4,r0                 ;219
000008  b087              SUB      sp,sp,#0x1c           ;219
00000a  6828              LDR      r0,[r5,#0]  ; pThisWin
00000c  2600              MOVS     r6,#0
;;;225    	pThisWin->bNeedRefeshWindow = true;
00000e  2101              MOVS     r1,#1
000010  f8806026          STRB     r6,[r0,#0x26]         ;224
000014  a737              ADR      r7,|L8.244|
000016  7501              STRB     r1,[r0,#0x14]
;;;226    	pThisWin->nStartTime = Get_System_Time();
000018  f7fffffe          BL       Get_System_Time
00001c  6829              LDR      r1,[r5,#0]  ; pThisWin
;;;227    
;;;228    	/*中间正文提示语*/
;;;229    	 hWin = TEXT_CreateEx(30, 100, LCD_XSIZE - 60, 100,
00001e  f04f0902          MOV      r9,#2
000022  2364              MOVS     r3,#0x64
000024  62c8              STR      r0,[r1,#0x2c]
000026  4936              LDR      r1,|L8.256|
000028  4834              LDR      r0,|L8.252|
00002a  22b4              MOVS     r2,#0xb4
00002c  7809              LDRB     r1,[r1,#0]  ; g_Language
00002e  f8500021          LDR      r0,[r0,r1,LSL #2]
000032  4619              MOV      r1,r3
000034  f8d000e8          LDR      r0,[r0,#0xe8]
000038  e9cd9601          STRD     r9,r6,[sp,#4]
00003c  e9cd6003          STRD     r6,r0,[sp,#0xc]
000040  f9b40004          LDRSH    r0,[r4,#4]
000044  9000              STR      r0,[sp,#0]
000046  201e              MOVS     r0,#0x1e
000048  f7fffffe          BL       TEXT_CreateEx
00004c  4680              MOV      r8,r0
;;;230    	                     pMsg->hWin,
;;;231    	                     WM_CF_SHOW, 0, 0, _TouchCalibrateTip);
;;;232    	TEXT_SetFont(hWin, _GetFont(Font_Content));
00004e  2004              MOVS     r0,#4
000050  f7fffffe          BL       _GetFont
000054  4601              MOV      r1,r0
000056  4640              MOV      r0,r8
000058  f7fffffe          BL       TEXT_SetFont
;;;233    	TEXT_SetWrapMode(hWin, GUI_WRAPMODE_WORD);
00005c  2101              MOVS     r1,#1
00005e  4640              MOV      r0,r8
000060  f7fffffe          BL       TEXT_SetWrapMode
;;;234    	TEXT_SetTextColor(hWin, GUI_RED);
000064  21ff              MOVS     r1,#0xff
000066  4640              MOV      r0,r8
000068  f7fffffe          BL       TEXT_SetTextColor
;;;235    
;;;236    	GUI_SetFont(&GUI_FontTahomaBold33);
00006c  4825              LDR      r0,|L8.260|
00006e  f7fffffe          BL       GUI_SetFont
;;;237    	GUI_GetTextExtend(&rect, pStr, 50);
000072  2232              MOVS     r2,#0x32
000074  4639              MOV      r1,r7
000076  a805              ADD      r0,sp,#0x14
000078  f7fffffe          BL       GUI_GetTextExtend
00007c  e9cd9601          STRD     r9,r6,[sp,#4]
000080  e9cd6703          STRD     r6,r7,[sp,#0xc]
;;;238    	pThisWin->hTextTimer = TEXT_CreateEx((LCD_XSIZE - (rect.x1 - rect.x0)) >> 1, 200, rect.x1 - rect.x0 + 1, rect.y1 - rect.y0 + 1,
000084  f9b40004          LDRSH    r0,[r4,#4]
000088  9000              STR      r0,[sp,#0]
00008a  f9bd001a          LDRSH    r0,[sp,#0x1a]
00008e  f9bd1016          LDRSH    r1,[sp,#0x16]
000092  1a43              SUBS     r3,r0,r1
000094  f9bd0018          LDRSH    r0,[sp,#0x18]
000098  f9bd1014          LDRSH    r1,[sp,#0x14]
00009c  1c5b              ADDS     r3,r3,#1
00009e  1a40              SUBS     r0,r0,r1
0000a0  1c42              ADDS     r2,r0,#1
0000a2  f1c000f0          RSB      r0,r0,#0xf0
0000a6  1040              ASRS     r0,r0,#1
0000a8  21c8              MOVS     r1,#0xc8
0000aa  f7fffffe          BL       TEXT_CreateEx
0000ae  6829              LDR      r1,[r5,#0]  ; pThisWin
0000b0  8508              STRH     r0,[r1,#0x28]
;;;239    	                     pMsg->hWin,
;;;240    	                     WM_CF_SHOW, 0, 0, pStr);
;;;241    	TEXT_SetFont(pThisWin->hTextTimer, &GUI_FontTahomaBold33);
0000b2  4914              LDR      r1,|L8.260|
0000b4  f7fffffe          BL       TEXT_SetFont
;;;242    	TEXT_SetTextColor(pThisWin->hTextTimer, GUI_DARKGREEN);
0000b8  6828              LDR      r0,[r5,#0]  ; pThisWin
0000ba  f44f4100          MOV      r1,#0x8000
0000be  f9b00028          LDRSH    r0,[r0,#0x28]
0000c2  f7fffffe          BL       TEXT_SetTextColor
;;;243    
;;;244    	pThisWin->hTimer = GUI_TIMER_Create(GUI_Timer_Callback, Get_System_Time() + 1000, (unsigned long)pMsg->hWin, 0);
0000c6  f7fffffe          BL       Get_System_Time
0000ca  f500717a          ADD      r1,r0,#0x3e8
0000ce  f9b42004          LDRSH    r2,[r4,#4]
0000d2  2300              MOVS     r3,#0
0000d4  480c              LDR      r0,|L8.264|
0000d6  f7fffffe          BL       GUI_TIMER_Create
0000da  6829              LDR      r1,[r5,#0]  ; pThisWin
0000dc  8608              STRH     r0,[r1,#0x30]
;;;245    	GUI_TIMER_SetPeriod(pThisWin->hTimer, 10);
0000de  210a              MOVS     r1,#0xa
0000e0  f7fffffe          BL       GUI_TIMER_SetPeriod
;;;246    
;;;247    	WM_SetFocus(pMsg->hWin);
0000e4  f9b40004          LDRSH    r0,[r4,#4]
0000e8  f7fffffe          BL       WM_SetFocus
;;;248    }
0000ec  b007              ADD      sp,sp,#0x1c
0000ee  e8bd83f0          POP      {r4-r9,pc}
;;;249    
                          ENDP

0000f2  0000              DCW      0x0000
                  |L8.244|
0000f4  333000            DCB      "30",0
0000f7  00                DCB      0
                  |L8.248|
                          DCD      ||.data||
                  |L8.252|
                          DCD      Strings
                  |L8.256|
                          DCD      g_Language
                  |L8.260|
                          DCD      GUI_FontTahomaBold33
                  |L8.264|
                          DCD      GUI_Timer_Callback

                          AREA ||.data||, DATA, ALIGN=2

                  pThisWin
                          DCD      0x00000000
