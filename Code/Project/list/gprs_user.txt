; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gprs_user.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gprs_user.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\User\gprs_user.c]
                          THUMB

                          AREA ||i.Analyse_Server_Package_GrandSub||, CODE, READONLY, ALIGN=2

                  Analyse_Server_Package_GrandSub PROC
;;;1257   
;;;1258   char*  Analyse_Server_Package_GrandSub(char *pBuffer)
000000  b510              PUSH     {r4,lr}
;;;1259   {
;;;1260   	char *SearchWord=pBuffer;
;;;1261   	char *Response_Position=NULL;
;;;1262   	
;;;1263   	SearchWord=strstr(pBuffer,"\r\n");//HTTP/1.1 200 
000002  a10c              ADR      r1,|L1.52|
000004  f7fffffe          BL       strstr
;;;1264   	SearchWord+=2;			
;;;1265   	SearchWord=strstr(SearchWord,"\r\n");//Content-Type: application/json;charset=UTF-8
000008  a10a              ADR      r1,|L1.52|
00000a  1c80              ADDS     r0,r0,#2
00000c  f7fffffe          BL       strstr
;;;1266   	SearchWord+=2;
;;;1267   	SearchWord=strstr(SearchWord,"\r\n");//Transfer-Encoding: chunked
000010  a108              ADR      r1,|L1.52|
000012  1c80              ADDS     r0,r0,#2
000014  f7fffffe          BL       strstr
;;;1268   	SearchWord+=2;
;;;1269   	SearchWord=strstr(SearchWord,"\r\n");//Date: Thu, 16 Aug 2018 02:20:05 GMT
000018  a106              ADR      r1,|L1.52|
00001a  1c80              ADDS     r0,r0,#2
00001c  f7fffffe          BL       strstr
;;;1270   	SearchWord+=2;
;;;1271   	SearchWord=strstr(SearchWord,"\r\n");//空行
000020  a104              ADR      r1,|L1.52|
000022  1c80              ADDS     r0,r0,#2
000024  f7fffffe          BL       strstr
;;;1272   	SearchWord+=2;//第6行 数据包长度
;;;1273   	SearchWord=strstr(SearchWord,"\r\n");//应答包数据长度
000028  a102              ADR      r1,|L1.52|
00002a  1c80              ADDS     r0,r0,#2
00002c  f7fffffe          BL       strstr
000030  1c80              ADDS     r0,r0,#2
;;;1274   	SearchWord+=2;//应答具体的数据包
;;;1275   
;;;1276   	Response_Position=SearchWord;
;;;1277   
;;;1278   	return Response_Position;//返回结果数据包位置 20180816
;;;1279   
;;;1280   }
000032  bd10              POP      {r4,pc}
;;;1281   void Gprs_Analyse_Server_Package_Data_Sub(char *pBuffer ,unsigned short nLen)
                          ENDP

                  |L1.52|
000034  0d0a00            DCB      "\r\n",0
000037  00                DCB      0

                          AREA ||i.Device_Close_Packet_Upload||, CODE, READONLY, ALIGN=2

                  Device_Close_Packet_Upload PROC
;;;1871   /*设备离线*/
;;;1872   void Device_Close_Packet_Upload(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1873   {
;;;1874   	if(g_sXingJiKongGU.bSingal_Strength)
000002  4c0d              LDR      r4,|L2.56|
000004  78a0              LDRB     r0,[r4,#2]  ; g_sXingJiKongGU
000006  2800              CMP      r0,#0                 ;1873
000008  d015              BEQ      |L2.54|
;;;1875        	{ 	
;;;1876   		memset(GPRS_Tx_Buffer,0,sizeof(GPRS_Tx_Buffer));
00000a  f24051dc          MOV      r1,#0x5dc
00000e  480b              LDR      r0,|L2.60|
000010  f7fffffe          BL       __aeabi_memclr
;;;1877   		g_nGprs_Tx_Cnt=GPRS_HeartRate_Packet(GPRS_Tx_Buffer);
000014  4809              LDR      r0,|L2.60|
000016  f7fffffe          BL       GPRS_HeartRate_Packet
00001a  4d09              LDR      r5,|L2.64|
00001c  8028              STRH     r0,[r5,#0]
;;;1878   		g_sXingJiKongGU.bHeartRate=true;
00001e  2001              MOVS     r0,#1
000020  7160              STRB     r0,[r4,#5]
;;;1879   
;;;1880   		TRACE_PRINTF("heartrate:%s\r\n",GPRS_Tx_Buffer);
000022  4906              LDR      r1,|L2.60|
000024  a007              ADR      r0,|L2.68|
000026  f7fffffe          BL       User_Debug_Printf
;;;1881       		TRACE_PRINTF("length:%d\r\n",g_nGprs_Tx_Cnt);
00002a  8829              LDRH     r1,[r5,#0]  ; g_nGprs_Tx_Cnt
00002c  e8bd4070          POP      {r4-r6,lr}
000030  a008              ADR      r0,|L2.84|
000032  f7ffbffe          B.W      User_Debug_Printf
                  |L2.54|
;;;1882       }
;;;1883   }
000036  bd70              POP      {r4-r6,pc}
;;;1884   void GPRS_HeartRate_Packet_Upload(void)
                          ENDP

                  |L2.56|
                          DCD      g_sXingJiKongGU
                  |L2.60|
                          DCD      GPRS_Tx_Buffer
                  |L2.64|
                          DCD      g_nGprs_Tx_Cnt
                  |L2.68|
000044  68656172          DCB      "heartrate:%s\r\n",0
000048  74726174
00004c  653a2573
000050  0d0a00  
000053  00                DCB      0
                  |L2.84|
000054  6c656e67          DCB      "length:%d\r\n",0
000058  74683a25
00005c  640d0a00

                          AREA ||i.Exec_GPRS_User_Loop||, CODE, READONLY, ALIGN=2

                  Exec_GPRS_User_Loop PROC
;;;1938   /*主循环中调用*/
;;;1939   void Exec_GPRS_User_Loop(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1940   {
;;;1941   	GPRS_Exce();//真正的登录和打包数据的函数 20180809
000002  f7fffffe          BL       GPRS_Exce
;;;1942   
;;;1943   	switch(g_sGPRSUser.eUserState)
000006  4c35              LDR      r4,|L3.220|
;;;1944   	{
;;;1945   		case eGprsUserGetIMEI:
;;;1946   			if(g_sGPRSUser.bGetValidIMEI)//没有数据也要继续
;;;1947   			{
;;;1948   				if(0) //Is_ValidData_Need_Upload() == false &&_Is_GPRS_System_PoweOn()
;;;1949   				{
;;;1950   					GPRS_Power_Control(eGPRSPowerDownNormal, __FILE__, __LINE__);
;;;1951   				}
;;;1952   				
;;;1953   				GprsUser_Switch_State(eGprsUserGetRecordData);
;;;1954   			}
;;;1955   			else
;;;1956   			{
;;;1957   				if(_Is_GPRS_System_PoweOn() == false)
000008  4d35              LDR      r5,|L3.224|
00000a  7a60              LDRB     r0,[r4,#9]            ;1943  ; g_sGPRSUser
00000c  2801              CMP      r0,#1                 ;1943
00000e  d030              BEQ      |L3.114|
000010  2802              CMP      r0,#2                 ;1943
000012  d040              BEQ      |L3.150|
000014  2804              CMP      r0,#4                 ;1943
000016  d157              BNE      |L3.200|
;;;1958   				{
;;;1959   					GPRS_Power_Control(eGPRSPowerRestart, __FILE__, __LINE__);
;;;1960   				}
;;;1961   			}
;;;1962   			break;
;;;1963   
;;;1964   		case eGprsUserGetRecordData:
;;;1965   			//检查是否有数据需要上传,且没有结果和心跳包上传数据包上传 modified by lxl 20180930
;;;1966   			if(Is_ValidData_Need_Upload()&&(g_sXingJiKongGU.bResult_Packet_Flag==false))//
;;;1967   			{
;;;1968   				if(_Is_GPRS_System_PoweOn() == false)
;;;1969   				{
;;;1970   					GPRS_Power_Control(eGPRSPowerRestart, __FILE__, __LINE__);
;;;1971   				}
;;;1972   				if(Get_New_Upload_Record_Data()) //从此函数中获取数据记录
;;;1973   				{
;;;1974   					GprsUser_Switch_State(eGprsUserUploadRecordData);// eGprsUserLoginServer Modified by lxl 20180809
;;;1975   					g_sXingJiKongGU.bReveiceAckFromServer=true;//g_ReveiceAckFromServer=true;//只要一读到数据就置1, 直到该记录包上传完毕Modified by lxl 20180817
;;;1976   				}
;;;1977   			}
;;;1978   
;;;1979   			break;
;;;1980   
;;;1981   		case eGprsUserUploadRecordData: //上传数据 现在修改为http的协议格式进行上传数据，只需要在这里修改 20180808
;;;1982   			if(g_sGPRSUser.bSwitchNewState)
000018  79e0              LDRB     r0,[r4,#7]  ; g_sGPRSUser
;;;1983   			{
;;;1984   				g_sGPRSUser.bSwitchNewState = false;
;;;1985   				g_sGPRSUser.nStartWaitTime = Get_System_Time();
;;;1986   				memset(GPRS_Tx_Buffer,0,sizeof(GPRS_Tx_Buffer));//added by lxl 20180816
;;;1987   				g_nGprs_Tx_Cnt = Get_GPRS_To_Server_Record_Packet(GPRS_Tx_Buffer);//获取数据记录 20180704 lxl
00001a  4d32              LDR      r5,|L3.228|
00001c  b1c8              CBZ      r0,|L3.82|
00001e  2000              MOVS     r0,#0                 ;1984
000020  71e0              STRB     r0,[r4,#7]            ;1984
000022  f7fffffe          BL       Get_System_Time
000026  f8c4000a          STR      r0,[r4,#0xa]          ;1985  ; g_sGPRSUser
00002a  f24051dc          MOV      r1,#0x5dc             ;1986
00002e  482e              LDR      r0,|L3.232|
000030  f7fffffe          BL       __aeabi_memclr
000034  482c              LDR      r0,|L3.232|
000036  f7fffffe          BL       Get_GPRS_To_Server_Record_Packet
00003a  8028              STRH     r0,[r5,#0]
;;;1988   				g_sGPRSUser.nCurrentSendPacketSize = g_nGprs_Tx_Cnt;
00003c  8828              LDRH     r0,[r5,#0]  ; g_nGprs_Tx_Cnt
00003e  f8c4000e          STR      r0,[r4,#0xe]  ; g_sGPRSUser
;;;1989   				//g_ReveiceAckFromServer=true;//发送数据记录包标志位 added by lxl 20180816
;;;1990   				
;;;1991   				TRACE_PRINTF("GPRS_Tx_Buffer:%s\r\n",GPRS_Tx_Buffer);
000042  4929              LDR      r1,|L3.232|
000044  a029              ADR      r0,|L3.236|
000046  f7fffffe          BL       User_Debug_Printf
;;;1992   				TRACE_PRINTF("GPRS-->Get_GPRS_To_Server_Record_Packet! g_nGprs_Tx_Cnt = %d\r\n",g_nGprs_Tx_Cnt);
00004a  8829              LDRH     r1,[r5,#0]  ; g_nGprs_Tx_Cnt
00004c  a02c              ADR      r0,|L3.256|
00004e  f7fffffe          BL       User_Debug_Printf
                  |L3.82|
;;;1993   			}
;;;1994                         
;;;1995   			if(Get_System_Time() > g_sGPRSUser.nStartWaitTime + 30000)
000052  f7fffffe          BL       Get_System_Time
000056  f8d4100a          LDR      r1,[r4,#0xa]  ; g_sGPRSUser
00005a  f2475230          MOV      r2,#0x7530
00005e  4411              ADD      r1,r1,r2
000060  4288              CMP      r0,r1
000062  d932              BLS      |L3.202|
;;;1996   			{
;;;1997   				GprsUser_SendData_Timeout_Handle(__FILE__, __LINE__);
000064  e8bd4070          POP      {r4-r6,lr}
000068  f24071cd          MOV      r1,#0x7cd
00006c  a034              ADR      r0,|L3.320|
00006e  f7ffbffe          B.W      GprsUser_SendData_Timeout_Handle
                  |L3.114|
000072  7820              LDRB     r0,[r4,#0]            ;1946  ; g_sGPRSUser
000074  b120              CBZ      r0,|L3.128|
                  |L3.118|
000076  e8bd4070          POP      {r4-r6,lr}            ;1953
00007a  2002              MOVS     r0,#2                 ;1953
00007c  f7ffbffe          B.W      GprsUser_Switch_State
                  |L3.128|
000080  7828              LDRB     r0,[r5,#0]            ;1957  ; g_bGprsPowerOnState
000082  2800              CMP      r0,#0                 ;1957
000084  d120              BNE      |L3.200|
000086  e8bd4070          POP      {r4-r6,lr}            ;1959
00008a  f24072a7          MOV      r2,#0x7a7             ;1959
00008e  a12c              ADR      r1,|L3.320|
000090  2002              MOVS     r0,#2                 ;1959
000092  f7ffbffe          B.W      GPRS_Power_Control
                  |L3.150|
000096  f7fffffe          BL       Is_ValidData_Need_Upload
00009a  2800              CMP      r0,#0                 ;1966
00009c  d014              BEQ      |L3.200|
00009e  4c2d              LDR      r4,|L3.340|
0000a0  7820              LDRB     r0,[r4,#0]            ;1966  ; g_sXingJiKongGU
0000a2  2800              CMP      r0,#0                 ;1966
0000a4  d110              BNE      |L3.200|
0000a6  7828              LDRB     r0,[r5,#0]            ;1968  ; g_bGprsPowerOnState
0000a8  b928              CBNZ     r0,|L3.182|
0000aa  f24072b2          MOV      r2,#0x7b2             ;1970
0000ae  a124              ADR      r1,|L3.320|
0000b0  2002              MOVS     r0,#2                 ;1970
0000b2  f7fffffe          BL       GPRS_Power_Control
                  |L3.182|
0000b6  f7fffffe          BL       Get_New_Upload_Record_Data
0000ba  2800              CMP      r0,#0                 ;1972
0000bc  d004              BEQ      |L3.200|
0000be  2004              MOVS     r0,#4                 ;1974
0000c0  f7fffffe          BL       GprsUser_Switch_State
0000c4  2001              MOVS     r0,#1                 ;1975
0000c6  7060              STRB     r0,[r4,#1]            ;1975
                  |L3.200|
;;;1998   			}
;;;1999   			else if(g_nGprs_Tx_Cnt == 0)//每上传一次数据累计一次上传记录次数
;;;2000   			{
;;;2001   				if(g_sGPRSUser.bIsReveiceAckFromServer)
;;;2002   				{
;;;2003   					Update_Already_Upload_Record_Counter();//上传记录完成，开始记录已上传记录数
;;;2004   					GprsUser_Switch_State(eGprsUserGetRecordData);
;;;2005   				}
;;;2006   			}
;;;2007   
;;;2008   			break;
;;;2009   	}
;;;2010   }
0000c8  bd70              POP      {r4-r6,pc}
                  |L3.202|
0000ca  8828              LDRH     r0,[r5,#0]            ;1999  ; g_nGprs_Tx_Cnt
0000cc  2800              CMP      r0,#0                 ;1999
0000ce  d1fb              BNE      |L3.200|
0000d0  7ca0              LDRB     r0,[r4,#0x12]         ;2001  ; g_sGPRSUser
0000d2  2800              CMP      r0,#0                 ;2001
0000d4  d0f8              BEQ      |L3.200|
0000d6  f7fffffe          BL       Update_Already_Upload_Record_Counter
0000da  e7cc              B        |L3.118|
;;;2011   
                          ENDP

                  |L3.220|
                          DCD      ||.bss||
                  |L3.224|
                          DCD      g_bGprsPowerOnState
                  |L3.228|
                          DCD      g_nGprs_Tx_Cnt
                  |L3.232|
                          DCD      GPRS_Tx_Buffer
                  |L3.236|
0000ec  47505253          DCB      "GPRS_Tx_Buffer:%s\r\n",0
0000f0  5f54785f
0000f4  42756666
0000f8  65723a25
0000fc  730d0a00
                  |L3.256|
000100  47505253          DCB      "GPRS-->Get_GPRS_To_Server_Record_Packet! g_nGprs_Tx_Cnt"
000104  2d2d3e47
000108  65745f47
00010c  5052535f
000110  546f5f53
000114  65727665
000118  725f5265
00011c  636f7264
000120  5f506163
000124  6b657421
000128  20675f6e
00012c  47707273
000130  5f54785f
000134  436e74  
000137  203d2025          DCB      " = %d\r\n",0
00013b  640d0a00
00013f  00                DCB      0
                  |L3.320|
000140  2e2e5c55          DCB      "..\\User\\gprs_user.c",0
000144  7365725c
000148  67707273
00014c  5f757365
000150  722e6300
                  |L3.340|
                          DCD      g_sXingJiKongGU

                          AREA ||i.GPRS_HeartRate_Packet||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  GPRS_HeartRate_Packet PROC
;;;1833   char GET_HeartURL[80]="GET /keyun/alcohol/deviceService/state  HTTP/1.1\n";//added by lxl 20180816
;;;1834   static unsigned short GPRS_HeartRate_Packet(char *pPackageBuffer)
000000  b510              PUSH     {r4,lr}
;;;1835   {
000002  f5ad7d4c          SUB      sp,sp,#0x330
;;;1836      	char buffer[BUFFER_SIZE];
;;;1837      	char IP_Buffer[100];
;;;1838      	char *pStart=NULL,aTemp[10];
;;;1839      	short len=0;
;;;1840       	pStart=pPackageBuffer;
000006  4604              MOV      r4,r0
;;;1841       	
;;;1842   	memset(buffer,0,sizeof(buffer));
000008  f44f712f          MOV      r1,#0x2bc
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       __aeabi_memclr4
;;;1843   
;;;1844     	if(g_sXingJiKongGU.bDeviceStart)
000012  4822              LDR      r0,|L4.156|
000014  7981              LDRB     r1,[r0,#6]  ; g_sXingJiKongGU
000016  b129              CBZ      r1,|L4.36|
;;;1845     	{
;;;1846     		g_sXingJiKongGU.bDeviceStart=false;
000018  2100              MOVS     r1,#0
00001a  7181              STRB     r1,[r0,#6]
;;;1847           	len=Get_HeartRate_First_Data(buffer);
00001c  4668              MOV      r0,sp
00001e  f7fffffe          BL       Get_HeartRate_First_Data
000022  e002              B        |L4.42|
                  |L4.36|
;;;1848           }
;;;1849           else
;;;1850           {
;;;1851           	len=Get_HeartRate_Data(buffer);
000024  4668              MOV      r0,sp
000026  f7fffffe          BL       Get_HeartRate_Data
                  |L4.42|
00002a  4602              MOV      r2,r0
;;;1852           }
;;;1853       	sprintf(aTemp, "%d", len);
00002c  a11c              ADR      r1,|L4.160|
00002e  a8c8              ADD      r0,sp,#0x320
000030  f7fffffe          BL       __2sprintf
;;;1854      	strcat(pStart,GET_HeartURL);// Home/Openapi/get_alcohol
000034  491b              LDR      r1,|L4.164|
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       strcat
;;;1855      	
;;;1856      	memset(IP_Buffer,0,sizeof(IP_Buffer));
00003c  2164              MOVS     r1,#0x64
00003e  a8af              ADD      r0,sp,#0x2bc
000040  f7fffffe          BL       __aeabi_memclr4
;;;1857      	sprintf(IP_Buffer,"Host: %s:%d\n",g_sServerParam.aRemoteIP,g_sServerParam.nRemotePort);
000044  4a18              LDR      r2,|L4.168|
000046  a119              ADR      r1,|L4.172|
000048  a8af              ADD      r0,sp,#0x2bc
00004a  f8b23039          LDRH     r3,[r2,#0x39]  ; g_sServerParam
00004e  1c52              ADDS     r2,r2,#1
000050  f7fffffe          BL       __2sprintf
;;;1858           //strcat(pStart, "Host: 113.92.92.97:8036\n");
;;;1859           strcat(pStart, IP_Buffer);
000054  a9af              ADD      r1,sp,#0x2bc
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       strcat
;;;1860      
;;;1861           strcat(pStart, "Content-Type: aplication/json \n");
00005c  a117              ADR      r1,|L4.188|
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       strcat
;;;1862           strcat(pStart, "Content-Length: ");
000064  a11d              ADR      r1,|L4.220|
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       strcat
;;;1863           strcat(pStart, aTemp);
00006c  a9c8              ADD      r1,sp,#0x320
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       strcat
;;;1864           strcat(pStart, "\n\n");
000074  a11e              ADR      r1,|L4.240|
000076  4620              MOV      r0,r4
000078  f7fffffe          BL       strcat
;;;1865           //str2的值为post的数据
;;;1866           strcat(pStart, buffer);
00007c  4669              MOV      r1,sp
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       strcat
;;;1867           strcat(pStart, "\r\n\r\n");
000084  a11b              ADR      r1,|L4.244|
000086  4620              MOV      r0,r4
000088  f7fffffe          BL       strcat
;;;1868   
;;;1869      return strlen(pStart);//(pStart-pStart_TEMP);//added by lxl 
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       strlen
;;;1870   }
000092  f50d7d4c          ADD      sp,sp,#0x330
000096  b280              UXTH     r0,r0                 ;1869
000098  bd10              POP      {r4,pc}
;;;1871   /*设备离线*/
                          ENDP

00009a  0000              DCW      0x0000
                  |L4.156|
                          DCD      g_sXingJiKongGU
                  |L4.160|
0000a0  256400            DCB      "%d",0
0000a3  00                DCB      0
                  |L4.164|
                          DCD      ||.data||+0x74
                  |L4.168|
                          DCD      g_sServerParam
                  |L4.172|
0000ac  486f7374          DCB      "Host: %s:%d\n",0
0000b0  3a202573
0000b4  3a25640a
0000b8  00      
0000b9  00                DCB      0
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L4.188|
0000bc  436f6e74          DCB      "Content-Type: aplication/json \n",0
0000c0  656e742d
0000c4  54797065
0000c8  3a206170
0000cc  6c696361
0000d0  74696f6e
0000d4  2f6a736f
0000d8  6e200a00
                  |L4.220|
0000dc  436f6e74          DCB      "Content-Length: ",0
0000e0  656e742d
0000e4  4c656e67
0000e8  74683a20
0000ec  00      
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L4.240|
0000f0  0a0a00            DCB      "\n\n",0
0000f3  00                DCB      0
                  |L4.244|
0000f4  0d0a0d0a          DCB      "\r\n\r\n",0
0000f8  00      
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0

                          AREA ||i.GPRS_HeartRate_Packet_Upload||, CODE, READONLY, ALIGN=2

                  GPRS_HeartRate_Packet_Upload PROC
;;;1883   }
;;;1884   void GPRS_HeartRate_Packet_Upload(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1885   {    
;;;1886   	static unsigned long ul_Current_Time=0;
;;;1887   
;;;1888        	if((g_sXingJiKongGU.bResult_Packet_Flag==false)&&(g_sXingJiKongGU.bReveiceAckFromServer==false)&&g_sXingJiKongGU.bSingal_Strength) //
000004  4c26              LDR      r4,|L5.160|
000006  7820              LDRB     r0,[r4,#0]  ; g_sXingJiKongGU
000008  2800              CMP      r0,#0                 ;1885
00000a  d147              BNE      |L5.156|
00000c  7860              LDRB     r0,[r4,#1]  ; g_sXingJiKongGU
00000e  2800              CMP      r0,#0
000010  d144              BNE      |L5.156|
000012  78a0              LDRB     r0,[r4,#2]  ; g_sXingJiKongGU
000014  2800              CMP      r0,#0
000016  d041              BEQ      |L5.156|
;;;1889        	{ 	
;;;1890        		if((Get_System_Time()>g_sHeartRateParam.byHeartRate*1000+ul_Current_Time)&&(g_sXingJiKongGU.bDeviceStart==false))
000018  f7fffffe          BL       Get_System_Time
00001c  4921              LDR      r1,|L5.164|
00001e  4e22              LDR      r6,|L5.168|
;;;1891        		{
;;;1892        			ul_Current_Time=Get_System_Time();
;;;1893   			memset(GPRS_Tx_Buffer,0,sizeof(GPRS_Tx_Buffer));
;;;1894   			g_nGprs_Tx_Cnt=GPRS_HeartRate_Packet(GPRS_Tx_Buffer);
000020  4d22              LDR      r5,|L5.172|
000022  f8b11001          LDRH     r1,[r1,#1]            ;1890  ; g_sHeartRateParam
;;;1895   			g_sXingJiKongGU.bHeartRate=true;
000026  2701              MOVS     r7,#1
000028  eb010241          ADD      r2,r1,r1,LSL #1       ;1890
00002c  ebc211c1          RSB      r1,r2,r1,LSL #7       ;1890
000030  6832              LDR      r2,[r6,#0]            ;1890  ; ul_Current_Time
000032  f24058dc          MOV      r8,#0x5dc             ;1893
000036  eb0201c1          ADD      r1,r2,r1,LSL #3       ;1890
00003a  4288              CMP      r0,r1                 ;1890
00003c  d915              BLS      |L5.106|
00003e  79a0              LDRB     r0,[r4,#6]            ;1890  ; g_sXingJiKongGU
000040  b998              CBNZ     r0,|L5.106|
000042  f7fffffe          BL       Get_System_Time
000046  6030              STR      r0,[r6,#0]            ;1893  ; ul_Current_Time
000048  4641              MOV      r1,r8                 ;1893
00004a  4819              LDR      r0,|L5.176|
00004c  f7fffffe          BL       __aeabi_memclr
000050  4817              LDR      r0,|L5.176|
000052  f7fffffe          BL       GPRS_HeartRate_Packet
000056  8028              STRH     r0,[r5,#0]            ;1894
000058  7167              STRB     r7,[r4,#5]
;;;1896   
;;;1897   			TRACE_PRINTF("heartrate:%s\r\n",GPRS_Tx_Buffer);
00005a  4915              LDR      r1,|L5.176|
00005c  a015              ADR      r0,|L5.180|
00005e  f7fffffe          BL       User_Debug_Printf
;;;1898       			TRACE_PRINTF("length:%d\r\n",g_nGprs_Tx_Cnt);
000062  8829              LDRH     r1,[r5,#0]  ; g_nGprs_Tx_Cnt
000064  a017              ADR      r0,|L5.196|
000066  f7fffffe          BL       User_Debug_Printf
                  |L5.106|
;;;1899       		}
;;;1900       		
;;;1901       		if(g_sXingJiKongGU.bDeviceStart==true)
00006a  79a0              LDRB     r0,[r4,#6]  ; g_sXingJiKongGU
00006c  2801              CMP      r0,#1
00006e  d115              BNE      |L5.156|
;;;1902       		{
;;;1903       			ul_Current_Time=Get_System_Time();
000070  f7fffffe          BL       Get_System_Time
;;;1904       			
;;;1905       			memset(GPRS_Tx_Buffer,0,sizeof(GPRS_Tx_Buffer));
000074  6030              STR      r0,[r6,#0]  ; ul_Current_Time
000076  4641              MOV      r1,r8
000078  480d              LDR      r0,|L5.176|
00007a  f7fffffe          BL       __aeabi_memclr
;;;1906   			g_nGprs_Tx_Cnt=GPRS_HeartRate_Packet(GPRS_Tx_Buffer);
00007e  480c              LDR      r0,|L5.176|
000080  f7fffffe          BL       GPRS_HeartRate_Packet
000084  8028              STRH     r0,[r5,#0]
;;;1907   			g_sXingJiKongGU.bHeartRate=true;
000086  7167              STRB     r7,[r4,#5]
;;;1908   
;;;1909   			TRACE_PRINTF("heartrate:%s\r\n",GPRS_Tx_Buffer);
000088  4909              LDR      r1,|L5.176|
00008a  a00a              ADR      r0,|L5.180|
00008c  f7fffffe          BL       User_Debug_Printf
;;;1910       			TRACE_PRINTF("length:%d\r\n",g_nGprs_Tx_Cnt);
000090  8829              LDRH     r1,[r5,#0]  ; g_nGprs_Tx_Cnt
000092  e8bd41f0          POP      {r4-r8,lr}
000096  a00b              ADR      r0,|L5.196|
000098  f7ffbffe          B.W      User_Debug_Printf
                  |L5.156|
;;;1911       		}
;;;1912       	}
;;;1913   }
00009c  e8bd81f0          POP      {r4-r8,pc}
;;;1914   
                          ENDP

                  |L5.160|
                          DCD      g_sXingJiKongGU
                  |L5.164|
                          DCD      g_sHeartRateParam
                  |L5.168|
                          DCD      ||.data||
                  |L5.172|
                          DCD      g_nGprs_Tx_Cnt
                  |L5.176|
                          DCD      GPRS_Tx_Buffer
                  |L5.180|
0000b4  68656172          DCB      "heartrate:%s\r\n",0
0000b8  74726174
0000bc  653a2573
0000c0  0d0a00  
0000c3  00                DCB      0
                  |L5.196|
0000c4  6c656e67          DCB      "length:%d\r\n",0
0000c8  74683a25
0000cc  640d0a00

                          AREA ||i.Get_GPRS_SingalQuality||, CODE, READONLY, ALIGN=2

                  Get_GPRS_SingalQuality PROC
;;;63     
;;;64     signed char Get_GPRS_SingalQuality(void)
000000  4801              LDR      r0,|L6.8|
;;;65     {
;;;66     	return g_nGprsSingalQuality;
000002  f9900000          LDRSB    r0,[r0,#0]  ; g_nGprsSingalQuality
;;;67     }
000006  4770              BX       lr
;;;68     
                          ENDP

                  |L6.8|
                          DCD      g_nGprsSingalQuality

                          AREA ||i.Get_GPRS_To_Server_Record_Packet||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  Get_GPRS_To_Server_Record_Packet PROC
;;;1631   
;;;1632   static unsigned short  Get_GPRS_To_Server_Record_Packet(char *pPackageBuffer)
000000  b510              PUSH     {r4,lr}
;;;1633   {
000002  f5ad7d4c          SUB      sp,sp,#0x330
;;;1634      	char buffer[BUFFER_SIZE];
;;;1635      	char IP_Buffer[100];
;;;1636      	char *pStart=NULL,aTemp[10];
;;;1637      	short len=0;
;;;1638       	pStart=pPackageBuffer;
000006  4604              MOV      r4,r0
;;;1639       	
;;;1640   	memset(buffer,0,sizeof(buffer));
000008  f44f712f          MOV      r1,#0x2bc
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       __aeabi_memclr4
;;;1641     	
;;;1642           len=Get_Request_DataPacket(buffer);
000012  4668              MOV      r0,sp
000014  f7fffffe          BL       Get_Request_DataPacket
000018  b202              SXTH     r2,r0
;;;1643       	sprintf(aTemp, "%d", len);
00001a  a11b              ADR      r1,|L7.136|
00001c  a8c8              ADD      r0,sp,#0x320
00001e  f7fffffe          BL       __2sprintf
;;;1644      	strcat(pStart,GET_URL);// Home/Openapi/get_alcohol
000022  491a              LDR      r1,|L7.140|
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       strcat
;;;1645      	
;;;1646      	memset(IP_Buffer,0,sizeof(IP_Buffer));
00002a  2164              MOVS     r1,#0x64
00002c  a8af              ADD      r0,sp,#0x2bc
00002e  f7fffffe          BL       __aeabi_memclr4
;;;1647      	sprintf(IP_Buffer,"Host: %s:%d\n",g_sServerParam.aRemoteIP,g_sServerParam.nRemotePort);
000032  4a17              LDR      r2,|L7.144|
000034  a117              ADR      r1,|L7.148|
000036  a8af              ADD      r0,sp,#0x2bc
000038  f8b23039          LDRH     r3,[r2,#0x39]  ; g_sServerParam
00003c  1c52              ADDS     r2,r2,#1
00003e  f7fffffe          BL       __2sprintf
;;;1648           //strcat(pStart, "Host: 113.92.92.97:8036\n");
;;;1649           strcat(pStart, IP_Buffer);
000042  a9af              ADD      r1,sp,#0x2bc
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       strcat
;;;1650      
;;;1651           strcat(pStart, "Content-Type: aplication/json \n");
00004a  a116              ADR      r1,|L7.164|
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       strcat
;;;1652           strcat(pStart, "Content-Length: ");
000052  a11c              ADR      r1,|L7.196|
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       strcat
;;;1653           strcat(pStart, aTemp);
00005a  a9c8              ADD      r1,sp,#0x320
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       strcat
;;;1654           strcat(pStart, "\n\n");
000062  a11d              ADR      r1,|L7.216|
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       strcat
;;;1655           //str2的值为post的数据
;;;1656           strcat(pStart, buffer);
00006a  4669              MOV      r1,sp
00006c  4620              MOV      r0,r4
00006e  f7fffffe          BL       strcat
;;;1657           strcat(pStart, "\r\n\r\n");
000072  a11a              ADR      r1,|L7.220|
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       strcat
;;;1658   
;;;1659      return strlen(pStart);//(pStart-pStart_TEMP);//added by lxl 
00007a  4620              MOV      r0,r4
00007c  f7fffffe          BL       strlen
;;;1660   }
000080  f50d7d4c          ADD      sp,sp,#0x330
000084  b280              UXTH     r0,r0                 ;1659
000086  bd10              POP      {r4,pc}
;;;1661   static short Get_HeartRate_Data(char *pPackageBuffer)
                          ENDP

                  |L7.136|
000088  256400            DCB      "%d",0
00008b  00                DCB      0
                  |L7.140|
                          DCD      ||.data||+0x24
                  |L7.144|
                          DCD      g_sServerParam
                  |L7.148|
000094  486f7374          DCB      "Host: %s:%d\n",0
000098  3a202573
00009c  3a25640a
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L7.164|
0000a4  436f6e74          DCB      "Content-Type: aplication/json \n",0
0000a8  656e742d
0000ac  54797065
0000b0  3a206170
0000b4  6c696361
0000b8  74696f6e
0000bc  2f6a736f
0000c0  6e200a00
                  |L7.196|
0000c4  436f6e74          DCB      "Content-Length: ",0
0000c8  656e742d
0000cc  4c656e67
0000d0  74683a20
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L7.216|
0000d8  0a0a00            DCB      "\n\n",0
0000db  00                DCB      0
                  |L7.220|
0000dc  0d0a0d0a          DCB      "\r\n\r\n",0
0000e0  00      
0000e1  00                DCB      0
0000e2  00                DCB      0
0000e3  00                DCB      0

                          AREA ||i.Get_GPRS_To_Server_Result_Packet||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  Get_GPRS_To_Server_Result_Packet PROC
;;;1602   
;;;1603   unsigned short  Get_GPRS_To_Server_Result_Packet(char *pPackageBuffer)//added by lxl 20180814
000000  b510              PUSH     {r4,lr}
;;;1604   {
000002  f5ad7d4c          SUB      sp,sp,#0x330
000006  4604              MOV      r4,r0
;;;1605      	char buffer[BUFFER_SIZE],aTemp[10];
;;;1606      	char IP_Buffer[100];
;;;1607      	char *pStart=NULL;
;;;1608      	short len=0;
;;;1609      	
;;;1610      	memset(buffer,0,sizeof(buffer));
000008  f44f712f          MOV      r1,#0x2bc
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       __aeabi_memclr4
;;;1611       	pStart=pPackageBuffer;
;;;1612        	len= Result_DataPacket(buffer);//added by lxl 20180814
000012  4668              MOV      r0,sp
000014  f7fffffe          BL       Result_DataPacket
000018  b202              SXTH     r2,r0
;;;1613        	sprintf(aTemp, "%d", len);
00001a  a11b              ADR      r1,|L8.136|
00001c  a8c8              ADD      r0,sp,#0x320
00001e  f7fffffe          BL       __2sprintf
;;;1614   
;;;1615   	strcat(pStart,GET_URL); //keyun/alcohol/deviceService/test
000022  491a              LDR      r1,|L8.140|
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       strcat
;;;1616           //strcat(pStart, "Host: 113.92.92.97:8036\n");
;;;1617           memset(IP_Buffer,0,sizeof(IP_Buffer));
00002a  2164              MOVS     r1,#0x64
00002c  a8af              ADD      r0,sp,#0x2bc
00002e  f7fffffe          BL       __aeabi_memclr4
;;;1618      	sprintf(IP_Buffer,"Host: %s:%d\n",g_sServerParam.aRemoteIP,g_sServerParam.nRemotePort);
000032  4a17              LDR      r2,|L8.144|
000034  a117              ADR      r1,|L8.148|
000036  a8af              ADD      r0,sp,#0x2bc
000038  f8b23039          LDRH     r3,[r2,#0x39]  ; g_sServerParam
00003c  1c52              ADDS     r2,r2,#1
00003e  f7fffffe          BL       __2sprintf
;;;1619           strcat(pStart, IP_Buffer);
000042  a9af              ADD      r1,sp,#0x2bc
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       strcat
;;;1620           
;;;1621           strcat(pStart, "Content-Type: aplication/json \n");
00004a  a116              ADR      r1,|L8.164|
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       strcat
;;;1622           strcat(pStart, "Content-Length: ");
000052  a11c              ADR      r1,|L8.196|
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       strcat
;;;1623           strcat(pStart, aTemp);
00005a  a9c8              ADD      r1,sp,#0x320
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       strcat
;;;1624           strcat(pStart, "\n\n");
000062  a11d              ADR      r1,|L8.216|
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       strcat
;;;1625           //str2的值为post的数据
;;;1626           strcat(pStart, buffer);
00006a  4669              MOV      r1,sp
00006c  4620              MOV      r0,r4
00006e  f7fffffe          BL       strcat
;;;1627           strcat(pStart, "\r\n\r\n");
000072  a11a              ADR      r1,|L8.220|
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       strcat
;;;1628      
;;;1629      return strlen(pStart);//added by lxl 
00007a  4620              MOV      r0,r4
00007c  f7fffffe          BL       strlen
;;;1630   }
000080  f50d7d4c          ADD      sp,sp,#0x330
000084  b280              UXTH     r0,r0                 ;1629
000086  bd10              POP      {r4,pc}
;;;1631   
                          ENDP

                  |L8.136|
000088  256400            DCB      "%d",0
00008b  00                DCB      0
                  |L8.140|
                          DCD      ||.data||+0x24
                  |L8.144|
                          DCD      g_sServerParam
                  |L8.148|
000094  486f7374          DCB      "Host: %s:%d\n",0
000098  3a202573
00009c  3a25640a
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L8.164|
0000a4  436f6e74          DCB      "Content-Type: aplication/json \n",0
0000a8  656e742d
0000ac  54797065
0000b0  3a206170
0000b4  6c696361
0000b8  74696f6e
0000bc  2f6a736f
0000c0  6e200a00
                  |L8.196|
0000c4  436f6e74          DCB      "Content-Length: ",0
0000c8  656e742d
0000cc  4c656e67
0000d0  74683a20
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L8.216|
0000d8  0a0a00            DCB      "\n\n",0
0000db  00                DCB      0
                  |L8.220|
0000dc  0d0a0d0a          DCB      "\r\n\r\n",0
0000e0  00      
0000e1  00                DCB      0
0000e2  00                DCB      0
0000e3  00                DCB      0

                          AREA ||i.Get_Hardware_IMEI||, CODE, READONLY, ALIGN=2

                  Get_Hardware_IMEI PROC
;;;85     
;;;86     char * Get_Hardware_IMEI(void)
000000  4800              LDR      r0,|L9.4|
;;;87     {
;;;88     	return g_sSystemParam.aIMEI;
;;;89     }
000002  4770              BX       lr
;;;90     
                          ENDP

                  |L9.4|
                          DCD      g_sSystemParam+0x19

                          AREA ||i.Get_HeartRate_Data||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  Get_HeartRate_Data PROC
;;;1660   }
;;;1661   static short Get_HeartRate_Data(char *pPackageBuffer)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1662   {
;;;1663   	char *pStr = pPackageBuffer;
;;;1664   	float fLongitude=0,fLatitude=0;
;;;1665           float fCurrentLongitude,fCurrentLatitude;
;;;1666           char s_aAdmin[] = {0xE7,0xAE,0xA1,0xE7,0x90,0x86,0xE5,0x91,0x98,0x00};   /*管理员*/
000004  a26c              ADR      r2,|L10.440|
000006  4604              MOV      r4,r0                 ;1662
000008  b08a              SUB      sp,sp,#0x28           ;1662
00000a  ca07              LDM      r2,{r0-r2}
00000c  ab04              ADD      r3,sp,#0x10
00000e  e8830007          STM      r3,{r0-r2}
;;;1667           char s_department[5]={0x00};
000012  2000              MOVS     r0,#0
000014  9007              STR      r0,[sp,#0x1c]
;;;1668   	 
;;;1669   	fCurrentLongitude=g_bGPS_Location_Valid == 1  ? g_fLongitude : 0;
000016  9008              STR      r0,[sp,#0x20]
000018  486a              LDR      r0,|L10.452|
00001a  7800              LDRB     r0,[r0,#0]  ; g_bGPS_Location_Valid
00001c  2801              CMP      r0,#1
00001e  d005              BEQ      |L10.44|
000020  f04f0600          MOV      r6,#0
                  |L10.36|
;;;1670   	fCurrentLatitude=g_bGPS_Location_Valid == 1  ? g_fLatitude: 0;
000024  d105              BNE      |L10.50|
000026  4868              LDR      r0,|L10.456|
000028  6805              LDR      r5,[r0,#0]  ; g_fLatitude
00002a  e004              B        |L10.54|
                  |L10.44|
00002c  4867              LDR      r0,|L10.460|
00002e  6806              LDR      r6,[r0,#0]            ;1669  ; g_fLongitude
000030  e7f8              B        |L10.36|
                  |L10.50|
000032  f04f0500          MOV      r5,#0
                  |L10.54|
;;;1671   	
;;;1672   	*pStr++='{';
000036  f04f017b          MOV      r1,#0x7b
00003a  7021              STRB     r1,[r4,#0]
00003c  f1040701          ADD      r7,r4,#1
;;;1673   	sprintf(pStr,"\"heartrate\":%c",'{');
000040  460a              MOV      r2,r1
000042  a163              ADR      r1,|L10.464|
000044  4638              MOV      r0,r7
000046  f7fffffe          BL       __2sprintf
;;;1674   	pStr+=strlen(pStr);
00004a  4638              MOV      r0,r7
00004c  f7fffffe          BL       strlen
000050  4407              ADD      r7,r7,r0
;;;1675   
;;;1676   	/*记录下有效数据包的起始长度*/
;;;1677   	//pStart = pStr;
;;;1678   	 /*1.用户名*/
;;;1679   	sprintf(pStr, "\"user\":%s,", username);
000052  4a63              LDR      r2,|L10.480|
000054  a163              ADR      r1,|L10.484|
000056  4638              MOV      r0,r7
000058  f7fffffe          BL       __2sprintf
;;;1680   	pStr+=strlen(pStr);
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       strlen
;;;1681   
;;;1682   	/*2.登录密码*/
;;;1683   	sprintf(pStr, "\"key\":%s,", KeyPassword);
000062  4a5f              LDR      r2,|L10.480|
000064  4407              ADD      r7,r7,r0              ;1680
000066  3a0c              SUBS     r2,r2,#0xc
000068  a161              ADR      r1,|L10.496|
00006a  4638              MOV      r0,r7
00006c  f7fffffe          BL       __2sprintf
;;;1684   	pStr+=strlen(pStr);
000070  4638              MOV      r0,r7
000072  f7fffffe          BL       strlen
000076  4407              ADD      r7,r7,r0
;;;1685   
;;;1686          	/*3.上线时间*/ 
;;;1687   	sprintf (pStr, "\"onlinedate\":\"20%02d-%02d-%02d %02d:%02d:%02d\",",
000078  4860              LDR      r0,|L10.508|
00007a  7881              LDRB     r1,[r0,#2]  ; g_sDateTime
00007c  f890c005          LDRB     r12,[r0,#5]  ; g_sDateTime
000080  7903              LDRB     r3,[r0,#4]  ; g_sDateTime
000082  78c2              LDRB     r2,[r0,#3]  ; g_sDateTime
000084  e88d100e          STM      sp,{r1-r3,r12}
000088  7843              LDRB     r3,[r0,#1]  ; g_sDateTime
00008a  7802              LDRB     r2,[r0,#0]  ; g_sDateTime
00008c  a15c              ADR      r1,|L10.512|
00008e  4638              MOV      r0,r7
000090  f7fffffe          BL       __2sprintf
;;;1688   			 g_sDateTime.wYear, g_sDateTime.wMonth,
;;;1689   			 g_sDateTime.wDay, g_sDateTime.wHour,
;;;1690   			 g_sDateTime.wMinute, g_sDateTime.wSecond);
;;;1691   	pStr+=strlen(pStr);
000094  4638              MOV      r0,r7
000096  f7fffffe          BL       strlen
00009a  4407              ADD      r7,r7,r0
;;;1692   
;;;1693   	
;;;1694   	if(fCurrentLongitude!= 0 && fCurrentLatitude != 0)
00009c  f0164fff          TST      r6,#0x7f800000
0000a0  d027              BEQ      |L10.242|
0000a2  f0154fff          TST      r5,#0x7f800000
0000a6  d024              BEQ      |L10.242|
;;;1695   	{
;;;1696   	/*4.经度数据*/
;;;1697   	fLongitude=fCurrentLongitude>= 0 ? fCurrentLongitude : -(fCurrentLongitude);
0000a8  f8df8184          LDR      r8,|L10.560|
0000ac  4546              CMP      r6,r8
0000ae  d301              BCC      |L10.180|
0000b0  f0864600          EOR      r6,r6,#0x80000000
                  |L10.180|
0000b4  4630              MOV      r0,r6
;;;1698   	sprintf(pStr, "\"longitude\":%f,",fLongitude);
0000b6  f7fffffe          BL       __aeabi_f2d
0000ba  4602              MOV      r2,r0
0000bc  460b              MOV      r3,r1
0000be  a15d              ADR      r1,|L10.564|
0000c0  4638              MOV      r0,r7
0000c2  f7fffffe          BL       __2sprintf
;;;1699   	pStr+=strlen(pStr);
0000c6  4638              MOV      r0,r7
0000c8  f7fffffe          BL       strlen
0000cc  19c6              ADDS     r6,r0,r7
;;;1700   	
;;;1701   	/*5.纬度数据*/
;;;1702   	fLatitude=fCurrentLatitude >= 0 ? fCurrentLatitude : -(fCurrentLatitude);
0000ce  4545              CMP      r5,r8
0000d0  d301              BCC      |L10.214|
0000d2  f0854500          EOR      r5,r5,#0x80000000
                  |L10.214|
0000d6  4628              MOV      r0,r5
;;;1703   	sprintf(pStr, "\"latitude\":%f,",fLatitude);
0000d8  f7fffffe          BL       __aeabi_f2d
0000dc  4602              MOV      r2,r0
0000de  460b              MOV      r3,r1
0000e0  a158              ADR      r1,|L10.580|
0000e2  4630              MOV      r0,r6
0000e4  f7fffffe          BL       __2sprintf
;;;1704   	pStr+=strlen(pStr);
0000e8  4630              MOV      r0,r6
0000ea  f7fffffe          BL       strlen
0000ee  1985              ADDS     r5,r0,r6
0000f0  e011              B        |L10.278|
                  |L10.242|
;;;1705   	}
;;;1706   	else
;;;1707   	{
;;;1708   		/*4.经度数据*/
;;;1709   		sprintf(pStr, "\"longitude\":%s,","null");
0000f2  a258              ADR      r2,|L10.596|
0000f4  a159              ADR      r1,|L10.604|
0000f6  4638              MOV      r0,r7
0000f8  f7fffffe          BL       __2sprintf
;;;1710   		pStr+=strlen(pStr);
0000fc  4638              MOV      r0,r7
0000fe  f7fffffe          BL       strlen
000102  19c5              ADDS     r5,r0,r7
;;;1711   	
;;;1712   		/*5.纬度数据*/
;;;1713   		sprintf(pStr, "\"latitude\":%s,","null");
000104  a253              ADR      r2,|L10.596|
000106  a159              ADR      r1,|L10.620|
000108  4628              MOV      r0,r5
00010a  f7fffffe          BL       __2sprintf
;;;1714   		pStr+=strlen(pStr);
00010e  4628              MOV      r0,r5
000110  f7fffffe          BL       strlen
000114  4405              ADD      r5,r5,r0
                  |L10.278|
;;;1715   	}
;;;1716   
;;;1717   	/*6.执勤民警姓名*/
;;;1718   	if(pApp->bLoginAsAdministrator)
000116  4e59              LDR      r6,|L10.636|
000118  6830              LDR      r0,[r6,#0]  ; pApp
00011a  7dc0              LDRB     r0,[r0,#0x17]
00011c  b118              CBZ      r0,|L10.294|
;;;1719   		sprintf(pStr, "\"policename\":\"%s\",",(char *)s_aAdmin); //管理员登录
00011e  aa04              ADD      r2,sp,#0x10
000120  a157              ADR      r1,|L10.640|
000122  4628              MOV      r0,r5
000124  e002              B        |L10.300|
                  |L10.294|
;;;1720   	else
;;;1721   		sprintf(pStr, "\"policename\":\"%s\",",(char *)(g_sCurrPoliceUserInfor.aPoliceName));
000126  4a5b              LDR      r2,|L10.660|
000128  a155              ADR      r1,|L10.640|
00012a  4628              MOV      r0,r5
                  |L10.300|
00012c  f7fffffe          BL       __2sprintf
;;;1722   	pStr+=strlen(pStr);
000130  4628              MOV      r0,r5
000132  f7fffffe          BL       strlen
000136  4405              ADD      r5,r5,r0
;;;1723   	
;;;1724   
;;;1725   	/*7.执法人员所属部门*/
;;;1726   	if(pApp->bLoginAsAdministrator)
000138  6830              LDR      r0,[r6,#0]  ; pApp
00013a  7dc0              LDRB     r0,[r0,#0x17]
00013c  b118              CBZ      r0,|L10.326|
;;;1727   		sprintf(pStr, "\"department\":\"%s\",",s_department); //管理员登录
00013e  aa07              ADD      r2,sp,#0x1c
000140  a155              ADR      r1,|L10.664|
000142  4628              MOV      r0,r5
000144  e003              B        |L10.334|
                  |L10.326|
;;;1728   	else
;;;1729   		sprintf(pStr, "\"department\":\"%s\",",(char *)(g_sCurrPoliceUserInfor.aDepartment)); 
000146  4a53              LDR      r2,|L10.660|
000148  a153              ADR      r1,|L10.664|
00014a  3217              ADDS     r2,r2,#0x17
00014c  4628              MOV      r0,r5
                  |L10.334|
00014e  f7fffffe          BL       __2sprintf
;;;1730   	pStr+=strlen(pStr);
000152  4628              MOV      r0,r5
000154  f7fffffe          BL       strlen
000158  4405              ADD      r5,r5,r0
;;;1731   
;;;1732   
;;;1733   	/*8.在线状态*/
;;;1734   	if(g_sXingJiKongGU.bDeviceState)
00015a  4854              LDR      r0,|L10.684|
00015c  7900              LDRB     r0,[r0,#4]  ; g_sXingJiKongGU
00015e  b108              CBZ      r0,|L10.356|
;;;1735   		sprintf(pStr, "\"state\":%d,",1); //管理员登录
000160  2201              MOVS     r2,#1
000162  e000              B        |L10.358|
                  |L10.356|
;;;1736   	else
;;;1737   		sprintf(pStr, "\"state\":%d,",0); 
000164  2200              MOVS     r2,#0
                  |L10.358|
000166  a152              ADR      r1,|L10.688|
000168  4628              MOV      r0,r5
00016a  f7fffffe          BL       __2sprintf
;;;1738   	pStr+=strlen(pStr);
00016e  4628              MOV      r0,r5
000170  f7fffffe          BL       strlen
;;;1739   	
;;;1740   	/*9.设备编号字符串*/
;;;1741   	sprintf(pStr, "\"device\":\"%s%06d\",", g_sDeviceIDConfig.aNamePrefix, g_sDeviceIDConfig.nDeviceID);
000174  4a51              LDR      r2,|L10.700|
000176  4405              ADD      r5,r5,r0              ;1738
000178  a151              ADR      r1,|L10.704|
00017a  f8d23006          LDR      r3,[r2,#6]  ; g_sDeviceIDConfig
00017e  4628              MOV      r0,r5
000180  1c52              ADDS     r2,r2,#1
000182  f7fffffe          BL       __2sprintf
;;;1742   	pStr+=strlen(pStr);
000186  4628              MOV      r0,r5
000188  f7fffffe          BL       strlen
00018c  4405              ADD      r5,r5,r0
;;;1743   
;;;1744   	/*10.心跳时间(S)*/
;;;1745   	sprintf(pStr, "\"heartbeat\":%d,", g_sHeartRateParam.byHeartRate);
00018e  4851              LDR      r0,|L10.724|
000190  a151              ADR      r1,|L10.728|
000192  f8b02001          LDRH     r2,[r0,#1]  ; g_sHeartRateParam
000196  4628              MOV      r0,r5
000198  f7fffffe          BL       __2sprintf
;;;1746   	pStr+=strlen(pStr);
00019c  4628              MOV      r0,r5
00019e  f7fffffe          BL       strlen
0001a2  4428              ADD      r0,r0,r5
;;;1747   	
;;;1748   	//结束符
;;;1749   	*pStr++='}';
0001a4  217d              MOVS     r1,#0x7d
0001a6  f8001b01          STRB     r1,[r0],#1
;;;1750   	
;;;1751   	*pStr++='}';
0001aa  f8001b01          STRB     r1,[r0],#1
;;;1752   
;;;1753   	return (pStr-pPackageBuffer);
0001ae  1b00              SUBS     r0,r0,r4
;;;1754   }
0001b0  b00a              ADD      sp,sp,#0x28
0001b2  b200              SXTH     r0,r0                 ;1753
0001b4  e8bd81f0          POP      {r4-r8,pc}
;;;1755   static short Get_HeartRate_First_Data(char *pPackageBuffer)
                          ENDP

                  |L10.440|
0001b8  e7aea1e7          DCB      231,174,161,231,144,134,229,145,152,0
0001bc  9086e591
0001c0  9800    
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L10.452|
                          DCD      g_bGPS_Location_Valid
                  |L10.456|
                          DCD      g_fLatitude
                  |L10.460|
                          DCD      g_fLongitude
                  |L10.464|
0001d0  22686561          DCB      """heartrate"":%c",0
0001d4  72747261
0001d8  7465223a
0001dc  256300  
0001df  00                DCB      0
                  |L10.480|
                          DCD      ||.data||+0x10
                  |L10.484|
0001e4  22757365          DCB      """user"":%s,",0
0001e8  72223a25
0001ec  732c00  
0001ef  00                DCB      0
                  |L10.496|
0001f0  226b6579          DCB      """key"":%s,",0
0001f4  223a2573
0001f8  2c00    
0001fa  00                DCB      0
0001fb  00                DCB      0
                  |L10.508|
                          DCD      g_sDateTime
                  |L10.512|
000200  226f6e6c          DCB      """onlinedate"":""20%02d-%02d-%02d %02d:%02d:%02d"",",0
000204  696e6564
000208  61746522
00020c  3a223230
000210  25303264
000214  2d253032
000218  642d2530
00021c  32642025
000220  3032643a
000224  25303264
000228  3a253032
00022c  64222c00
                  |L10.560|
                          DCD      0x80800000
                  |L10.564|
000234  226c6f6e          DCB      """longitude"":%f,",0
000238  67697475
00023c  6465223a
000240  25662c00
                  |L10.580|
000244  226c6174          DCB      """latitude"":%f,",0
000248  69747564
00024c  65223a25
000250  662c00  
000253  00                DCB      0
                  |L10.596|
000254  6e756c6c          DCB      "null",0
000258  00      
000259  00                DCB      0
00025a  00                DCB      0
00025b  00                DCB      0
                  |L10.604|
00025c  226c6f6e          DCB      """longitude"":%s,",0
000260  67697475
000264  6465223a
000268  25732c00
                  |L10.620|
00026c  226c6174          DCB      """latitude"":%s,",0
000270  69747564
000274  65223a25
000278  732c00  
00027b  00                DCB      0
                  |L10.636|
                          DCD      pApp
                  |L10.640|
000280  22706f6c          DCB      """policename"":""%s"",",0
000284  6963656e
000288  616d6522
00028c  3a222573
000290  222c00  
000293  00                DCB      0
                  |L10.660|
                          DCD      g_sCurrPoliceUserInfor+0x12
                  |L10.664|
000298  22646570          DCB      """department"":""%s"",",0
00029c  6172746d
0002a0  656e7422
0002a4  3a222573
0002a8  222c00  
0002ab  00                DCB      0
                  |L10.684|
                          DCD      g_sXingJiKongGU
                  |L10.688|
0002b0  22737461          DCB      """state"":%d,",0
0002b4  7465223a
0002b8  25642c00
                  |L10.700|
                          DCD      g_sDeviceIDConfig
                  |L10.704|
0002c0  22646576          DCB      """device"":""%s%06d"",",0
0002c4  69636522
0002c8  3a222573
0002cc  25303664
0002d0  222c00  
0002d3  00                DCB      0
                  |L10.724|
                          DCD      g_sHeartRateParam
                  |L10.728|
0002d8  22686561          DCB      """heartbeat"":%d,",0
0002dc  72746265
0002e0  6174223a
0002e4  25642c00

                          AREA ||i.Get_HeartRate_First_Data||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  Get_HeartRate_First_Data PROC
;;;1754   }
;;;1755   static short Get_HeartRate_First_Data(char *pPackageBuffer)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;1756   {
000004  4604              MOV      r4,r0
;;;1757   	char *pStr = pPackageBuffer;
;;;1758   	float fLongitude=0,fLatitude=0;
;;;1759           float fCurrentLongitude,fCurrentLatitude;
;;;1760   	 
;;;1761   	fCurrentLongitude=g_bGPS_Location_Valid == 1  ? g_fLongitude : 0;
000006  4857              LDR      r0,|L11.356|
000008  7800              LDRB     r0,[r0,#0]  ; g_bGPS_Location_Valid
00000a  2801              CMP      r0,#1
00000c  d005              BEQ      |L11.26|
00000e  f04f0600          MOV      r6,#0
                  |L11.18|
;;;1762   	fCurrentLatitude=g_bGPS_Location_Valid == 1  ? g_fLatitude: 0;
000012  d105              BNE      |L11.32|
000014  4854              LDR      r0,|L11.360|
000016  6805              LDR      r5,[r0,#0]  ; g_fLatitude
000018  e004              B        |L11.36|
                  |L11.26|
00001a  4854              LDR      r0,|L11.364|
00001c  6806              LDR      r6,[r0,#0]            ;1761  ; g_fLongitude
00001e  e7f8              B        |L11.18|
                  |L11.32|
000020  f04f0500          MOV      r5,#0
                  |L11.36|
;;;1763   	
;;;1764   	*pStr++='{';
000024  f04f017b          MOV      r1,#0x7b
000028  7021              STRB     r1,[r4,#0]
00002a  f1040701          ADD      r7,r4,#1
;;;1765   	sprintf(pStr,"\"heartrate\":%c",'{');
00002e  460a              MOV      r2,r1
000030  a14f              ADR      r1,|L11.368|
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       __2sprintf
;;;1766   	pStr+=strlen(pStr);
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       strlen
00003e  4407              ADD      r7,r7,r0
;;;1767   
;;;1768   	/*记录下有效数据包的起始长度*/
;;;1769   	//pStart = pStr;
;;;1770   	 /*1.用户名*/
;;;1771   	sprintf(pStr, "\"user\":%s,", username);
000040  4a4f              LDR      r2,|L11.384|
000042  a150              ADR      r1,|L11.388|
000044  4638              MOV      r0,r7
000046  f7fffffe          BL       __2sprintf
;;;1772   	pStr+=strlen(pStr);
00004a  4638              MOV      r0,r7
00004c  f7fffffe          BL       strlen
;;;1773   
;;;1774   	/*2.登录密码*/
;;;1775   	sprintf(pStr, "\"key\":%s,", KeyPassword);
000050  4a4b              LDR      r2,|L11.384|
000052  4407              ADD      r7,r7,r0              ;1772
000054  3a0c              SUBS     r2,r2,#0xc
000056  a14e              ADR      r1,|L11.400|
000058  4638              MOV      r0,r7
00005a  f7fffffe          BL       __2sprintf
;;;1776   	pStr+=strlen(pStr);
00005e  4638              MOV      r0,r7
000060  f7fffffe          BL       strlen
000064  4407              ADD      r7,r7,r0
;;;1777   
;;;1778          	/*3.上线时间*/ 
;;;1779   	sprintf (pStr, "\"onlinedate\":\"20%02d-%02d-%02d %02d:%02d:%02d\",",
000066  484d              LDR      r0,|L11.412|
000068  7881              LDRB     r1,[r0,#2]  ; g_sDateTime
00006a  f890c005          LDRB     r12,[r0,#5]  ; g_sDateTime
00006e  7903              LDRB     r3,[r0,#4]  ; g_sDateTime
000070  78c2              LDRB     r2,[r0,#3]  ; g_sDateTime
000072  e88d100e          STM      sp,{r1-r3,r12}
000076  7843              LDRB     r3,[r0,#1]  ; g_sDateTime
000078  7802              LDRB     r2,[r0,#0]  ; g_sDateTime
00007a  a149              ADR      r1,|L11.416|
00007c  4638              MOV      r0,r7
00007e  f7fffffe          BL       __2sprintf
;;;1780   			 g_sDateTime.wYear, g_sDateTime.wMonth,
;;;1781   			 g_sDateTime.wDay, g_sDateTime.wHour,
;;;1782   			 g_sDateTime.wMinute, g_sDateTime.wSecond);
;;;1783   	pStr+=strlen(pStr);
000082  4638              MOV      r0,r7
000084  f7fffffe          BL       strlen
000088  4407              ADD      r7,r7,r0
;;;1784   
;;;1785   	
;;;1786   	if(fCurrentLongitude!= 0 && fCurrentLatitude != 0)
00008a  f0164fff          TST      r6,#0x7f800000
00008e  d027              BEQ      |L11.224|
000090  f0154fff          TST      r5,#0x7f800000
000094  d024              BEQ      |L11.224|
;;;1787   	{
;;;1788   		/*4.经度数据*/
;;;1789   		fLongitude=fCurrentLongitude>= 0 ? fCurrentLongitude : -(fCurrentLongitude);
000096  f8df8138          LDR      r8,|L11.464|
00009a  4546              CMP      r6,r8
00009c  d301              BCC      |L11.162|
00009e  f0864600          EOR      r6,r6,#0x80000000
                  |L11.162|
0000a2  4630              MOV      r0,r6
;;;1790   		sprintf(pStr, "\"longitude\":%f,",fLongitude);
0000a4  f7fffffe          BL       __aeabi_f2d
0000a8  4602              MOV      r2,r0
0000aa  460b              MOV      r3,r1
0000ac  a149              ADR      r1,|L11.468|
0000ae  4638              MOV      r0,r7
0000b0  f7fffffe          BL       __2sprintf
;;;1791   		pStr+=strlen(pStr);
0000b4  4638              MOV      r0,r7
0000b6  f7fffffe          BL       strlen
0000ba  19c6              ADDS     r6,r0,r7
;;;1792   	
;;;1793   		/*5.纬度数据*/
;;;1794   		fLatitude=fCurrentLatitude >= 0 ? fCurrentLatitude : -(fCurrentLatitude);
0000bc  4545              CMP      r5,r8
0000be  d301              BCC      |L11.196|
0000c0  f0854500          EOR      r5,r5,#0x80000000
                  |L11.196|
0000c4  4628              MOV      r0,r5
;;;1795   		sprintf(pStr, "\"latitude\":%f,",fLatitude);
0000c6  f7fffffe          BL       __aeabi_f2d
0000ca  4602              MOV      r2,r0
0000cc  460b              MOV      r3,r1
0000ce  a145              ADR      r1,|L11.484|
0000d0  4630              MOV      r0,r6
0000d2  f7fffffe          BL       __2sprintf
;;;1796   		pStr+=strlen(pStr);
0000d6  4630              MOV      r0,r6
0000d8  f7fffffe          BL       strlen
0000dc  1985              ADDS     r5,r0,r6
0000de  e011              B        |L11.260|
                  |L11.224|
;;;1797   	}
;;;1798   	else
;;;1799   	{
;;;1800   		/*4.经度数据*/
;;;1801   		sprintf(pStr, "\"longitude\":%s,","null");
0000e0  a244              ADR      r2,|L11.500|
0000e2  a146              ADR      r1,|L11.508|
0000e4  4638              MOV      r0,r7
0000e6  f7fffffe          BL       __2sprintf
;;;1802   		pStr+=strlen(pStr);
0000ea  4638              MOV      r0,r7
0000ec  f7fffffe          BL       strlen
0000f0  19c5              ADDS     r5,r0,r7
;;;1803   	
;;;1804   		/*5.纬度数据*/
;;;1805   		sprintf(pStr, "\"latitude\":%s,","null");
0000f2  a240              ADR      r2,|L11.500|
0000f4  a145              ADR      r1,|L11.524|
0000f6  4628              MOV      r0,r5
0000f8  f7fffffe          BL       __2sprintf
;;;1806   		pStr+=strlen(pStr);
0000fc  4628              MOV      r0,r5
0000fe  f7fffffe          BL       strlen
000102  4405              ADD      r5,r5,r0
                  |L11.260|
;;;1807   	}
;;;1808   
;;;1809   	/*6.在线状态*/
;;;1810   	if(g_sXingJiKongGU.bDeviceState)
000104  4845              LDR      r0,|L11.540|
000106  7900              LDRB     r0,[r0,#4]  ; g_sXingJiKongGU
000108  b108              CBZ      r0,|L11.270|
;;;1811   		sprintf(pStr, "\"state\":%d,",1); //管理员登录
00010a  2201              MOVS     r2,#1
00010c  e000              B        |L11.272|
                  |L11.270|
;;;1812   	else
;;;1813   		sprintf(pStr, "\"state\":%d,",0); 
00010e  2200              MOVS     r2,#0
                  |L11.272|
000110  a143              ADR      r1,|L11.544|
000112  4628              MOV      r0,r5
000114  f7fffffe          BL       __2sprintf
;;;1814   	pStr+=strlen(pStr);
000118  4628              MOV      r0,r5
00011a  f7fffffe          BL       strlen
;;;1815   	
;;;1816   	/*6.设备编号字符串*/
;;;1817   	sprintf(pStr, "\"device\":\"%s%06d\",", g_sDeviceIDConfig.aNamePrefix, g_sDeviceIDConfig.nDeviceID);
00011e  4a43              LDR      r2,|L11.556|
000120  4405              ADD      r5,r5,r0              ;1814
000122  a143              ADR      r1,|L11.560|
000124  f8d23006          LDR      r3,[r2,#6]  ; g_sDeviceIDConfig
000128  4628              MOV      r0,r5
00012a  1c52              ADDS     r2,r2,#1
00012c  f7fffffe          BL       __2sprintf
;;;1818   	pStr+=strlen(pStr);
000130  4628              MOV      r0,r5
000132  f7fffffe          BL       strlen
000136  4405              ADD      r5,r5,r0
;;;1819   
;;;1820   	/*8.心跳时间(S)*/
;;;1821   	sprintf(pStr, "\"heartbeat\":%d,", g_sHeartRateParam.byHeartRate);
000138  4842              LDR      r0,|L11.580|
00013a  a143              ADR      r1,|L11.584|
00013c  f8b02001          LDRH     r2,[r0,#1]  ; g_sHeartRateParam
000140  4628              MOV      r0,r5
000142  f7fffffe          BL       __2sprintf
;;;1822   	pStr+=strlen(pStr);
000146  4628              MOV      r0,r5
000148  f7fffffe          BL       strlen
00014c  4428              ADD      r0,r0,r5
;;;1823   	
;;;1824   	//结束符
;;;1825   	*pStr++='}';
00014e  217d              MOVS     r1,#0x7d
000150  f8001b01          STRB     r1,[r0],#1
;;;1826   	
;;;1827   	*pStr++='}';
000154  f8001b01          STRB     r1,[r0],#1
;;;1828   
;;;1829   	return (pStr-pPackageBuffer);
000158  1b00              SUBS     r0,r0,r4
;;;1830   }
00015a  b004              ADD      sp,sp,#0x10
00015c  b200              SXTH     r0,r0                 ;1829
00015e  e8bd81f0          POP      {r4-r8,pc}
;;;1831   
                          ENDP

000162  0000              DCW      0x0000
                  |L11.356|
                          DCD      g_bGPS_Location_Valid
                  |L11.360|
                          DCD      g_fLatitude
                  |L11.364|
                          DCD      g_fLongitude
                  |L11.368|
000170  22686561          DCB      """heartrate"":%c",0
000174  72747261
000178  7465223a
00017c  256300  
00017f  00                DCB      0
                  |L11.384|
                          DCD      ||.data||+0x10
                  |L11.388|
000184  22757365          DCB      """user"":%s,",0
000188  72223a25
00018c  732c00  
00018f  00                DCB      0
                  |L11.400|
000190  226b6579          DCB      """key"":%s,",0
000194  223a2573
000198  2c00    
00019a  00                DCB      0
00019b  00                DCB      0
                  |L11.412|
                          DCD      g_sDateTime
                  |L11.416|
0001a0  226f6e6c          DCB      """onlinedate"":""20%02d-%02d-%02d %02d:%02d:%02d"",",0
0001a4  696e6564
0001a8  61746522
0001ac  3a223230
0001b0  25303264
0001b4  2d253032
0001b8  642d2530
0001bc  32642025
0001c0  3032643a
0001c4  25303264
0001c8  3a253032
0001cc  64222c00
                  |L11.464|
                          DCD      0x80800000
                  |L11.468|
0001d4  226c6f6e          DCB      """longitude"":%f,",0
0001d8  67697475
0001dc  6465223a
0001e0  25662c00
                  |L11.484|
0001e4  226c6174          DCB      """latitude"":%f,",0
0001e8  69747564
0001ec  65223a25
0001f0  662c00  
0001f3  00                DCB      0
                  |L11.500|
0001f4  6e756c6c          DCB      "null",0
0001f8  00      
0001f9  00                DCB      0
0001fa  00                DCB      0
0001fb  00                DCB      0
                  |L11.508|
0001fc  226c6f6e          DCB      """longitude"":%s,",0
000200  67697475
000204  6465223a
000208  25732c00
                  |L11.524|
00020c  226c6174          DCB      """latitude"":%s,",0
000210  69747564
000214  65223a25
000218  732c00  
00021b  00                DCB      0
                  |L11.540|
                          DCD      g_sXingJiKongGU
                  |L11.544|
000220  22737461          DCB      """state"":%d,",0
000224  7465223a
000228  25642c00
                  |L11.556|
                          DCD      g_sDeviceIDConfig
                  |L11.560|
000230  22646576          DCB      """device"":""%s%06d"",",0
000234  69636522
000238  3a222573
00023c  25303664
000240  222c00  
000243  00                DCB      0
                  |L11.580|
                          DCD      g_sHeartRateParam
                  |L11.584|
000248  22686561          DCB      """heartbeat"":%d,",0
00024c  72746265
000250  6174223a
000254  25642c00

                          AREA ||i.Get_Net_AccessMode||, CODE, READONLY, ALIGN=2

                  Get_Net_AccessMode PROC
;;;104    
;;;105    char Get_Net_AccessMode(void)
000000  4801              LDR      r0,|L12.8|
;;;106    {
;;;107    	return g_sServerParam.nNetAccessMode;
000002  f890003b          LDRB     r0,[r0,#0x3b]  ; g_sServerParam
;;;108    }
000006  4770              BX       lr
;;;109    
                          ENDP

                  |L12.8|
                          DCD      g_sServerParam

                          AREA ||i.Get_Net_RemoteIP||, CODE, READONLY, ALIGN=2

                  Get_Net_RemoteIP PROC
;;;114    
;;;115    char * Get_Net_RemoteIP(void)
000000  4800              LDR      r0,|L13.4|
;;;116    {
;;;117    	return g_sServerParam.aRemoteIP;
;;;118    }
000002  4770              BX       lr
;;;119    
                          ENDP

                  |L13.4|
                          DCD      g_sServerParam+0x1

                          AREA ||i.Get_Net_RemotePort||, CODE, READONLY, ALIGN=2

                  Get_Net_RemotePort PROC
;;;109    
;;;110    unsigned short Get_Net_RemotePort(void)
000000  4801              LDR      r0,|L14.8|
;;;111    {
;;;112    	return g_sServerParam.nRemotePort;
000002  f8b00039          LDRH     r0,[r0,#0x39]  ; g_sServerParam
;;;113    }
000006  4770              BX       lr
;;;114    
                          ENDP

                  |L14.8|
                          DCD      g_sServerParam

                          AREA ||i.Get_Net_RemoteURL||, CODE, READONLY, ALIGN=2

                  Get_Net_RemoteURL PROC
;;;119    
;;;120    char * Get_Net_RemoteURL(void)
000000  4800              LDR      r0,|L15.4|
;;;121    {
;;;122    	return g_sServerParam.aRemoteURL;
;;;123    
;;;124    }
000002  4770              BX       lr
;;;125    
                          ENDP

                  |L15.4|
                          DCD      g_sServerParam+0x11

                          AREA ||i.Get_New_Upload_Record_Data||, CODE, READONLY, ALIGN=2

                  Get_New_Upload_Record_Data PROC
;;;217    
;;;218    static bool Get_New_Upload_Record_Data(void)
000000  b570              PUSH     {r4-r6,lr}
;;;219    {
;;;220    	if(Is_ValidData_Need_Upload())
000002  f7fffffe          BL       Is_ValidData_Need_Upload
000006  2800              CMP      r0,#0
000008  d018              BEQ      |L16.60|
;;;221    	{
;;;222    		g_sGPRSUser.bAleadyFinishUpload = false;
00000a  4d0d              LDR      r5,|L16.64|
00000c  2400              MOVS     r4,#0
;;;223    		memset(&g_sGPRSUser.sRecord, 0, sizeof(g_sGPRSUser.sRecord));
00000e  f1050013          ADD      r0,r5,#0x13
000012  70ac              STRB     r4,[r5,#2]            ;222
000014  f44f7180          MOV      r1,#0x100
000018  4606              MOV      r6,r0
00001a  f7fffffe          BL       __aeabi_memclr
;;;224    		g_sGPRSUser.nJpegImageSize = 0;
00001e  f8c54117          STR      r4,[r5,#0x117]  ; g_sGPRSUser
;;;225    		g_sGPRSUser.nFingerprintTemplateSize = 0;
000022  f8a5411c          STRH     r4,[r5,#0x11c]
;;;226    
;;;227    		TRACE_PRINTF("Gprs-->Current prepare upload record index = %d !\r\n", g_nAlreadyUploadCounter + 1);
000026  4c07              LDR      r4,|L16.68|
000028  a007              ADR      r0,|L16.72|
00002a  6821              LDR      r1,[r4,#0]  ; g_nAlreadyUploadCounter
00002c  1c49              ADDS     r1,r1,#1
00002e  f7fffffe          BL       User_Debug_Printf
000032  4631              MOV      r1,r6
;;;228    		
;;;229    		Data_Record_Load_ByID(g_nAlreadyUploadCounter, &g_sGPRSUser.sRecord);
000034  6820              LDR      r0,[r4,#0]  ; g_nAlreadyUploadCounter
000036  f7fffffe          BL       Data_Record_Load_ByID
;;;230    
;;;231    		return true;
00003a  2001              MOVS     r0,#1
                  |L16.60|
;;;232    	}
;;;233    
;;;234    	return false;
;;;235    }
00003c  bd70              POP      {r4-r6,pc}
;;;236    
                          ENDP

00003e  0000              DCW      0x0000
                  |L16.64|
                          DCD      ||.bss||
                  |L16.68|
                          DCD      g_nAlreadyUploadCounter
                  |L16.72|
000048  47707273          DCB      "Gprs-->Current prepare upload record index = %d !\r\n",0
00004c  2d2d3e43
000050  75727265
000054  6e742070
000058  72657061
00005c  72652075
000060  706c6f61
000064  64207265
000068  636f7264
00006c  20696e64
000070  6578203d
000074  20256420
000078  210d0a00

                          AREA ||i.Get_Request_DataPacket||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  Get_Request_DataPacket PROC
;;;1465   
;;;1466   static unsigned short Get_Request_DataPacket(char *pPackageBuffer)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1467   {
;;;1468   	char *pStr = pPackageBuffer;
;;;1469   	sRecord *pRecord = &g_sGPRSUser.sRecord;//g_sGPRSUser.sRecord;
;;;1470   
;;;1471           float fTemp;
;;;1472           char aResult[20];
;;;1473           float fLongitude=0,fLatitude=0;
;;;1474   	/*起始符*/
;;;1475   	*pStr++ = '{'; //代表传入的是一个数组
000002  217b              MOVS     r1,#0x7b
000004  b089              SUB      sp,sp,#0x24           ;1467
000006  4605              MOV      r5,r0                 ;1467
000008  f8001b01          STRB     r1,[r0],#1
;;;1476   
;;;1477   	 sprintf(pStr,"\"alcohol\":%c",'{');
00000c  460a              MOV      r2,r1
00000e  4c91              LDR      r4,|L17.596|
000010  4606              MOV      r6,r0                 ;1475
000012  a191              ADR      r1,|L17.600|
000014  f7fffffe          BL       __2sprintf
;;;1478   	pStr+=strlen(pStr);
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       strlen
00001e  4406              ADD      r6,r6,r0
;;;1479   	
;;;1480   	/*记录下有效数据包的起始长度*/
;;;1481   	//pStart = pStr;
;;;1482   	 /*1.用户名*/
;;;1483   	sprintf(pStr, "\"USER\":%s,", username);
000020  4a91              LDR      r2,|L17.616|
000022  a192              ADR      r1,|L17.620|
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       __2sprintf
;;;1484   	pStr+=strlen(pStr);
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       strlen
;;;1485   
;;;1486   	/*2.登录密码*/
;;;1487   	sprintf(pStr, "\"KEY\":%s,", KeyPassword);
000030  4a8d              LDR      r2,|L17.616|
000032  4406              ADD      r6,r6,r0              ;1484
000034  3a0c              SUBS     r2,r2,#0xc
000036  a190              ADR      r1,|L17.632|
000038  4630              MOV      r0,r6
00003a  f7fffffe          BL       __2sprintf
;;;1488   	pStr+=strlen(pStr);
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       strlen
;;;1489   
;;;1490   	/*3.JSON的版本*/
;;;1491   	sprintf (pStr, "\"VERSION\":%s,", VERSION);
000044  4a88              LDR      r2,|L17.616|
000046  4406              ADD      r6,r6,r0              ;1488
000048  320a              ADDS     r2,r2,#0xa
00004a  a18e              ADR      r1,|L17.644|
00004c  4630              MOV      r0,r6
00004e  f7fffffe          BL       __2sprintf
;;;1492   	pStr+=strlen(pStr);
000052  4630              MOV      r0,r6
000054  f7fffffe          BL       strlen
;;;1493   
;;;1494   	/*4.设备编号字符串*/
;;;1495   	sprintf(pStr, "\"DEVICE\":\"%s%06d\",", g_sDeviceIDConfig.aNamePrefix, g_sDeviceIDConfig.nDeviceID);
000058  4a8e              LDR      r2,|L17.660|
00005a  4406              ADD      r6,r6,r0              ;1492
00005c  a18e              ADR      r1,|L17.664|
00005e  f8d23006          LDR      r3,[r2,#6]  ; g_sDeviceIDConfig
000062  4630              MOV      r0,r6
000064  1c52              ADDS     r2,r2,#1
000066  f7fffffe          BL       __2sprintf
;;;1496   	pStr+=strlen(pStr);
00006a  4630              MOV      r0,r6
00006c  f7fffffe          BL       strlen
000070  4406              ADD      r6,r6,r0
;;;1497   
;;;1498   
;;;1499   	/*5.记录的编号*/ 
;;;1500   	sprintf (pStr, "\"RECORDID\":%08d,", pRecord->nRecordIndex);
000072  f8d42013          LDR      r2,[r4,#0x13]
000076  a18d              ADR      r1,|L17.684|
000078  4630              MOV      r0,r6
00007a  3414              ADDS     r4,r4,#0x14
00007c  f7fffffe          BL       __2sprintf
;;;1501   	pStr+=strlen(pStr);
000080  4630              MOV      r0,r6
000082  f7fffffe          BL       strlen
000086  4406              ADD      r6,r6,r0
;;;1502   
;;;1503      	
;;;1504   	/*6.日期*/
;;;1505   	sprintf (pStr, "\"DATE\":\"20%02d-%02d-%02d %02d:%02d:%02d\",",
000088  7ba0              LDRB     r0,[r4,#0xe]
00008a  7c63              LDRB     r3,[r4,#0x11]
00008c  7c22              LDRB     r2,[r4,#0x10]
00008e  7be1              LDRB     r1,[r4,#0xf]
000090  e88d000f          STM      sp,{r0-r3}
000094  7b63              LDRB     r3,[r4,#0xd]
000096  7b22              LDRB     r2,[r4,#0xc]
000098  a189              ADR      r1,|L17.704|
00009a  4630              MOV      r0,r6
00009c  f7fffffe          BL       __2sprintf
;;;1506   			 pRecord->aDateTime[0], pRecord->aDateTime[1],
;;;1507   			 pRecord->aDateTime[2], pRecord->aDateTime[3],
;;;1508   			 pRecord->aDateTime[4], pRecord->aDateTime[5]);
;;;1509   	pStr+=strlen(pStr);
0000a0  4630              MOV      r0,r6
0000a2  f7fffffe          BL       strlen
0000a6  4406              ADD      r6,r6,r0
;;;1510   
;;;1511        
;;;1512   	 /*7.测试模式*/
;;;1513   	sprintf (pStr, "\"MODE\":\"%d\",",pRecord->nTestMode);
0000a8  7ca2              LDRB     r2,[r4,#0x12]
0000aa  a190              ADR      r1,|L17.748|
0000ac  4630              MOV      r0,r6
0000ae  f7fffffe          BL       __2sprintf
;;;1514   	pStr+=strlen(pStr);
0000b2  4630              MOV      r0,r6
0000b4  f7fffffe          BL       strlen
0000b8  4406              ADD      r6,r6,r0
;;;1515   
;;;1516   	 /*8.测试温度*/
;;;1517   	sprintf (pStr, "\"TEMP\":%d,", pRecord->nTemperature);
0000ba  f9942003          LDRSB    r2,[r4,#3]
0000be  a18f              ADR      r1,|L17.764|
0000c0  4630              MOV      r0,r6
0000c2  f7fffffe          BL       __2sprintf
;;;1518   	pStr+=strlen(pStr);
0000c6  4630              MOV      r0,r6
0000c8  f7fffffe          BL       strlen
0000cc  4406              ADD      r6,r6,r0
;;;1519   
;;;1520   	 /*9.酒精浓度字符串*/
;;;1521   	fTemp=Get_Final_Convert_Display_Result(pRecord->fAlcValue,pRecord->nTestUnit, pRecord->nKBrACBAC);
0000ce  8aa2              LDRH     r2,[r4,#0x14]
0000d0  7ce1              LDRB     r1,[r4,#0x13]
0000d2  6860              LDR      r0,[r4,#4]
0000d4  f7fffffe          BL       Get_Final_Convert_Display_Result
;;;1522   	Get_Format_Alc_Convert_String(fTemp, pRecord->nTestUnit,aResult,eFormatToInt);// eFormatToFloat modified on 20181106
0000d8  7ce1              LDRB     r1,[r4,#0x13]
0000da  2300              MOVS     r3,#0
0000dc  aa04              ADD      r2,sp,#0x10
0000de  f7fffffe          BL       Get_Format_Alc_Convert_String
;;;1523   	sprintf (pStr, "\"ALC\":%s,", aResult);
0000e2  aa04              ADD      r2,sp,#0x10
0000e4  a188              ADR      r1,|L17.776|
0000e6  4630              MOV      r0,r6
0000e8  f7fffffe          BL       __2sprintf
;;;1524   	pStr+=strlen(pStr);
0000ec  4630              MOV      r0,r6
0000ee  f7fffffe          BL       strlen
0000f2  4406              ADD      r6,r6,r0
;;;1525   
;;;1526   	/*10.测试单位*/
;;;1527   	sprintf(pStr, "\"UNIT\":\"%s\",",Get_Unit_String(pRecord->nTestUnit));
0000f4  7ce0              LDRB     r0,[r4,#0x13]
0000f6  f7fffffe          BL       Get_Unit_String
0000fa  4602              MOV      r2,r0
0000fc  a185              ADR      r1,|L17.788|
0000fe  4630              MOV      r0,r6
000100  f7fffffe          BL       __2sprintf
;;;1528   	pStr+=strlen(pStr);
000104  4630              MOV      r0,r6
000106  f7fffffe          BL       strlen
00010a  4406              ADD      r6,r6,r0
;;;1529   
;;;1530   	/*11.呼气浓度与血液浓度转换系数*/
;;;1531   	sprintf(pStr, "\"K\":%d,",pRecord->nKBrACBAC);
00010c  8aa2              LDRH     r2,[r4,#0x14]
00010e  a185              ADR      r1,|L17.804|
000110  4630              MOV      r0,r6
000112  f7fffffe          BL       __2sprintf
;;;1532   	pStr+=strlen(pStr);
000116  4630              MOV      r0,r6
000118  f7fffffe          BL       strlen
00011c  4406              ADD      r6,r6,r0
;;;1533   
;;;1534   	/*12.酒精浓度字符串描述*/
;;;1535   	sprintf(pStr, "\"ALCSTRING\":\"%s%s\",",aResult,Get_Unit_String(pRecord->nTestUnit));
00011e  7ce0              LDRB     r0,[r4,#0x13]
000120  f7fffffe          BL       Get_Unit_String
000124  4603              MOV      r3,r0
000126  aa04              ADD      r2,sp,#0x10
000128  a180              ADR      r1,|L17.812|
00012a  4630              MOV      r0,r6
00012c  f7fffffe          BL       __2sprintf
;;;1536   	pStr+=strlen(pStr);
000130  4630              MOV      r0,r6
000132  f7fffffe          BL       strlen
000136  4406              ADD      r6,r6,r0
;;;1537   
;;;1538   	
;;;1539   	if(pRecord->fLongitude != 0 && pRecord->fLatitude != 0)
000138  69a0              LDR      r0,[r4,#0x18]
00013a  1e64              SUBS     r4,r4,#1
00013c  f0104fff          TST      r0,#0x7f800000
000140  d079              BEQ      |L17.566|
000142  f8d4101d          LDR      r1,[r4,#0x1d]
000146  f0114fff          TST      r1,#0x7f800000
00014a  d074              BEQ      |L17.566|
;;;1540   	{
;;;1541   	/*13.经度数据*/
;;;1542   	fLongitude=pRecord->fLongitude >= 0 ? pRecord->fLongitude : -(pRecord->fLongitude);
00014c  4f7c              LDR      r7,|L17.832|
00014e  42b8              CMP      r0,r7
000150  d301              BCC      |L17.342|
000152  f0804000          EOR      r0,r0,#0x80000000
                  |L17.342|
;;;1543   	sprintf(pStr, "\"LONGITUDE\":%f,",fLongitude);
000156  f7fffffe          BL       __aeabi_f2d
00015a  4602              MOV      r2,r0
00015c  460b              MOV      r3,r1
00015e  a179              ADR      r1,|L17.836|
000160  4630              MOV      r0,r6
000162  f7fffffe          BL       __2sprintf
;;;1544   	pStr+=strlen(pStr);
000166  4630              MOV      r0,r6
000168  f7fffffe          BL       strlen
00016c  4406              ADD      r6,r6,r0
;;;1545   	
;;;1546   	/*14.纬度数据*/
;;;1547   	fLatitude=pRecord->fLatitude >= 0 ? pRecord->fLatitude : -(pRecord->fLatitude);
00016e  f8d4001d          LDR      r0,[r4,#0x1d]
000172  42b8              CMP      r0,r7
000174  d301              BCC      |L17.378|
000176  f0804000          EOR      r0,r0,#0x80000000
                  |L17.378|
;;;1548   	sprintf(pStr, "\"Latitude\":%f,",fLatitude);
00017a  f7fffffe          BL       __aeabi_f2d
00017e  4602              MOV      r2,r0
000180  460b              MOV      r3,r1
000182  a174              ADR      r1,|L17.852|
000184  4630              MOV      r0,r6
000186  f7fffffe          BL       __2sprintf
                  |L17.394|
;;;1549   	pStr+=strlen(pStr);
;;;1550   	}
;;;1551   	else
;;;1552   	{
;;;1553   		/*13.经度数据*/
;;;1554   		sprintf(pStr, "\"LONGITUDE\":%s,","null");
;;;1555   		pStr+=strlen(pStr);
;;;1556   	
;;;1557   		/*14.纬度数据*/
;;;1558   		sprintf(pStr, "\"Latitude\":%s,","null");
;;;1559   		pStr+=strlen(pStr);
00018a  4630              MOV      r0,r6
00018c  f7fffffe          BL       strlen
000190  4406              ADD      r6,r6,r0
;;;1560   	}
;;;1561   
;;;1562   	/*15.测试地点*/
;;;1563   	sprintf(pStr, "\"LOCATION\":\"%s\",",(char *)pRecord->aLocation);
000192  f1040238          ADD      r2,r4,#0x38
000196  a173              ADR      r1,|L17.868|
000198  4630              MOV      r0,r6
00019a  f7fffffe          BL       __2sprintf
;;;1564   	pStr+=strlen(pStr);
00019e  4630              MOV      r0,r6
0001a0  f7fffffe          BL       strlen
0001a4  4406              ADD      r6,r6,r0
;;;1565    
;;;1566   	/*16.测试人姓名*/
;;;1567   	sprintf(pStr, "\"TESTEE\":\"%s\",",(char *)pRecord->aTestee);
0001a6  f1040221          ADD      r2,r4,#0x21
0001aa  a173              ADR      r1,|L17.888|
0001ac  4630              MOV      r0,r6
0001ae  f7fffffe          BL       __2sprintf
;;;1568   	pStr+=strlen(pStr);
0001b2  4630              MOV      r0,r6
0001b4  f7fffffe          BL       strlen
0001b8  4406              ADD      r6,r6,r0
;;;1569   
;;;1570   	/*17.驾驶证号*/
;;;1571   	sprintf(pStr, "\"DRIVERID\":\"%s\",",(char *)pRecord->aDriverLicense);
0001ba  f1040280          ADD      r2,r4,#0x80
0001be  a172              ADR      r1,|L17.904|
0001c0  4630              MOV      r0,r6
0001c2  f7fffffe          BL       __2sprintf
;;;1572   	pStr+=strlen(pStr);
0001c6  4630              MOV      r0,r6
0001c8  f7fffffe          BL       strlen
0001cc  4406              ADD      r6,r6,r0
;;;1573   
;;;1574   	/*18.车牌号*/
;;;1575   	sprintf(pStr, "\"PLATENUMBER\":\"%s\",",(char *)pRecord->aPlateNumber);
0001ce  f1040266          ADD      r2,r4,#0x66
0001d2  a172              ADR      r1,|L17.924|
0001d4  4630              MOV      r0,r6
0001d6  f7fffffe          BL       __2sprintf
;;;1576   	pStr+=strlen(pStr);
0001da  4630              MOV      r0,r6
0001dc  f7fffffe          BL       strlen
0001e0  4406              ADD      r6,r6,r0
;;;1577   
;;;1578   	/*19.执勤民警编号*/
;;;1579   	sprintf(pStr, "\"POLICEID\":\"%s\",",(char *)pRecord->aPoliceID);
0001e2  f1040294          ADD      r2,r4,#0x94
0001e6  a172              ADR      r1,|L17.944|
0001e8  4630              MOV      r0,r6
0001ea  f7fffffe          BL       __2sprintf
;;;1580   	pStr+=strlen(pStr);
0001ee  4630              MOV      r0,r6
0001f0  f7fffffe          BL       strlen
0001f4  4406              ADD      r6,r6,r0
;;;1581   
;;;1582   	/*20.执勤民警姓名*/
;;;1583   	sprintf(pStr, "\"POLICENAME\":\"%s\",",(char *)pRecord->aPoliceName);
0001f6  f10402d1          ADD      r2,r4,#0xd1
0001fa  a172              ADR      r1,|L17.964|
0001fc  4630              MOV      r0,r6
0001fe  f7fffffe          BL       __2sprintf
;;;1584   	pStr+=strlen(pStr);
000202  4630              MOV      r0,r6
000204  f7fffffe          BL       strlen
000208  4406              ADD      r6,r6,r0
;;;1585   
;;;1586   	/*21.执法人员所属部门*/
;;;1587   	sprintf(pStr, "\"DEPARTMENT\":\"%s\"",(char *)pRecord->aDepartment);
00020a  f10402a3          ADD      r2,r4,#0xa3
00020e  a172              ADR      r1,|L17.984|
000210  4630              MOV      r0,r6
000212  f7fffffe          BL       __2sprintf
;;;1588   	pStr+=strlen(pStr);
000216  4630              MOV      r0,r6
000218  f7fffffe          BL       strlen
00021c  4430              ADD      r0,r0,r6
;;;1589   
;;;1590   	/*结束符*/
;;;1591   	*pStr++= '}';
00021e  217d              MOVS     r1,#0x7d
000220  f8001b01          STRB     r1,[r0],#1
;;;1592   	
;;;1593   	*pStr++='}';
000224  f8001b01          STRB     r1,[r0],#1
;;;1594   	*pStr= 0x00;//added by lxl 20180813
000228  2100              MOVS     r1,#0
00022a  7001              STRB     r1,[r0,#0]
;;;1595   
;;;1596   	
;;;1597   	return (pStr - pPackageBuffer);//返回数据的总长度 
00022c  1b40              SUBS     r0,r0,r5
;;;1598   
;;;1599   }
00022e  b009              ADD      sp,sp,#0x24
000230  b280              UXTH     r0,r0                 ;1597
000232  bdf0              POP      {r4-r7,pc}
000234  e7ff              B        |L17.566|
                  |L17.566|
000236  a26d              ADR      r2,|L17.1004|
000238  a16e              ADR      r1,|L17.1012|
00023a  4630              MOV      r0,r6                 ;1554
00023c  f7fffffe          BL       __2sprintf
000240  4630              MOV      r0,r6                 ;1555
000242  f7fffffe          BL       strlen
000246  4406              ADD      r6,r6,r0              ;1555
000248  a268              ADR      r2,|L17.1004|
00024a  a16e              ADR      r1,|L17.1028|
00024c  4630              MOV      r0,r6                 ;1558
00024e  f7fffffe          BL       __2sprintf
000252  e79a              B        |L17.394|
;;;1600   
                          ENDP

                  |L17.596|
                          DCD      ||.bss||
                  |L17.600|
000258  22616c63          DCB      """alcohol"":%c",0
00025c  6f686f6c
000260  223a2563
000264  00      
000265  00                DCB      0
000266  00                DCB      0
000267  00                DCB      0
                  |L17.616|
                          DCD      ||.data||+0x10
                  |L17.620|
00026c  22555345          DCB      """USER"":%s,",0
000270  52223a25
000274  732c00  
000277  00                DCB      0
                  |L17.632|
000278  224b4559          DCB      """KEY"":%s,",0
00027c  223a2573
000280  2c00    
000282  00                DCB      0
000283  00                DCB      0
                  |L17.644|
000284  22564552          DCB      """VERSION"":%s,",0
000288  53494f4e
00028c  223a2573
000290  2c00    
000292  00                DCB      0
000293  00                DCB      0
                  |L17.660|
                          DCD      g_sDeviceIDConfig
                  |L17.664|
000298  22444556          DCB      """DEVICE"":""%s%06d"",",0
00029c  49434522
0002a0  3a222573
0002a4  25303664
0002a8  222c00  
0002ab  00                DCB      0
                  |L17.684|
0002ac  22524543          DCB      """RECORDID"":%08d,",0
0002b0  4f524449
0002b4  44223a25
0002b8  3038642c
0002bc  00      
0002bd  00                DCB      0
0002be  00                DCB      0
0002bf  00                DCB      0
                  |L17.704|
0002c0  22444154          DCB      """DATE"":""20%02d-%02d-%02d %02d:%02d:%02d"",",0
0002c4  45223a22
0002c8  32302530
0002cc  32642d25
0002d0  3032642d
0002d4  25303264
0002d8  20253032
0002dc  643a2530
0002e0  32643a25
0002e4  30326422
0002e8  2c00    
0002ea  00                DCB      0
0002eb  00                DCB      0
                  |L17.748|
0002ec  224d4f44          DCB      """MODE"":""%d"",",0
0002f0  45223a22
0002f4  2564222c
0002f8  00      
0002f9  00                DCB      0
0002fa  00                DCB      0
0002fb  00                DCB      0
                  |L17.764|
0002fc  2254454d          DCB      """TEMP"":%d,",0
000300  50223a25
000304  642c00  
000307  00                DCB      0
                  |L17.776|
000308  22414c43          DCB      """ALC"":%s,",0
00030c  223a2573
000310  2c00    
000312  00                DCB      0
000313  00                DCB      0
                  |L17.788|
000314  22554e49          DCB      """UNIT"":""%s"",",0
000318  54223a22
00031c  2573222c
000320  00      
000321  00                DCB      0
000322  00                DCB      0
000323  00                DCB      0
                  |L17.804|
000324  224b223a          DCB      """K"":%d,",0
000328  25642c00
                  |L17.812|
00032c  22414c43          DCB      """ALCSTRING"":""%s%s"",",0
000330  53545249
000334  4e47223a
000338  22257325
00033c  73222c00
                  |L17.832|
                          DCD      0x80800000
                  |L17.836|
000344  224c4f4e          DCB      """LONGITUDE"":%f,",0
000348  47495455
00034c  4445223a
000350  25662c00
                  |L17.852|
000354  224c6174          DCB      """Latitude"":%f,",0
000358  69747564
00035c  65223a25
000360  662c00  
000363  00                DCB      0
                  |L17.868|
000364  224c4f43          DCB      """LOCATION"":""%s"",",0
000368  4154494f
00036c  4e223a22
000370  2573222c
000374  00      
000375  00                DCB      0
000376  00                DCB      0
000377  00                DCB      0
                  |L17.888|
000378  22544553          DCB      """TESTEE"":""%s"",",0
00037c  54454522
000380  3a222573
000384  222c00  
000387  00                DCB      0
                  |L17.904|
000388  22445249          DCB      """DRIVERID"":""%s"",",0
00038c  56455249
000390  44223a22
000394  2573222c
000398  00      
000399  00                DCB      0
00039a  00                DCB      0
00039b  00                DCB      0
                  |L17.924|
00039c  22504c41          DCB      """PLATENUMBER"":""%s"",",0
0003a0  54454e55
0003a4  4d424552
0003a8  223a2225
0003ac  73222c00
                  |L17.944|
0003b0  22504f4c          DCB      """POLICEID"":""%s"",",0
0003b4  49434549
0003b8  44223a22
0003bc  2573222c
0003c0  00      
0003c1  00                DCB      0
0003c2  00                DCB      0
0003c3  00                DCB      0
                  |L17.964|
0003c4  22504f4c          DCB      """POLICENAME"":""%s"",",0
0003c8  4943454e
0003cc  414d4522
0003d0  3a222573
0003d4  222c00  
0003d7  00                DCB      0
                  |L17.984|
0003d8  22444550          DCB      """DEPARTMENT"":""%s""",0
0003dc  4152544d
0003e0  454e5422
0003e4  3a222573
0003e8  2200    
0003ea  00                DCB      0
0003eb  00                DCB      0
                  |L17.1004|
0003ec  6e756c6c          DCB      "null",0
0003f0  00      
0003f1  00                DCB      0
0003f2  00                DCB      0
0003f3  00                DCB      0
                  |L17.1012|
0003f4  224c4f4e          DCB      """LONGITUDE"":%s,",0
0003f8  47495455
0003fc  4445223a
000400  25732c00
                  |L17.1028|
000404  224c6174          DCB      """Latitude"":%s,",0
000408  69747564
00040c  65223a25
000410  732c00  
000413  00                DCB      0

                          AREA ||i.GprsUser_SendData_Timeout_Handle||, CODE, READONLY, ALIGN=2

                  GprsUser_SendData_Timeout_Handle PROC
;;;1924   
;;;1925   void GprsUser_SendData_Timeout_Handle(const char *FileName, int nLineNumber)
000000  4b09              LDR      r3,|L18.40|
;;;1926   {
000002  b510              PUSH     {r4,lr}
;;;1927   	if(g_sGPRSUser.nRetryCnt)
000004  7a1a              LDRB     r2,[r3,#8]  ; g_sGPRSUser
000006  b122              CBZ      r2,|L18.18|
000008  1e52              SUBS     r2,r2,#1              ;1926
;;;1928   	{	
;;;1929   		g_sGPRSUser.nRetryCnt--;
00000a  721a              STRB     r2,[r3,#8]
;;;1930   		g_sGPRSUser.bSwitchNewState = true;
00000c  2001              MOVS     r0,#1
00000e  71d8              STRB     r0,[r3,#7]
;;;1931   	}
;;;1932   	else
;;;1933   	{
;;;1934   		_Reset_Upload_State_And_Retry(FileName, nLineNumber);
;;;1935   	}
;;;1936   }
000010  bd10              POP      {r4,pc}
                  |L18.18|
000012  460a              MOV      r2,r1                 ;1934
000014  4601              MOV      r1,r0                 ;1934
000016  2002              MOVS     r0,#2                 ;1934
000018  f7fffffe          BL       GPRS_Power_Control
00001c  b100              CBZ      r0,|L18.32|
00001e  2001              MOVS     r0,#1                 ;1934
                  |L18.32|
000020  e8bd4010          POP      {r4,lr}               ;1934
000024  f7ffbffe          B.W      GprsUser_Switch_State
;;;1937   
                          ENDP

                  |L18.40|
                          DCD      ||.bss||

                          AREA ||i.GprsUser_Switch_State||, CODE, READONLY, ALIGN=2

                  GprsUser_Switch_State PROC
;;;1915   
;;;1916   void GprsUser_Switch_State(eGprsUserState eUserState)
000000  b510              PUSH     {r4,lr}
;;;1917   {
;;;1918   	g_sGPRSUser.nRetryCnt = 3;
000002  4c06              LDR      r4,|L19.28|
000004  2103              MOVS     r1,#3
000006  7221              STRB     r1,[r4,#8]
;;;1919   	g_sGPRSUser.eUserState = eUserState;
000008  7260              STRB     r0,[r4,#9]
;;;1920   	g_sGPRSUser.bSwitchNewState = true;
00000a  2001              MOVS     r0,#1
00000c  71e0              STRB     r0,[r4,#7]
;;;1921   	g_sGPRSUser.nStartWaitTime = Get_System_Time();
00000e  f7fffffe          BL       Get_System_Time
000012  f8c4000a          STR      r0,[r4,#0xa]  ; g_sGPRSUser
;;;1922   	g_sGPRSUser.bIsReveiceAckFromServer = false;
000016  2000              MOVS     r0,#0
000018  74a0              STRB     r0,[r4,#0x12]
;;;1923   }
00001a  bd10              POP      {r4,pc}
;;;1924   
                          ENDP

                  |L19.28|
                          DCD      ||.bss||

                          AREA ||i.Gprs_Analyse_Server_Package_Data||, CODE, READONLY, ALIGN=1

                  Gprs_Analyse_Server_Package_Data PROC
;;;135    
;;;136    void Gprs_Analyse_Server_Package_Data(char *pBuffer ,unsigned short nLen)
000000  f7ffbffe          B.W      Gprs_Analyse_Server_Package_Data_Sub
;;;137    {
;;;138    	//char aServerData[100];
;;;139    	//TRACE_PRINTF("GPRS-->Receive Data from server!(Packet size = %d)\r\n",nLen);
;;;140    	//TRACE_PRINTF("pBuffer = %s)\r\n",pBuffer);
;;;141    	#if 0
;;;142    	if(nLen < sizeof(aServerData))
;;;143    	{
;;;144    		memcpy(aServerData, pBuffer, nLen);
;;;145    		Gprs_Analyse_Server_Package_Data_Sub(aServerData,nLen);
;;;146    	}
;;;147    	#else
;;;148    	Gprs_Analyse_Server_Package_Data_Sub(pBuffer,nLen);
;;;149    	#endif 
;;;150    }
;;;151    
                          ENDP


                          AREA ||i.Gprs_Analyse_Server_Package_Data_Sub||, CODE, READONLY, ALIGN=2

                  Gprs_Analyse_Server_Package_Data_Sub PROC
;;;1280   }
;;;1281   void Gprs_Analyse_Server_Package_Data_Sub(char *pBuffer ,unsigned short nLen)
000000  b510              PUSH     {r4,lr}
;;;1282   {
000002  4604              MOV      r4,r0
;;;1283   	char *Data_Position=NULL;
;;;1284   	char *REMARK=NULL;
;;;1285   	char *TYPE=NULL;
;;;1286   	eGprsSendState Sendstate;
;;;1287   	
;;;1288   	if(!strstr(pBuffer,"HTTP"))//如果数据包中不包含HTTP，这位无效数据包,则不执行下面的操作 
000004  a11d              ADR      r1,|L21.124|
000006  f7fffffe          BL       strstr
00000a  b1d8              CBZ      r0,|L21.68|
;;;1289   	{
;;;1290   		TRACE_PRINTF("Empty Packet!\r\n");
;;;1291   		return;
;;;1292   	}
;;;1293   	
;;;1294   	Data_Position=Analyse_Server_Package_GrandSub(pBuffer);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       Analyse_Server_Package_GrandSub
000012  4604              MOV      r4,r0
;;;1295   	REMARK=strstr(Data_Position,"REMARK");//找到应答数据包
000014  a11b              ADR      r1,|L21.132|
000016  f7fffffe          BL       strstr
;;;1296   	if(strstr(Data_Position,"OK"))
00001a  a11c              ADR      r1,|L21.140|
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       strstr
000022  b1a0              CBZ      r0,|L21.78|
;;;1297   	{
;;;1298   		Sendstate=OK;
;;;1299   		TYPE=strstr(Data_Position,"TYPE");
000024  a11a              ADR      r1,|L21.144|
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       strstr
;;;1300   	}
;;;1301   	else
;;;1302   	{
;;;1303   		REMARK=strstr(Data_Position,"REMARK");//找到错误详述位置
;;;1304   		Sendstate=FAIL;
;;;1305   	}
;;;1306   	
;;;1307   	switch(Sendstate)
;;;1308   	{
;;;1309   		case OK:		
;;;1310   		        TRACE_PRINTF("TYPE:%d\r\n",*(TYPE+6)-'0');
00002c  7981              LDRB     r1,[r0,#6]
00002e  4604              MOV      r4,r0                 ;1299
000030  a019              ADR      r0,|L21.152|
000032  3930              SUBS     r1,r1,#0x30
000034  f7fffffe          BL       User_Debug_Printf
;;;1311   
;;;1312   			if((*(TYPE+6)-'0')==2) //酒精值包
000038  79a2              LDRB     r2,[r4,#6]
00003a  2000              MOVS     r0,#0
;;;1313   				g_sXingJiKongGU.bResult_Packet_Flag=false;//g_Result_Packet_Flag=false;//结果数据包上传完毕
00003c  4919              LDR      r1,|L21.164|
00003e  2a32              CMP      r2,#0x32              ;1312
000040  d00f              BEQ      |L21.98|
000042  e00f              B        |L21.100|
                  |L21.68|
000044  e8bd4010          POP      {r4,lr}               ;1290
000048  a017              ADR      r0,|L21.168|
00004a  f7ffbffe          B.W      User_Debug_Printf
                  |L21.78|
00004e  a10d              ADR      r1,|L21.132|
000050  4620              MOV      r0,r4                 ;1303
000052  f7fffffe          BL       strstr
000056  4601              MOV      r1,r0                 ;1303
;;;1314   
;;;1315   				
;;;1316   			if((*(TYPE+6)-'0')==1)
;;;1317   			{
;;;1318   				g_sGPRSUser.bIsReveiceAckFromServer=true;//测试记录的整包上传完毕,开机记录已上传的记录数 added by lxl 20180815
;;;1319   				g_sXingJiKongGU.bReveiceAckFromServer=false;//g_ReveiceAckFromServer=false; //测试记录的整包上传完毕
;;;1320   			}
;;;1321   
;;;1322   			if((*(TYPE+6)-'0')==3) //心跳应答包
;;;1323   				g_sXingJiKongGU.bHeartRate=false;
;;;1324   			
;;;1325   		break;
;;;1326   
;;;1327   		case FAIL:
;;;1328   			TRACE_PRINTF("REMARK:%s\r\n",REMARK);
000058  e8bd4010          POP      {r4,lr}
00005c  a016              ADR      r0,|L21.184|
00005e  f7ffbffe          B.W      User_Debug_Printf
                  |L21.98|
000062  7008              STRB     r0,[r1,#0]            ;1313
                  |L21.100|
000064  79a2              LDRB     r2,[r4,#6]            ;1316
000066  2a31              CMP      r2,#0x31              ;1316
000068  d103              BNE      |L21.114|
00006a  4b16              LDR      r3,|L21.196|
00006c  2201              MOVS     r2,#1                 ;1318
00006e  749a              STRB     r2,[r3,#0x12]         ;1318
000070  7048              STRB     r0,[r1,#1]            ;1319
                  |L21.114|
000072  79a2              LDRB     r2,[r4,#6]            ;1322
000074  2a33              CMP      r2,#0x33              ;1322
000076  d100              BNE      |L21.122|
000078  7148              STRB     r0,[r1,#5]            ;1323
                  |L21.122|
;;;1329   		break;
;;;1330   	}
;;;1331   	
;;;1332   }
00007a  bd10              POP      {r4,pc}
;;;1333   //只发送测试结果 20180814
                          ENDP

                  |L21.124|
00007c  48545450          DCB      "HTTP",0
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L21.132|
000084  52454d41          DCB      "REMARK",0
000088  524b00  
00008b  00                DCB      0
                  |L21.140|
00008c  4f4b00            DCB      "OK",0
00008f  00                DCB      0
                  |L21.144|
000090  54595045          DCB      "TYPE",0
000094  00      
000095  00                DCB      0
000096  00                DCB      0
000097  00                DCB      0
                  |L21.152|
000098  54595045          DCB      "TYPE:%d\r\n",0
00009c  3a25640d
0000a0  0a00    
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L21.164|
                          DCD      g_sXingJiKongGU
                  |L21.168|
0000a8  456d7074          DCB      "Empty Packet!\r\n",0
0000ac  79205061
0000b0  636b6574
0000b4  210d0a00
                  |L21.184|
0000b8  52454d41          DCB      "REMARK:%s\r\n",0
0000bc  524b3a25
0000c0  730d0a00
                  |L21.196|
                          DCD      ||.bss||

                          AREA ||i.Gprs_Get_UserLogin_State||, CODE, READONLY, ALIGN=2

                  Gprs_Get_UserLogin_State PROC
;;;130    
;;;131    bool Gprs_Get_UserLogin_State(void)
000000  4801              LDR      r0,|L22.8|
;;;132    {	
;;;133    	return g_sGPRSUser.bAleadyLogin;
000002  7840              LDRB     r0,[r0,#1]  ; g_sGPRSUser
;;;134    }
000004  4770              BX       lr
;;;135    
                          ENDP

000006  0000              DCW      0x0000
                  |L22.8|
                          DCD      ||.bss||

                          AREA ||i.Gprs_Set_UserLogin_State||, CODE, READONLY, ALIGN=2

                  Gprs_Set_UserLogin_State PROC
;;;125    
;;;126    void Gprs_Set_UserLogin_State(bool bNewState)
000000  4901              LDR      r1,|L23.8|
;;;127    {	
;;;128    	g_sGPRSUser.bAleadyLogin = bNewState;
000002  7048              STRB     r0,[r1,#1]
;;;129    }
000004  4770              BX       lr
;;;130    
                          ENDP

000006  0000              DCW      0x0000
                  |L23.8|
                          DCD      ||.bss||

                          AREA ||i.Inform_Window_Gprs_Upload_Successful||, CODE, READONLY, ALIGN=1

                  Inform_Window_Gprs_Upload_Successful PROC
;;;152    /*通知窗体记录已上传*/
;;;153    void Inform_Window_Gprs_Upload_Successful(void)
000000  b510              PUSH     {r4,lr}
;;;154    {
;;;155    	WM_HWIN hWin;
;;;156    	hWin = GetWinHandleByWinType(eDisplayRecord);
000002  2025              MOVS     r0,#0x25
000004  f7fffffe          BL       GetWinHandleByWinType
;;;157    	if(hWin)
000008  2800              CMP      r0,#0
00000a  d005              BEQ      |L24.24|
;;;158    	{
;;;159    		WM_SendMessageNoPara(hWin, WM_NOTIFY_GPRS_UPLOAD_EVENT);
00000c  e8bd4010          POP      {r4,lr}
000010  f44f6182          MOV      r1,#0x410
000014  f7ffbffe          B.W      WM_SendMessageNoPara
                  |L24.24|
;;;160    	}
;;;161    }
000018  bd10              POP      {r4,pc}
;;;162    
                          ENDP


                          AREA ||i.Is_ValidData_Need_Upload||, CODE, READONLY, ALIGN=2

                  Is_ValidData_Need_Upload PROC
;;;212    
;;;213    static bool Is_ValidData_Need_Upload(void)
000000  4804              LDR      r0,|L25.20|
;;;214    {
;;;215    	return (g_nAlreadyUploadCounter < g_sRecordInforMap.nTotalRecordsCounter) ? true : false;
000002  4905              LDR      r1,|L25.24|
000004  6800              LDR      r0,[r0,#0]  ; g_sRecordInforMap
000006  6809              LDR      r1,[r1,#0]  ; g_nAlreadyUploadCounter
000008  4288              CMP      r0,r1
00000a  d901              BLS      |L25.16|
00000c  2001              MOVS     r0,#1
;;;216    }
00000e  4770              BX       lr
                  |L25.16|
000010  2000              MOVS     r0,#0                 ;215
000012  4770              BX       lr
;;;217    
                          ENDP

                  |L25.20|
                          DCD      g_sRecordInforMap
                  |L25.24|
                          DCD      g_nAlreadyUploadCounter

                          AREA ||i.Notify_User_Deive_IMEI_NeedRegister||, CODE, READONLY, ALIGN=2

                  Notify_User_Deive_IMEI_NeedRegister PROC
;;;194    
;;;195    void Notify_User_Deive_IMEI_NeedRegister(void)
000000  b510              PUSH     {r4,lr}
;;;196    {
000002  b08c              SUB      sp,sp,#0x30
;;;197    	eUserWindow w;
;;;198    	w = GetLastWinTypeFromList();
000004  f7fffffe          BL       GetLastWinTypeFromList
;;;199    	if(w != eTestMain && w != ePrintRecord)
000008  2809              CMP      r0,#9
00000a  d01d              BEQ      |L26.72|
00000c  2826              CMP      r0,#0x26
00000e  d01b              BEQ      |L26.72|
;;;200    	{
;;;201    		sDialogWindowProperty s;
;;;202    		s.nWinType = eDialogOK;
000010  2400              MOVS     r4,#0
000012  f88d4000          STRB     r4,[sp,#0]
;;;203    		s.pFont = _GetFont(Font_Content);
000016  2004              MOVS     r0,#4
000018  f7fffffe          BL       _GetFont
;;;204    		s.pContent = _DeviceIMEINotRegister;
00001c  490c              LDR      r1,|L26.80|
00001e  9002              STR      r0,[sp,#8]
000020  480a              LDR      r0,|L26.76|
000022  7809              LDRB     r1,[r1,#0]  ; g_Language
000024  f8500021          LDR      r0,[r0,r1,LSL #2]
000028  f8d00300          LDR      r0,[r0,#0x300]
;;;205    		s.nContentColor = GUI_RED;
00002c  9001              STR      r0,[sp,#4]
00002e  20ff              MOVS     r0,#0xff
;;;206    		s.nBackGroundColor = GUI_LIGHTGRAY;
000030  9003              STR      r0,[sp,#0xc]
000032  4808              LDR      r0,|L26.84|
;;;207    		s.nAutoCloseTime = 10;
000034  9004              STR      r0,[sp,#0x10]
000036  200a              MOVS     r0,#0xa
000038  f88d0014          STRB     r0,[sp,#0x14]
;;;208    		s.pFunMiddleOK = NULL;
;;;209    		CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
00003c  9408              STR      r4,[sp,#0x20]
00003e  f7fffffe          BL       GetLastWinFromList
000042  4669              MOV      r1,sp
000044  f7fffffe          BL       CW_ShowDialog_Create
                  |L26.72|
;;;210    	}
;;;211    }
000048  b00c              ADD      sp,sp,#0x30
00004a  bd10              POP      {r4,pc}
;;;212    
                          ENDP

                  |L26.76|
                          DCD      Strings
                  |L26.80|
                          DCD      g_Language
                  |L26.84|
                          DCD      0x00d3d3d3

                          AREA ||i.Notify_User_Invalid_Simcard||, CODE, READONLY, ALIGN=2

                  Notify_User_Invalid_Simcard PROC
;;;176    
;;;177    void Notify_User_Invalid_Simcard(void)
000000  b510              PUSH     {r4,lr}
;;;178    {
000002  b08c              SUB      sp,sp,#0x30
;;;179    	eUserWindow w;
;;;180    	w = GetLastWinTypeFromList();
000004  f7fffffe          BL       GetLastWinTypeFromList
;;;181    	if(w != eTestMain && w != ePrintRecord)
000008  2809              CMP      r0,#9
00000a  d01d              BEQ      |L27.72|
00000c  2826              CMP      r0,#0x26
00000e  d01b              BEQ      |L27.72|
;;;182    	{
;;;183    		sDialogWindowProperty s;
;;;184    		s.nWinType = eDialogOK;
000010  2400              MOVS     r4,#0
000012  f88d4000          STRB     r4,[sp,#0]
;;;185    		s.pFont = _GetFont(Font_Content);
000016  2004              MOVS     r0,#4
000018  f7fffffe          BL       _GetFont
;;;186    		s.pContent = _InvalidSimCardTip;
00001c  490c              LDR      r1,|L27.80|
00001e  9002              STR      r0,[sp,#8]
000020  480a              LDR      r0,|L27.76|
000022  7809              LDRB     r1,[r1,#0]  ; g_Language
000024  f8500021          LDR      r0,[r0,r1,LSL #2]
000028  f8d002fc          LDR      r0,[r0,#0x2fc]
;;;187    		s.nContentColor = GUI_RED;
00002c  9001              STR      r0,[sp,#4]
00002e  20ff              MOVS     r0,#0xff
;;;188    		s.nBackGroundColor = GUI_LIGHTGRAY;
000030  9003              STR      r0,[sp,#0xc]
000032  4808              LDR      r0,|L27.84|
;;;189    		s.nAutoCloseTime = 5;
000034  9004              STR      r0,[sp,#0x10]
000036  2005              MOVS     r0,#5
000038  f88d0014          STRB     r0,[sp,#0x14]
;;;190    		s.pFunMiddleOK = NULL;
;;;191    		CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
00003c  9408              STR      r4,[sp,#0x20]
00003e  f7fffffe          BL       GetLastWinFromList
000042  4669              MOV      r1,sp
000044  f7fffffe          BL       CW_ShowDialog_Create
                  |L27.72|
;;;192    	}
;;;193    }
000048  b00c              ADD      sp,sp,#0x30
00004a  bd10              POP      {r4,pc}
;;;194    
                          ENDP

                  |L27.76|
                          DCD      Strings
                  |L27.80|
                          DCD      g_Language
                  |L27.84|
                          DCD      0x00d3d3d3

                          AREA ||i.Result_DataPacket||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_c
                          REQUIRE _printf_str
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  Result_DataPacket PROC
;;;1336   char VERSION[10]="\"A\"";
;;;1337   static unsigned short Result_DataPacket(char *pPackageBuffer)
000000  b5f0              PUSH     {r4-r7,lr}
;;;1338   {
;;;1339   	char *pStr = pPackageBuffer;
;;;1340   	char aResult[20];
;;;1341   	float fTemp;
;;;1342   	 float fLongitude=0,fLatitude=0;
;;;1343   	
;;;1344   	*pStr++='{';
000002  217b              MOVS     r1,#0x7b
000004  b089              SUB      sp,sp,#0x24           ;1338
000006  4605              MOV      r5,r0                 ;1338
000008  f8001b01          STRB     r1,[r0],#1
;;;1345   	sprintf(pStr,"\"alcohol\":%c",'{');
00000c  460a              MOV      r2,r1
00000e  4604              MOV      r4,r0                 ;1344
000010  a190              ADR      r1,|L28.596|
000012  f7fffffe          BL       __2sprintf
;;;1346   	pStr+=strlen(pStr);
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       strlen
00001c  4404              ADD      r4,r4,r0
;;;1347   
;;;1348   	/*记录下有效数据包的起始长度*/
;;;1349   	//pStart = pStr;
;;;1350   	 /*1.用户名*/
;;;1351   	sprintf(pStr, "\"USER\":%s,", username);
00001e  4a91              LDR      r2,|L28.612|
000020  a191              ADR      r1,|L28.616|
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       __2sprintf
;;;1352   	pStr+=strlen(pStr);
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       strlen
;;;1353   
;;;1354   	/*2.登录密码*/
;;;1355   	sprintf(pStr, "\"KEY\":%s,", KeyPassword);
00002e  4a8d              LDR      r2,|L28.612|
000030  4404              ADD      r4,r4,r0              ;1352
000032  3a0c              SUBS     r2,r2,#0xc
000034  a18f              ADR      r1,|L28.628|
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       __2sprintf
;;;1356   	pStr+=strlen(pStr);
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       strlen
;;;1357   
;;;1358   	/*3.JSON的版本*/
;;;1359   	sprintf (pStr, "\"VERSION\":%s,", VERSION);
000042  4a88              LDR      r2,|L28.612|
000044  4404              ADD      r4,r4,r0              ;1356
000046  320a              ADDS     r2,r2,#0xa
000048  a18d              ADR      r1,|L28.640|
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       __2sprintf
;;;1360   	pStr+=strlen(pStr);
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       strlen
;;;1361   
;;;1362   	/*4.设备编号字符串*/
;;;1363   	sprintf(pStr, "\"DEVICE\":\"%s%06d\",", g_sDeviceIDConfig.aNamePrefix, g_sDeviceIDConfig.nDeviceID);
000056  4a8e              LDR      r2,|L28.656|
000058  4404              ADD      r4,r4,r0              ;1360
00005a  a18e              ADR      r1,|L28.660|
00005c  f8d23006          LDR      r3,[r2,#6]  ; g_sDeviceIDConfig
000060  4620              MOV      r0,r4
000062  1c52              ADDS     r2,r2,#1
000064  f7fffffe          BL       __2sprintf
;;;1364   	pStr+=strlen(pStr);
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       strlen
00006e  1906              ADDS     r6,r0,r4
;;;1365   
;;;1366   
;;;1367   	/*5.记录的编号*/ 
;;;1368   	sprintf (pStr, "\"RECORDID\":%08d,", g_sRecord.nRecordIndex);
000070  4c8d              LDR      r4,|L28.680|
000072  a18e              ADR      r1,|L28.684|
000074  4630              MOV      r0,r6
000076  f8542b01          LDR      r2,[r4],#1  ; g_sRecord
00007a  f7fffffe          BL       __2sprintf
;;;1369   	pStr+=strlen(pStr);
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       strlen
000084  4406              ADD      r6,r6,r0
;;;1370   
;;;1371      	
;;;1372   	/*6.日期*/
;;;1373   	sprintf (pStr, "\"DATE\":\"20%02d-%02d-%02d %02d:%02d:%02d\",",
000086  7ba0              LDRB     r0,[r4,#0xe]  ; g_sRecord
000088  7c63              LDRB     r3,[r4,#0x11]  ; g_sRecord
00008a  7c22              LDRB     r2,[r4,#0x10]  ; g_sRecord
00008c  7be1              LDRB     r1,[r4,#0xf]  ; g_sRecord
00008e  e88d000f          STM      sp,{r0-r3}
000092  7b63              LDRB     r3,[r4,#0xd]  ; g_sRecord
000094  7b22              LDRB     r2,[r4,#0xc]  ; g_sRecord
000096  a18a              ADR      r1,|L28.704|
000098  4630              MOV      r0,r6
00009a  f7fffffe          BL       __2sprintf
;;;1374   			 g_sRecord.aDateTime[0], g_sRecord.aDateTime[1],
;;;1375   			 g_sRecord.aDateTime[2], g_sRecord.aDateTime[3],
;;;1376   			 g_sRecord.aDateTime[4], g_sRecord.aDateTime[5]);
;;;1377   	pStr+=strlen(pStr);
00009e  4630              MOV      r0,r6
0000a0  f7fffffe          BL       strlen
0000a4  4406              ADD      r6,r6,r0
;;;1378   
;;;1379        
;;;1380   	 /*7.测试模式*/
;;;1381   	sprintf (pStr, "\"MODE\":\"%d\",",g_sRecord.nTestMode);
0000a6  7ca2              LDRB     r2,[r4,#0x12]  ; g_sRecord
0000a8  a190              ADR      r1,|L28.748|
0000aa  4630              MOV      r0,r6
0000ac  f7fffffe          BL       __2sprintf
;;;1382   	pStr+=strlen(pStr);
0000b0  4630              MOV      r0,r6
0000b2  f7fffffe          BL       strlen
0000b6  4406              ADD      r6,r6,r0
;;;1383   
;;;1384   	 /*8.测试温度*/
;;;1385   	sprintf (pStr, "\"TEMP\":%d,", g_sRecord.nTemperature);
0000b8  f9942003          LDRSB    r2,[r4,#3]  ; g_sRecord
0000bc  a18f              ADR      r1,|L28.764|
0000be  4630              MOV      r0,r6
0000c0  f7fffffe          BL       __2sprintf
;;;1386   	pStr+=strlen(pStr);
0000c4  4630              MOV      r0,r6
0000c6  f7fffffe          BL       strlen
0000ca  4406              ADD      r6,r6,r0
;;;1387   
;;;1388   	 /*9.酒精浓度字符串*/
;;;1389   	fTemp=Get_Final_Convert_Display_Result(g_sRecord.fAlcValue,g_sRecord.nTestUnit, g_sRecord.nKBrACBAC);
0000cc  8aa2              LDRH     r2,[r4,#0x14]  ; g_sRecord
0000ce  7ce1              LDRB     r1,[r4,#0x13]  ; g_sRecord
0000d0  6860              LDR      r0,[r4,#4]  ; g_sRecord
0000d2  f7fffffe          BL       Get_Final_Convert_Display_Result
;;;1390   	Get_Format_Alc_Convert_String(fTemp, g_sRecord.nTestUnit,aResult,eFormatToInt); //eFormatToFloat modified on 20181106
0000d6  7ce1              LDRB     r1,[r4,#0x13]  ; g_sRecord
0000d8  2300              MOVS     r3,#0
0000da  aa04              ADD      r2,sp,#0x10
0000dc  f7fffffe          BL       Get_Format_Alc_Convert_String
;;;1391   	sprintf (pStr, "\"ALC\":%s,", aResult);
0000e0  aa04              ADD      r2,sp,#0x10
0000e2  a189              ADR      r1,|L28.776|
0000e4  4630              MOV      r0,r6
0000e6  f7fffffe          BL       __2sprintf
;;;1392   	pStr+=strlen(pStr);
0000ea  4630              MOV      r0,r6
0000ec  f7fffffe          BL       strlen
0000f0  4406              ADD      r6,r6,r0
;;;1393   
;;;1394   	/*10.测试单位*/
;;;1395   	sprintf(pStr, "\"UNIT\":\"%s\",",Get_Unit_String(g_sRecord.nTestUnit));
0000f2  7ce0              LDRB     r0,[r4,#0x13]  ; g_sRecord
0000f4  f7fffffe          BL       Get_Unit_String
0000f8  4602              MOV      r2,r0
0000fa  a186              ADR      r1,|L28.788|
0000fc  4630              MOV      r0,r6
0000fe  f7fffffe          BL       __2sprintf
;;;1396   	pStr+=strlen(pStr);
000102  4630              MOV      r0,r6
000104  f7fffffe          BL       strlen
000108  4406              ADD      r6,r6,r0
;;;1397   
;;;1398   	/*11.呼气浓度与血液浓度转换系数*/
;;;1399   	sprintf(pStr, "\"K\":%d,",g_sRecord.nKBrACBAC);
00010a  8aa2              LDRH     r2,[r4,#0x14]  ; g_sRecord
00010c  a185              ADR      r1,|L28.804|
00010e  4630              MOV      r0,r6
000110  f7fffffe          BL       __2sprintf
;;;1400   	pStr+=strlen(pStr);
000114  4630              MOV      r0,r6
000116  f7fffffe          BL       strlen
00011a  4406              ADD      r6,r6,r0
;;;1401   
;;;1402   	/*12.酒精浓度字符串描述*/
;;;1403   	sprintf(pStr, "\"ALCSTRING\":\"%s%s\",",aResult,Get_Unit_String(g_sRecord.nTestUnit));
00011c  7ce0              LDRB     r0,[r4,#0x13]  ; g_sRecord
00011e  f7fffffe          BL       Get_Unit_String
000122  4603              MOV      r3,r0
000124  aa04              ADD      r2,sp,#0x10
000126  a181              ADR      r1,|L28.812|
000128  4630              MOV      r0,r6
00012a  f7fffffe          BL       __2sprintf
;;;1404   	pStr+=strlen(pStr);
00012e  4630              MOV      r0,r6
000130  f7fffffe          BL       strlen
000134  4406              ADD      r6,r6,r0
;;;1405   
;;;1406   	
;;;1407   	if(g_sRecord.fLongitude != 0 && g_sRecord.fLatitude != 0)
000136  69a0              LDR      r0,[r4,#0x18]  ; g_sRecord
000138  1e64              SUBS     r4,r4,#1
00013a  f0104fff          TST      r0,#0x7f800000
00013e  d028              BEQ      |L28.402|
000140  f8d4101d          LDR      r1,[r4,#0x1d]  ; g_sRecord
000144  f0114fff          TST      r1,#0x7f800000
000148  d023              BEQ      |L28.402|
;;;1408   	{
;;;1409   	/*13.经度数据*/
;;;1410   	fLongitude=g_sRecord.fLongitude >= 0 ? g_sRecord.fLongitude : -(g_sRecord.fLongitude);
00014a  4f7d              LDR      r7,|L28.832|
00014c  42b8              CMP      r0,r7
00014e  d301              BCC      |L28.340|
000150  f0804000          EOR      r0,r0,#0x80000000
                  |L28.340|
;;;1411   	sprintf(pStr, "\"LONGITUDE\":%f,",fLongitude);
000154  f7fffffe          BL       __aeabi_f2d
000158  4602              MOV      r2,r0
00015a  460b              MOV      r3,r1
00015c  a179              ADR      r1,|L28.836|
00015e  4630              MOV      r0,r6
000160  f7fffffe          BL       __2sprintf
;;;1412   	pStr+=strlen(pStr);
000164  4630              MOV      r0,r6
000166  f7fffffe          BL       strlen
00016a  4406              ADD      r6,r6,r0
;;;1413   	
;;;1414   	/*14.纬度数据*/
;;;1415   	fLatitude=g_sRecord.fLatitude >= 0 ? g_sRecord.fLatitude : -(g_sRecord.fLatitude);
00016c  f8d4001d          LDR      r0,[r4,#0x1d]  ; g_sRecord
000170  42b8              CMP      r0,r7
000172  d301              BCC      |L28.376|
000174  f0804000          EOR      r0,r0,#0x80000000
                  |L28.376|
;;;1416   	sprintf(pStr, "\"Latitude\":%f,",fLatitude);
000178  f7fffffe          BL       __aeabi_f2d
00017c  4602              MOV      r2,r0
00017e  460b              MOV      r3,r1
000180  a174              ADR      r1,|L28.852|
000182  4630              MOV      r0,r6
000184  f7fffffe          BL       __2sprintf
;;;1417   	pStr+=strlen(pStr);
000188  4630              MOV      r0,r6
00018a  f7fffffe          BL       strlen
00018e  1984              ADDS     r4,r0,r6
000190  e011              B        |L28.438|
                  |L28.402|
;;;1418   	}
;;;1419   	else
;;;1420   	{
;;;1421   		/*13.经度数据*/
;;;1422   		sprintf(pStr, "\"LONGITUDE\":%s,","null");
000192  a274              ADR      r2,|L28.868|
000194  a175              ADR      r1,|L28.876|
000196  4630              MOV      r0,r6
000198  f7fffffe          BL       __2sprintf
;;;1423   		pStr+=strlen(pStr);
00019c  4630              MOV      r0,r6
00019e  f7fffffe          BL       strlen
0001a2  1984              ADDS     r4,r0,r6
;;;1424   	
;;;1425   		/*14.纬度数据*/
;;;1426   		sprintf(pStr, "\"Latitude\":%s,","null");
0001a4  a26f              ADR      r2,|L28.868|
0001a6  a175              ADR      r1,|L28.892|
0001a8  4620              MOV      r0,r4
0001aa  f7fffffe          BL       __2sprintf
;;;1427   		pStr+=strlen(pStr);
0001ae  4620              MOV      r0,r4
0001b0  f7fffffe          BL       strlen
0001b4  4404              ADD      r4,r4,r0
                  |L28.438|
;;;1428   	}
;;;1429   
;;;1430   	/*15.测试地点*/
;;;1431   	sprintf(pStr, "\"LOCATION\":\"%s\",",(char *)g_sRecord.aLocation);
0001b6  4a3c              LDR      r2,|L28.680|
0001b8  a174              ADR      r1,|L28.908|
0001ba  3238              ADDS     r2,r2,#0x38
0001bc  4620              MOV      r0,r4
0001be  f7fffffe          BL       __2sprintf
;;;1432   	pStr+=strlen(pStr);
0001c2  4620              MOV      r0,r4
0001c4  f7fffffe          BL       strlen
;;;1433    
;;;1434   	/*16.测试人姓名*/
;;;1435   	sprintf(pStr, "\"TESTEE\":\"%s\",",(char *)g_sRecord.aTestee);
0001c8  4a37              LDR      r2,|L28.680|
0001ca  4404              ADD      r4,r4,r0              ;1432
0001cc  3221              ADDS     r2,r2,#0x21
0001ce  a174              ADR      r1,|L28.928|
0001d0  4620              MOV      r0,r4
0001d2  f7fffffe          BL       __2sprintf
;;;1436   	pStr+=strlen(pStr);
0001d6  4620              MOV      r0,r4
0001d8  f7fffffe          BL       strlen
;;;1437   
;;;1438   	/*17.驾驶证号*/
;;;1439   	sprintf(pStr, "\"DRIVERID\":\"%s\",",(char *)g_sRecord.aDriverLicense);
0001dc  4a32              LDR      r2,|L28.680|
0001de  4404              ADD      r4,r4,r0              ;1436
0001e0  3280              ADDS     r2,r2,#0x80
0001e2  a173              ADR      r1,|L28.944|
0001e4  4620              MOV      r0,r4
0001e6  f7fffffe          BL       __2sprintf
;;;1440   	pStr+=strlen(pStr);
0001ea  4620              MOV      r0,r4
0001ec  f7fffffe          BL       strlen
;;;1441   
;;;1442   	/*18.车牌号*/
;;;1443   	sprintf(pStr, "\"PLATENUMBER\":\"%s\",",(char *)g_sRecord.aPlateNumber);
0001f0  4a2d              LDR      r2,|L28.680|
0001f2  4404              ADD      r4,r4,r0              ;1440
0001f4  3266              ADDS     r2,r2,#0x66
0001f6  a173              ADR      r1,|L28.964|
0001f8  4620              MOV      r0,r4
0001fa  f7fffffe          BL       __2sprintf
;;;1444   	pStr+=strlen(pStr);
0001fe  4620              MOV      r0,r4
000200  f7fffffe          BL       strlen
;;;1445   
;;;1446   	/*19.执勤民警编号*/
;;;1447   	sprintf(pStr, "\"POLICEID\":\"%s\",",(char *)g_sRecord.aPoliceID);
000204  4a28              LDR      r2,|L28.680|
000206  4404              ADD      r4,r4,r0              ;1444
000208  3294              ADDS     r2,r2,#0x94
00020a  a173              ADR      r1,|L28.984|
00020c  4620              MOV      r0,r4
00020e  f7fffffe          BL       __2sprintf
;;;1448   	pStr+=strlen(pStr);
000212  4620              MOV      r0,r4
000214  f7fffffe          BL       strlen
;;;1449   
;;;1450   	/*20.执勤民警姓名*/
;;;1451   	sprintf(pStr, "\"POLICENAME\":\"%s\",",(char *)g_sRecord.aPoliceName);
000218  4a23              LDR      r2,|L28.680|
00021a  4404              ADD      r4,r4,r0              ;1448
00021c  32d1              ADDS     r2,r2,#0xd1
00021e  a173              ADR      r1,|L28.1004|
000220  4620              MOV      r0,r4
000222  f7fffffe          BL       __2sprintf
;;;1452   	pStr+=strlen(pStr);
000226  4620              MOV      r0,r4
000228  f7fffffe          BL       strlen
;;;1453   
;;;1454   	/*21.执法人员所属部门*/
;;;1455   	sprintf(pStr, "\"DEPARTMENT\":\"%s\"",(char *)g_sRecord.aDepartment);
00022c  4a1e              LDR      r2,|L28.680|
00022e  4404              ADD      r4,r4,r0              ;1452
000230  32a3              ADDS     r2,r2,#0xa3
000232  a173              ADR      r1,|L28.1024|
000234  4620              MOV      r0,r4
000236  f7fffffe          BL       __2sprintf
;;;1456   	pStr+=strlen(pStr);
00023a  4620              MOV      r0,r4
00023c  f7fffffe          BL       strlen
000240  4420              ADD      r0,r0,r4
;;;1457   	
;;;1458   	//结束符
;;;1459   	*pStr++='}';
000242  217d              MOVS     r1,#0x7d
000244  f8001b01          STRB     r1,[r0],#1
;;;1460   	
;;;1461   	*pStr++='}';
000248  f8001b01          STRB     r1,[r0],#1
;;;1462   
;;;1463   	return (pStr-pPackageBuffer);
00024c  1b40              SUBS     r0,r0,r5
;;;1464   }
00024e  b009              ADD      sp,sp,#0x24
000250  b280              UXTH     r0,r0                 ;1463
000252  bdf0              POP      {r4-r7,pc}
;;;1465   
                          ENDP

                  |L28.596|
000254  22616c63          DCB      """alcohol"":%c",0
000258  6f686f6c
00025c  223a2563
000260  00      
000261  00                DCB      0
000262  00                DCB      0
000263  00                DCB      0
                  |L28.612|
                          DCD      ||.data||+0x10
                  |L28.616|
000268  22555345          DCB      """USER"":%s,",0
00026c  52223a25
000270  732c00  
000273  00                DCB      0
                  |L28.628|
000274  224b4559          DCB      """KEY"":%s,",0
000278  223a2573
00027c  2c00    
00027e  00                DCB      0
00027f  00                DCB      0
                  |L28.640|
000280  22564552          DCB      """VERSION"":%s,",0
000284  53494f4e
000288  223a2573
00028c  2c00    
00028e  00                DCB      0
00028f  00                DCB      0
                  |L28.656|
                          DCD      g_sDeviceIDConfig
                  |L28.660|
000294  22444556          DCB      """DEVICE"":""%s%06d"",",0
000298  49434522
00029c  3a222573
0002a0  25303664
0002a4  222c00  
0002a7  00                DCB      0
                  |L28.680|
                          DCD      g_sRecord
                  |L28.684|
0002ac  22524543          DCB      """RECORDID"":%08d,",0
0002b0  4f524449
0002b4  44223a25
0002b8  3038642c
0002bc  00      
0002bd  00                DCB      0
0002be  00                DCB      0
0002bf  00                DCB      0
                  |L28.704|
0002c0  22444154          DCB      """DATE"":""20%02d-%02d-%02d %02d:%02d:%02d"",",0
0002c4  45223a22
0002c8  32302530
0002cc  32642d25
0002d0  3032642d
0002d4  25303264
0002d8  20253032
0002dc  643a2530
0002e0  32643a25
0002e4  30326422
0002e8  2c00    
0002ea  00                DCB      0
0002eb  00                DCB      0
                  |L28.748|
0002ec  224d4f44          DCB      """MODE"":""%d"",",0
0002f0  45223a22
0002f4  2564222c
0002f8  00      
0002f9  00                DCB      0
0002fa  00                DCB      0
0002fb  00                DCB      0
                  |L28.764|
0002fc  2254454d          DCB      """TEMP"":%d,",0
000300  50223a25
000304  642c00  
000307  00                DCB      0
                  |L28.776|
000308  22414c43          DCB      """ALC"":%s,",0
00030c  223a2573
000310  2c00    
000312  00                DCB      0
000313  00                DCB      0
                  |L28.788|
000314  22554e49          DCB      """UNIT"":""%s"",",0
000318  54223a22
00031c  2573222c
000320  00      
000321  00                DCB      0
000322  00                DCB      0
000323  00                DCB      0
                  |L28.804|
000324  224b223a          DCB      """K"":%d,",0
000328  25642c00
                  |L28.812|
00032c  22414c43          DCB      """ALCSTRING"":""%s%s"",",0
000330  53545249
000334  4e47223a
000338  22257325
00033c  73222c00
                  |L28.832|
                          DCD      0x80800000
                  |L28.836|
000344  224c4f4e          DCB      """LONGITUDE"":%f,",0
000348  47495455
00034c  4445223a
000350  25662c00
                  |L28.852|
000354  224c6174          DCB      """Latitude"":%f,",0
000358  69747564
00035c  65223a25
000360  662c00  
000363  00                DCB      0
                  |L28.868|
000364  6e756c6c          DCB      "null",0
000368  00      
000369  00                DCB      0
00036a  00                DCB      0
00036b  00                DCB      0
                  |L28.876|
00036c  224c4f4e          DCB      """LONGITUDE"":%s,",0
000370  47495455
000374  4445223a
000378  25732c00
                  |L28.892|
00037c  224c6174          DCB      """Latitude"":%s,",0
000380  69747564
000384  65223a25
000388  732c00  
00038b  00                DCB      0
                  |L28.908|
00038c  224c4f43          DCB      """LOCATION"":""%s"",",0
000390  4154494f
000394  4e223a22
000398  2573222c
00039c  00      
00039d  00                DCB      0
00039e  00                DCB      0
00039f  00                DCB      0
                  |L28.928|
0003a0  22544553          DCB      """TESTEE"":""%s"",",0
0003a4  54454522
0003a8  3a222573
0003ac  222c00  
0003af  00                DCB      0
                  |L28.944|
0003b0  22445249          DCB      """DRIVERID"":""%s"",",0
0003b4  56455249
0003b8  44223a22
0003bc  2573222c
0003c0  00      
0003c1  00                DCB      0
0003c2  00                DCB      0
0003c3  00                DCB      0
                  |L28.964|
0003c4  22504c41          DCB      """PLATENUMBER"":""%s"",",0
0003c8  54454e55
0003cc  4d424552
0003d0  223a2225
0003d4  73222c00
                  |L28.984|
0003d8  22504f4c          DCB      """POLICEID"":""%s"",",0
0003dc  49434549
0003e0  44223a22
0003e4  2573222c
0003e8  00      
0003e9  00                DCB      0
0003ea  00                DCB      0
0003eb  00                DCB      0
                  |L28.1004|
0003ec  22504f4c          DCB      """POLICENAME"":""%s"",",0
0003f0  4943454e
0003f4  414d4522
0003f8  3a222573
0003fc  222c00  
0003ff  00                DCB      0
                  |L28.1024|
000400  22444550          DCB      """DEPARTMENT"":""%s""",0
000404  4152544d
000408  454e5422
00040c  3a222573
000410  2200    
000412  00                DCB      0
000413  00                DCB      0

                          AREA ||i.Save_Hardware_IMEI||, CODE, READONLY, ALIGN=2

                  Save_Hardware_IMEI PROC
;;;90     
;;;91     void Save_Hardware_IMEI(char *aString)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;92     {
000004  4606              MOV      r6,r0
;;;93     	g_sGPRSUser.bGetValidIMEI = true;
000006  4d0f              LDR      r5,|L29.68|
;;;94     	if(memcmp(g_sSystemParam.aIMEI,aString, 15))
000008  4601              MOV      r1,r0
00000a  480f              LDR      r0,|L29.72|
00000c  2401              MOVS     r4,#1                 ;93
00000e  702c              STRB     r4,[r5,#0]            ;93
000010  220f              MOVS     r2,#0xf
000012  4607              MOV      r7,r0
000014  f7fffffe          BL       memcmp
000018  2800              CMP      r0,#0
00001a  d011              BEQ      |L29.64|
;;;95     	{
;;;96     		memset(g_sSystemParam.aIMEI, 0, sizeof(g_sSystemParam.aIMEI));
00001c  2110              MOVS     r1,#0x10
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       __aeabi_memclr
;;;97     		memcpy(g_sSystemParam.aIMEI, aString, 15);
000024  220f              MOVS     r2,#0xf
000026  4631              MOV      r1,r6
000028  4638              MOV      r0,r7
00002a  f7fffffe          BL       __aeabi_memcpy
;;;98     		Data_System_Parameter_Save(&g_sSystemParam);
00002e  4806              LDR      r0,|L29.72|
000030  3819              SUBS     r0,r0,#0x19
000032  f7fffffe          BL       Data_System_Parameter_Save
;;;99     		Data_System_Parameter_Load(&g_sSystemParam);
000036  4804              LDR      r0,|L29.72|
000038  3819              SUBS     r0,r0,#0x19
00003a  f7fffffe          BL       Data_System_Parameter_Load
;;;100    		/*当前条目重新取数据*/
;;;101    		g_sGPRSUser.bSwitchNewState = true;
00003e  71ec              STRB     r4,[r5,#7]
                  |L29.64|
;;;102    	}
;;;103    }
000040  e8bd81f0          POP      {r4-r8,pc}
;;;104    
                          ENDP

                  |L29.68|
                          DCD      ||.bss||
                  |L29.72|
                          DCD      g_sSystemParam+0x19

                          AREA ||i.Update_Already_Upload_Record_Counter||, CODE, READONLY, ALIGN=2

                  Update_Already_Upload_Record_Counter PROC
;;;162    
;;;163    void Update_Already_Upload_Record_Counter(void)
000000  b510              PUSH     {r4,lr}
;;;164    {
;;;165    	g_nAlreadyUploadCounter++;
000002  4c0b              LDR      r4,|L30.48|
;;;166    	if(g_nAlreadyUploadCounter > g_sRecordInforMap.nTotalRecordsCounter)
000004  490b              LDR      r1,|L30.52|
000006  6820              LDR      r0,[r4,#0]            ;165  ; g_nAlreadyUploadCounter
000008  1c40              ADDS     r0,r0,#1              ;165
00000a  6020              STR      r0,[r4,#0]  ; g_nAlreadyUploadCounter
00000c  6809              LDR      r1,[r1,#0]  ; g_sRecordInforMap
00000e  4281              CMP      r1,r0
000010  d200              BCS      |L30.20|
;;;167    	{
;;;168    		g_nAlreadyUploadCounter = g_sRecordInforMap.nTotalRecordsCounter;
000012  6021              STR      r1,[r4,#0]  ; g_nAlreadyUploadCounter
                  |L30.20|
;;;169    	}
;;;170    	Data_Already_Upload_Counter_Save(&g_nAlreadyUploadCounter);
000014  4806              LDR      r0,|L30.48|
000016  f7fffffe          BL       Data_Already_Upload_Counter_Save
;;;171    	Data_Already_Upload_Counter_Load(&g_nAlreadyUploadCounter);
00001a  4805              LDR      r0,|L30.48|
00001c  f7fffffe          BL       Data_Already_Upload_Counter_Load
;;;172    	TRACE_PRINTF("Finish upload record(g_nAlreadyUploadCounter = %d)!\r\n", g_nAlreadyUploadCounter);
000020  a005              ADR      r0,|L30.56|
000022  6821              LDR      r1,[r4,#0]  ; g_nAlreadyUploadCounter
000024  f7fffffe          BL       User_Debug_Printf
;;;173    
;;;174    	Inform_Window_Gprs_Upload_Successful();
000028  e8bd4010          POP      {r4,lr}
00002c  f7ffbffe          B.W      Inform_Window_Gprs_Upload_Successful
;;;175    }
;;;176    
                          ENDP

                  |L30.48|
                          DCD      g_nAlreadyUploadCounter
                  |L30.52|
                          DCD      g_sRecordInforMap
                  |L30.56|
000038  46696e69          DCB      "Finish upload record(g_nAlreadyUploadCounter = %d)!\r\n"
00003c  73682075
000040  706c6f61
000044  64207265
000048  636f7264
00004c  28675f6e
000050  416c7265
000054  61647955
000058  706c6f61
00005c  64436f75
000060  6e746572
000064  203d2025
000068  6429210d
00006c  0a      
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0

                          AREA ||i.Upload_Record_Var_Init||, CODE, READONLY, ALIGN=2

                  Upload_Record_Var_Init PROC
;;;55     /*进入主循环前调用,开机调用一次即可.*/
;;;56     void Upload_Record_Var_Init(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58     	memset(&g_sGPRSUser, 0, sizeof(g_sGPRSUser));
000002  f44f718f          MOV      r1,#0x11e
000006  4807              LDR      r0,|L31.36|
000008  f7fffffe          BL       __aeabi_memclr
;;;59     	g_sGPRSUser.bSwitchNewState = true;
00000c  4c05              LDR      r4,|L31.36|
00000e  2001              MOVS     r0,#1
000010  71e0              STRB     r0,[r4,#7]
;;;60     	g_sGPRSUser.eUserState = eGprsUserGetIMEI;
000012  7260              STRB     r0,[r4,#9]
000014  4804              LDR      r0,|L31.40|
;;;61     	g_sGPRSUser.bGetValidIMEI = strlen(Get_Hardware_IMEI()) ? true : false;
000016  f7fffffe          BL       strlen
00001a  b100              CBZ      r0,|L31.30|
00001c  2001              MOVS     r0,#1
                  |L31.30|
00001e  7020              STRB     r0,[r4,#0]
;;;62     }
000020  bd10              POP      {r4,pc}
;;;63     
                          ENDP

000022  0000              DCW      0x0000
                  |L31.36|
                          DCD      ||.bss||
                  |L31.40|
                          DCD      g_sSystemParam+0x19

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  g_sGPRSUser
                          %        286

                          AREA ||.data||, DATA, ALIGN=2

                  ul_Current_Time
                          DCD      0x00000000
                  KeyPassword
000004  22313233          DCB      0x22,0x31,0x32,0x33
000008  34353622          DCB      0x34,0x35,0x36,0x22
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  username
000010  22546573          DCB      0x22,0x54,0x65,0x73
000014  74220000          DCB      0x74,0x22,0x00,0x00
000018  0000              DCB      0x00,0x00
                  VERSION
00001a  2241              DCB      0x22,0x41
00001c  22000000          DCB      0x22,0x00,0x00,0x00
                          DCD      0x00000000
                  GET_URL
000024  47455420          DCB      0x47,0x45,0x54,0x20
000028  2f6b6579          DCB      0x2f,0x6b,0x65,0x79
00002c  756e2f61          DCB      0x75,0x6e,0x2f,0x61
000030  6c636f68          DCB      0x6c,0x63,0x6f,0x68
000034  6f6c2f64          DCB      0x6f,0x6c,0x2f,0x64
000038  65766963          DCB      0x65,0x76,0x69,0x63
00003c  65536572          DCB      0x65,0x53,0x65,0x72
000040  76696365          DCB      0x76,0x69,0x63,0x65
000044  2f746573          DCB      0x2f,0x74,0x65,0x73
000048  74202048          DCB      0x74,0x20,0x20,0x48
00004c  5454502f          DCB      0x54,0x54,0x50,0x2f
000050  312e310a          DCB      0x31,0x2e,0x31,0x0a
000054  00000000          DCB      0x00,0x00,0x00,0x00
                          %        28
                  GET_HeartURL
000074  47455420          DCB      0x47,0x45,0x54,0x20
000078  2f6b6579          DCB      0x2f,0x6b,0x65,0x79
00007c  756e2f61          DCB      0x75,0x6e,0x2f,0x61
000080  6c636f68          DCB      0x6c,0x63,0x6f,0x68
000084  6f6c2f64          DCB      0x6f,0x6c,0x2f,0x64
000088  65766963          DCB      0x65,0x76,0x69,0x63
00008c  65536572          DCB      0x65,0x53,0x65,0x72
000090  76696365          DCB      0x76,0x69,0x63,0x65
000094  2f737461          DCB      0x2f,0x73,0x74,0x61
000098  74652020          DCB      0x74,0x65,0x20,0x20
00009c  48545450          DCB      0x48,0x54,0x54,0x50
0000a0  2f312e31          DCB      0x2f,0x31,0x2e,0x31
0000a4  0a000000          DCB      0x0a,0x00,0x00,0x00
                          %        28
