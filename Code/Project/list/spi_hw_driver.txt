; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\spi_hw_driver.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\spi_hw_driver.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\Board_Support_Package\spi_hw_driver.c]
                          THUMB

                          AREA ||i.Spi_Hw_Get_Single_Byte||, CODE, READONLY, ALIGN=2

                  Spi_Hw_Get_Single_Byte PROC
;;;33     
;;;34     unsigned char Spi_Hw_Get_Single_Byte(void)
000000  b510              PUSH     {r4,lr}
;;;35     {
;;;36     	unsigned char nValue;
;;;37     	while(SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE) == RESET);
000002  4c0b              LDR      r4,|L1.48|
                  |L1.4|
000004  2102              MOVS     r1,#2
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       SPI_I2S_GetFlagStatus
00000c  2800              CMP      r0,#0
00000e  d0f9              BEQ      |L1.4|
;;;38     	SPI_I2S_SendData(SPI1, 0xAA);
000010  21aa              MOVS     r1,#0xaa
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       SPI_I2S_SendData
                  |L1.24|
;;;39     
;;;40     	while(SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE) == RESET);
000018  2101              MOVS     r1,#1
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       SPI_I2S_GetFlagStatus
000020  2800              CMP      r0,#0
000022  d0f9              BEQ      |L1.24|
;;;41     	nValue = SPI_I2S_ReceiveData(SPI1);
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       SPI_I2S_ReceiveData
00002a  b2c0              UXTB     r0,r0
;;;42     	return nValue;
;;;43     }
00002c  bd10              POP      {r4,pc}
;;;44     
                          ENDP

00002e  0000              DCW      0x0000
                  |L1.48|
                          DCD      0x40013000

                          AREA ||i.Spi_Hw_Init||, CODE, READONLY, ALIGN=2

                  Spi_Hw_Init PROC
;;;2      
;;;3      void Spi_Hw_Init(void)
000000  b510              PUSH     {r4,lr}
;;;4      {
;;;5      	SPI_InitTypeDef  SPI_InitStructure;
;;;6      	GPIO_InitTypeDef GPIO_InitStructure;
;;;7      
;;;8      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1,ENABLE);
000002  2101              MOVS     r1,#1
000004  b086              SUB      sp,sp,#0x18           ;4
000006  0308              LSLS     r0,r1,#12
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;9      
;;;10     	/* Configure SPI1 pins: SCK, MISO and MOSI */
;;;11     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 |GPIO_Pin_6|GPIO_Pin_7;
00000c  20e0              MOVS     r0,#0xe0
00000e  f8ad0014          STRH     r0,[sp,#0x14]
;;;12     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000012  2003              MOVS     r0,#3
000014  f88d0016          STRB     r0,[sp,#0x16]
;;;13     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000018  2018              MOVS     r0,#0x18
00001a  f88d0017          STRB     r0,[sp,#0x17]
;;;14     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001e  a905              ADD      r1,sp,#0x14
000020  4813              LDR      r0,|L2.112|
000022  f7fffffe          BL       GPIO_Init
;;;15     
;;;16     	/* SPI1 configuration */
;;;17     	SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
000026  2000              MOVS     r0,#0
000028  f8ad0000          STRH     r0,[sp,#0]
;;;18     	SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
;;;19     	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
00002c  f8ad0004          STRH     r0,[sp,#4]
000030  f44f7182          MOV      r1,#0x104             ;18
000034  f8ad1002          STRH     r1,[sp,#2]            ;18
;;;20     	SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;
000038  2102              MOVS     r1,#2
00003a  f8ad1006          STRH     r1,[sp,#6]
;;;21     	SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;
00003e  2101              MOVS     r1,#1
;;;22     	SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
;;;23     	SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
000040  f8ad000c          STRH     r0,[sp,#0xc]
000044  f8ad1008          STRH     r1,[sp,#8]            ;21
;;;24     	SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
000048  f8ad000e          STRH     r0,[sp,#0xe]
00004c  0249              LSLS     r1,r1,#9              ;22
;;;25     	SPI_InitStructure.SPI_CRCPolynomial = 7;
00004e  2007              MOVS     r0,#7
;;;26     	SPI_Init(SPI1, &SPI_InitStructure);
000050  4c08              LDR      r4,|L2.116|
000052  f8ad100a          STRH     r1,[sp,#0xa]          ;22
000056  f8ad0010          STRH     r0,[sp,#0x10]         ;25
00005a  4669              MOV      r1,sp
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       SPI_Init
;;;27     
;;;28     	/* Enable SPI1 */
;;;29     	SPI_Cmd(SPI1, ENABLE);
000062  2101              MOVS     r1,#1
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       SPI_Cmd
;;;30     }
00006a  b006              ADD      sp,sp,#0x18
00006c  bd10              POP      {r4,pc}
;;;31     
                          ENDP

00006e  0000              DCW      0x0000
                  |L2.112|
                          DCD      0x40010800
                  |L2.116|
                          DCD      0x40013000

                          AREA ||i.Spi_Hw_Send_Single_Byte||, CODE, READONLY, ALIGN=2

                  Spi_Hw_Send_Single_Byte PROC
;;;44     
;;;45     void Spi_Hw_Send_Single_Byte(unsigned char nData)
000000  b570              PUSH     {r4-r6,lr}
;;;46     {
;;;47     	while(SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE) == RESET);
000002  4c0b              LDR      r4,|L3.48|
000004  4605              MOV      r5,r0                 ;46
                  |L3.6|
000006  2102              MOVS     r1,#2
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       SPI_I2S_GetFlagStatus
00000e  2800              CMP      r0,#0
000010  d0f9              BEQ      |L3.6|
;;;48     	SPI_I2S_SendData(SPI1, nData);
000012  4629              MOV      r1,r5
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       SPI_I2S_SendData
                  |L3.26|
;;;49     
;;;50     	while(SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE) == RESET);
00001a  2101              MOVS     r1,#1
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       SPI_I2S_GetFlagStatus
000022  2800              CMP      r0,#0
000024  d0f9              BEQ      |L3.26|
;;;51     	SPI_I2S_ReceiveData(SPI1);
000026  4620              MOV      r0,r4
000028  e8bd4070          POP      {r4-r6,lr}
00002c  f7ffbffe          B.W      SPI_I2S_ReceiveData
;;;52     }
                          ENDP

                  |L3.48|
                          DCD      0x40013000
