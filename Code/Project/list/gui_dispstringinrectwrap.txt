; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_dispstringinrectwrap.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_dispstringinrectwrap.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_DispStringInRectWrap.c]
                          THUMB

                          AREA ||i.GUI_DispStringInRectWrap||, CODE, READONLY, ALIGN=1

                  GUI_DispStringInRectWrap PROC
;;;31     */
;;;32     void GUI_DispStringInRectWrap(const char GUI_UNI_PTR * s, GUI_RECT * pRect, int TextAlign, GUI_WRAPMODE WrapMode) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b085              SUB      sp,sp,#0x14
000006  4692              MOV      r10,r2
000008  468b              MOV      r11,r1
00000a  0007              MOVS     r7,r0
00000c  d07e              BEQ      |L1.268|
;;;33       const GUI_RECT * pOldClipRect;
;;;34       GUI_RECT Rect;
;;;35       int xSize, ySizeFont, NumBytesToNextLine, NumCharsDisp;
;;;36       if (!s) {
;;;37         return;
;;;38       }
;;;39       GUI_LOCK();
;;;40       Rect      = *pRect;
00000e  680c              LDR      r4,[r1,#0]
000010  f8db6004          LDR      r6,[r11,#4]
000014  b221              SXTH     r1,r4
000016  b230              SXTH     r0,r6
;;;41       xSize     = Rect.x1 - Rect.x0 + 1;
000018  1a40              SUBS     r0,r0,r1
00001a  1c40              ADDS     r0,r0,#1
;;;42       ySizeFont = GUI_GetFontDistY();
00001c  9002              STR      r0,[sp,#8]
00001e  f7fffffe          BL       GUI_GetFontDistY
000022  4605              MOV      r5,r0
;;;43       /* Vertical alignment */
;;;44       if ((TextAlign & GUI_TA_VERTICAL) != GUI_TA_TOP) {
000024  f01a0f0c          TST      r10,#0xc
000028  d026              BEQ      |L1.120|
;;;45         int NumLines = 0;
00002a  f04f0900          MOV      r9,#0
;;;46         const char GUI_UNI_PTR * pText;
;;;47         pText = s;
00002e  46b8              MOV      r8,r7
                  |L1.48|
;;;48         /* Count the number of lines */
;;;49         do {
;;;50           NumBytesToNextLine = GUI__WrapGetNumBytesToNextLine(pText, xSize, WrapMode);
000030  4640              MOV      r0,r8
000032  9a08              LDR      r2,[sp,#0x20]
000034  9902              LDR      r1,[sp,#8]
000036  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
;;;51           pText += NumBytesToNextLine;
00003a  4480              ADD      r8,r8,r0
;;;52           if (NumBytesToNextLine) {
00003c  b110              CBZ      r0,|L1.68|
;;;53             NumLines++;
00003e  f1090901          ADD      r9,r9,#1
000042  e7f5              B        |L1.48|
                  |L1.68|
;;;54           }
;;;55         } while (NumBytesToNextLine);
;;;56         /* Do the vertical alignment */
;;;57         switch (TextAlign & GUI_TA_VERTICAL) {
000044  f00a000c          AND      r0,r10,#0xc
000048  2804              CMP      r0,#4
00004a  d004              BEQ      |L1.86|
00004c  2808              CMP      r0,#8
00004e  d002              BEQ      |L1.86|
000050  280c              CMP      r0,#0xc
000052  d111              BNE      |L1.120|
000054  e004              B        |L1.96|
                  |L1.86|
000056  1431              ASRS     r1,r6,#16
;;;58     	  case GUI_TA_BASELINE:
;;;59     	  case GUI_TA_BOTTOM:
;;;60           Rect.y0 = Rect.y1 - NumLines * ySizeFont + 1;
000058  fb091015          MLS      r0,r9,r5,r1
00005c  1c40              ADDS     r0,r0,#1
;;;61           break;
00005e  e009              B        |L1.116|
                  |L1.96|
000060  1421              ASRS     r1,r4,#16
;;;62     	  case GUI_TA_VCENTER:
;;;63     		  Rect.y0 = Rect.y0 + (Rect.y1 - Rect.y0 + 1 - NumLines * ySizeFont) / 2;
000062  ebc14226          RSB      r2,r1,r6,ASR #16
000066  fb092015          MLS      r0,r9,r5,r2
00006a  1c40              ADDS     r0,r0,#1
00006c  eb0070d0          ADD      r0,r0,r0,LSR #31
000070  eb010060          ADD      r0,r1,r0,ASR #1
                  |L1.116|
000074  f360441f          BFI      r4,r0,#16,#16
                  |L1.120|
;;;64           break;
;;;65     	  }
;;;66       }
;;;67       pOldClipRect = GUI_SetClipRect(pRect);
000078  4658              MOV      r0,r11
00007a  f7fffffe          BL       GUI_SetClipRect
00007e  4681              MOV      r9,r0
;;;68       do {
;;;69         int xLineSize;
;;;70         GUI_RECT RectText;
;;;71         NumCharsDisp = GUI__WrapGetNumCharsDisp(s, xSize, WrapMode);
;;;72         Rect.y1      = Rect.y0 + ySizeFont - 1;
000080  f1a50801          SUB      r8,r5,#1
                  |L1.132|
000084  4638              MOV      r0,r7                 ;71
000086  9a08              LDR      r2,[sp,#0x20]         ;71
000088  9902              LDR      r1,[sp,#8]            ;71
00008a  f7fffffe          BL       GUI__WrapGetNumCharsDisp
00008e  9003              STR      r0,[sp,#0xc]
000090  eb084024          ADD      r0,r8,r4,ASR #16
000094  f360461f          BFI      r6,r0,#16,#16
000098  e9cd4600          STRD     r4,r6,[sp,#0]
;;;73         RectText     = Rect;
;;;74         /* Horizontal alignment */
;;;75         xLineSize = GUI__GetLineDistX(s, NumCharsDisp);
00009c  4638              MOV      r0,r7
00009e  9903              LDR      r1,[sp,#0xc]
0000a0  f7fffffe          BL       GUI__GetLineDistX
;;;76         switch (TextAlign & GUI_TA_HORIZONTAL) {
0000a4  f01a0103          ANDS     r1,r10,#3
0000a8  d00e              BEQ      |L1.200|
0000aa  2901              CMP      r1,#1
0000ac  d028              BEQ      |L1.256|
0000ae  2902              CMP      r1,#2
0000b0  d10e              BNE      |L1.208|
;;;77         case GUI_TA_HCENTER:
;;;78           RectText.x0 = pRect->x0 + (pRect->x1 - pRect->x0 - xLineSize) / 2;
0000b2  f9bb2004          LDRSH    r2,[r11,#4]
0000b6  f9bb1000          LDRSH    r1,[r11,#0]
0000ba  1a52              SUBS     r2,r2,r1
0000bc  1a10              SUBS     r0,r2,r0
0000be  eb0070d0          ADD      r0,r0,r0,LSR #31
0000c2  eb010060          ADD      r0,r1,r0,ASR #1
;;;79           break;
0000c6  e001              B        |L1.204|
                  |L1.200|
;;;80         case GUI_TA_LEFT:
;;;81           RectText.x0 = pRect->x0;
0000c8  f8bb0000          LDRH     r0,[r11,#0]
                  |L1.204|
0000cc  f8ad0000          STRH     r0,[sp,#0]            ;78
                  |L1.208|
;;;82           break;
;;;83         case GUI_TA_RIGHT:
;;;84           RectText.x0 = pRect->x1 - xLineSize + 1;
;;;85           break;
;;;86         }
;;;87         GUI__DispLine(s, NumCharsDisp, &RectText);
0000d0  466a              MOV      r2,sp
0000d2  4638              MOV      r0,r7
0000d4  9903              LDR      r1,[sp,#0xc]
0000d6  f7fffffe          BL       GUI__DispLine
;;;88         s += GUI__WrapGetNumBytesToNextLine(s, xSize, WrapMode);
0000da  4638              MOV      r0,r7
0000dc  9a08              LDR      r2,[sp,#0x20]
0000de  9902              LDR      r1,[sp,#8]
0000e0  f7fffffe          BL       GUI__WrapGetNumBytesToNextLine
0000e4  4407              ADD      r7,r7,r0
;;;89         Rect.y0 += ySizeFont;
0000e6  eb054024          ADD      r0,r5,r4,ASR #16
0000ea  f360441f          BFI      r4,r0,#16,#16
;;;90       } while (*s);
0000ee  7838              LDRB     r0,[r7,#0]
0000f0  2800              CMP      r0,#0
0000f2  d1c7              BNE      |L1.132|
;;;91       GUI_SetClipRect(pOldClipRect);
0000f4  b009              ADD      sp,sp,#0x24
0000f6  4648              MOV      r0,r9
0000f8  e8bd4ff0          POP      {r4-r11,lr}
0000fc  f7ffbffe          B.W      GUI_SetClipRect
                  |L1.256|
000100  f8bb1004          LDRH     r1,[r11,#4]           ;84
000104  1a08              SUBS     r0,r1,r0              ;84
000106  1c40              ADDS     r0,r0,#1              ;84
000108  e7e0              B        |L1.204|
00010a  e7ff              B        |L1.268|
                  |L1.268|
;;;92       GUI_UNLOCK();
;;;93     }
00010c  b009              ADD      sp,sp,#0x24
00010e  e8bd8ff0          POP      {r4-r11,pc}
;;;94     
                          ENDP

