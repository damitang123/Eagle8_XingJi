; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guistream.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guistream.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUIStream.c]
                          THUMB

                          AREA ||i.GUI_DrawStreamedBitmap||, CODE, READONLY, ALIGN=1

                  GUI_DrawStreamedBitmap PROC
;;;32     */
;;;33     void GUI_DrawStreamedBitmap(const GUI_BITMAP_STREAM *pBitmapHeader, int x, int y) {
000000  b570              PUSH     {r4-r6,lr}
000002  b088              SUB      sp,sp,#0x20
000004  460e              MOV      r6,r1
000006  4604              MOV      r4,r0
000008  4615              MOV      r5,r2
;;;34       GUI_BITMAP Bitmap = {0};
00000a  2114              MOVS     r1,#0x14
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       __aeabi_memclr4
;;;35       GUI_LOGPALETTE Palette;
;;;36       Bitmap.BitsPerPixel = pBitmapHeader->BitsPerPixel;
000012  8960              LDRH     r0,[r4,#0xa]
000014  f8ad0006          STRH     r0,[sp,#6]
;;;37       Bitmap.BytesPerLine = pBitmapHeader->BytesPerLine;
000018  8920              LDRH     r0,[r4,#8]
00001a  f8ad0004          STRH     r0,[sp,#4]
;;;38       Bitmap.pData        = ((const U8*)pBitmapHeader)+16+4*pBitmapHeader->NumColors;
00001e  89a0              LDRH     r0,[r4,#0xc]
;;;39       Bitmap.pPal         = &Palette;
;;;40       Bitmap.XSize        = pBitmapHeader->XSize;
;;;41       Bitmap.YSize        = pBitmapHeader->YSize;
;;;42       Palette.HasTrans    = pBitmapHeader->HasTrans;
;;;43       Palette.NumEntries  = pBitmapHeader->NumColors;
;;;44       Palette.pPalEntries = (const LCD_COLOR*)((const U8*)pBitmapHeader+16);
;;;45       GUI_DrawBitmap(&Bitmap, x, y);
000020  462a              MOV      r2,r5
000022  eb040080          ADD      r0,r4,r0,LSL #2       ;38
000026  3010              ADDS     r0,r0,#0x10           ;38
000028  9002              STR      r0,[sp,#8]            ;39
00002a  a805              ADD      r0,sp,#0x14           ;39
00002c  9003              STR      r0,[sp,#0xc]          ;40
00002e  88a0              LDRH     r0,[r4,#4]            ;40
000030  f8ad0000          STRH     r0,[sp,#0]            ;40
000034  88e0              LDRH     r0,[r4,#6]            ;41
000036  f8ad0002          STRH     r0,[sp,#2]            ;41
00003a  7ba0              LDRB     r0,[r4,#0xe]          ;42
00003c  f88d0018          STRB     r0,[sp,#0x18]         ;42
000040  89a0              LDRH     r0,[r4,#0xc]          ;43
000042  3410              ADDS     r4,r4,#0x10           ;43
000044  9005              STR      r0,[sp,#0x14]
000046  4631              MOV      r1,r6
000048  9407              STR      r4,[sp,#0x1c]
00004a  4668              MOV      r0,sp
00004c  f7fffffe          BL       GUI_DrawBitmap
;;;46     }
000050  b008              ADD      sp,sp,#0x20
000052  bd70              POP      {r4-r6,pc}
;;;47     
                          ENDP

