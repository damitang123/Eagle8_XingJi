; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdaa.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdaa.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\LCDAA.c]
                          THUMB

                          AREA ||i.LCD_AA_MixColors||, CODE, READONLY, ALIGN=1

                  LCD_AA_MixColors PROC
;;;61     */
;;;62     LCD_COLOR LCD_AA_MixColors(LCD_COLOR Color, LCD_COLOR BkColor, U8 Intens) {
000000  b530              PUSH     {r4,r5,lr}
;;;63       /* Calc Color seperations for FgColor first */
;;;64       I32 R = (Color&0xff)*Intens;
000002  b2c4              UXTB     r4,r0
;;;65       I32 G = (Color&0xff00)*Intens;
000004  f400457f          AND      r5,r0,#0xff00
;;;66       I32 B = (Color&0xff0000)*Intens;
000008  f400037f          AND      r3,r0,#0xff0000
;;;67       /* Add Color seperations for BkColor */
;;;68       Intens = 15-Intens;
00000c  f1c2000f          RSB      r0,r2,#0xf
000010  4354              MULS     r4,r2,r4              ;64
000012  4355              MULS     r5,r2,r5              ;65
000014  4353              MULS     r3,r2,r3              ;66
000016  b2c0              UXTB     r0,r0
;;;69       R += (BkColor&0xff)*Intens;
000018  b2ca              UXTB     r2,r1
00001a  fb024200          MLA      r2,r2,r0,r4
;;;70       G += (BkColor&0xff00)*Intens;
00001e  f401447f          AND      r4,r1,#0xff00
;;;71       B += (BkColor&0xff0000)*Intens;
000022  f401017f          AND      r1,r1,#0xff0000
000026  fb045400          MLA      r4,r4,r0,r5           ;70
00002a  fb013100          MLA      r1,r1,r0,r3
;;;72       R = (R/15)&0xff;
00002e  200f              MOVS     r0,#0xf
000030  fb92f2f0          SDIV     r2,r2,r0
000034  b2d3              UXTB     r3,r2
;;;73       G = (G/15)&0xff00;
000036  fb94f2f0          SDIV     r2,r4,r0
;;;74       B = (B/15)&0xff0000;
00003a  fb91f0f0          SDIV     r0,r1,r0
00003e  f402427f          AND      r2,r2,#0xff00         ;73
000042  f400007f          AND      r0,r0,#0xff0000
;;;75       Color = R+G+B;
000046  1899              ADDS     r1,r3,r2
000048  4408              ADD      r0,r0,r1
;;;76       return Color;
;;;77     }
00004a  bd30              POP      {r4,r5,pc}
;;;78     
                          ENDP


                          AREA ||i.LCD_SetPixelAA||, CODE, READONLY, ALIGN=2

                  LCD_SetPixelAA PROC
;;;82     */
;;;83     void LCD_SetPixelAA(int x, int y, U8 Intens) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  0017              MOVS     r7,r2
000006  460d              MOV      r5,r1
000008  4606              MOV      r6,r0
00000a  d02e              BEQ      |L2.106|
;;;84       if (Intens == 0)
;;;85         return;
;;;86       RETURN_IF_Y_OUT();
00000c  4c18              LDR      r4,|L2.112|
00000e  f9b4000a          LDRSH    r0,[r4,#0xa]  ; GUI_Context
000012  42a8              CMP      r0,r5
000014  dc29              BGT      |L2.106|
000016  f9b4000e          LDRSH    r0,[r4,#0xe]  ; GUI_Context
00001a  42a8              CMP      r0,r5
00001c  db25              BLT      |L2.106|
;;;87       RETURN_IF_X_OUT();
00001e  f9b40008          LDRSH    r0,[r4,#8]  ; GUI_Context
000022  42b0              CMP      r0,r6
000024  dc21              BGT      |L2.106|
000026  f9b4000c          LDRSH    r0,[r4,#0xc]  ; GUI_Context
00002a  42b0              CMP      r0,r6
00002c  db1d              BLT      |L2.106|
00002e  4620              MOV      r0,r4                 ;86
;;;88       if (Intens >= 15) {
000030  2f0f              CMP      r7,#0xf
;;;89         LCDDEV_L0_SetPixelIndex(x,y, LCD_COLORINDEX);
000032  8840              LDRH     r0,[r0,#2]
000034  d303              BCC      |L2.62|
000036  6ce1              LDR      r1,[r4,#0x4c]  ; GUI_Context
000038  4602              MOV      r2,r0
00003a  6a4b              LDR      r3,[r1,#0x24]
00003c  e010              B        |L2.96|
                  |L2.62|
;;;90       } else {
;;;91         LCD_COLOR Color = LCD_Index2Color(LCD_COLORINDEX);
00003e  f7fffffe          BL       LCD_Index2Color
000042  4680              MOV      r8,r0
;;;92         LCD_COLOR BkColor =  LCD_GetPixelColor(x,y);
000044  4629              MOV      r1,r5
000046  4630              MOV      r0,r6
000048  f7fffffe          BL       LCD_GetPixelColor
00004c  4601              MOV      r1,r0
;;;93         Color = LCD_AA_MixColors(Color, BkColor, Intens);
00004e  463a              MOV      r2,r7
000050  4640              MOV      r0,r8
000052  f7fffffe          BL       LCD_AA_MixColors
;;;94         LCDDEV_L0_SetPixelIndex(x,y, LCD_Color2Index(Color));
000056  f7fffffe          BL       LCD_Color2Index
00005a  4602              MOV      r2,r0
00005c  6ce0              LDR      r0,[r4,#0x4c]  ; GUI_Context
00005e  6a43              LDR      r3,[r0,#0x24]
                  |L2.96|
000060  4629              MOV      r1,r5
000062  4630              MOV      r0,r6
000064  e8bd41f0          POP      {r4-r8,lr}
000068  4718              BX       r3
                  |L2.106|
;;;95       }
;;;96     }
00006a  e8bd81f0          POP      {r4-r8,pc}
;;;97     
                          ENDP

00006e  0000              DCW      0x0000
                  |L2.112|
                          DCD      GUI_Context

                          AREA ||i.LCD_SetPixelAA_NoTrans||, CODE, READONLY, ALIGN=2

                  LCD_SetPixelAA_NoTrans PROC
;;;101    */
;;;102    void LCD_SetPixelAA_NoTrans(int x, int y, U8 Intens) {
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;103      RETURN_IF_Y_OUT();
000004  4c1a              LDR      r4,|L3.112|
000006  4606              MOV      r6,r0                 ;102
000008  460d              MOV      r5,r1                 ;102
00000a  f9b4000a          LDRSH    r0,[r4,#0xa]  ; GUI_Context
00000e  4617              MOV      r7,r2                 ;102
000010  42a8              CMP      r0,r5
000012  dc2b              BGT      |L3.108|
000014  f9b4000e          LDRSH    r0,[r4,#0xe]  ; GUI_Context
000018  42a8              CMP      r0,r5
00001a  db27              BLT      |L3.108|
;;;104      RETURN_IF_X_OUT();
00001c  f9b40008          LDRSH    r0,[r4,#8]  ; GUI_Context
000020  42b0              CMP      r0,r6
000022  dc23              BGT      |L3.108|
000024  f9b4000c          LDRSH    r0,[r4,#0xc]  ; GUI_Context
000028  42b0              CMP      r0,r6
00002a  db1f              BLT      |L3.108|
00002c  4620              MOV      r0,r4                 ;103
;;;105      if (Intens == 0) {
;;;106        LCDDEV_L0_SetPixelIndex(x,y, LCD_BKCOLORINDEX);
00002e  6cc1              LDR      r1,[r0,#0x4c]
000030  8800              LDRH     r0,[r0,#0]
000032  b1af              CBZ      r7,|L3.96|
;;;107      } else if (Intens == 15) {
000034  2f0f              CMP      r7,#0xf
000036  d016              BEQ      |L3.102|
;;;108        LCDDEV_L0_SetPixelIndex(x,y, LCD_COLORINDEX);
;;;109      } else {
;;;110        LCD_COLOR Color = LCD_AA_MixColors(LCD_Index2Color(LCD_COLORINDEX),
000038  f7fffffe          BL       LCD_Index2Color
00003c  4680              MOV      r8,r0
00003e  8860              LDRH     r0,[r4,#2]  ; GUI_Context
000040  f7fffffe          BL       LCD_Index2Color
000044  463a              MOV      r2,r7
000046  4641              MOV      r1,r8
000048  f7fffffe          BL       LCD_AA_MixColors
;;;111                                       LCD_Index2Color(LCD_BKCOLORINDEX),
;;;112                                       Intens);
;;;113        LCDDEV_L0_SetPixelIndex(x,y,LCD_Color2Index(Color));
00004c  f7fffffe          BL       LCD_Color2Index
000050  4602              MOV      r2,r0
000052  6ce0              LDR      r0,[r4,#0x4c]  ; GUI_Context
000054  6a43              LDR      r3,[r0,#0x24]
                  |L3.86|
000056  4629              MOV      r1,r5
000058  4630              MOV      r0,r6
00005a  e8bd41f0          POP      {r4-r8,lr}
00005e  4718              BX       r3
                  |L3.96|
000060  4602              MOV      r2,r0                 ;106
000062  6a4b              LDR      r3,[r1,#0x24]         ;106
000064  e7f7              B        |L3.86|
                  |L3.102|
000066  8862              LDRH     r2,[r4,#2]            ;108  ; GUI_Context
000068  6a4b              LDR      r3,[r1,#0x24]         ;108
00006a  e7f4              B        |L3.86|
                  |L3.108|
;;;114      }
;;;115    }
00006c  e8bd81f0          POP      {r4-r8,pc}
;;;116    
                          ENDP

                  |L3.112|
                          DCD      GUI_Context
