; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_sif_prop.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_sif_prop.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_SIF_Prop.c]
                          THUMB

                          AREA ||i._GUI_SIF_DispChar||, CODE, READONLY, ALIGN=2

                  _GUI_SIF_DispChar PROC
;;;76     */
;;;77     static void _GUI_SIF_DispChar(U16P c) {
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;78       const U8 * pCharInfo, * pData;
;;;79       pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
000004  4c31              LDR      r4,|L1.204|
000006  4601              MOV      r1,r0                 ;77
000008  b088              SUB      sp,sp,#0x20           ;77
00000a  69e0              LDR      r0,[r4,#0x1c]  ; GUI_Context
00000c  f7fffffe          BL       _GetpCharInfo
;;;80       if (pCharInfo) {
000010  9006              STR      r0,[sp,#0x18]
000012  2800              CMP      r0,#0
000014  d056              BEQ      |L1.196|
;;;81         GUI_DRAWMODE DrawMode, OldDrawMode;
;;;82         GUI_SIF_CHARINFO CharInfo;
;;;83         CharInfo.XSize        = GUI__Read16(&pCharInfo);
000016  a806              ADD      r0,sp,#0x18
000018  f7fffffe          BL       GUI__Read16
00001c  f360050f          BFI      r5,r0,#0,#16
000020  4607              MOV      r7,r0
;;;84         CharInfo.XDist        = GUI__Read16(&pCharInfo);
000022  a806              ADD      r0,sp,#0x18
000024  f7fffffe          BL       GUI__Read16
000028  f360451f          BFI      r5,r0,#16,#16
;;;85         CharInfo.BytesPerLine = GUI__Read16(&pCharInfo);
00002c  a806              ADD      r0,sp,#0x18
00002e  f7fffffe          BL       GUI__Read16
000032  4606              MOV      r6,r0
;;;86                                 GUI__Read16(&pCharInfo); /* Dummy */
000034  a806              ADD      r0,sp,#0x18
000036  f7fffffe          BL       GUI__Read16
;;;87         CharInfo.OffData      = GUI__Read32(&pCharInfo);
00003a  a806              ADD      r0,sp,#0x18
00003c  f7fffffe          BL       GUI__Read32
;;;88         pData = (const U8 *)GUI_Context.pAFont->p.pFontData + CharInfo.OffData;
000040  69e1              LDR      r1,[r4,#0x1c]  ; GUI_Context
000042  6989              LDR      r1,[r1,#0x18]
000044  eb010900          ADD      r9,r1,r0
;;;89         DrawMode = GUI_Context.TextMode;
000048  f9b4002e          LDRSH    r0,[r4,#0x2e]  ; GUI_Context
00004c  4680              MOV      r8,r0
;;;90         OldDrawMode  = LCD_SetDrawMode(DrawMode);
00004e  f7fffffe          BL       LCD_SetDrawMode
000052  4682              MOV      r10,r0
;;;91         LCD_DrawBitmap(GUI_Context.DispPosX, GUI_Context.DispPosY,
000054  a802              ADD      r0,sp,#8
000056  2201              MOVS     r2,#1
000058  9405              STR      r4,[sp,#0x14]
00005a  e8800244          STM      r0,{r2,r6,r9}
00005e  69e0              LDR      r0,[r4,#0x1c]  ; GUI_Context
000060  7dc2              LDRB     r2,[r0,#0x17]
000062  7d81              LDRB     r1,[r0,#0x16]
000064  e9cd1200          STRD     r1,r2,[sp,#0]
000068  7d03              LDRB     r3,[r0,#0x14]
00006a  f9b41028          LDRSH    r1,[r4,#0x28]  ; GUI_Context
00006e  f9b40026          LDRSH    r0,[r4,#0x26]  ; GUI_Context
000072  463a              MOV      r2,r7
000074  f7fffffe          BL       LCD_DrawBitmap
;;;92                        CharInfo.XSize,
;;;93     									 GUI_Context.pAFont->YSize,
;;;94                        GUI_Context.pAFont->XMag,
;;;95     									 GUI_Context.pAFont->YMag,
;;;96                        1,
;;;97                        CharInfo.BytesPerLine,
;;;98                        pData,
;;;99                        &LCD_BKCOLORINDEX);
;;;100        /* Fill empty pixel lines */
;;;101        if (GUI_Context.pAFont->YDist > GUI_Context.pAFont->YSize) {
000078  69e0              LDR      r0,[r4,#0x1c]  ; GUI_Context
00007a  7d47              LDRB     r7,[r0,#0x15]
00007c  7d06              LDRB     r6,[r0,#0x14]
00007e  42b7              CMP      r7,r6
000080  d919              BLS      |L1.182|
;;;102          int YMag = GUI_Context.pAFont->YMag;
000082  7dc0              LDRB     r0,[r0,#0x17]
;;;103          int YDist = GUI_Context.pAFont->YDist * YMag;
000084  4347              MULS     r7,r0,r7
;;;104          int YSize = GUI_Context.pAFont->YSize * YMag;
000086  4346              MULS     r6,r0,r6
;;;105          if (DrawMode != LCD_DRAWMODE_TRANS) {
000088  f1b80f02          CMP      r8,#2
00008c  d013              BEQ      |L1.182|
;;;106            LCD_COLOR OldColor = GUI_GetColor();
00008e  f7fffffe          BL       GUI_GetColor
000092  4680              MOV      r8,r0
;;;107            GUI_SetColor(GUI_GetBkColor());
000094  f7fffffe          BL       GUI_GetBkColor
000098  f7fffffe          BL       GUI_SetColor
;;;108            LCD_FillRect(GUI_Context.DispPosX, 
00009c  f9b40026          LDRSH    r0,[r4,#0x26]  ; GUI_Context
0000a0  b2a9              UXTH     r1,r5
0000a2  1842              ADDS     r2,r0,r1
0000a4  f9b41028          LDRSH    r1,[r4,#0x28]  ; GUI_Context
0000a8  19cb              ADDS     r3,r1,r7
0000aa  4431              ADD      r1,r1,r6
0000ac  f7fffffe          BL       LCD_FillRect
;;;109                         GUI_Context.DispPosY + YSize, 
;;;110                         GUI_Context.DispPosX + CharInfo.XSize, 
;;;111                         GUI_Context.DispPosY + YDist);
;;;112            GUI_SetColor(OldColor);
0000b0  4640              MOV      r0,r8
0000b2  f7fffffe          BL       GUI_SetColor
                  |L1.182|
;;;113          }
;;;114        }
;;;115        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
0000b6  4650              MOV      r0,r10
0000b8  f7fffffe          BL       LCD_SetDrawMode
;;;116        GUI_Context.DispPosX += CharInfo.XDist;
0000bc  8ce0              LDRH     r0,[r4,#0x26]  ; GUI_Context
0000be  eb004015          ADD      r0,r0,r5,LSR #16
0000c2  84e0              STRH     r0,[r4,#0x26]
                  |L1.196|
;;;117      }
;;;118    }
0000c4  b008              ADD      sp,sp,#0x20
0000c6  e8bd87f0          POP      {r4-r10,pc}
;;;119    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L1.204|
                          DCD      GUI_Context

                          AREA ||i._GUI_SIF_GetCharDistX||, CODE, READONLY, ALIGN=2

                  _GUI_SIF_GetCharDistX PROC
;;;123    */
;;;124    static int _GUI_SIF_GetCharDistX(U16P c) {
000000  b538              PUSH     {r3-r5,lr}
000002  4601              MOV      r1,r0
;;;125      const U8 * pCharInfo;
;;;126      U16 DistX = 0;
;;;127      pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c); /* Get pointer to char info data */
000004  4807              LDR      r0,|L2.36|
000006  2400              MOVS     r4,#0                 ;126
000008  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00000a  f7fffffe          BL       _GetpCharInfo
;;;128      if (pCharInfo) {
00000e  9000              STR      r0,[sp,#0]
000010  b128              CBZ      r0,|L2.30|
000012  1c80              ADDS     r0,r0,#2
;;;129        pCharInfo += 2 /* Skip XSize */;
;;;130        DistX = GUI__Read16(&pCharInfo);
000014  9000              STR      r0,[sp,#0]
000016  4668              MOV      r0,sp
000018  f7fffffe          BL       GUI__Read16
00001c  4604              MOV      r4,r0
                  |L2.30|
;;;131      }
;;;132      return DistX;
00001e  4620              MOV      r0,r4
;;;133    }
000020  bd38              POP      {r3-r5,pc}
;;;134    
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      GUI_Context

                          AREA ||i._GUI_SIF_GetFontInfo||, CODE, READONLY, ALIGN=1

                  _GUI_SIF_GetFontInfo PROC
;;;138    */
;;;139    static void _GUI_SIF_GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
000000  b538              PUSH     {r3-r5,lr}
;;;140      const U8 * pData;
;;;141      pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
000002  6980              LDR      r0,[r0,#0x18]
000004  460c              MOV      r4,r1                 ;139
000006  1d00              ADDS     r0,r0,#4
;;;142      pfi->Baseline = GUI__Read16(&pData);
000008  9000              STR      r0,[sp,#0]
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       GUI__Read16
000010  70a0              STRB     r0,[r4,#2]
;;;143      pfi->LHeight  = GUI__Read16(&pData);
000012  4668              MOV      r0,sp
000014  f7fffffe          BL       GUI__Read16
000018  70e0              STRB     r0,[r4,#3]
;;;144      pfi->CHeight  = GUI__Read16(&pData);
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       GUI__Read16
000020  7120              STRB     r0,[r4,#4]
;;;145      pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
000022  2001              MOVS     r0,#1
000024  8020              STRH     r0,[r4,#0]
;;;146    }
000026  bd38              POP      {r3-r5,pc}
;;;147    
                          ENDP


                          AREA ||i._GUI_SIF_IsInFont||, CODE, READONLY, ALIGN=2

                  _GUI_SIF_IsInFont PROC
;;;151    */
;;;152    static char _GUI_SIF_IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
000000  4804              LDR      r0,|L4.20|
000002  b510              PUSH     {r4,lr}
;;;153      const U8 * pCharInfo;
;;;154      GUI_USE_PARA(pFont);
;;;155      pCharInfo = _GetpCharInfo(GUI_Context.pAFont, c);
000004  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000006  f7fffffe          BL       _GetpCharInfo
;;;156      return (pCharInfo) ? 1 : 0;
00000a  2800              CMP      r0,#0
00000c  d000              BEQ      |L4.16|
00000e  2001              MOVS     r0,#1
                  |L4.16|
;;;157    }
000010  bd10              POP      {r4,pc}
;;;158    
                          ENDP

000012  0000              DCW      0x0000
                  |L4.20|
                          DCD      GUI_Context

                          AREA ||i._GetpCharInfo||, CODE, READONLY, ALIGN=1

                  _GetpCharInfo PROC
;;;44     */
;;;45     static const U8 * _GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  4604              MOV      r4,r0
000006  6980              LDR      r0,[r0,#0x18]
000008  b087              SUB      sp,sp,#0x1c
00000a  300e              ADDS     r0,r0,#0xe
00000c  9000              STR      r0,[sp,#0]
00000e  4688              MOV      r8,r1
000010  4668              MOV      r0,sp
000012  f7fffffe          BL       GUI__Read16
;;;46       const U8 * pCharArea, * pCharInfo;
;;;47       int NumCharAreas;
;;;48       NumCharAreas = _GetNumCharAreas(pFont);                 /* Get # of char areas */
;;;49       pCharArea = (const U8 *)pFont->p.pFontData 
000016  69a1              LDR      r1,[r4,#0x18]
000018  4605              MOV      r5,r0                 ;48
00001a  3110              ADDS     r1,r1,#0x10
;;;50                   + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
;;;51       pCharInfo = pCharArea
00001c  eb010685          ADD      r6,r1,r5,LSL #2
000020  f04f0900          MOV      r9,#0
000024  9104              STR      r1,[sp,#0x10]
                  |L5.38|
;;;52                   + sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
;;;53       do {
;;;54         GUI_SIF_CHAR_AREA CharArea = {0};
000026  464c              MOV      r4,r9
;;;55         CharArea.First    = GUI__Read16(&pCharArea);
000028  a804              ADD      r0,sp,#0x10
00002a  f7fffffe          BL       GUI__Read16
00002e  4607              MOV      r7,r0
000030  f367040f          BFI      r4,r7,#0,#16
;;;56         CharArea.Last     = GUI__Read16(&pCharArea);
000034  a804              ADD      r0,sp,#0x10
000036  f7fffffe          BL       GUI__Read16
00003a  f360441f          BFI      r4,r0,#16,#16
;;;57         if ((c >= CharArea.First) && (c <= CharArea.Last)) {
00003e  4547              CMP      r7,r8
000040  d80b              BHI      |L5.90|
000042  4540              CMP      r0,r8
000044  d309              BCC      |L5.90|
000046  b2a1              UXTH     r1,r4
;;;58           pCharInfo += sizeof(GUI_SIF_CHARINFO) * (c - CharArea.First);
000048  eba80001          SUB      r0,r8,r1
00004c  eb000040          ADD      r0,r0,r0,LSL #1
000050  eb060080          ADD      r0,r6,r0,LSL #2
                  |L5.84|
;;;59           return pCharInfo;
;;;60         }
;;;61         pCharInfo += sizeof(GUI_SIF_CHARINFO) * (CharArea.Last - CharArea.First + 1);
;;;62       } while(--NumCharAreas);
;;;63       return 0;
;;;64     }
000054  b007              ADD      sp,sp,#0x1c
000056  e8bd83f0          POP      {r4-r9,pc}
                  |L5.90|
00005a  1bc0              SUBS     r0,r0,r7              ;61
00005c  eb000040          ADD      r0,r0,r0,LSL #1       ;61
000060  eb060680          ADD      r6,r6,r0,LSL #2       ;61
000064  1e6d              SUBS     r5,r5,#1              ;61
000066  f106060c          ADD      r6,r6,#0xc            ;61
00006a  d1dc              BNE      |L5.38|
00006c  2000              MOVS     r0,#0                 ;63
00006e  e7f1              B        |L5.84|
;;;65     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_SIF_APIList_Prop
                          DCD      _GUI_SIF_DispChar
                          DCD      _GUI_SIF_GetCharDistX
                          DCD      _GUI_SIF_GetFontInfo
                          DCD      _GUI_SIF_IsInFont
