; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guiaachar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiaachar.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\AntiAlias\GUIAAChar.c]
                          THUMB

                          AREA ||i.Draw||, CODE, READONLY, ALIGN=2

                  Draw PROC
;;;55     */
;;;56     static void Draw(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8*pData) {
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;57         int x, y;
;;;58         tSetPixelAA* pfSetPixelAA;
;;;59         pfSetPixelAA = (GUI_Context.TextMode & GUI_TM_TRANS)
000004  482e              LDR      r0,|L1.192|
000006  f8dd803c          LDR      r8,[sp,#0x3c]
00000a  469b              MOV      r11,r3                ;56
00000c  f890002e          LDRB     r0,[r0,#0x2e]  ; GUI_Context
000010  4691              MOV      r9,r2                 ;56
000012  0780              LSLS     r0,r0,#30
000014  d501              BPL      |L1.26|
000016  482b              LDR      r0,|L1.196|
000018  e000              B        |L1.28|
                  |L1.26|
00001a  482b              LDR      r0,|L1.200|
                  |L1.28|
;;;60                      ? LCD_SetPixelAA : LCD_SetPixelAA_NoTrans;
;;;61     	  for (y=0; y<YSize; y++) {
00001c  2500              MOVS     r5,#0
00001e  4682              MOV      r10,r0                ;59
000020  e044              B        |L1.172|
                  |L1.34|
;;;62       	  const U8* pData0 = pData;
;;;63     	    const U8* pData1 = pData+BytesPerLine;
000022  980e              LDR      r0,[sp,#0x38]
000024  4646              MOV      r6,r8
000026  eb080700          ADD      r7,r8,r0
;;;64       	  for (x=0; x<XSize; x++) {
00002a  2400              MOVS     r4,#0
00002c  e038              B        |L1.160|
                  |L1.46|
;;;65             int PixelCnt=0;
;;;66             int Mask0 = Bit2Mask0[x&3];
00002e  4a27              LDR      r2,|L1.204|
000030  f0040103          AND      r1,r4,#3
000034  2000              MOVS     r0,#0                 ;65
000036  5c53              LDRB     r3,[r2,r1]
;;;67             int Mask1 = Bit2Mask1[x&3];
000038  1d12              ADDS     r2,r2,#4
00003a  5c52              LDRB     r2,[r2,r1]
;;;68     			  if ((*pData0) & Mask0)
00003c  7831              LDRB     r1,[r6,#0]
00003e  4219              TST      r1,r3
000040  d000              BEQ      |L1.68|
;;;69     			    PixelCnt++;
000042  2001              MOVS     r0,#1
                  |L1.68|
;;;70     			  if ((*pData0) & Mask1)
000044  4211              TST      r1,r2
000046  d000              BEQ      |L1.74|
000048  1c40              ADDS     r0,r0,#1
                  |L1.74|
;;;71     			    PixelCnt++;
;;;72     			  if ((*pData1) & Mask0)
00004a  7839              LDRB     r1,[r7,#0]
00004c  4219              TST      r1,r3
00004e  d000              BEQ      |L1.82|
000050  1c40              ADDS     r0,r0,#1
                  |L1.82|
;;;73     			    PixelCnt++;
;;;74     			  if ((*pData1) & Mask1)
000052  4211              TST      r1,r2
000054  d000              BEQ      |L1.88|
000056  1c40              ADDS     r0,r0,#1
                  |L1.88|
;;;75     			    PixelCnt++;
;;;76             if ((x&3) ==3) {
000058  43e1              MVNS     r1,r4
00005a  0789              LSLS     r1,r1,#30
00005c  d101              BNE      |L1.98|
00005e  1c76              ADDS     r6,r6,#1
000060  1c7f              ADDS     r7,r7,#1
                  |L1.98|
;;;77               pData0++;
;;;78               pData1++;
;;;79     			  }
;;;80             switch (PixelCnt) {
000062  2801              CMP      r0,#1
000064  d026              BEQ      |L1.180|
000066  2802              CMP      r0,#2
000068  d012              BEQ      |L1.144|
00006a  2803              CMP      r0,#3
00006c  d00a              BEQ      |L1.132|
00006e  2804              CMP      r0,#4
000070  d115              BNE      |L1.158|
;;;81             case 4: LCD_HL_DrawPixel(x0+x,y0+y);      break;
000072  4a13              LDR      r2,|L1.192|
000074  9801              LDR      r0,[sp,#4]
000076  6dd2              LDR      r2,[r2,#0x5c]  ; GUI_Context
000078  1941              ADDS     r1,r0,r5
00007a  9800              LDR      r0,[sp,#0]
00007c  6852              LDR      r2,[r2,#4]
00007e  4420              ADD      r0,r0,r4
000080  4790              BLX      r2
000082  e00c              B        |L1.158|
                  |L1.132|
;;;82             case 3: (*pfSetPixelAA) (x0+x,y0+y, 12); break;
000084  9801              LDR      r0,[sp,#4]
000086  1941              ADDS     r1,r0,r5
000088  9800              LDR      r0,[sp,#0]
00008a  220c              MOVS     r2,#0xc
00008c  4420              ADD      r0,r0,r4
00008e  e004              B        |L1.154|
                  |L1.144|
;;;83             case 2: (*pfSetPixelAA) (x0+x,y0+y, 8);  break;
000090  9801              LDR      r0,[sp,#4]
000092  1941              ADDS     r1,r0,r5
000094  9800              LDR      r0,[sp,#0]
000096  2208              MOVS     r2,#8
000098  4420              ADD      r0,r0,r4
                  |L1.154|
00009a  4653              MOV      r3,r10                ;82
00009c  4798              BLX      r3                    ;82
                  |L1.158|
00009e  1c64              ADDS     r4,r4,#1              ;82
                  |L1.160|
0000a0  454c              CMP      r4,r9                 ;64
0000a2  dbc4              BLT      |L1.46|
;;;84             case 1: (*pfSetPixelAA) (x0+x,y0+y, 4);  break;
;;;85     			  }
;;;86       	  }
;;;87           pData+=2*BytesPerLine;
0000a4  990e              LDR      r1,[sp,#0x38]
0000a6  1c6d              ADDS     r5,r5,#1
0000a8  eb080841          ADD      r8,r8,r1,LSL #1
                  |L1.172|
0000ac  455d              CMP      r5,r11                ;61
0000ae  dbb8              BLT      |L1.34|
;;;88     	  }
;;;89     }
0000b0  e8bd9fff          POP      {r0-r12,pc}
                  |L1.180|
0000b4  9801              LDR      r0,[sp,#4]            ;84
0000b6  1941              ADDS     r1,r0,r5              ;84
0000b8  9800              LDR      r0,[sp,#0]            ;84
0000ba  2204              MOVS     r2,#4                 ;84
0000bc  4420              ADD      r0,r0,r4              ;84
0000be  e7ec              B        |L1.154|
;;;90     
                          ENDP

                  |L1.192|
                          DCD      GUI_Context
                  |L1.196|
                          DCD      LCD_SetPixelAA
                  |L1.200|
                          DCD      LCD_SetPixelAA_NoTrans
                  |L1.204|
                          DCD      ||.constdata||

                          AREA ||i.GUIPROPAA_DispChar||, CODE, READONLY, ALIGN=2

                  GUIPROPAA_DispChar PROC
;;;112    */
;;;113    void GUIPROPAA_DispChar(U16P c) {
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;114      int BytesPerLine;
;;;115      GUI_DRAWMODE DrawMode = GUI_Context.TextMode;
000004  4c16              LDR      r4,|L2.96|
000006  4605              MOV      r5,r0                 ;113
;;;116      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
000008  4629              MOV      r1,r5
00000a  69e0              LDR      r0,[r4,#0x1c]  ; GUI_Context
00000c  f9b4602e          LDRSH    r6,[r4,#0x2e]         ;115  ; GUI_Context
000010  6980              LDR      r0,[r0,#0x18]
000012  f7fffffe          BL       GUIPROP_FindChar
;;;117      if (pProp) {
000016  2800              CMP      r0,#0
000018  d020              BEQ      |L2.92|
;;;118        GUI_DRAWMODE OldDrawMode;
;;;119        const GUI_CHARINFO* pCharInfo = pProp->paCharInfo+(c-pProp->First);
00001a  6841              LDR      r1,[r0,#4]
00001c  8800              LDRH     r0,[r0,#0]
00001e  1a28              SUBS     r0,r5,r0
000020  eb0105c0          ADD      r5,r1,r0,LSL #3
;;;120        BytesPerLine = pCharInfo->BytesPerLine;
;;;121        OldDrawMode  = LCD_SetDrawMode(DrawMode);
000024  4630              MOV      r0,r6
000026  78af              LDRB     r7,[r5,#2]            ;120
000028  f7fffffe          BL       LCD_SetDrawMode
00002c  4606              MOV      r6,r0
;;;122        Draw  ( GUI_Context.DispPosX, GUI_Context.DispPosY,
00002e  6868              LDR      r0,[r5,#4]
000030  e9cd7000          STRD     r7,r0,[sp,#0]
000034  69e0              LDR      r0,[r4,#0x1c]  ; GUI_Context
000036  f9b41028          LDRSH    r1,[r4,#0x28]  ; GUI_Context
00003a  7d03              LDRB     r3,[r0,#0x14]
00003c  7828              LDRB     r0,[r5,#0]
00003e  1c40              ADDS     r0,r0,#1
000040  0842              LSRS     r2,r0,#1
000042  f9b40026          LDRSH    r0,[r4,#0x26]  ; GUI_Context
000046  f7fffffe          BL       Draw
;;;123                           (pCharInfo->XSize+1)/2,
;;;124                           GUI_Context.pAFont->YSize,
;;;125                           BytesPerLine,
;;;126                           (U8 const*) pCharInfo->pData
;;;127                           );
;;;128        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
00004a  4630              MOV      r0,r6
00004c  f7fffffe          BL       LCD_SetDrawMode
;;;129        GUI_Context.DispPosX += (pCharInfo->XDist+1)/2;
000050  7868              LDRB     r0,[r5,#1]
000052  8ce1              LDRH     r1,[r4,#0x26]  ; GUI_Context
000054  1c40              ADDS     r0,r0,#1
000056  eb010050          ADD      r0,r1,r0,LSR #1
00005a  84e0              STRH     r0,[r4,#0x26]
                  |L2.92|
;;;130      }
;;;131    }
00005c  e8bd81fc          POP      {r2-r8,pc}
;;;132    
                          ENDP

                  |L2.96|
                          DCD      GUI_Context

                          AREA ||i.GUIPROPAA_GetCharDistX||, CODE, READONLY, ALIGN=2

                  GUIPROPAA_GetCharDistX PROC
;;;136    */
;;;137    int GUIPROPAA_GetCharDistX(U16P c) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;138      int r;
;;;139      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
000004  4808              LDR      r0,|L3.40|
000006  4621              MOV      r1,r4
000008  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00000a  6980              LDR      r0,[r0,#0x18]
00000c  f7fffffe          BL       GUIPROP_FindChar
;;;140      r = (pProp) ? (pProp->paCharInfo+(c-pProp->First))->XSize : 0;
000010  b120              CBZ      r0,|L3.28|
000012  6841              LDR      r1,[r0,#4]
000014  8800              LDRH     r0,[r0,#0]
000016  1a20              SUBS     r0,r4,r0
000018  f8110030          LDRB     r0,[r1,r0,LSL #3]
                  |L3.28|
00001c  1c40              ADDS     r0,r0,#1
;;;141      return (r+1)/2;
00001e  eb0070d0          ADD      r0,r0,r0,LSR #31
000022  1040              ASRS     r0,r0,#1
;;;142    }
000024  bd10              POP      {r4,pc}
;;;143    
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      GUI_Context

                          AREA ||i.GUIPROPAA_GetFontInfo||, CODE, READONLY, ALIGN=1

                  GUIPROPAA_GetFontInfo PROC
;;;147    */
;;;148    void GUIPROPAA_GetFontInfo(const GUI_FONT * pFont, GUI_FONTINFO* pfi) {
000000  2005              MOVS     r0,#5
;;;149      GUI_USE_PARA(pFont);
;;;150      pfi->Flags = GUI_FONTINFO_FLAG_PROP | GUI_FONTINFO_FLAG_AA;
000002  8008              STRH     r0,[r1,#0]
;;;151    }
000004  4770              BX       lr
;;;152    
                          ENDP


                          AREA ||i.GUIPROPAA_IsInFont||, CODE, READONLY, ALIGN=1

                  GUIPROPAA_IsInFont PROC
;;;156    */
;;;157    char GUIPROPAA_IsInFont(const GUI_FONT * pFont, U16 c) {
000000  b510              PUSH     {r4,lr}
;;;158      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(pFont->p.pProp, c);
000002  6980              LDR      r0,[r0,#0x18]
000004  f7fffffe          BL       GUIPROP_FindChar
;;;159      return (pProp==NULL) ? 0 : 1;
000008  2800              CMP      r0,#0
00000a  d000              BEQ      |L5.14|
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;160    }
00000e  bd10              POP      {r4,pc}
;;;161    
                          ENDP


                          AREA ||i.GUIPROP_FindChar||, CODE, READONLY, ALIGN=2

                  GUIPROP_FindChar PROC
;;;94     */
;;;95     static const GUI_FONT_PROP* GUIPROP_FindChar(const GUI_FONT_PROP* pProp, U16P c) {
000000  4806              LDR      r0,|L6.28|
;;;96       for (pProp = GUI_Context.pAFont->p.pProp; pProp; pProp=(const GUI_FONT_PROP*) pProp->pNext) {
000002  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000004  6980              LDR      r0,[r0,#0x18]
000006  e006              B        |L6.22|
                  |L6.8|
;;;97         if ((c>=pProp->First) && (c<=pProp->Last))
000008  8802              LDRH     r2,[r0,#0]
00000a  428a              CMP      r2,r1
00000c  d802              BHI      |L6.20|
00000e  8842              LDRH     r2,[r0,#2]
000010  428a              CMP      r2,r1
000012  d202              BCS      |L6.26|
                  |L6.20|
000014  6880              LDR      r0,[r0,#8]            ;96
                  |L6.22|
000016  2800              CMP      r0,#0                 ;96
000018  d1f6              BNE      |L6.8|
                  |L6.26|
;;;98           break;
;;;99       }
;;;100      return pProp;
;;;101    }
00001a  4770              BX       lr
;;;102    
                          ENDP

                  |L6.28|
                          DCD      GUI_Context

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  Bit2Mask0
000000  80200802          DCB      0x80,0x20,0x08,0x02
                  Bit2Mask1
000004  40100401          DCB      0x40,0x10,0x04,0x01
