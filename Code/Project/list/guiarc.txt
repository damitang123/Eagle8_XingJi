; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guiarc.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guiarc.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUIArc.c]
                          THUMB

                          AREA ||i.GL_DrawArc||, CODE, READONLY, ALIGN=1

                  GL_DrawArc PROC
;;;161    */
;;;162    void GL_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
000000  e92d5fff          PUSH     {r0-r12,lr}
000004  4683              MOV      r11,r0
000006  e9dd450e          LDRD     r4,r5,[sp,#0x38]
00000a  4698              MOV      r8,r3
00000c  4691              MOV      r9,r2
00000e  468a              MOV      r10,r1
;;;163      int aEnd;
;;;164      a0+=360;
;;;165    	a1+=360;
;;;166    	while (a0>=360) {
;;;167        a0 -= 360;
;;;168        a1 -= 360;
;;;169    	}
;;;170    /* Do first quadrant 0-90 degree */
;;;171    DoFirst:
;;;172      if (a1<=0)
;;;173    	  return;
;;;174    	if (a0<90) {
;;;175        if (a0<0)
;;;176    		  a0=0;
;;;177        aEnd = (a1<90) ? a1 : 90;
;;;178        _DrawArc(x0,y0,rx,ry,a0,aEnd, 1, -1);
000010  f04f36ff          MOV      r6,#0xffffffff
000014  2701              MOVS     r7,#1
000016  f44f70b4          MOV      r0,#0x168             ;166
00001a  f50474b4          ADD      r4,r4,#0x168          ;166
00001e  f50575b4          ADD      r5,r5,#0x168          ;166
000022  e003              B        |L1.44|
                  |L1.36|
000024  f5a474b4          SUB      r4,r4,#0x168          ;162
000028  f5a575b4          SUB      r5,r5,#0x168          ;162
                  |L1.44|
00002c  4284              CMP      r4,r0                 ;166
00002e  daf9              BGE      |L1.36|
                  |L1.48|
000030  2d00              CMP      r5,#0                 ;172
000032  dd65              BLE      |L1.256|
000034  2c5a              CMP      r4,#0x5a              ;174
000036  da11              BGE      |L1.92|
000038  2c00              CMP      r4,#0                 ;175
00003a  da00              BGE      |L1.62|
00003c  2400              MOVS     r4,#0                 ;176
                  |L1.62|
00003e  2d5a              CMP      r5,#0x5a              ;177
000040  da01              BGE      |L1.70|
000042  4628              MOV      r0,r5                 ;177
000044  e000              B        |L1.72|
                  |L1.70|
000046  205a              MOVS     r0,#0x5a              ;177
                  |L1.72|
000048  e9cd4000          STRD     r4,r0,[sp,#0]
00004c  e9cd7602          STRD     r7,r6,[sp,#8]
000050  4643              MOV      r3,r8
000052  464a              MOV      r2,r9
000054  4651              MOV      r1,r10
000056  4658              MOV      r0,r11
000058  f7fffffe          BL       _DrawArc
                  |L1.92|
00005c  3c5a              SUBS     r4,r4,#0x5a
00005e  3d5a              SUBS     r5,r5,#0x5a
;;;179    	}
;;;180      a1-=90;
;;;181    	a0-=90;
;;;182    /* Do second quadrant 90-180 degree */
;;;183      if (a1<=0)
000060  2d00              CMP      r5,#0
000062  dd4d              BLE      |L1.256|
;;;184    	  return;
;;;185    	if (a0<90) {
000064  2c5a              CMP      r4,#0x5a
000066  da14              BGE      |L1.146|
;;;186        if (a0<0)
000068  2c00              CMP      r4,#0
00006a  da00              BGE      |L1.110|
;;;187    		  a0=0;
00006c  2400              MOVS     r4,#0
                  |L1.110|
;;;188        aEnd = (a1<90) ? a1 : 90;
00006e  2d5a              CMP      r5,#0x5a
000070  da01              BGE      |L1.118|
000072  4628              MOV      r0,r5
000074  e000              B        |L1.120|
                  |L1.118|
000076  205a              MOVS     r0,#0x5a
                  |L1.120|
;;;189        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,-1,-1);
000078  f1c4015a          RSB      r1,r4,#0x5a
00007c  f1c0005a          RSB      r0,r0,#0x5a
000080  e88d0043          STM      sp,{r0,r1,r6}
000084  4643              MOV      r3,r8
000086  464a              MOV      r2,r9
000088  4651              MOV      r1,r10
00008a  4658              MOV      r0,r11
00008c  9603              STR      r6,[sp,#0xc]
00008e  f7fffffe          BL       _DrawArc
                  |L1.146|
000092  3c5a              SUBS     r4,r4,#0x5a
000094  3d5a              SUBS     r5,r5,#0x5a
;;;190    	}
;;;191      a1-=90;
;;;192    	a0-=90;
;;;193    /* Do third quadrant 180-270 degree */
;;;194      if (a1<=0)
000096  2d00              CMP      r5,#0
000098  dd32              BLE      |L1.256|
;;;195    	  return;
;;;196    	if (a0<90) {
00009a  2c5a              CMP      r4,#0x5a
00009c  da12              BGE      |L1.196|
;;;197        if (a0<0)
00009e  2c00              CMP      r4,#0
0000a0  da00              BGE      |L1.164|
;;;198    		  a0=0;
0000a2  2400              MOVS     r4,#0
                  |L1.164|
;;;199        aEnd = (a1<90) ? a1 : 90;
0000a4  2d5a              CMP      r5,#0x5a
0000a6  da01              BGE      |L1.172|
0000a8  4628              MOV      r0,r5
0000aa  e000              B        |L1.174|
                  |L1.172|
0000ac  205a              MOVS     r0,#0x5a
                  |L1.174|
;;;200        _DrawArc(x0,y0,rx,ry,a0,aEnd, -1, 1);
0000ae  f10d0c04          ADD      r12,sp,#4
0000b2  9400              STR      r4,[sp,#0]
0000b4  e88c00c1          STM      r12,{r0,r6,r7}
0000b8  4643              MOV      r3,r8
0000ba  464a              MOV      r2,r9
0000bc  4651              MOV      r1,r10
0000be  4658              MOV      r0,r11
0000c0  f7fffffe          BL       _DrawArc
                  |L1.196|
0000c4  3c5a              SUBS     r4,r4,#0x5a
0000c6  3d5a              SUBS     r5,r5,#0x5a
;;;201    	}
;;;202      a1-=90;
;;;203    	a0-=90;
;;;204    /* Do last quadrant 270-360 degree */
;;;205      if (a1<=0)
0000c8  2d00              CMP      r5,#0
0000ca  dd19              BLE      |L1.256|
;;;206    	  return;
;;;207    	if (a0<90) {
0000cc  2c5a              CMP      r4,#0x5a
0000ce  da14              BGE      |L1.250|
;;;208        if (a0<0)
0000d0  2c00              CMP      r4,#0
0000d2  da00              BGE      |L1.214|
;;;209    		  a0=0;
0000d4  2400              MOVS     r4,#0
                  |L1.214|
;;;210        aEnd = (a1<90) ? a1 : 90;
0000d6  2d5a              CMP      r5,#0x5a
0000d8  da01              BGE      |L1.222|
0000da  4628              MOV      r0,r5
0000dc  e000              B        |L1.224|
                  |L1.222|
0000de  205a              MOVS     r0,#0x5a
                  |L1.224|
;;;211        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,1,1);
0000e0  f1c4015a          RSB      r1,r4,#0x5a
0000e4  f1c0005a          RSB      r0,r0,#0x5a
0000e8  e88d0083          STM      sp,{r0,r1,r7}
0000ec  4643              MOV      r3,r8
0000ee  464a              MOV      r2,r9
0000f0  4651              MOV      r1,r10
0000f2  4658              MOV      r0,r11
0000f4  9703              STR      r7,[sp,#0xc]
0000f6  f7fffffe          BL       _DrawArc
                  |L1.250|
0000fa  3c5a              SUBS     r4,r4,#0x5a
0000fc  3d5a              SUBS     r5,r5,#0x5a
;;;212    	}
;;;213      a1-=90;
;;;214    	a0-=90;
;;;215    goto DoFirst;
0000fe  e797              B        |L1.48|
                  |L1.256|
;;;216    }
000100  e8bd9fff          POP      {r0-r12,pc}
;;;217    
                          ENDP


                          AREA ||i.GUI_DrawArc||, CODE, READONLY, ALIGN=2

                  GUI_DrawArc PROC
;;;221    */
;;;222    void GUI_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
000000  e92d47fc          PUSH     {r2-r10,lr}
000004  4691              MOV      r9,r2
;;;223      GUI_LOCK();
;;;224      #if (GUI_WINSUPPORT)
;;;225        WM_ADDORG(x0,y0);
000006  4a0d              LDR      r2,|L2.60|
000008  4698              MOV      r8,r3                 ;222
00000a  e9dd760a          LDRD     r7,r6,[sp,#0x28]      ;222
00000e  6c53              LDR      r3,[r2,#0x44]  ; GUI_Context
000010  181d              ADDS     r5,r3,r0
000012  6c90              LDR      r0,[r2,#0x48]  ; GUI_Context
000014  1844              ADDS     r4,r0,r1
;;;226        WM_ITERATE_START(NULL) {
000016  2000              MOVS     r0,#0
000018  f7fffffe          BL       WM__InitIVRSearch
00001c  e009              B        |L2.50|
                  |L2.30|
;;;227      #endif
;;;228      GL_DrawArc( x0, y0, rx, ry, a0, a1);
00001e  e9cd7600          STRD     r7,r6,[sp,#0]
000022  4643              MOV      r3,r8
000024  464a              MOV      r2,r9
000026  4621              MOV      r1,r4
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       GL_DrawArc
;;;229      #if (GUI_WINSUPPORT)
;;;230        } WM_ITERATE_END();
00002e  f7fffffe          BL       WM__GetNextIVR
                  |L2.50|
000032  2800              CMP      r0,#0
000034  d1f3              BNE      |L2.30|
;;;231      #endif
;;;232      GUI_UNLOCK();
;;;233    }
000036  e8bd87fc          POP      {r2-r10,pc}
;;;234    
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
                          DCD      GUI_Context

                          AREA ||i._CalcInterSectLin||, CODE, READONLY, ALIGN=1

                  _CalcInterSectLin PROC
;;;66     */
;;;67     static float _CalcInterSectLin(float y, float y0, float y1, float x0, float x1) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4680              MOV      r8,r0
000006  461d              MOV      r5,r3
000008  4614              MOV      r4,r2
00000a  460e              MOV      r6,r1
;;;68       if (y1==y0) {
00000c  4610              MOV      r0,r2
00000e  9f06              LDR      r7,[sp,#0x18]
000010  f7fffffe          BL       __aeabi_cfcmpeq
000014  d102              BNE      |L3.28|
;;;69     	  return y0;
000016  4630              MOV      r0,r6
;;;70     	} else {
;;;71         float Slope = (x1-x0)/(y1-y0);
;;;72        return (y-y0)*Slope+x0;
;;;73     	}
;;;74     }
000018  e8bd81f0          POP      {r4-r8,pc}
                  |L3.28|
00001c  4631              MOV      r1,r6                 ;71
00001e  4620              MOV      r0,r4                 ;71
000020  f7fffffe          BL       __aeabi_fsub
000024  4604              MOV      r4,r0                 ;71
000026  4629              MOV      r1,r5                 ;71
000028  4638              MOV      r0,r7                 ;71
00002a  f7fffffe          BL       __aeabi_fsub
00002e  4621              MOV      r1,r4                 ;71
000030  f7fffffe          BL       __aeabi_fdiv
000034  4604              MOV      r4,r0                 ;71
000036  4631              MOV      r1,r6                 ;72
000038  4640              MOV      r0,r8                 ;72
00003a  f7fffffe          BL       __aeabi_fsub
00003e  4621              MOV      r1,r4                 ;72
000040  f7fffffe          BL       __aeabi_fmul
000044  4629              MOV      r1,r5                 ;72
000046  e8bd41f0          POP      {r4-r8,lr}            ;72
00004a  f7ffbffe          B.W      __aeabi_fadd
;;;75     
                          ENDP


                          AREA ||i._CalcX||, CODE, READONLY, ALIGN=1

                  _CalcX PROC
;;;45     */
;;;46     static void _CalcX(int*px, int y, U32 r2) {
000000  b510              PUSH     {r4,lr}
;;;47       int x =*px;
;;;48       U32 y2 = (U32)y*(U32)y;
000002  4349              MULS     r1,r1,r1
;;;49       U32 r2y2 = r2-y2;
000004  1a54              SUBS     r4,r2,r1
;;;50       U32 x2;
;;;51       if (y2>=r2) {
000006  6803              LDR      r3,[r0,#0]
000008  4291              CMP      r1,r2
00000a  d302              BCC      |L4.18|
;;;52         *px=0;
00000c  2100              MOVS     r1,#0
;;;53     		return;
00000e  6001              STR      r1,[r0,#0]
;;;54     	}
;;;55       /* x2 = r2-y2 */
;;;56       do {
;;;57         x++;
;;;58         x2 =(U32)x*(U32)x;
;;;59     	} while (x2 < r2y2);
;;;60     	*px = x-1;
;;;61     }
000010  bd10              POP      {r4,pc}
                  |L4.18|
000012  1c5b              ADDS     r3,r3,#1
000014  fb03f103          MUL      r1,r3,r3              ;58
000018  42a1              CMP      r1,r4                 ;59
00001a  d3fa              BCC      |L4.18|
00001c  1e5b              SUBS     r3,r3,#1              ;59
00001e  6003              STR      r3,[r0,#0]            ;60
000020  bd10              POP      {r4,pc}
;;;62     
                          ENDP


                          AREA ||i._DrawArc||, CODE, READONLY, ALIGN=2

                  _DrawArc PROC
;;;79     */
;;;80     static void _DrawArc(int x0, int y0, int rx, int ry, int Angle0, int Angle1, int xMul, int yMul) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  4681              MOV      r9,r0
000006  b095              SUB      sp,sp,#0x54
;;;81       float afx[4];
;;;82       float afy[4];
;;;83     	float ri = rx-(GUI_Context.PenSize+1.5)/2;
000008  488f              LDR      r0,|L5.584|
00000a  4690              MOV      r8,r2                 ;80
00000c  460c              MOV      r4,r1                 ;80
00000e  7e00              LDRB     r0,[r0,#0x18]  ; GUI_Context
000010  f8ddb078          LDR      r11,[sp,#0x78]
000014  9f21              LDR      r7,[sp,#0x84]
000016  f7fffffe          BL       __aeabi_ui2d
00001a  2200              MOVS     r2,#0
00001c  4b8b              LDR      r3,|L5.588|
00001e  f7fffffe          BL       __aeabi_dadd
000022  f04f32ff          MOV      r2,#0xffffffff
000026  f7fffffe          BL       __ARM_scalbn
00002a  4605              MOV      r5,r0
00002c  460e              MOV      r6,r1
00002e  4640              MOV      r0,r8
000030  f7fffffe          BL       __aeabi_i2d
000034  468a              MOV      r10,r1
000036  4680              MOV      r8,r0
000038  462a              MOV      r2,r5
00003a  4633              MOV      r3,r6
00003c  f7fffffe          BL       __aeabi_dsub
000040  f7fffffe          BL       __aeabi_d2f
;;;84     	float ro = rx+(GUI_Context.PenSize+1.5)/2;
000044  9001              STR      r0,[sp,#4]
000046  462a              MOV      r2,r5
000048  4633              MOV      r3,r6
00004a  4640              MOV      r0,r8
00004c  4651              MOV      r1,r10
00004e  f7fffffe          BL       __aeabi_dadd
000052  f7fffffe          BL       __aeabi_d2f
000056  4682              MOV      r10,r0
;;;85       float fAngle0 = Angle0*3.1415926/180;
000058  4658              MOV      r0,r11
00005a  f7fffffe          BL       __aeabi_i2d
00005e  4d7c              LDR      r5,|L5.592|
000060  f8df81f0          LDR      r8,|L5.596|
000064  462a              MOV      r2,r5
000066  4643              MOV      r3,r8
000068  f7fffffe          BL       __aeabi_dmul
00006c  f8dfb1e8          LDR      r11,|L5.600|
000070  2200              MOVS     r2,#0
000072  465b              MOV      r3,r11
000074  f7fffffe          BL       __aeabi_ddiv
000078  f7fffffe          BL       __aeabi_d2f
00007c  4606              MOV      r6,r0
;;;86       float fAngle1 = Angle1*3.1415926/180;
00007e  981f              LDR      r0,[sp,#0x7c]
000080  f7fffffe          BL       __aeabi_i2d
000084  462a              MOV      r2,r5
000086  4643              MOV      r3,r8
000088  f7fffffe          BL       __aeabi_dmul
00008c  2200              MOVS     r2,#0
00008e  465b              MOV      r3,r11
000090  f7fffffe          BL       __aeabi_ddiv
000094  f7fffffe          BL       __aeabi_d2f
000098  4605              MOV      r5,r0
;;;87       float sin0 = sin(fAngle0); 
00009a  4630              MOV      r0,r6
00009c  f7fffffe          BL       __aeabi_f2d
0000a0  4606              MOV      r6,r0
0000a2  9105              STR      r1,[sp,#0x14]
0000a4  f7fffffe          BL       ||sin||
0000a8  f7fffffe          BL       __aeabi_d2f
0000ac  4680              MOV      r8,r0
;;;88       float sin1 = sin(fAngle1); 
0000ae  4628              MOV      r0,r5
0000b0  f7fffffe          BL       __aeabi_f2d
0000b4  4605              MOV      r5,r0
0000b6  9103              STR      r1,[sp,#0xc]
0000b8  f7fffffe          BL       ||sin||
0000bc  f7fffffe          BL       __aeabi_d2f
0000c0  4683              MOV      r11,r0
0000c2  4630              MOV      r0,r6
;;;89       float cos0 = cos(fAngle0); 
0000c4  9905              LDR      r1,[sp,#0x14]
0000c6  f7fffffe          BL       ||cos||
0000ca  f7fffffe          BL       __aeabi_d2f
0000ce  4606              MOV      r6,r0
0000d0  4628              MOV      r0,r5
;;;90       float cos1 = cos(fAngle1); 
0000d2  9903              LDR      r1,[sp,#0xc]
0000d4  f7fffffe          BL       ||cos||
0000d8  f7fffffe          BL       __aeabi_d2f
;;;91       U32   ri2 = ri*ri;
0000dc  9901              LDR      r1,[sp,#4]
0000de  4605              MOV      r5,r0                 ;90
0000e0  4608              MOV      r0,r1
0000e2  f7fffffe          BL       __aeabi_fmul
0000e6  f7fffffe          BL       __aeabi_f2uiz
;;;92       U32   ro2 = ro*ro;
0000ea  4651              MOV      r1,r10
0000ec  9008              STR      r0,[sp,#0x20]
0000ee  4608              MOV      r0,r1
0000f0  f7fffffe          BL       __aeabi_fmul
0000f4  f7fffffe          BL       __aeabi_f2uiz
;;;93     	int y, yMax, yMin;
;;;94     	afy[0] = ri*sin0;
0000f8  9004              STR      r0,[sp,#0x10]
0000fa  4641              MOV      r1,r8
0000fc  9801              LDR      r0,[sp,#4]
0000fe  f7fffffe          BL       __aeabi_fmul
;;;95     	afy[1] = ro*sin0;
000102  9009              STR      r0,[sp,#0x24]
000104  4641              MOV      r1,r8
000106  4650              MOV      r0,r10
000108  f7fffffe          BL       __aeabi_fmul
;;;96     	afy[2] = ri*sin1;
00010c  900a              STR      r0,[sp,#0x28]
00010e  4659              MOV      r1,r11
000110  9801              LDR      r0,[sp,#4]
000112  f7fffffe          BL       __aeabi_fmul
;;;97     	afy[3] = ro*sin1;
000116  900b              STR      r0,[sp,#0x2c]
000118  4659              MOV      r1,r11
00011a  4650              MOV      r0,r10
00011c  f7fffffe          BL       __aeabi_fmul
000120  4683              MOV      r11,r0
;;;98     	afx[0] = ri*cos0;
000122  4631              MOV      r1,r6
000124  9801              LDR      r0,[sp,#4]
000126  f7fffffe          BL       __aeabi_fmul
;;;99     	afx[1] = ro*cos0;
00012a  900d              STR      r0,[sp,#0x34]
00012c  4631              MOV      r1,r6
00012e  4650              MOV      r0,r10
000130  f7fffffe          BL       __aeabi_fmul
;;;100    	afx[2] = ri*cos1;
000134  900e              STR      r0,[sp,#0x38]
000136  4629              MOV      r1,r5
000138  9801              LDR      r0,[sp,#4]
00013a  f7fffffe          BL       __aeabi_fmul
;;;101    	afx[3] = ro*cos1;
00013e  900f              STR      r0,[sp,#0x3c]
000140  4629              MOV      r1,r5
000142  4650              MOV      r0,r10
000144  f7fffffe          BL       __aeabi_fmul
000148  4682              MOV      r10,r0
;;;102    	yMin = ceil(afy[0]);
00014a  9809              LDR      r0,[sp,#0x24]
00014c  f7fffffe          BL       __aeabi_f2d
000150  f7fffffe          BL       ceil
000154  f7fffffe          BL       __aeabi_d2iz
000158  4605              MOV      r5,r0
;;;103      yMax = floor(afy[3]);
00015a  4658              MOV      r0,r11
00015c  f7fffffe          BL       __aeabi_f2d
000160  f7fffffe          BL       floor
000164  f7fffffe          BL       __aeabi_d2iz
;;;104      /* Use Clipping rect to reduce calculation (if possible) */
;;;105      if (GUI_Context.pClipRect_HL) {
000168  4937              LDR      r1,|L5.584|
00016a  6949              LDR      r1,[r1,#0x14]  ; GUI_Context
00016c  b1e9              CBZ      r1,|L5.426|
;;;106        if (yMul ==1) {
00016e  2f01              CMP      r7,#1
000170  d002              BEQ      |L5.376|
;;;107          if (yMax > (GUI_Context.pClipRect_HL->y1 -y0))
;;;108            yMax = (GUI_Context.pClipRect_HL->y1 -y0);
;;;109          if (yMin < (GUI_Context.pClipRect_HL->y0 -y0))
;;;110            yMin = (GUI_Context.pClipRect_HL->y0 -y0);
;;;111        }
;;;112        if (yMul == -1) {
000172  1c7a              ADDS     r2,r7,#1
000174  d00d              BEQ      |L5.402|
000176  e018              B        |L5.426|
                  |L5.376|
000178  f9b12006          LDRSH    r2,[r1,#6]            ;107
00017c  1b12              SUBS     r2,r2,r4              ;107
00017e  4282              CMP      r2,r0                 ;107
000180  da00              BGE      |L5.388|
000182  4610              MOV      r0,r2                 ;107
                  |L5.388|
000184  f9b11002          LDRSH    r1,[r1,#2]            ;109
000188  1b09              SUBS     r1,r1,r4              ;109
00018a  42a9              CMP      r1,r5                 ;109
00018c  dd0d              BLE      |L5.426|
00018e  460d              MOV      r5,r1                 ;110
000190  e00b              B        |L5.426|
                  |L5.402|
;;;113          if (yMin > (GUI_Context.pClipRect_HL->y1 -y0))
000192  f9b12006          LDRSH    r2,[r1,#6]
000196  1b12              SUBS     r2,r2,r4
000198  42aa              CMP      r2,r5
00019a  da00              BGE      |L5.414|
;;;114            yMin = (GUI_Context.pClipRect_HL->y1 -y0);
00019c  4615              MOV      r5,r2
                  |L5.414|
;;;115          if (yMax < (GUI_Context.pClipRect_HL->y0 -y0))
00019e  f9b11002          LDRSH    r1,[r1,#2]
0001a2  1b09              SUBS     r1,r1,r4
0001a4  4281              CMP      r1,r0
0001a6  dd00              BLE      |L5.426|
0001a8  4608              MOV      r0,r1
                  |L5.426|
;;;116            yMax = (GUI_Context.pClipRect_HL->y0 -y0);
;;;117        }
;;;118      }
;;;119      /* Start drawing lines ... */
;;;120      {
;;;121      int xMinDisp, xMaxDisp, xMin=0,xMax=0;
0001aa  2100              MOVS     r1,#0
0001ac  9111              STR      r1,[sp,#0x44]
;;;122        for (y=yMax; y>=yMin; y--) {
0001ae  4606              MOV      r6,r0
0001b0  9112              STR      r1,[sp,#0x48]
0001b2  e043              B        |L5.572|
                  |L5.436|
;;;123          _CalcX(&xMin, y, ri2);
0001b4  4631              MOV      r1,r6
0001b6  a811              ADD      r0,sp,#0x44
0001b8  9a08              LDR      r2,[sp,#0x20]
0001ba  f7fffffe          BL       _CalcX
;;;124          _CalcX(&xMax, y, ro2);
0001be  4631              MOV      r1,r6
0001c0  a812              ADD      r0,sp,#0x48
0001c2  9a04              LDR      r2,[sp,#0x10]
0001c4  f7fffffe          BL       _CalcX
;;;125          if ((float)y< afy[1]) {
0001c8  4630              MOV      r0,r6
0001ca  f7fffffe          BL       __aeabi_i2f
0001ce  9014              STR      r0,[sp,#0x50]
0001d0  990a              LDR      r1,[sp,#0x28]
0001d2  f7fffffe          BL       __aeabi_cfcmple
0001d6  d20a              BCS      |L5.494|
;;;126            xMaxDisp = _CalcInterSectLin(y,afy[0], afy[1], afx[0], afx[1]);
0001d8  990e              LDR      r1,[sp,#0x38]
0001da  9814              LDR      r0,[sp,#0x50]
0001dc  9100              STR      r1,[sp,#0]
0001de  e9dd1209          LDRD     r1,r2,[sp,#0x24]
0001e2  9b0d              LDR      r3,[sp,#0x34]
0001e4  f7fffffe          BL       _CalcInterSectLin
0001e8  f7fffffe          BL       __aeabi_f2iz
0001ec  e000              B        |L5.496|
                  |L5.494|
;;;127    			} else {
;;;128            xMaxDisp = xMax;			
0001ee  9812              LDR      r0,[sp,#0x48]
                  |L5.496|
;;;129    			}
;;;130          if ((float)y > afy[2]) {
0001f0  990b              LDR      r1,[sp,#0x2c]
0001f2  4680              MOV      r8,r0                 ;128
0001f4  9814              LDR      r0,[sp,#0x50]
0001f6  f7fffffe          BL       __aeabi_cfrcmple
0001fa  d20a              BCS      |L5.530|
;;;131            xMinDisp = _CalcInterSectLin(y,afy[2], afy[3], afx[2], afx[3]);
0001fc  9814              LDR      r0,[sp,#0x50]
0001fe  f8cda000          STR      r10,[sp,#0]
000202  465a              MOV      r2,r11
000204  9b0f              LDR      r3,[sp,#0x3c]
000206  990b              LDR      r1,[sp,#0x2c]
000208  f7fffffe          BL       _CalcInterSectLin
00020c  f7fffffe          BL       __aeabi_f2iz
000210  e000              B        |L5.532|
                  |L5.530|
;;;132    			} else {
;;;133            xMinDisp = xMin;			
000212  9811              LDR      r0,[sp,#0x44]
                  |L5.532|
;;;134    			}
;;;135          if (xMul>0)
000214  9920              LDR      r1,[sp,#0x80]
000216  2900              CMP      r1,#0
000218  dd05              BLE      |L5.550|
;;;136            LCD_HL_DrawHLine(xMinDisp+x0, yMul*y+y0, xMaxDisp+x0);
00021a  fb074106          MLA      r1,r7,r6,r4
00021e  eb080209          ADD      r2,r8,r9
000222  4448              ADD      r0,r0,r9
000224  e005              B        |L5.562|
                  |L5.550|
;;;137          else
;;;138            LCD_HL_DrawHLine(-xMaxDisp+x0, yMul*y+y0, -xMinDisp+x0);
000226  eba90200          SUB      r2,r9,r0
00022a  fb074106          MLA      r1,r7,r6,r4
00022e  eba90008          SUB      r0,r9,r8
                  |L5.562|
000232  4b05              LDR      r3,|L5.584|
000234  6ddb              LDR      r3,[r3,#0x5c]  ; GUI_Context
000236  681b              LDR      r3,[r3,#0]
000238  4798              BLX      r3
00023a  1e76              SUBS     r6,r6,#1
                  |L5.572|
00023c  42ae              CMP      r6,r5                 ;122
00023e  dab9              BGE      |L5.436|
;;;139        }
;;;140    	}
;;;141    #if 0  /* Test code */
;;;142    {
;;;143      int i;
;;;144      GUI_SetColor( GUI_WHITE ); 
;;;145    	for (i=0; i<4; i++)
;;;146        LCD_HL_DrawPixel(afx[i]+x0, afy[i]+y0);
;;;147    }
;;;148    #endif
;;;149      GUI_USE_PARA(ry);
;;;150    }
000240  b015              ADD      sp,sp,#0x54
000242  e8bd8ff0          POP      {r4-r11,pc}
;;;151    
                          ENDP

000246  0000              DCW      0x0000
                  |L5.584|
                          DCD      GUI_Context
                  |L5.588|
                          DCD      0x3ff80000
                  |L5.592|
                          DCD      0x4d12d84a
                  |L5.596|
                          DCD      0x400921fb
                  |L5.600|
                          DCD      0x40668000
