; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\progbar.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\progbar.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\PROGBAR.c]
                          THUMB

                          AREA ||i.PROGBAR_Callback||, CODE, READONLY, ALIGN=1

                  PROGBAR_Callback PROC
;;;249    */
;;;250    void PROGBAR_Callback(WM_MESSAGE * pMsg) {
000000  b570              PUSH     {r4-r6,lr}
;;;251      PROGBAR_Handle hObj;
;;;252      PROGBAR_Obj * pObj;
;;;253      hObj = pMsg->hWin;
000002  f9b05004          LDRSH    r5,[r0,#4]
000006  4604              MOV      r4,r0                 ;250
;;;254      pObj = (PROGBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4606              MOV      r6,r0
;;;255      /* Let widget handle the standard messages */
;;;256      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000010  4621              MOV      r1,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       WIDGET_HandleActive
000018  2800              CMP      r0,#0
00001a  d011              BEQ      |L1.64|
;;;257        return;
;;;258      }
;;;259      switch (pMsg->MsgId) {
00001c  6820              LDR      r0,[r4,#0]
00001e  280b              CMP      r0,#0xb
000020  d006              BEQ      |L1.48|
000022  280f              CMP      r0,#0xf
000024  d107              BNE      |L1.54|
;;;260      case WM_PAINT:
;;;261        _Paint(pObj);
000026  4630              MOV      r0,r6
000028  e8bd4070          POP      {r4-r6,lr}
00002c  f7ffbffe          B.W      _Paint
                  |L1.48|
;;;262        return;
;;;263      case WM_DELETE:
;;;264        _Delete(hObj);
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       PROGBAR__FreeText
                  |L1.54|
;;;265        break;
;;;266      }
;;;267      WM_DefaultProc(pMsg);
000036  4620              MOV      r0,r4
000038  e8bd4070          POP      {r4-r6,lr}
00003c  f7ffbffe          B.W      WM_DefaultProc
                  |L1.64|
;;;268    }
000040  bd70              POP      {r4-r6,pc}
;;;269    
                          ENDP


                          AREA ||i.PROGBAR_CreateEx||, CODE, READONLY, ALIGN=2

                  PROGBAR_CreateEx PROC
;;;279    */
;;;280    PROGBAR_Handle PROGBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;281                                    int WinFlags, int ExFlags, int Id)
;;;282    {
000004  f10d082c          ADD      r8,sp,#0x2c
;;;283      PROGBAR_Handle hObj;
;;;284      WM_LOCK();
;;;285      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, PROGBAR_Callback,
000008  f04f0c34          MOV      r12,#0x34
00000c  e89800d0          LDM      r8,{r4,r6,r7}         ;282
000010  f8dfe050          LDR      lr,|L2.100|
000014  b2a4              UXTH     r4,r4
000016  9d0a              LDR      r5,[sp,#0x28]
000018  e9cdec02          STRD     lr,r12,[sp,#8]
00001c  e9cd5400          STRD     r5,r4,[sp,#0]
000020  f7fffffe          BL       WM_CreateWindowAsChild
000024  0005              MOVS     r5,r0
;;;286                                    sizeof(PROGBAR_Obj) - sizeof(WM_Obj));
;;;287      if (hObj) {
000026  d018              BEQ      |L2.90|
;;;288        PROGBAR_Obj* pObj;
;;;289        pObj = (PROGBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000028  f7fffffe          BL       GUI_ALLOC_h2p
00002c  4604              MOV      r4,r0
;;;290        /* init widget specific variables */
;;;291        WIDGET__Init(&pObj->Widget, Id, 0);
00002e  2200              MOVS     r2,#0
000030  4639              MOV      r1,r7
000032  f7fffffe          BL       WIDGET__Init
;;;292        WIDGET_SetEffect(hObj, &WIDGET_Effect_None); /* Standard effect for progbar: None */
000036  490c              LDR      r1,|L2.104|
000038  4628              MOV      r0,r5
00003a  f7fffffe          BL       WIDGET_SetEffect
;;;293        PROGBAR_INIT_ID(pObj);
;;;294        /* init member variables */
;;;295        pObj->Props        = PROGBAR_DefaultProps;
00003e  2214              MOVS     r2,#0x14
000040  490a              LDR      r1,|L2.108|
000042  f104003c          ADD      r0,r4,#0x3c
000046  f7fffffe          BL       __aeabi_memcpy4
;;;296        pObj->TextAlign    = GUI_TA_CENTER;
00004a  2002              MOVS     r0,#2
00004c  8660              STRH     r0,[r4,#0x32]
;;;297        pObj->Max          = 100;
00004e  2064              MOVS     r0,#0x64
;;;298        pObj->Min          = 0;
000050  63a0              STR      r0,[r4,#0x38]
000052  2000              MOVS     r0,#0
;;;299        pObj->Flags        = ExFlags;
000054  6360              STR      r0,[r4,#0x34]
000056  f8846050          STRB     r6,[r4,#0x50]
                  |L2.90|
;;;300      }
;;;301      WM_UNLOCK();
;;;302      return hObj;
;;;303    }
00005a  b004              ADD      sp,sp,#0x10
00005c  4628              MOV      r0,r5                 ;302
00005e  e8bd81f0          POP      {r4-r8,pc}
;;;304    
                          ENDP

000062  0000              DCW      0x0000
                  |L2.100|
                          DCD      PROGBAR_Callback
                  |L2.104|
                          DCD      WIDGET_Effect_None
                  |L2.108|
                          DCD      ||.data||

                          AREA ||i.PROGBAR_SetValue||, CODE, READONLY, ALIGN=1

                  PROGBAR_SetValue PROC
;;;314    */
;;;315    void PROGBAR_SetValue(PROGBAR_Handle hObj, int v) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b086              SUB      sp,sp,#0x18
000006  460d              MOV      r5,r1
000008  ea5f0800          MOVS     r8,r0
00000c  d050              BEQ      |L3.176|
;;;316      if (hObj) {
;;;317        PROGBAR_Obj* pObj;
;;;318        WM_LOCK();
;;;319        pObj= PROGBAR_H2P(hObj);
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4604              MOV      r4,r0
;;;320        /* Put v into legal range */
;;;321        if (v < pObj->Min) {
000014  6b40              LDR      r0,[r0,#0x34]
000016  42a8              CMP      r0,r5
000018  dd00              BLE      |L3.28|
;;;322    	    v = pObj->Min;
00001a  4605              MOV      r5,r0
                  |L3.28|
;;;323        }
;;;324        if (v > pObj->Max) {
00001c  6ba0              LDR      r0,[r4,#0x38]
00001e  42a8              CMP      r0,r5
000020  da00              BGE      |L3.36|
;;;325    	    v = pObj->Max;
000022  4605              MOV      r5,r0
                  |L3.36|
;;;326        }
;;;327        if (pObj->v != v) {
000024  6aa0              LDR      r0,[r4,#0x28]
000026  42a8              CMP      r0,r5
000028  d042              BEQ      |L3.176|
;;;328          GUI_RECT r;
;;;329          if (pObj->Flags & PROGBAR_CF_VERTICAL) {
00002a  f8940050          LDRB     r0,[r4,#0x50]
00002e  6aa1              LDR      r1,[r4,#0x28]
000030  07c0              LSLS     r0,r0,#31
000032  f04f0600          MOV      r6,#0
;;;330            /* Get y values */
;;;331            if (v < pObj->v) {
;;;332              r.y1 = _Value2Pos(pObj, v);
;;;333              r.y0 = _Value2Pos(pObj, pObj->v);
;;;334            } else {
;;;335              r.y1 = _Value2Pos(pObj, pObj->v);
;;;336              r.y0 = _Value2Pos(pObj, v);
;;;337            }
;;;338    		    r.x0    = 0;
;;;339    		    r.x1    = 4095;
000036  f64077ff          MOV      r7,#0xfff
00003a  d019              BEQ      |L3.112|
00003c  42a9              CMP      r1,r5                 ;331
00003e  dd07              BLE      |L3.80|
000040  4629              MOV      r1,r5                 ;332
000042  4620              MOV      r0,r4                 ;332
000044  f7fffffe          BL       _Value2Pos
000048  f8ad0006          STRH     r0,[sp,#6]            ;332
00004c  6aa1              LDR      r1,[r4,#0x28]         ;333
00004e  e005              B        |L3.92|
                  |L3.80|
000050  4620              MOV      r0,r4                 ;335
000052  f7fffffe          BL       _Value2Pos
000056  f8ad0006          STRH     r0,[sp,#6]            ;335
00005a  4629              MOV      r1,r5                 ;336
                  |L3.92|
00005c  4620              MOV      r0,r4                 ;336
00005e  f7fffffe          BL       _Value2Pos
000062  f8ad0002          STRH     r0,[sp,#2]            ;336
000066  f8ad6000          STRH     r6,[sp,#0]            ;338
00006a  f8ad7004          STRH     r7,[sp,#4]
00006e  e01a              B        |L3.166|
                  |L3.112|
;;;340            pObj->v = v;
;;;341          } else {
;;;342            /* Get x values */
;;;343            if (v < pObj->v) {
000070  42a9              CMP      r1,r5
000072  dd07              BLE      |L3.132|
;;;344              r.x0 = _Value2Pos(pObj, v);
000074  4629              MOV      r1,r5
000076  4620              MOV      r0,r4
000078  f7fffffe          BL       _Value2Pos
00007c  f8ad0000          STRH     r0,[sp,#0]
;;;345              r.x1 = _Value2Pos(pObj, pObj->v);
000080  6aa1              LDR      r1,[r4,#0x28]
000082  e005              B        |L3.144|
                  |L3.132|
;;;346            } else {
;;;347              r.x0 = _Value2Pos(pObj, pObj->v);
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       _Value2Pos
00008a  f8ad0000          STRH     r0,[sp,#0]
;;;348              r.x1 = _Value2Pos(pObj, v);
00008e  4629              MOV      r1,r5
                  |L3.144|
000090  4620              MOV      r0,r4
000092  f7fffffe          BL       _Value2Pos
000096  f8ad0004          STRH     r0,[sp,#4]
;;;349            }
;;;350    		    r.y0    = 0;
00009a  f8ad6002          STRH     r6,[sp,#2]
;;;351    		    r.y1    = 4095;
00009e  f8ad7006          STRH     r7,[sp,#6]
;;;352            if (pObj->hpText == 0) {
0000a2  8da0              LDRH     r0,[r4,#0x2c]
0000a4  b138              CBZ      r0,|L3.182|
                  |L3.166|
;;;353              const GUI_FONT GUI_UNI_PTR * pOldFont;
;;;354              char acBuffer[5];
;;;355              GUI_RECT rText;
;;;356              pOldFont = GUI_SetFont(pObj->Props.pFont);
;;;357              PROGBAR__GetTextRect(pObj, &rText, PROGBAR__GetText(pObj, acBuffer));
;;;358              GUI_MergeRect(&r, &r, &rText);
;;;359              pObj->v = v;
;;;360              PROGBAR__GetTextRect(pObj, &rText, PROGBAR__GetText(pObj, acBuffer));
;;;361              GUI_MergeRect(&r, &r, &rText);
;;;362              GUI_SetFont(pOldFont);
;;;363            } else {
;;;364              pObj->v = v;
0000a6  62a5              STR      r5,[r4,#0x28]
                  |L3.168|
;;;365            }
;;;366          }
;;;367          WM_InvalidateRect(hObj, &r);
0000a8  4669              MOV      r1,sp
0000aa  4640              MOV      r0,r8
0000ac  f7fffffe          BL       WM_InvalidateRect
                  |L3.176|
;;;368        }
;;;369        WM_UNLOCK();
;;;370      }
;;;371    }
0000b0  b006              ADD      sp,sp,#0x18
0000b2  e8bd81f0          POP      {r4-r8,pc}
                  |L3.182|
0000b6  6be0              LDR      r0,[r4,#0x3c]         ;356
0000b8  f7fffffe          BL       GUI_SetFont
0000bc  4606              MOV      r6,r0                 ;356
0000be  a904              ADD      r1,sp,#0x10           ;357
0000c0  4620              MOV      r0,r4                 ;357
0000c2  f7fffffe          BL       PROGBAR__GetText
0000c6  4602              MOV      r2,r0                 ;357
0000c8  a902              ADD      r1,sp,#8              ;357
0000ca  4620              MOV      r0,r4                 ;357
0000cc  f7fffffe          BL       PROGBAR__GetTextRect
0000d0  4669              MOV      r1,sp                 ;358
0000d2  aa02              ADD      r2,sp,#8              ;358
0000d4  4608              MOV      r0,r1                 ;358
0000d6  f7fffffe          BL       GUI_MergeRect
0000da  a904              ADD      r1,sp,#0x10           ;360
0000dc  4620              MOV      r0,r4                 ;360
0000de  62a5              STR      r5,[r4,#0x28]         ;360
0000e0  f7fffffe          BL       PROGBAR__GetText
0000e4  4602              MOV      r2,r0                 ;360
0000e6  a902              ADD      r1,sp,#8              ;360
0000e8  4620              MOV      r0,r4                 ;360
0000ea  f7fffffe          BL       PROGBAR__GetTextRect
0000ee  4669              MOV      r1,sp                 ;361
0000f0  aa02              ADD      r2,sp,#8              ;361
0000f2  4608              MOV      r0,r1                 ;361
0000f4  f7fffffe          BL       GUI_MergeRect
0000f8  4630              MOV      r0,r6                 ;362
0000fa  f7fffffe          BL       GUI_SetFont
0000fe  e7d3              B        |L3.168|
;;;372    
                          ENDP


                          AREA ||i.PROGBAR__FreeText||, CODE, READONLY, ALIGN=1

                  PROGBAR__FreeText PROC
;;;190    */
;;;191    void PROGBAR__FreeText(PROGBAR_Handle hObj) {
000000  b510              PUSH     {r4,lr}
;;;192      PROGBAR_Obj* pObj = PROGBAR_H2P(hObj);
000002  f7fffffe          BL       GUI_ALLOC_h2p
;;;193      GUI_ALLOC_FreePtr(&pObj->hpText);
000006  e8bd4010          POP      {r4,lr}
00000a  302c              ADDS     r0,r0,#0x2c           ;192
00000c  f7ffbffe          B.W      GUI_ALLOC_FreePtr
;;;194    }
;;;195    
                          ENDP


                          AREA ||i.PROGBAR__GetText||, CODE, READONLY, ALIGN=1

                  PROGBAR__GetText PROC
;;;199    */
;;;200    const char * PROGBAR__GetText(const PROGBAR_Obj* pObj, char* pBuffer) {
000000  b513              PUSH     {r0,r1,r4,lr}
;;;201      char* pText;
;;;202      if (pObj->hpText) {
000002  f9b0102c          LDRSH    r1,[r0,#0x2c]
000006  b121              CBZ      r1,|L5.18|
000008  4608              MOV      r0,r1                 ;200
;;;203        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4604              MOV      r4,r0
000010  e013              B        |L5.58|
                  |L5.18|
;;;204      } else {
;;;205        pText = pBuffer;
;;;206        GUI_AddDecMin((100 * (I32)(pObj->v - pObj->Min)) / (pObj->Max - pObj->Min), &pBuffer);
000012  6a82              LDR      r2,[r0,#0x28]
000014  6b41              LDR      r1,[r0,#0x34]
000016  6b80              LDR      r0,[r0,#0x38]
000018  1a52              SUBS     r2,r2,r1
00001a  2364              MOVS     r3,#0x64
00001c  1a40              SUBS     r0,r0,r1
00001e  435a              MULS     r2,r3,r2
000020  fb92f0f0          SDIV     r0,r2,r0
000024  9c01              LDR      r4,[sp,#4]
000026  a901              ADD      r1,sp,#4
000028  f7fffffe          BL       GUI_AddDecMin
;;;207        *pBuffer++ = '%';
00002c  9801              LDR      r0,[sp,#4]
00002e  2125              MOVS     r1,#0x25
000030  f8001b01          STRB     r1,[r0],#1
;;;208    		*pBuffer   = 0;
000034  2100              MOVS     r1,#0
000036  9001              STR      r0,[sp,#4]
000038  7001              STRB     r1,[r0,#0]
                  |L5.58|
;;;209    	}
;;;210      return (const char*)pText;
00003a  4620              MOV      r0,r4
;;;211    }
00003c  bd1c              POP      {r2-r4,pc}
;;;212    
                          ENDP


                          AREA ||i.PROGBAR__GetTextRect||, CODE, READONLY, ALIGN=1

                  PROGBAR__GetTextRect PROC
;;;216    */
;;;217    void PROGBAR__GetTextRect(const PROGBAR_Obj* pObj, GUI_RECT* pRect, const char* pText) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;218      int xSize      = pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
000008  f9b00004          LDRSH    r0,[r0,#4]
00000c  f9b51000          LDRSH    r1,[r5,#0]
000010  1a47              SUBS     r7,r0,r1
;;;219      int ySize      = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
000012  f9b50006          LDRSH    r0,[r5,#6]
000016  f9b51002          LDRSH    r1,[r5,#2]
;;;220      int TextWidth  = GUI_GetStringDistX(pText);
00001a  1c7f              ADDS     r7,r7,#1
00001c  1a40              SUBS     r0,r0,r1              ;219
00001e  f1000801          ADD      r8,r0,#1              ;219
000022  4610              MOV      r0,r2
000024  f7fffffe          BL       GUI_GetStringDistX
000028  4606              MOV      r6,r0
;;;221      int TextHeight = GUI_GetFontSizeY();
00002a  f7fffffe          BL       GUI_GetFontSizeY
;;;222      int EffectSize = pObj->Widget.pEffect->EffectSize;
00002e  6a29              LDR      r1,[r5,#0x20]
;;;223      switch (pObj->TextAlign & GUI_TA_HORIZONTAL) {
000030  f8952032          LDRB     r2,[r5,#0x32]
000034  6949              LDR      r1,[r1,#0x14]         ;222
000036  f0020203          AND      r2,r2,#3
00003a  2a01              CMP      r2,#1
00003c  d006              BEQ      |L6.76|
00003e  2a02              CMP      r2,#2
000040  d107              BNE      |L6.82|
;;;224      case GUI_TA_CENTER:
;;;225        pRect->x0 = (xSize - TextWidth) / 2;
000042  1bb9              SUBS     r1,r7,r6
000044  eb0171d1          ADD      r1,r1,r1,LSR #31
000048  1049              ASRS     r1,r1,#1
;;;226    		break;
00004a  e002              B        |L6.82|
                  |L6.76|
;;;227      case GUI_TA_RIGHT:
;;;228        pRect->x0 = xSize - TextWidth - 1 - EffectSize;
00004c  1bba              SUBS     r2,r7,r6
00004e  1a51              SUBS     r1,r2,r1
000050  1e49              SUBS     r1,r1,#1
                  |L6.82|
000052  8021              STRH     r1,[r4,#0]            ;225
;;;229    		break;
;;;230      default:
;;;231        pRect->x0 = EffectSize;
;;;232    	}
;;;233      pRect->y0  = (ySize - TextHeight) / 2;
000054  eba80100          SUB      r1,r8,r0
000058  eb0171d1          ADD      r1,r1,r1,LSR #31
00005c  1049              ASRS     r1,r1,#1
00005e  8061              STRH     r1,[r4,#2]
;;;234      pRect->x0 += pObj->XOff;
000060  8822              LDRH     r2,[r4,#0]
000062  8deb              LDRH     r3,[r5,#0x2e]
;;;235      pRect->y0 += pObj->YOff;
000064  1e76              SUBS     r6,r6,#1
000066  441a              ADD      r2,r2,r3              ;234
000068  8022              STRH     r2,[r4,#0]            ;234
00006a  8e2b              LDRH     r3,[r5,#0x30]
;;;236      pRect->x1  = pRect->x0 + TextWidth  - 1;
00006c  4432              ADD      r2,r2,r6
00006e  4419              ADD      r1,r1,r3              ;235
000070  8061              STRH     r1,[r4,#2]            ;235
000072  1e40              SUBS     r0,r0,#1
000074  80a2              STRH     r2,[r4,#4]
;;;237      pRect->y1  = pRect->y0 + TextHeight - 1;
000076  4408              ADD      r0,r0,r1
000078  80e0              STRH     r0,[r4,#6]
;;;238    }
00007a  e8bd81f0          POP      {r4-r8,pc}
;;;239    
                          ENDP


                          AREA ||i._DrawPart||, CODE, READONLY, ALIGN=1

                  _DrawPart PROC
;;;100    */
;;;101    static void _DrawPart(const PROGBAR_Obj* pObj, int Index,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;102    										  int xText, int yText, const char* pText) {
;;;103      LCD_SetBkColor(pObj->Props.aBarColor[Index]);
000004  eb000481          ADD      r4,r0,r1,LSL #2
000008  461e              MOV      r6,r3                 ;102
00000a  4617              MOV      r7,r2                 ;102
00000c  9d06              LDR      r5,[sp,#0x18]
00000e  6c20              LDR      r0,[r4,#0x40]
000010  f7fffffe          BL       LCD_SetBkColor
;;;104      LCD_SetColor(pObj->Props.aTextColor[Index]);
000014  6ca0              LDR      r0,[r4,#0x48]
000016  f7fffffe          BL       LCD_SetColor
;;;105      GUI_Clear();
00001a  f7fffffe          BL       GUI_Clear
;;;106      if (pText) {
00001e  2d00              CMP      r5,#0
000020  d008              BEQ      |L7.52|
;;;107        GUI_GotoXY(xText, yText);
000022  4631              MOV      r1,r6
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       GUI_GotoXY
;;;108        GUI_DispString(pText);
00002a  4628              MOV      r0,r5
00002c  e8bd41f0          POP      {r4-r8,lr}
000030  f7ffbffe          B.W      GUI_DispString
                  |L7.52|
;;;109      }
;;;110    }
000034  e8bd81f0          POP      {r4-r8,pc}
;;;111    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=1

                  _Paint PROC
;;;115    */
;;;116    static void _Paint(PROGBAR_Obj * pObj) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b08b              SUB      sp,sp,#0x2c
000004  4605              MOV      r5,r0
;;;117      GUI_RECT r, rInside, rClient, rText;
;;;118      const char* pText;
;;;119      char ac[5];
;;;120      int tm = 0, Pos;
000006  2700              MOVS     r7,#0
;;;121      WM_GetClientRect(&rClient);
000008  a807              ADD      r0,sp,#0x1c
00000a  f7fffffe          BL       WM_GetClientRect
;;;122      GUI__ReduceRect(&rInside, &rClient, pObj->Widget.pEffect->EffectSize);
00000e  6a28              LDR      r0,[r5,#0x20]
000010  a907              ADD      r1,sp,#0x1c
000012  6942              LDR      r2,[r0,#0x14]
000014  a803              ADD      r0,sp,#0xc
000016  f7fffffe          BL       GUI__ReduceRect
;;;123      Pos  = _Value2Pos(pObj, pObj->v);
00001a  4628              MOV      r0,r5
00001c  6aa9              LDR      r1,[r5,#0x28]
00001e  f7fffffe          BL       _Value2Pos
000022  4604              MOV      r4,r0
;;;124      if (pObj->Flags & PROGBAR_CF_VERTICAL) {
000024  f8950050          LDRB     r0,[r5,#0x50]
000028  07c0              LSLS     r0,r0,#31
00002a  d01e              BEQ      |L8.106|
00002c  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000030  e9cd0105          STRD     r0,r1,[sp,#0x14]
;;;125        /* Draw lower part */
;;;126        r    = rInside;
;;;127        r.y0 = Pos;
000034  f8ad4016          STRH     r4,[sp,#0x16]
;;;128        WM_SetUserClipArea(&r);
000038  a805              ADD      r0,sp,#0x14
00003a  f7fffffe          BL       WM_SetUserClipRect
;;;129        _DrawPart(pObj, 0, 0, 0, 0);
00003e  2600              MOVS     r6,#0
000040  4633              MOV      r3,r6
000042  4632              MOV      r2,r6
000044  4631              MOV      r1,r6
000046  4628              MOV      r0,r5
000048  9600              STR      r6,[sp,#0]
00004a  f7fffffe          BL       _DrawPart
00004e  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000052  e9cd0105          STRD     r0,r1,[sp,#0x14]
000056  1e64              SUBS     r4,r4,#1
;;;130        /* Draw upper part */
;;;131        r    = rInside;
;;;132        r.y1 = Pos - 1;
000058  f8ad401a          STRH     r4,[sp,#0x1a]
;;;133        WM_SetUserClipArea(&r);
00005c  a805              ADD      r0,sp,#0x14
00005e  f7fffffe          BL       WM_SetUserClipRect
;;;134        _DrawPart(pObj, 1, 0, 0, 0);
000062  2300              MOVS     r3,#0
000064  461a              MOV      r2,r3
000066  9600              STR      r6,[sp,#0]
000068  e031              B        |L8.206|
                  |L8.106|
;;;135      } else {
;;;136        pText = PROGBAR__GetText(pObj, ac);
00006a  a909              ADD      r1,sp,#0x24
00006c  4628              MOV      r0,r5
00006e  f7fffffe          BL       PROGBAR__GetText
000072  4606              MOV      r6,r0
;;;137        GUI_SetFont(pObj->Props.pFont);
000074  6be8              LDR      r0,[r5,#0x3c]
000076  f7fffffe          BL       GUI_SetFont
;;;138        PROGBAR__GetTextRect(pObj, &rText, pText);
00007a  4632              MOV      r2,r6
00007c  a901              ADD      r1,sp,#4
00007e  4628              MOV      r0,r5
000080  f7fffffe          BL       PROGBAR__GetTextRect
;;;139        tm = GUI_SetTextMode(GUI_TM_TRANS);
000084  2002              MOVS     r0,#2
000086  f7fffffe          BL       GUI_SetTextMode
00008a  4607              MOV      r7,r0
00008c  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000090  e9cd0105          STRD     r0,r1,[sp,#0x14]
;;;140        /* Draw left bar */
;;;141        r    = rInside;
;;;142        r.x1 = Pos - 1;
000094  1e60              SUBS     r0,r4,#1
000096  f8ad0018          STRH     r0,[sp,#0x18]
;;;143        WM_SetUserClipArea(&r);
00009a  a805              ADD      r0,sp,#0x14
00009c  f7fffffe          BL       WM_SetUserClipRect
;;;144        _DrawPart(pObj, 0, rText.x0, rText.y0, pText);
0000a0  9600              STR      r6,[sp,#0]
0000a2  f9bd3006          LDRSH    r3,[sp,#6]
0000a6  f9bd2004          LDRSH    r2,[sp,#4]
0000aa  2100              MOVS     r1,#0
0000ac  4628              MOV      r0,r5
0000ae  f7fffffe          BL       _DrawPart
0000b2  e9dd0103          LDRD     r0,r1,[sp,#0xc]
0000b6  e9cd0105          STRD     r0,r1,[sp,#0x14]
;;;145        /* Draw right bar */
;;;146        r    = rInside;
;;;147        r.x0 = Pos;
0000ba  f8ad4014          STRH     r4,[sp,#0x14]
;;;148        WM_SetUserClipArea(&r);
0000be  a805              ADD      r0,sp,#0x14
0000c0  f7fffffe          BL       WM_SetUserClipRect
;;;149        _DrawPart(pObj, 1, rText.x0, rText.y0, pText);
0000c4  f9bd3006          LDRSH    r3,[sp,#6]
0000c8  f9bd2004          LDRSH    r2,[sp,#4]
0000cc  9600              STR      r6,[sp,#0]
                  |L8.206|
0000ce  2101              MOVS     r1,#1
0000d0  4628              MOV      r0,r5
0000d2  f7fffffe          BL       _DrawPart
;;;150      }
;;;151      WM_SetUserClipArea(NULL);
0000d6  2000              MOVS     r0,#0
0000d8  f7fffffe          BL       WM_SetUserClipRect
;;;152      GUI_SetTextMode(tm);
0000dc  4638              MOV      r0,r7
0000de  f7fffffe          BL       GUI_SetTextMode
;;;153      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rClient);
0000e2  a907              ADD      r1,sp,#0x1c
0000e4  4628              MOV      r0,r5
0000e6  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;154    }
0000ea  b00b              ADD      sp,sp,#0x2c
0000ec  bdf0              POP      {r4-r7,pc}
;;;155    
                          ENDP


                          AREA ||i._Value2Pos||, CODE, READONLY, ALIGN=1

                  _Value2Pos PROC
;;;81     */
;;;82     static int _Value2Pos(const PROGBAR_Obj* pObj, int v) {
000000  b570              PUSH     {r4-r6,lr}
;;;83       int IsVertical = pObj->Flags & PROGBAR_CF_VERTICAL;
000002  f8902050          LDRB     r2,[r0,#0x50]
000006  f0120401          ANDS     r4,r2,#1
;;;84       int EffectSize = pObj->Widget.pEffect->EffectSize;
00000a  6a02              LDR      r2,[r0,#0x20]
00000c  6953              LDR      r3,[r2,#0x14]         ;82
00000e  d004              BEQ      |L9.26|
;;;85       int Size  = IsVertical ? pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1 : pObj->Widget.Win.Rect.x1 - pObj->Widget.Win.Rect.x0 + 1;
000010  f9b02006          LDRSH    r2,[r0,#6]
000014  f9b05002          LDRSH    r5,[r0,#2]
000018  e003              B        |L9.34|
                  |L9.26|
00001a  f9b02004          LDRSH    r2,[r0,#4]
00001e  f9b05000          LDRSH    r5,[r0,#0]
                  |L9.34|
000022  1b55              SUBS     r5,r2,r5
000024  e9d0200d          LDRD     r2,r0,[r0,#0x34]
000028  1c6d              ADDS     r5,r5,#1
;;;86       int Min   = pObj->Min;
;;;87       int Max   = pObj->Max;
;;;88       if (v < Min) {
00002a  4291              CMP      r1,r2
00002c  da00              BGE      |L9.48|
;;;89     	  v = Min;
00002e  4611              MOV      r1,r2
                  |L9.48|
;;;90       }
;;;91       if (v > Max) {
000030  4281              CMP      r1,r0
000032  dd00              BLE      |L9.54|
;;;92     	  v = Max;
000034  4601              MOV      r1,r0
                  |L9.54|
;;;93       }
;;;94       return EffectSize + ((Size - 2 * EffectSize) * (I32)(IsVertical ? Max - v : v - Min)) / (Max - Min);
000036  425e              RSBS     r6,r3,#0
000038  eb050546          ADD      r5,r5,r6,LSL #1
00003c  b10c              CBZ      r4,|L9.66|
00003e  1a41              SUBS     r1,r0,r1
000040  e000              B        |L9.68|
                  |L9.66|
000042  1a89              SUBS     r1,r1,r2
                  |L9.68|
000044  434d              MULS     r5,r1,r5
000046  1a80              SUBS     r0,r0,r2
000048  fb95f0f0          SDIV     r0,r5,r0
00004c  4418              ADD      r0,r0,r3
;;;95     }
00004e  bd70              POP      {r4-r6,pc}
;;;96     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  PROGBAR_DefaultProps
                          DCD      GUI_Font6x8
                          DCD      0x00555555
                          DCD      0x00aaaaaa
                          DCD      0x00ffffff
                          DCD      0x00000000
