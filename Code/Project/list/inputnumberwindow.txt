; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\inputnumberwindow.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\inputnumberwindow.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\User\UserWindow\InputNumberWindow.c]
                          THUMB

                          AREA ||i.Alcohol_Value_Analyze_Left||, CODE, READONLY, ALIGN=2

                  Alcohol_Value_Analyze_Left PROC
;;;420    static const  char _PleaseInput_PoliceID[]= {0xE8,0xAF,0xB7,0xE8,0xBE,0x93,0xE5,0x85,0xA5,0xE6,0x89,0xA7,0xE5,0x8B,0xA4,0xE6,0xB0,0x91,0xE8,0xAD,0xA6,0xE8,0xAD,0xA6,0xE5,0x8F,0xB7,0xEF,0xBC,0x81,0x00};   /*ÇëÊäÈëÖ´ÇÚÃñ¾¯¾¯ºÅ£¡*/
;;;421    static void Alcohol_Value_Analyze_Left(CW_InputNumberWindow *pThisWin,WM_MESSAGE *pMsg)
000000  b530              PUSH     {r4,r5,lr}
;;;422    {
000002  4605              MOV      r5,r0
;;;423    	if((g_sRecord.fAlcValue>=20)&&(g_sXingJiKongGU.bOpenDevice==false)&&(g_sXingJiKongGU.bAdministration==false))
000004  4825              LDR      r0,|L1.156|
000006  460c              MOV      r4,r1                 ;422
000008  4925              LDR      r1,|L1.160|
00000a  f8d00005          LDR      r0,[r0,#5]  ; g_sRecord
00000e  b08d              SUB      sp,sp,#0x34           ;422
000010  4288              CMP      r0,r1
000012  db16              BLT      |L1.66|
000014  4823              LDR      r0,|L1.164|
000016  79c1              LDRB     r1,[r0,#7]  ; g_sXingJiKongGU
000018  b999              CBNZ     r1,|L1.66|
00001a  7a00              LDRB     r0,[r0,#8]  ; g_sXingJiKongGU
00001c  b988              CBNZ     r0,|L1.66|
;;;424    	{
;;;425    		memset(DriverID_Information,0,sizeof(DriverID_Information));
00001e  2114              MOVS     r1,#0x14
000020  4821              LDR      r0,|L1.168|
000022  f7fffffe          BL       __aeabi_memclr
;;;426    		EDIT_GetText(pThisWin->hEditBox, (char *)DriverID_Information, sizeof(DriverID_Information));
000026  f9b50014          LDRSH    r0,[r5,#0x14]
00002a  2214              MOVS     r2,#0x14
00002c  491e              LDR      r1,|L1.168|
00002e  f7fffffe          BL       EDIT_GetText
;;;427    		TRACE_PRINTF("DriverID_Information:%s\r\n",DriverID_Information);
000032  491d              LDR      r1,|L1.168|
000034  a01d              ADR      r0,|L1.172|
000036  f7fffffe          BL       User_Debug_Printf
;;;428    		if(strlen(DriverID_Information)>0)
00003a  481b              LDR      r0,|L1.168|
00003c  f7fffffe          BL       strlen
000040  b158              CBZ      r0,|L1.90|
                  |L1.66|
;;;429    		{
;;;430    			if(pMsg->hWin != GetFirstWinFromList())
000042  f7fffffe          BL       GetFirstWinFromList
000046  f9b41004          LDRSH    r1,[r4,#4]
00004a  4288              CMP      r0,r1
00004c  d024              BEQ      |L1.152|
;;;431    			{
;;;432    				WM_DeleteWindow(pMsg->hWin);
;;;433    			}
;;;434    		}
;;;435    		else //added by lxl 20180926
;;;436    		{
;;;437    			sDialogWindowProperty s;
;;;438    			s.nWinType = eDialogOK;
;;;439    			s.pFont = _GetFont(Font_WarningContent);
;;;440    			switch(pThisWin->sProperty.nWinType)
;;;441    			{
;;;442    				case eInputPoliceID:
;;;443    					s.pContent = _PleaseInput_PoliceID; 
;;;444    					break;
;;;445    					
;;;446    				case eInputDriverLicence:
;;;447    					s.pContent = _PleaseInput_DriverID; 
;;;448    					break;
;;;449    			}
;;;450    			s.nContentColor = GUI_RED;
;;;451    			s.nBackGroundColor = GUI_LIGHTGRAY;
;;;452    			s.nAutoCloseTime = 3;
;;;453    			s.pFunMiddleOK = NULL;
;;;454    			CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;455    		}
;;;456    	}
;;;457    	else
;;;458    	{
;;;459    		if(pMsg->hWin != GetFirstWinFromList())
;;;460    		{
;;;461    			WM_DeleteWindow(pMsg->hWin);
00004e  b00d              ADD      sp,sp,#0x34
000050  4608              MOV      r0,r1                 ;430
000052  e8bd4030          POP      {r4,r5,lr}
000056  f7ffbffe          B.W      WM_DeleteWindow
                  |L1.90|
00005a  2400              MOVS     r4,#0                 ;438
00005c  f88d4000          STRB     r4,[sp,#0]            ;438
000060  2012              MOVS     r0,#0x12              ;439
000062  f7fffffe          BL       _GetFont
000066  9002              STR      r0,[sp,#8]            ;440
000068  f8950020          LDRB     r0,[r5,#0x20]         ;440
00006c  2804              CMP      r0,#4                 ;440
00006e  d003              BEQ      |L1.120|
000070  2805              CMP      r0,#5                 ;440
000072  d104              BNE      |L1.126|
000074  4814              LDR      r0,|L1.200|
000076  e001              B        |L1.124|
                  |L1.120|
000078  4813              LDR      r0,|L1.200|
00007a  3819              SUBS     r0,r0,#0x19           ;447
                  |L1.124|
00007c  9001              STR      r0,[sp,#4]            ;443
                  |L1.126|
00007e  20ff              MOVS     r0,#0xff              ;450
000080  9003              STR      r0,[sp,#0xc]          ;451
000082  4812              LDR      r0,|L1.204|
000084  9004              STR      r0,[sp,#0x10]         ;452
000086  2003              MOVS     r0,#3                 ;452
000088  f88d0014          STRB     r0,[sp,#0x14]         ;452
00008c  9408              STR      r4,[sp,#0x20]         ;454
00008e  f7fffffe          BL       GetLastWinFromList
000092  4669              MOV      r1,sp                 ;454
000094  f7fffffe          BL       CW_ShowDialog_Create
                  |L1.152|
;;;462    		}
;;;463    	}
;;;464    
;;;465    }
000098  b00d              ADD      sp,sp,#0x34
00009a  bd30              POP      {r4,r5,pc}
;;;466    static void Alcohol_Value_Analyze_Middle(CW_InputNumberWindow *pThisWin,WM_MESSAGE *pMsg)
                          ENDP

                  |L1.156|
                          DCD      g_sRecord
                  |L1.160|
                          DCD      0x41a00000
                  |L1.164|
                          DCD      g_sXingJiKongGU
                  |L1.168|
                          DCD      ||.bss||
                  |L1.172|
0000ac  44726976          DCB      "DriverID_Information:%s\r\n",0
0000b0  65724944
0000b4  5f496e66
0000b8  6f726d61
0000bc  74696f6e
0000c0  3a25730d
0000c4  0a00    
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L1.200|
                          DCD      ||.constdata||+0x19
                  |L1.204|
                          DCD      0x00d3d3d3

                          AREA ||i.Alcohol_Value_Analyze_Middle||, CODE, READONLY, ALIGN=2

                  Alcohol_Value_Analyze_Middle PROC
;;;465    }
;;;466    static void Alcohol_Value_Analyze_Middle(CW_InputNumberWindow *pThisWin,WM_MESSAGE *pMsg)
000000  b530              PUSH     {r4,r5,lr}
;;;467    {
000002  4604              MOV      r4,r0
;;;468    	if((g_sRecord.fAlcValue>=20)&&(g_sXingJiKongGU.bOpenDevice==false)&&(g_sXingJiKongGU.bAdministration==false))
000004  4822              LDR      r0,|L2.144|
000006  460d              MOV      r5,r1                 ;467
000008  4922              LDR      r1,|L2.148|
00000a  f8d00005          LDR      r0,[r0,#5]  ; g_sRecord
00000e  b08d              SUB      sp,sp,#0x34           ;467
000010  4288              CMP      r0,r1
000012  db16              BLT      |L2.66|
000014  4820              LDR      r0,|L2.152|
000016  79c1              LDRB     r1,[r0,#7]  ; g_sXingJiKongGU
000018  b999              CBNZ     r1,|L2.66|
00001a  7a00              LDRB     r0,[r0,#8]  ; g_sXingJiKongGU
00001c  b988              CBNZ     r0,|L2.66|
;;;469    	{
;;;470    		memset(DriverID_Information,0,sizeof(DriverID_Information));
00001e  2114              MOVS     r1,#0x14
000020  481e              LDR      r0,|L2.156|
000022  f7fffffe          BL       __aeabi_memclr
;;;471    		EDIT_GetText(pThisWin->hEditBox, (char *)DriverID_Information, sizeof(DriverID_Information));
000026  f9b40014          LDRSH    r0,[r4,#0x14]
00002a  2214              MOVS     r2,#0x14
00002c  491b              LDR      r1,|L2.156|
00002e  f7fffffe          BL       EDIT_GetText
;;;472    		TRACE_PRINTF("DriverID_Information:%s\r\n",DriverID_Information);
000032  491a              LDR      r1,|L2.156|
000034  a01a              ADR      r0,|L2.160|
000036  f7fffffe          BL       User_Debug_Printf
;;;473    		if(strlen(DriverID_Information)>0)
00003a  4818              LDR      r0,|L2.156|
00003c  f7fffffe          BL       strlen
000040  b128              CBZ      r0,|L2.78|
                  |L2.66|
;;;474    		{
;;;475    			_ConfirmButton_Function(pMsg);
;;;476    		}
;;;477    		else //added by lxl 20180926
;;;478    		{
;;;479    			sDialogWindowProperty s;
;;;480    			s.nWinType = eDialogOK;
;;;481    			s.pFont = _GetFont(Font_WarningContent);
;;;482    			switch(pThisWin->sProperty.nWinType)
;;;483    			{
;;;484    				case eInputPoliceID:
;;;485    					s.pContent = _PleaseInput_PoliceID; 
;;;486    					break;
;;;487    					
;;;488    				case eInputDriverLicence:
;;;489    					s.pContent = _PleaseInput_DriverID; 
;;;490    					break;
;;;491    			}
;;;492    			s.nContentColor = GUI_RED;
;;;493    			s.nBackGroundColor = GUI_LIGHTGRAY;
;;;494    			s.nAutoCloseTime = 3;
;;;495    			s.pFunMiddleOK = NULL;
;;;496    			CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;497    		}
;;;498    	}
;;;499    	else
;;;500    	{
;;;501    		pThisWin=NULL;
;;;502    		_ConfirmButton_Function(pMsg);
000042  b00d              ADD      sp,sp,#0x34
000044  4628              MOV      r0,r5
000046  e8bd4030          POP      {r4,r5,lr}
00004a  f7ffbffe          B.W      _ConfirmButton_Function
                  |L2.78|
00004e  2500              MOVS     r5,#0                 ;480
000050  f88d5000          STRB     r5,[sp,#0]            ;480
000054  2012              MOVS     r0,#0x12              ;481
000056  f7fffffe          BL       _GetFont
00005a  9002              STR      r0,[sp,#8]            ;482
00005c  f8940020          LDRB     r0,[r4,#0x20]         ;482
000060  2804              CMP      r0,#4                 ;482
000062  d003              BEQ      |L2.108|
000064  2805              CMP      r0,#5                 ;482
000066  d104              BNE      |L2.114|
000068  4814              LDR      r0,|L2.188|
00006a  e001              B        |L2.112|
                  |L2.108|
00006c  4813              LDR      r0,|L2.188|
00006e  3819              SUBS     r0,r0,#0x19           ;489
                  |L2.112|
000070  9001              STR      r0,[sp,#4]            ;489
                  |L2.114|
000072  20ff              MOVS     r0,#0xff              ;492
000074  9003              STR      r0,[sp,#0xc]          ;493
000076  4812              LDR      r0,|L2.192|
000078  9004              STR      r0,[sp,#0x10]         ;494
00007a  2003              MOVS     r0,#3                 ;494
00007c  f88d0014          STRB     r0,[sp,#0x14]         ;494
000080  9508              STR      r5,[sp,#0x20]         ;496
000082  f7fffffe          BL       GetLastWinFromList
000086  4669              MOV      r1,sp                 ;496
000088  f7fffffe          BL       CW_ShowDialog_Create
;;;503    	}
;;;504    
;;;505    }
00008c  b00d              ADD      sp,sp,#0x34
00008e  bd30              POP      {r4,r5,pc}
;;;506    
                          ENDP

                  |L2.144|
                          DCD      g_sRecord
                  |L2.148|
                          DCD      0x41a00000
                  |L2.152|
                          DCD      g_sXingJiKongGU
                  |L2.156|
                          DCD      ||.bss||
                  |L2.160|
0000a0  44726976          DCB      "DriverID_Information:%s\r\n",0
0000a4  65724944
0000a8  5f496e66
0000ac  6f726d61
0000b0  74696f6e
0000b4  3a25730d
0000b8  0a00    
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L2.188|
                          DCD      ||.constdata||+0x19
                  |L2.192|
                          DCD      0x00d3d3d3

                          AREA ||i.CW_InputNumberWindow_Create||, CODE, READONLY, ALIGN=2

                  CW_InputNumberWindow_Create PROC
;;;664    /*±¾´°¿ÚÊÇ¿ÉÖØÈë´°Ìå*/
;;;665    CW_InputNumberWindow *CW_InputNumberWindow_Create(WM_HWIN hParent, void *pData)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;666    {
;;;667    	WM_HWIN hWin;
;;;668    	CW_InputNumberWindow *pThisWin = NULL;
000004  2400              MOVS     r4,#0
;;;669    	eUserWindow WinType = eInputNumberWindow;
;;;670    
;;;671    	hWin = WM_CreateWindowAsChild(0, 0, LCD_X_SIZE, LCD_Y_SIZE,
000006  2302              MOVS     r3,#2
000008  2228              MOVS     r2,#0x28
00000a  e9cd0300          STRD     r0,r3,[sp,#0]
00000e  e9cd4202          STRD     r4,r2,[sp,#8]
000012  460e              MOV      r6,r1                 ;666
000014  00d3              LSLS     r3,r2,#3
000016  2724              MOVS     r7,#0x24              ;669
000018  22f0              MOVS     r2,#0xf0
00001a  4621              MOV      r1,r4
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       WM_CreateWindowAsChild
000022  0005              MOVS     r5,r0
;;;672    	                              hParent, WM_CF_SHOW, NULL, sizeof(CW_InputNumberWindow));
;;;673    
;;;674    	if(hWin)
000024  d01d              BEQ      |L3.98|
;;;675    	{
;;;676    		TRACE_PRINTF("eInputNumberWindow windows is created!hWin = 0x%04X\r\n",hWin);
000026  4601              MOV      r1,r0
000028  a011              ADR      r0,|L3.112|
00002a  f7fffffe          BL       User_Debug_Printf
;;;677    
;;;678    		pThisWin = (CW_InputNumberWindow *)((unsigned long)WM_H2P(hWin) + sizeof(WM_Obj));
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       GUI_ALLOC_h2p
;;;679    
;;;680    		pThisWin->wObj.hWin = hWin;
000034  8405              STRH     r5,[r0,#0x20]
000036  f1000420          ADD      r4,r0,#0x20           ;678
;;;681    		pThisWin->wObj.Property = (unsigned long)pData;
;;;682    		pThisWin->wObj.eWinType = (eUserWindow)WinType;
00003a  6246              STR      r6,[r0,#0x24]
00003c  7227              STRB     r7,[r4,#8]
;;;683    		
;;;684    		AddWindowToList(&pThisWin->wObj);
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       AddWindowToList
000044  e896000f          LDM      r6,{r0-r3}
000048  f1040818          ADD      r8,r4,#0x18
00004c  e888000f          STM      r8,{r0-r3}
;;;685    
;;;686    		pThisWin->sProperty = *(sInputWindowProperty*)pData;
;;;687    		
;;;688    		WM_SetCallback(hWin, _Callback);
000050  4915              LDR      r1,|L3.168|
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       WM_SetCallback
;;;689    		WM__SendMsgNoData(hWin, WM_CREATE);
000058  2101              MOVS     r1,#1
00005a  4628              MOV      r0,r5
00005c  f7fffffe          BL       WM__SendMsgNoData
000060  e002              B        |L3.104|
                  |L3.98|
;;;690    	}
;;;691    	else
;;;692    	{
;;;693    		TRACE_PRINTF("eInputNumberWindow window can't be created!\r\n");
000062  a012              ADR      r0,|L3.172|
000064  f7fffffe          BL       User_Debug_Printf
                  |L3.104|
;;;694    	}
;;;695    
;;;696    	return pThisWin;
;;;697    }
000068  b004              ADD      sp,sp,#0x10
00006a  4620              MOV      r0,r4                 ;696
00006c  e8bd81f0          POP      {r4-r8,pc}
;;;698    
                          ENDP

                  |L3.112|
000070  65496e70          DCB      "eInputNumberWindow windows is created!hWin = 0x%04X\r\n"
000074  75744e75
000078  6d626572
00007c  57696e64
000080  6f772077
000084  696e646f
000088  77732069
00008c  73206372
000090  65617465
000094  64216857
000098  696e203d
00009c  20307825
0000a0  3034580d
0000a4  0a      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L3.168|
                          DCD      _Callback
                  |L3.172|
0000ac  65496e70          DCB      "eInputNumberWindow window can't be created!\r\n",0
0000b0  75744e75
0000b4  6d626572
0000b8  57696e64
0000bc  6f772077
0000c0  696e646f
0000c4  77206361
0000c8  6e277420
0000cc  62652063
0000d0  72656174
0000d4  6564210d
0000d8  0a00    
0000da  00                DCB      0
0000db  00                DCB      0

                          AREA ||i.Get_Non_Numeric_Position||, CODE, READONLY, ALIGN=1

                  Get_Non_Numeric_Position PROC
;;;27     
;;;28     static unsigned char Get_Non_Numeric_Position(char *s)
000000  2100              MOVS     r1,#0
;;;29     {
000002  e00b              B        |L4.28|
                  |L4.4|
;;;30     	char i = 0;
;;;31     	while(*s++)
;;;32     	{
;;;33     		if((*s >='0' && *s <= '9') || *s == '.')
000004  7802              LDRB     r2,[r0,#0]
000006  f1a20330          SUB      r3,r2,#0x30
00000a  2b09              CMP      r3,#9
00000c  d904              BLS      |L4.24|
00000e  2a2e              CMP      r2,#0x2e
000010  d002              BEQ      |L4.24|
000012  1c49              ADDS     r1,r1,#1
;;;34     		{
;;;35     			i++;
;;;36     		}
;;;37     		else
;;;38     		{
;;;39     			return i + 1;
000014  b2c8              UXTB     r0,r1
;;;40     		}
;;;41     	}
;;;42     
;;;43     	return 0;
;;;44     }
000016  4770              BX       lr
                  |L4.24|
000018  1c49              ADDS     r1,r1,#1
00001a  b2c9              UXTB     r1,r1                 ;35
                  |L4.28|
00001c  f8102b01          LDRB     r2,[r0],#1            ;31
000020  2a00              CMP      r2,#0                 ;31
000022  d1ef              BNE      |L4.4|
000024  2000              MOVS     r0,#0                 ;43
000026  4770              BX       lr
;;;45     
                          ENDP


                          AREA ||i._Callback||, CODE, READONLY, ALIGN=2

                  _Callback PROC
;;;507    #endif
;;;508    static void _Callback(WM_MESSAGE *pMsg)
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;509    {
000004  4604              MOV      r4,r0
;;;510    	CW_InputNumberWindow *pThisWin;
;;;511    	pThisWin = (CW_InputNumberWindow *)FindWMBFromListByWin(pMsg->hWin);
000006  f9b00004          LDRSH    r0,[r0,#4]
00000a  f7fffffe          BL       FindWMBFromListByWin
00000e  4606              MOV      r6,r0
;;;512    	
;;;513    	Enter_Callback_Hook(pMsg);
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       Enter_Callback_Hook
;;;514    	switch(pMsg->MsgId)
000016  6820              LDR      r0,[r4,#0]
000018  2801              CMP      r0,#1
00001a  d006              BEQ      |L5.42|
00001c  280b              CMP      r0,#0xb
00001e  d07c              BEQ      |L5.282|
000020  280e              CMP      r0,#0xe
000022  d006              BEQ      |L5.50|
000024  2826              CMP      r0,#0x26
000026  d103              BNE      |L5.48|
000028  e040              B        |L5.172|
                  |L5.42|
;;;515    	{
;;;516    		case WM_CREATE:
;;;517    			_Create(pMsg);
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       _Create
                  |L5.48|
;;;518    			break;
000030  e0fa              B        |L5.552|
                  |L5.50|
;;;519    		case WM_KEY:
;;;520    			if(WM_Key_Status == 0)
000032  68a0              LDR      r0,[r4,#8]
000034  6841              LDR      r1,[r0,#4]
000036  2900              CMP      r1,#0
000038  d136              BNE      |L5.168|
;;;521    			{
;;;522    				switch (WM_Key_Code)
00003a  6800              LDR      r0,[r0,#0]
00003c  2805              CMP      r0,#5
00003e  d00a              BEQ      |L5.86|
000040  2806              CMP      r0,#6
000042  d00f              BEQ      |L5.100|
000044  280d              CMP      r0,#0xd
000046  d12f              BNE      |L5.168|
;;;523    				{
;;;524    					case GUI_KEY_LEFT_FUN:
;;;525    						#if SERVER_USE_XING_JIKONG_GU
;;;526    						Alcohol_Value_Analyze_Left(pThisWin,pMsg);
;;;527    						#else
;;;528    						if(pMsg->hWin != GetFirstWinFromList())
;;;529    						{
;;;530    							WM_DeleteWindow(pMsg->hWin);
;;;531    						}
;;;532    						#endif
;;;533    						break;
;;;534    						
;;;535    					case GUI_KEY_RIGHT_FUN:
;;;536    						if(pThisWin->sProperty.nWinType == eInputStardardHighAlcValue || pThisWin->sProperty.nWinType == eInputStardardLowAlcValue)
;;;537    						{
;;;538    							char aTemp[12];
;;;539    							EDIT_GetText(pThisWin->hEditBox,(char *)aTemp, sizeof(aTemp));
;;;540    							if(strcmp(Get_Unit_String(g_nCalibrateUnit), aTemp))
;;;541    							{
;;;542    								EDIT_AddKey(pThisWin->hEditBox, GUI_KEY_BACKSPACE);
;;;543    							}
;;;544    						}
;;;545    						else
;;;546    						{
;;;547    							EDIT_AddKey(pThisWin->hEditBox, GUI_KEY_BACKSPACE);
;;;548    						}
;;;549    						break;
;;;550    						
;;;551    					case GUI_KEY_MIDDLE_FUN:
;;;552    						#if SERVER_USE_XING_JIKONG_GU
;;;553    						Alcohol_Value_Analyze_Middle(pThisWin,pMsg);
000048  b004              ADD      sp,sp,#0x10
00004a  4621              MOV      r1,r4
00004c  4630              MOV      r0,r6
00004e  e8bd5ff0          POP      {r4-r12,lr}
000052  f7ffbffe          B.W      Alcohol_Value_Analyze_Middle
                  |L5.86|
000056  b004              ADD      sp,sp,#0x10           ;526
000058  4621              MOV      r1,r4                 ;526
00005a  4630              MOV      r0,r6                 ;526
00005c  e8bd5ff0          POP      {r4-r12,lr}           ;526
000060  f7ffbffe          B.W      Alcohol_Value_Analyze_Left
                  |L5.100|
000064  f8960020          LDRB     r0,[r6,#0x20]         ;536
000068  2808              CMP      r0,#8                 ;536
00006a  d009              BEQ      |L5.128|
00006c  2809              CMP      r0,#9                 ;536
00006e  d007              BEQ      |L5.128|
000070  f9b60014          LDRSH    r0,[r6,#0x14]         ;547
000074  b004              ADD      sp,sp,#0x10           ;547
000076  2108              MOVS     r1,#8                 ;547
000078  e8bd5ff0          POP      {r4-r12,lr}           ;547
00007c  f7ffbffe          B.W      EDIT_AddKey
                  |L5.128|
000080  f9b60014          LDRSH    r0,[r6,#0x14]         ;539
000084  220c              MOVS     r2,#0xc               ;539
000086  4669              MOV      r1,sp                 ;539
000088  f7fffffe          BL       EDIT_GetText
00008c  4869              LDR      r0,|L5.564|
00008e  7800              LDRB     r0,[r0,#0]            ;540  ; g_nCalibrateUnit
000090  f7fffffe          BL       Get_Unit_String
000094  4669              MOV      r1,sp                 ;540
000096  f7fffffe          BL       strcmp
00009a  2800              CMP      r0,#0                 ;540
00009c  d004              BEQ      |L5.168|
00009e  f9b60014          LDRSH    r0,[r6,#0x14]         ;542
0000a2  2108              MOVS     r1,#8                 ;542
0000a4  f7fffffe          BL       EDIT_AddKey
                  |L5.168|
;;;554    						#else
;;;555    						_ConfirmButton_Function(pMsg);
;;;556    						#endif
;;;557    						break;
;;;558    				}
;;;559    			}
;;;560    			return;
;;;561    			
;;;562    		case WM_NOTIFY_PARENT:
;;;563    			if(WM_GetId(pMsg->hWinSrc) == KEYBOARD_ID)
;;;564    			{
;;;565    				if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
;;;566    				{
;;;567    					char aTemp[5];
;;;568    					BUTTON_GetText(pMsg->hWinSrc, aTemp, 5);
;;;569    					EDIT_AddKey(pThisWin->hEditBox, GUI_UC_GetCharCode(aTemp));
;;;570    				}
;;;571    			}
;;;572    
;;;573    			if(pMsg->Data.v == WM_NOTIFICATION_GOT_FOCUS)
;;;574    			{
;;;575    				if(pMsg->hWinSrc == pThisWin->hEditBox)
;;;576    				{
;;;577    					char x, y;
;;;578    					WM_HWIN hWin;
;;;579    					for(y = 0; y < 3; y++)
;;;580    					{
;;;581    						for(x = 0; x < 4; x++)
;;;582    						{
;;;583    							hWin = BUTTON_CreateEx(X_START + x * (Btn_Width + Btn_H_Interval), Y_START + y * (Btn_Height + Btn_V_Interval) , Btn_Width, Btn_Height,
;;;584    							                       pMsg->hWin,
;;;585    							                       WM_CF_SHOW, 1, KEYBOARD_ID);
;;;586    							BUTTON_SetFont(hWin, &GUI_FontTahomaBold33);
;;;587    							BUTTON_SetText(hWin, Btn_NumberTab[y * 4 + x]);
;;;588    							BUTTON_SetBkColor(hWin, 0, 0xB59179);
;;;589    							BUTTON_SetBkColor(hWin, 1, 0x5D4E41);
;;;590    							BUTTON_SetFocussable(hWin, 0);
;;;591    							BUTTON_SetTextColor(hWin, 0, GUI_BLACK);
;;;592    							BUTTON_SetTextColor(hWin, 1, GUI_YELLOW);
;;;593    							BUTTON_SetTextColor(hWin, 2, GUI_GRAY);
;;;594    							switch(pThisWin->sProperty.nWinType)
;;;595    							{
;;;596    								case eInputDriverLicence:
;;;597    									if(x == 3 && y == 1)
;;;598    									{
;;;599    										WM_DisableWindow(hWin);
;;;600    									}
;;;601    									break;
;;;602    								case eInputPoliceID:
;;;603    									if(x == 3 && y == 0)
;;;604    									{
;;;605    										WM_DisableWindow(hWin);
;;;606    									}
;;;607    									break;
;;;608    								case eInputLoginID:
;;;609    								case eInputAdminPassword:
;;;610    								case eSetLoginPassword:
;;;611    								case eSetVerifyLoginPassword:
;;;612    								case eInputLoginPassword:
;;;613    									if(x == 3 && (y == 0 || y == 1))
;;;614    									{
;;;615    										WM_DisableWindow(hWin);
;;;616    									}
;;;617    									break;
;;;618    								case eInputStardardHighAlcValue:
;;;619    								case eInputStardardLowAlcValue:
;;;620    									if(x == 3 && (y == 0))
;;;621    									{
;;;622    										WM_DisableWindow(hWin);
;;;623    									}
;;;624    									break;
;;;625    							}
;;;626    						}
;;;627    					}
;;;628    				}
;;;629    			}
;;;630    			else if(pMsg->Data.v == WM_NOTIFICATION_LOST_FOCUS)
;;;631    			{
;;;632    				if(pMsg->hWinSrc == pThisWin->hEditBox)
;;;633    				{
;;;634    					WM_HWIN hWin;
;;;635    					while(1)
;;;636    					{
;;;637    						hWin = WM_GetDialogItem(pMsg->hWin, KEYBOARD_ID);
;;;638    						if(hWin)
;;;639    							WM_DeleteWindow(hWin);
;;;640    						else
;;;641    							break;
;;;642    					}
;;;643    				}
;;;644    			}
;;;645    			else if(pMsg->Data.v ==  WM_NOTIFICATION_WIN_DELETE)
;;;646    			{
;;;647    				WM_SetFocus(pThisWin->hEditBox);
;;;648    			}
;;;649    			return;
;;;650    			
;;;651    		case WM_DELETE:
;;;652    			Voc_Close();
;;;653    			DeleteWindowFromList(pMsg->hWin);
;;;654    			WM_NotifyParent(pMsg->hWin, WM_NOTIFICATION_WIN_DELETE);
;;;655    			TRACE_PRINTF("eInputNumberWindow window is deleted!\r\n");
;;;656    			break;
;;;657    			
;;;658    		default:
;;;659    			break;
;;;660    	}
;;;661    	Exit_Callback_Hook(pMsg);
;;;662    }
0000a8  e8bd9fff          POP      {r0-r12,pc}
                  |L5.172|
0000ac  f9b40006          LDRSH    r0,[r4,#6]            ;563
0000b0  f7fffffe          BL       WM_GetId
0000b4  f2401779          MOV      r7,#0x179             ;563
0000b8  42b8              CMP      r0,r7                 ;563
0000ba  d110              BNE      |L5.222|
0000bc  68a0              LDR      r0,[r4,#8]            ;565
0000be  2802              CMP      r0,#2                 ;565
0000c0  d10d              BNE      |L5.222|
0000c2  f9b40006          LDRSH    r0,[r4,#6]            ;568
0000c6  2205              MOVS     r2,#5                 ;568
0000c8  4669              MOV      r1,sp                 ;568
0000ca  f7fffffe          BL       BUTTON_GetText
0000ce  4668              MOV      r0,sp                 ;569
0000d0  f7fffffe          BL       GUI_UC_GetCharCode
0000d4  4601              MOV      r1,r0                 ;569
0000d6  f9b60014          LDRSH    r0,[r6,#0x14]         ;569
0000da  f7fffffe          BL       EDIT_AddKey
                  |L5.222|
0000de  68a0              LDR      r0,[r4,#8]            ;573
0000e0  2808              CMP      r0,#8                 ;573
0000e2  d00a              BEQ      |L5.250|
0000e4  2809              CMP      r0,#9                 ;630
0000e6  d070              BEQ      |L5.458|
0000e8  2811              CMP      r0,#0x11              ;645
0000ea  d1dd              BNE      |L5.168|
0000ec  f9b60014          LDRSH    r0,[r6,#0x14]         ;647
0000f0  b004              ADD      sp,sp,#0x10           ;647
0000f2  e8bd5ff0          POP      {r4-r12,lr}           ;647
0000f6  f7ffbffe          B.W      WM_SetFocus
                  |L5.250|
0000fa  f9b40006          LDRSH    r0,[r4,#6]            ;575
0000fe  f9b61014          LDRSH    r1,[r6,#0x14]         ;575
000102  4288              CMP      r0,r1                 ;575
000104  d1d0              BNE      |L5.168|
000106  2500              MOVS     r5,#0                 ;579
000108  f04f0a01          MOV      r10,#1                ;514
00010c  f04f0b02          MOV      r11,#2                ;520
000110  46b9              MOV      r9,r7                 ;563
                  |L5.274|
000112  2700              MOVS     r7,#0                 ;581
000114  ebc500c5          RSB      r0,r5,r5,LSL #3       ;583
000118  e000              B        |L5.284|
                  |L5.282|
00011a  e077              B        |L5.524|
                  |L5.284|
00011c  eb000080          ADD      r0,r0,r0,LSL #2       ;583
000120  2149              MOVS     r1,#0x49              ;583
000122  eb010840          ADD      r8,r1,r0,LSL #1       ;583
000126  bf00              NOP                            ;583
                  |L5.296|
000128  f9b43004          LDRSH    r3,[r4,#4]            ;583
00012c  e9cd3b00          STRD     r3,r11,[sp,#0]        ;583
000130  ebc700c7          RSB      r0,r7,r7,LSL #3       ;583
000134  e9cda902          STRD     r10,r9,[sp,#8]        ;583
000138  ebc01087          RSB      r0,r0,r7,LSL #6       ;583
00013c  4641              MOV      r1,r8                 ;583
00013e  2343              MOVS     r3,#0x43              ;583
000140  2236              MOVS     r2,#0x36              ;583
000142  1dc0              ADDS     r0,r0,#7              ;583
000144  f7fffffe          BL       BUTTON_CreateEx
000148  493b              LDR      r1,|L5.568|
00014a  9000              STR      r0,[sp,#0]            ;586
00014c  f7fffffe          BL       BUTTON_SetFont
000150  483a              LDR      r0,|L5.572|
000152  eb070185          ADD      r1,r7,r5,LSL #2       ;587
000156  f8501021          LDR      r1,[r0,r1,LSL #2]     ;587
00015a  9800              LDR      r0,[sp,#0]            ;587
00015c  f7fffffe          BL       BUTTON_SetText
000160  4a37              LDR      r2,|L5.576|
000162  2100              MOVS     r1,#0                 ;588
000164  9800              LDR      r0,[sp,#0]            ;588
000166  f7fffffe          BL       BUTTON_SetBkColor
00016a  4a36              LDR      r2,|L5.580|
00016c  2101              MOVS     r1,#1                 ;589
00016e  9800              LDR      r0,[sp,#0]            ;589
000170  f7fffffe          BL       BUTTON_SetBkColor
000174  2100              MOVS     r1,#0                 ;590
000176  9800              LDR      r0,[sp,#0]            ;590
000178  f7fffffe          BL       BUTTON_SetFocussable
00017c  2200              MOVS     r2,#0                 ;591
00017e  4611              MOV      r1,r2                 ;591
000180  9800              LDR      r0,[sp,#0]            ;591
000182  f7fffffe          BL       BUTTON_SetTextColor
000186  f64f72ff          MOV      r2,#0xffff            ;592
00018a  2101              MOVS     r1,#1                 ;592
00018c  9800              LDR      r0,[sp,#0]            ;592
00018e  f7fffffe          BL       BUTTON_SetTextColor
000192  4a2d              LDR      r2,|L5.584|
000194  2102              MOVS     r1,#2                 ;593
000196  9800              LDR      r0,[sp,#0]            ;593
000198  f7fffffe          BL       BUTTON_SetTextColor
00019c  f8960020          LDRB     r0,[r6,#0x20]         ;594
0001a0  1f00              SUBS     r0,r0,#4              ;594
0001a2  280d              CMP      r0,#0xd               ;594
0001a4  d218              BCS      |L5.472|
0001a6  e8dff000          TBB      [pc,r0]               ;594
0001aa  0711              DCB      0x07,0x11
0001ac  170a1111          DCB      0x17,0x0a,0x11,0x11
0001b0  17170a17          DCB      0x17,0x17,0x0a,0x17
0001b4  0a0a0a00          DCB      0x0a,0x0a,0x0a,0x00
0001b8  2f03              CMP      r7,#3                 ;597
0001ba  d003              BEQ      |L5.452|
0001bc  e00c              B        |L5.472|
0001be  2f03              CMP      r7,#3                 ;613
0001c0  d10a              BNE      |L5.472|
0001c2  b135              CBZ      r5,|L5.466|
                  |L5.452|
0001c4  2d01              CMP      r5,#1                 ;613
0001c6  d004              BEQ      |L5.466|
0001c8  e006              B        |L5.472|
                  |L5.458|
0001ca  e00e              B        |L5.490|
0001cc  2f03              CMP      r7,#3                 ;620
0001ce  d103              BNE      |L5.472|
0001d0  b915              CBNZ     r5,|L5.472|
                  |L5.466|
0001d2  9800              LDR      r0,[sp,#0]            ;622
0001d4  f7fffffe          BL       WM_DisableWindow
                  |L5.472|
0001d8  1c7f              ADDS     r7,r7,#1              ;622
0001da  b2ff              UXTB     r7,r7                 ;581
0001dc  2f04              CMP      r7,#4                 ;581
0001de  d3a3              BCC      |L5.296|
0001e0  1c6d              ADDS     r5,r5,#1              ;581
0001e2  b2ed              UXTB     r5,r5                 ;579
0001e4  2d03              CMP      r5,#3                 ;579
0001e6  d394              BCC      |L5.274|
                  |L5.488|
0001e8  e75e              B        |L5.168|
                  |L5.490|
0001ea  f9b40006          LDRSH    r0,[r4,#6]            ;632
0001ee  f9b61014          LDRSH    r1,[r6,#0x14]         ;632
0001f2  4288              CMP      r0,r1                 ;632
0001f4  d1f8              BNE      |L5.488|
0001f6  bf00              NOP                            ;637
                  |L5.504|
0001f8  f9b40004          LDRSH    r0,[r4,#4]            ;637
0001fc  4639              MOV      r1,r7                 ;637
0001fe  f7fffffe          BL       WM_GetDialogItem
000202  2800              CMP      r0,#0                 ;638
000204  d0f0              BEQ      |L5.488|
000206  f7fffffe          BL       WM_DeleteWindow
00020a  e7f5              B        |L5.504|
                  |L5.524|
00020c  f7fffffe          BL       Voc_Close
000210  f9b40004          LDRSH    r0,[r4,#4]            ;653
000214  f7fffffe          BL       DeleteWindowFromList
000218  f9b40004          LDRSH    r0,[r4,#4]            ;654
00021c  2111              MOVS     r1,#0x11              ;654
00021e  f7fffffe          BL       WM_NotifyParent
000222  a00a              ADR      r0,|L5.588|
000224  f7fffffe          BL       User_Debug_Printf
                  |L5.552|
000228  b004              ADD      sp,sp,#0x10           ;661
00022a  4620              MOV      r0,r4                 ;661
00022c  e8bd5ff0          POP      {r4-r12,lr}           ;661
000230  f7ffbffe          B.W      Exit_Callback_Hook
;;;663    
                          ENDP

                  |L5.564|
                          DCD      g_nCalibrateUnit
                  |L5.568|
                          DCD      GUI_FontTahomaBold33
                  |L5.572|
                          DCD      ||.data||
                  |L5.576|
                          DCD      0x00b59179
                  |L5.580|
                          DCD      0x005d4e41
                  |L5.584|
                          DCD      0x00808080
                  |L5.588|
00024c  65496e70          DCB      "eInputNumberWindow window is deleted!\r\n",0
000250  75744e75
000254  6d626572
000258  57696e64
00025c  6f772077
000260  696e646f
000264  77206973
000268  2064656c
00026c  65746564
000270  210d0a00

                          AREA ||i._ConfirmButton_Function||, CODE, READONLY, ALIGN=2

                  _ConfirmButton_Function PROC
;;;46     /*°´ÏÂÖÐ¼ä¼üºóµÄÏûÏ¢.*/
;;;47     static void _ConfirmButton_Function(WM_MESSAGE *pMsg)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;48     {	
000004  4605              MOV      r5,r0
000006  b08f              SUB      sp,sp,#0x3c
;;;49     	float fTemp;
;;;50     	char aTemp[12];
;;;51     	void(*pFun)(void);
;;;52     	CW_InputNumberWindow *pThisWin;
;;;53     	pThisWin = (CW_InputNumberWindow *)FindWMBFromListByWin(pMsg->hWin);
000008  f9b00004          LDRSH    r0,[r0,#4]
00000c  f7fffffe          BL       FindWMBFromListByWin
;;;54     
;;;55     	switch(pThisWin->sProperty.nWinType)
000010  f8902020          LDRB     r2,[r0,#0x20]
;;;56     	{
;;;57     		case eInputDriverLicence:
;;;58     			memset(g_sRecord.aDriverLicense,0,sizeof(g_sRecord.aDriverLicense));
;;;59     			EDIT_GetText(pThisWin->hEditBox, (char *)g_sRecord.aDriverLicense, sizeof(g_sRecord.aDriverLicense));
;;;60     			if(1)
;;;61     			{
;;;62     				sInputWindowProperty s;
;;;63     				s.nWinType = eTestLocation;
;;;64     				s.aCaptionText = _TestLocationInput;
;;;65     				CW_InputWindow_Create(pMsg->hWin, (void *)&s);
;;;66     			}
;;;67     			break;
;;;68     
;;;69     		case eInputPoliceID:
;;;70     			memset(g_sRecord.aPoliceID,0,sizeof(g_sRecord.aPoliceID));
;;;71     			EDIT_GetText(pThisWin->hEditBox,(char *)g_sRecord.aPoliceID, sizeof(g_sRecord.aPoliceID));
;;;72     			if(1)
;;;73     			{
;;;74     				sInputWindowProperty s;
;;;75     				s.nWinType = eInputDepartment;
;;;76     				s.aCaptionText = _DepartmentInput;
;;;77     				CW_InputWindow_Create(pMsg->hWin, (void *)&s);
;;;78     			}
;;;79     			break;
;;;80     
;;;81     
;;;82     		/*************************************************************************************************/
;;;83     		/*×¢²áÊ¹ÓÃÕßÐÅÏ¢*/
;;;84     		case eInputLoginID:
;;;85     			memset(g_sCurrPoliceUserInfor.aPoliceID,0,sizeof(g_sCurrPoliceUserInfor.aPoliceID));
000014  49bb              LDR      r1,|L6.772|
000016  4604              MOV      r4,r0                 ;53
000018  4eb8              LDR      r6,|L6.764|
00001a  4fb9              LDR      r7,|L6.768|
;;;86     			EDIT_GetText(pThisWin->hEditBox,(char *)g_sCurrPoliceUserInfor.aPoliceID, sizeof(g_sCurrPoliceUserInfor.aPoliceID));
;;;87     			if(1)
;;;88     			{
;;;89     				sInputWindowProperty s;
;;;90     				s.nWinType = eInputLoginDepartment;
;;;91     				s.aCaptionText = _PleaseInputDepartment;
;;;92     				CW_InputWindow_Create(pMsg->hWin, (void *)&s);
;;;93     			}
;;;94     			break;
;;;95     	
;;;96     		case eSetLoginPassword:
;;;97     			memset(g_sCurrPoliceUserInfor.aPassword,0,sizeof(g_sCurrPoliceUserInfor.aPassword));
;;;98     			EDIT_GetText(pThisWin->hEditBox, (char *)g_sCurrPoliceUserInfor.aPassword, sizeof(g_sCurrPoliceUserInfor.aPassword));
;;;99     			if(strlen((char *)g_sCurrPoliceUserInfor.aPassword) == 6)
;;;100    			{
;;;101    				sInputWindowProperty s;
;;;102    				s.nWinType = eSetVerifyLoginPassword;
;;;103    				s.aCaptionText = _PleaseSetVerifyLoginPassword;
;;;104    				CW_InputNumberWindow_Create(pMsg->hWin,(void *)&s);
;;;105    			}
;;;106    			else
;;;107    			{
;;;108    				sDialogWindowProperty s;
;;;109    				s.nWinType = eDialogOK;
;;;110    				s.pFont = _GetFont(Font_Content);
;;;111    				s.pContent = _AlertInputValidPassword;
;;;112    				s.nContentColor = GUI_RED;
;;;113    				s.nBackGroundColor = GUI_LIGHTGRAY;
00001c  f8dfa2e8          LDR      r10,|L6.776|
000020  f1010057          ADD      r0,r1,#0x57           ;98
000024  1f12              SUBS     r2,r2,#4              ;98
000026  f04f0b03          MOV      r11,#3                ;75
00002a  f04f09ff          MOV      r9,#0xff              ;112
00002e  f04f0800          MOV      r8,#0
000032  9003              STR      r0,[sp,#0xc]          ;55
000034  2a0d              CMP      r2,#0xd               ;55
000036  d249              BCS      |L6.204|
000038  e8dff002          TBB      [pc,r2]               ;55
00003c  071b48c1          DCB      0x07,0x1b,0x48,0xc1
000040  dafdfc48          DCB      0xda,0xfd,0xfc,0x48
000044  2f484b78          DCB      0x2f,0x48,0x4b,0x78
000048  ac00              DCB      0xac,0x00
00004a  48b0              LDR      r0,|L6.780|
00004c  2114              MOVS     r1,#0x14              ;58
00004e  4680              MOV      r8,r0                 ;58
000050  f7fffffe          BL       __aeabi_memclr
000054  f9b40014          LDRSH    r0,[r4,#0x14]         ;59
000058  2214              MOVS     r2,#0x14              ;59
00005a  4641              MOV      r1,r8                 ;59
00005c  f7fffffe          BL       EDIT_GetText
000060  2001              MOVS     r0,#1                 ;63
000062  f88d0014          STRB     r0,[sp,#0x14]         ;63
000066  7838              LDRB     r0,[r7,#0]            ;64  ; g_Language
000068  f8560020          LDR      r0,[r6,r0,LSL #2]     ;64
00006c  f8d001cc          LDR      r0,[r0,#0x1cc]        ;64
000070  e026              B        |L6.192|
000072  48a6              LDR      r0,|L6.780|
000074  210f              MOVS     r1,#0xf               ;70
000076  3014              ADDS     r0,r0,#0x14           ;70
000078  4680              MOV      r8,r0                 ;70
00007a  f7fffffe          BL       __aeabi_memclr
00007e  f9b40014          LDRSH    r0,[r4,#0x14]         ;71
000082  220f              MOVS     r2,#0xf               ;71
000084  4641              MOV      r1,r8                 ;71
000086  f7fffffe          BL       EDIT_GetText
00008a  f88db014          STRB     r11,[sp,#0x14]        ;75
00008e  7838              LDRB     r0,[r7,#0]            ;76  ; g_Language
000090  f8560020          LDR      r0,[r6,r0,LSL #2]     ;76
000094  f8d001d4          LDR      r0,[r0,#0x1d4]        ;76
000098  e012              B        |L6.192|
00009a  f8418f06          STR      r8,[r1,#6]!           ;85  ; g_sCurrPoliceUserInfor
00009e  220c              MOVS     r2,#0xc               ;86
0000a0  f8c18004          STR      r8,[r1,#4]            ;85  ; g_sCurrPoliceUserInfor
0000a4  f8c18008          STR      r8,[r1,#8]            ;85  ; g_sCurrPoliceUserInfor
0000a8  f9b40014          LDRSH    r0,[r4,#0x14]         ;86
0000ac  f7fffffe          BL       EDIT_GetText
0000b0  200d              MOVS     r0,#0xd               ;90
0000b2  f88d0014          STRB     r0,[sp,#0x14]         ;90
0000b6  7838              LDRB     r0,[r7,#0]            ;91  ; g_Language
0000b8  f8560020          LDR      r0,[r6,r0,LSL #2]     ;91
0000bc  f8d0032c          LDR      r0,[r0,#0x32c]        ;91
                  |L6.192|
0000c0  9006              STR      r0,[sp,#0x18]         ;92
0000c2  f9b50004          LDRSH    r0,[r5,#4]            ;92
0000c6  a903              ADD      r1,sp,#0xc            ;92
0000c8  f7fffffe          BL       CW_InputWindow_Create
                  |L6.204|
;;;114    				s.nAutoCloseTime = 3;
;;;115    				s.pFunMiddleOK = NULL;
;;;116    				CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;117    			}
;;;118    			break;
;;;119    
;;;120    		case eSetVerifyLoginPassword:
;;;121    			EDIT_GetText(pThisWin->hEditBox, (char *)aTemp, sizeof(aTemp));
;;;122    			if(strcmp(aTemp, (char *)g_sCurrPoliceUserInfor.aPassword) == 0)
;;;123    			{
;;;124    				sWinManageList * pWM;
;;;125    				pWM = FindWMBByWinType(eWinUserManage);
;;;126    				Data_Police_User_Infor_Insert_Save(&g_sCurrPoliceUserInfor);
;;;127    				WM_DeleteWindow(pWM->hWin);
;;;128    				CW_UserManage_Create(GetLastWinFromList(),(void *)1);
;;;129    			}
;;;130    			else
;;;131    			{
;;;132    				sDialogWindowProperty s;
;;;133    				s.nWinType = eDialogOK;
;;;134    				s.pFont = _GetFont(Font_Content);
;;;135    				s.pContent = _AlertInputValidVerifyPassword;
;;;136    				s.nContentColor = GUI_RED;
;;;137    				s.nBackGroundColor = GUI_LIGHTGRAY;
;;;138    				s.nAutoCloseTime = 3;
;;;139    				s.pFunMiddleOK = NULL;
;;;140    				CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;141    			}
;;;142    			break;
;;;143    
;;;144    		case eInputLoginPassword:
;;;145    			EDIT_GetText(pThisWin->hEditBox, (char *)aTemp, sizeof(aTemp));
;;;146    			if(strcmp(aTemp, pThisWin->sProperty.Data.p) == 0)
;;;147    			{
;;;148    				pFun = pThisWin->sProperty.pFunNext;
;;;149    				WM_DeleteWindow(pMsg->hWin);
;;;150    				if(pFun) (*pFun)();
;;;151    			}
;;;152    			else if(strlen(aTemp) == 0)
;;;153    			{
;;;154    				return;	
;;;155    			}
;;;156    			else
;;;157    			{
;;;158    				sDialogWindowProperty s;
;;;159    				s.nWinType = eDialogOK;
;;;160    				s.pFont = _GetFont(Font_Content);
;;;161    				s.pContent = _PasswordError;
;;;162    				s.nContentColor = GUI_RED;
;;;163    				s.nBackGroundColor = GUI_LIGHTGRAY;
;;;164    				s.nAutoCloseTime = 3;
;;;165    				s.pFunMiddleOK = NULL;
;;;166    				CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;167    			}
;;;168    			break;
;;;169    
;;;170    		/************************************************************************************************/
;;;171    			
;;;172    		case eInputAdminPassword:
;;;173    			EDIT_GetText(pThisWin->hEditBox, (char *)aTemp, sizeof(aTemp));
;;;174    			if(strcmp(aTemp, pThisWin->sProperty.Data.p) == 0)
;;;175    			{
;;;176    				pFun = pThisWin->sProperty.pFunNext;
;;;177    				WM_DeleteWindow(pMsg->hWin);
;;;178    				if(pFun) (*pFun)();
;;;179    			}
;;;180    			else
;;;181    			{
;;;182    				sDialogWindowProperty s;
;;;183    				s.nWinType = eDialogOK;
;;;184    				s.pFont = _GetFont(Font_Content);
;;;185    				s.pContent = _PasswordError;
;;;186    				s.nContentColor = GUI_RED;
;;;187    				s.nBackGroundColor = GUI_LIGHTGRAY;
;;;188    				s.nAutoCloseTime = 3;
;;;189    				s.pFunMiddleOK = NULL;
;;;190    				CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;191    			}
;;;192    			break;
;;;193    
;;;194    		case eInputStardardHighAlcValue:
;;;195    			EDIT_GetText(pThisWin->hEditBox, (char *)aTemp, sizeof(aTemp));
;;;196    			fTemp = (Get_Convert_Value_From_AnyUnit(atof(aTemp), g_nCalibrateUnit, g_sTestParam.nBrACBACK));
;;;197    			if(fTemp > 60 && fTemp < 120)
;;;198    			{
;;;199    				pFun = pThisWin->sProperty.pFunNext;
;;;200    				g_fHStandardAlcoholValue = fTemp;
;;;201    				g_sAlcCalibrationParam.nCurrCalibrteState = eCaliHighPoint;
;;;202    				WM_DeleteWindow(pMsg->hWin);
;;;203    				if(pFun) (*pFun)();
;;;204    			}
;;;205    			else
;;;206    			{
;;;207    				sDialogWindowProperty s;
;;;208    				s.nWinType = eDialogOK;
;;;209    				s.pFont = _GetFont(Font_Content);
;;;210    				s.pContent = _InvalidStandardHConcentration;
;;;211    				s.nContentColor = GUI_RED;
;;;212    				s.nBackGroundColor = GUI_LIGHTGRAY;
;;;213    				s.nAutoCloseTime = 0;
;;;214    				s.pFunMiddleOK = NULL;
;;;215    				CW_ShowDialog_Create(pMsg->hWin,(void *)&s);
;;;216    				return;
;;;217    			}				
;;;218    			break;
;;;219    
;;;220    		case eInputStardardLowAlcValue:
;;;221    			EDIT_GetText(pThisWin->hEditBox, (char *)aTemp, sizeof(aTemp));
;;;222    			fTemp = (Get_Convert_Value_From_AnyUnit(atof(aTemp), g_nCalibrateUnit, g_sTestParam.nBrACBACK));
;;;223    			if(fTemp > 10 && fTemp < 50)
;;;224    			{
;;;225    				pFun = pThisWin->sProperty.pFunNext;
;;;226    				g_fLStandardAlcoholValue = fTemp;
;;;227    				g_sAlcCalibrationParam.nCurrCalibrteState = eCaliLowPoint;
;;;228    				WM_DeleteWindow(pMsg->hWin);
;;;229    				if(pFun) (*pFun)();
;;;230    			}
;;;231    			else
;;;232    			{
;;;233    				sDialogWindowProperty s;
;;;234    				s.nWinType = eDialogOK;
;;;235    				s.pFont = _GetFont(Font_Content);;
;;;236    				s.pContent = _InvalidStandardLConcentration;
;;;237    				s.nContentColor = GUI_RED;
;;;238    				s.nBackGroundColor = GUI_LIGHTGRAY;
;;;239    				s.nAutoCloseTime = 0;
;;;240    				s.pFunMiddleOK = NULL;
;;;241    				CW_ShowDialog_Create(pMsg->hWin,(void *)&s);
;;;242    				return;
;;;243    			}
;;;244    			break;
;;;245    
;;;246    		case eInputQuickTestAlcValue:
;;;247    			EDIT_GetText(pThisWin->hEditBox, (char *)aTemp, sizeof(aTemp));
;;;248    			fTemp = (Get_Convert_Value_From_AnyUnit(atof(aTemp), g_nCalibrateUnit, g_sTestParam.nBrACBACK));
;;;249    			if(fTemp > 10 && fTemp < 50)
;;;250    			{
;;;251    				pFun = pThisWin->sProperty.pFunNext;
;;;252    				g_fQuickTestStandardAlcoholValue = fTemp;
;;;253    				g_sAlcCalibrationParam.nCurrCalibrteState = eCaliQuickTest;
;;;254    				WM_DeleteWindow(pMsg->hWin);
;;;255    				if(pFun) (*pFun)();
;;;256    			}
;;;257    			else
;;;258    			{
;;;259    				sDialogWindowProperty s;
;;;260    				s.nWinType = eDialogOK;
;;;261    				s.pFont = _GetFont(Font_Content);;
;;;262    				s.pContent = _InvalidStandardLConcentration;
;;;263    				s.nContentColor = GUI_RED;
;;;264    				s.nBackGroundColor = GUI_LIGHTGRAY;
;;;265    				s.nAutoCloseTime = 0;
;;;266    				s.pFunMiddleOK = NULL;
;;;267    				CW_ShowDialog_Create(pMsg->hWin,(void *)&s);
;;;268    				return;
;;;269    			}
;;;270    			break;
;;;271    	}
;;;272    }
0000cc  b00f              ADD      sp,sp,#0x3c
0000ce  e8bd8ff0          POP      {r4-r11,pc}
0000d2  f8418f57          STR      r8,[r1,#0x57]!        ;97  ; g_sCurrPoliceUserInfor
0000d6  2207              MOVS     r2,#7                 ;98
0000d8  f8a18004          STRH     r8,[r1,#4]            ;97
0000dc  f8818006          STRB     r8,[r1,#6]            ;97
0000e0  f9b40014          LDRSH    r0,[r4,#0x14]         ;98
0000e4  9903              LDR      r1,[sp,#0xc]          ;98
0000e6  f7fffffe          BL       EDIT_GetText
0000ea  9803              LDR      r0,[sp,#0xc]          ;99
0000ec  f7fffffe          BL       strlen
0000f0  2806              CMP      r0,#6                 ;99
0000f2  d00c              BEQ      |L6.270|
0000f4  4644              MOV      r4,r8                 ;109
0000f6  f88d800c          STRB     r8,[sp,#0xc]          ;109
0000fa  2004              MOVS     r0,#4                 ;110
0000fc  f7fffffe          BL       _GetFont
000100  9005              STR      r0,[sp,#0x14]         ;111
000102  7838              LDRB     r0,[r7,#0]            ;111  ; g_Language
000104  f8560020          LDR      r0,[r6,r0,LSL #2]     ;111
000108  f8d00344          LDR      r0,[r0,#0x344]        ;111
00010c  e025              B        |L6.346|
                  |L6.270|
00010e  200f              MOVS     r0,#0xf               ;102
000110  f88d0014          STRB     r0,[sp,#0x14]         ;102
000114  7838              LDRB     r0,[r7,#0]            ;103  ; g_Language
000116  a903              ADD      r1,sp,#0xc            ;104
000118  f8560020          LDR      r0,[r6,r0,LSL #2]     ;103
00011c  f8d00334          LDR      r0,[r0,#0x334]        ;103
000120  9006              STR      r0,[sp,#0x18]         ;104
000122  f9b50004          LDRSH    r0,[r5,#4]            ;104
000126  f7fffffe          BL       CW_InputNumberWindow_Create
00012a  e7cf              B        |L6.204|
00012c  f9b40014          LDRSH    r0,[r4,#0x14]         ;121
000130  220c              MOVS     r2,#0xc               ;121
000132  4669              MOV      r1,sp                 ;121
000134  f7fffffe          BL       EDIT_GetText
000138  4668              MOV      r0,sp                 ;122
00013a  9903              LDR      r1,[sp,#0xc]          ;122
00013c  f7fffffe          BL       strcmp
000140  b1b8              CBZ      r0,|L6.370|
000142  4644              MOV      r4,r8                 ;133
000144  f88d800c          STRB     r8,[sp,#0xc]          ;133
000148  2004              MOVS     r0,#4                 ;134
00014a  f7fffffe          BL       _GetFont
00014e  9005              STR      r0,[sp,#0x14]         ;135
000150  7838              LDRB     r0,[r7,#0]            ;135  ; g_Language
000152  f8560020          LDR      r0,[r6,r0,LSL #2]     ;135
000156  f8d00348          LDR      r0,[r0,#0x348]        ;135
                  |L6.346|
00015a  e9cd9a06          STRD     r9,r10,[sp,#0x18]     ;111
00015e  9004              STR      r0,[sp,#0x10]         ;111
000160  f88db020          STRB     r11,[sp,#0x20]        ;114
000164  940b              STR      r4,[sp,#0x2c]         ;116
000166  f7fffffe          BL       GetLastWinFromList
                  |L6.362|
00016a  a903              ADD      r1,sp,#0xc            ;116
00016c  f7fffffe          BL       CW_ShowDialog_Create
000170  e7ac              B        |L6.204|
                  |L6.370|
000172  202c              MOVS     r0,#0x2c              ;125
000174  f7fffffe          BL       FindWMBByWinType
000178  4604              MOV      r4,r0                 ;125
00017a  4862              LDR      r0,|L6.772|
00017c  f7fffffe          BL       Data_Police_User_Infor_Insert_Save
000180  f9b40000          LDRSH    r0,[r4,#0]            ;127
000184  f7fffffe          BL       WM_DeleteWindow
000188  f7fffffe          BL       GetLastWinFromList
00018c  2101              MOVS     r1,#1                 ;128
00018e  f7fffffe          BL       CW_UserManage_Create
000192  e79b              B        |L6.204|
000194  f9b40014          LDRSH    r0,[r4,#0x14]         ;145
000198  220c              MOVS     r2,#0xc               ;145
00019a  4669              MOV      r1,sp                 ;145
00019c  f7fffffe          BL       EDIT_GetText
0001a0  4668              MOV      r0,sp                 ;146
0001a2  69a1              LDR      r1,[r4,#0x18]         ;146
0001a4  f7fffffe          BL       strcmp
0001a8  b128              CBZ      r0,|L6.438|
0001aa  4668              MOV      r0,sp                 ;152
0001ac  f7fffffe          BL       strlen
0001b0  2800              CMP      r0,#0                 ;152
0001b2  d08b              BEQ      |L6.204|
0001b4  e00f              B        |L6.470|
                  |L6.438|
0001b6  69e4              LDR      r4,[r4,#0x1c]         ;148
0001b8  e036              B        |L6.552|
                  |L6.442|
0001ba  47a0              BLX      r4                    ;150
0001bc  e786              B        |L6.204|
0001be  f9b40014          LDRSH    r0,[r4,#0x14]         ;173
0001c2  220c              MOVS     r2,#0xc               ;173
0001c4  4669              MOV      r1,sp                 ;173
0001c6  f7fffffe          BL       EDIT_GetText
0001ca  4668              MOV      r0,sp                 ;174
0001cc  69a1              LDR      r1,[r4,#0x18]         ;174
0001ce  f7fffffe          BL       strcmp
0001d2  2800              CMP      r0,#0                 ;174
0001d4  d0ef              BEQ      |L6.438|
                  |L6.470|
0001d6  4644              MOV      r4,r8                 ;183
0001d8  f88d800c          STRB     r8,[sp,#0xc]          ;183
0001dc  2004              MOVS     r0,#4                 ;184
0001de  f7fffffe          BL       _GetFont
0001e2  9005              STR      r0,[sp,#0x14]         ;185
0001e4  7838              LDRB     r0,[r7,#0]            ;185  ; g_Language
0001e6  f8560020          LDR      r0,[r6,r0,LSL #2]     ;185
0001ea  f8d001dc          LDR      r0,[r0,#0x1dc]        ;185
0001ee  e7b4              B        |L6.346|
0001f0  f9b40014          LDRSH    r0,[r4,#0x14]         ;195
0001f4  220c              MOVS     r2,#0xc               ;195
0001f6  4669              MOV      r1,sp                 ;195
0001f8  f7fffffe          BL       EDIT_GetText
0001fc  4668              MOV      r0,sp                 ;196
0001fe  f7fffffe          BL       atof
000202  f7fffffe          BL       __aeabi_d2f
000206  4942              LDR      r1,|L6.784|
000208  884a              LDRH     r2,[r1,#2]            ;196  ; g_sTestParam
00020a  4942              LDR      r1,|L6.788|
00020c  7809              LDRB     r1,[r1,#0]            ;196  ; g_nCalibrateUnit
00020e  f7fffffe          BL       Get_Convert_Value_From_AnyUnit
000212  4941              LDR      r1,|L6.792|
000214  4a41              LDR      r2,|L6.796|
000216  4401              ADD      r1,r1,r0              ;197
000218  4291              CMP      r1,r2                 ;197
00021a  d20f              BCS      |L6.572|
00021c  4940              LDR      r1,|L6.800|
00021e  69e4              LDR      r4,[r4,#0x1c]         ;199
000220  6008              STR      r0,[r1,#0]            ;201  ; g_fHStandardAlcoholValue
000222  4940              LDR      r1,|L6.804|
000224  f881803e          STRB     r8,[r1,#0x3e]         ;201
                  |L6.552|
000228  f9b50004          LDRSH    r0,[r5,#4]            ;149
00022c  f7fffffe          BL       WM_DeleteWindow
000230  2c00              CMP      r4,#0                 ;149
000232  e001              B        |L6.568|
000234  e036              B        |L6.676|
000236  e00e              B        |L6.598|
                  |L6.568|
000238  d1bf              BNE      |L6.442|
00023a  e747              B        |L6.204|
                  |L6.572|
00023c  4644              MOV      r4,r8                 ;208
00023e  f88d800c          STRB     r8,[sp,#0xc]          ;208
000242  2004              MOVS     r0,#4                 ;209
000244  f7fffffe          BL       _GetFont
000248  9005              STR      r0,[sp,#0x14]         ;210
00024a  7838              LDRB     r0,[r7,#0]            ;210  ; g_Language
00024c  f8560020          LDR      r0,[r6,r0,LSL #2]     ;210
000250  f8d001a0          LDR      r0,[r0,#0x1a0]        ;210
000254  e01d              B        |L6.658|
                  |L6.598|
000256  f9b40014          LDRSH    r0,[r4,#0x14]         ;221
00025a  220c              MOVS     r2,#0xc               ;221
00025c  4669              MOV      r1,sp                 ;221
00025e  f7fffffe          BL       EDIT_GetText
000262  4668              MOV      r0,sp                 ;222
000264  f7fffffe          BL       atof
000268  f7fffffe          BL       __aeabi_d2f
00026c  4928              LDR      r1,|L6.784|
00026e  884a              LDRH     r2,[r1,#2]            ;222  ; g_sTestParam
000270  4928              LDR      r1,|L6.788|
000272  7809              LDRB     r1,[r1,#0]            ;222  ; g_nCalibrateUnit
000274  f7fffffe          BL       Get_Convert_Value_From_AnyUnit
000278  492b              LDR      r1,|L6.808|
00027a  1842              ADDS     r2,r0,r1              ;223
00027c  492b              LDR      r1,|L6.812|
00027e  428a              CMP      r2,r1                 ;223
000280  d22e              BCS      |L6.736|
000282  492b              LDR      r1,|L6.816|
000284  69e4              LDR      r4,[r4,#0x1c]         ;225
000286  6008              STR      r0,[r1,#0]            ;227  ; g_fLStandardAlcoholValue
000288  4926              LDR      r1,|L6.804|
00028a  2001              MOVS     r0,#1                 ;227
00028c  f881003e          STRB     r0,[r1,#0x3e]         ;227
000290  e7ca              B        |L6.552|
                  |L6.658|
000292  e9cd9a06          STRD     r9,r10,[sp,#0x18]     ;210
000296  9004              STR      r0,[sp,#0x10]         ;210
000298  f88d4020          STRB     r4,[sp,#0x20]         ;213
00029c  940b              STR      r4,[sp,#0x2c]         ;215
00029e  f9b50004          LDRSH    r0,[r5,#4]            ;215
0002a2  e762              B        |L6.362|
                  |L6.676|
0002a4  f9b40014          LDRSH    r0,[r4,#0x14]         ;247
0002a8  220c              MOVS     r2,#0xc               ;247
0002aa  4669              MOV      r1,sp                 ;247
0002ac  f7fffffe          BL       EDIT_GetText
0002b0  4668              MOV      r0,sp                 ;248
0002b2  f7fffffe          BL       atof
0002b6  f7fffffe          BL       __aeabi_d2f
0002ba  4915              LDR      r1,|L6.784|
0002bc  884a              LDRH     r2,[r1,#2]            ;248  ; g_sTestParam
0002be  4915              LDR      r1,|L6.788|
0002c0  7809              LDRB     r1,[r1,#0]            ;248  ; g_nCalibrateUnit
0002c2  f7fffffe          BL       Get_Convert_Value_From_AnyUnit
0002c6  4918              LDR      r1,|L6.808|
0002c8  1842              ADDS     r2,r0,r1              ;249
0002ca  4918              LDR      r1,|L6.812|
0002cc  428a              CMP      r2,r1                 ;249
0002ce  d207              BCS      |L6.736|
0002d0  4918              LDR      r1,|L6.820|
0002d2  69e4              LDR      r4,[r4,#0x1c]         ;251
0002d4  6008              STR      r0,[r1,#0]            ;253  ; g_fQuickTestStandardAlcoholValue
0002d6  4813              LDR      r0,|L6.804|
0002d8  2102              MOVS     r1,#2                 ;253
0002da  f880103e          STRB     r1,[r0,#0x3e]         ;253
0002de  e7a3              B        |L6.552|
                  |L6.736|
0002e0  4644              MOV      r4,r8                 ;260
0002e2  f88d800c          STRB     r8,[sp,#0xc]          ;260
0002e6  2004              MOVS     r0,#4                 ;261
0002e8  f7fffffe          BL       _GetFont
0002ec  9005              STR      r0,[sp,#0x14]         ;262
0002ee  7838              LDRB     r0,[r7,#0]            ;262  ; g_Language
0002f0  f8560020          LDR      r0,[r6,r0,LSL #2]     ;262
0002f4  f8d001a4          LDR      r0,[r0,#0x1a4]        ;262
0002f8  e7cb              B        |L6.658|
;;;273    
                          ENDP

0002fa  0000              DCW      0x0000
                  |L6.764|
                          DCD      Strings
                  |L6.768|
                          DCD      g_Language
                  |L6.772|
                          DCD      g_sCurrPoliceUserInfor
                  |L6.776|
                          DCD      0x00d3d3d3
                  |L6.780|
                          DCD      g_sRecord+0x80
                  |L6.784|
                          DCD      g_sTestParam
                  |L6.788|
                          DCD      g_nCalibrateUnit
                  |L6.792|
                          DCD      0xbd8fffff
                  |L6.796|
                          DCD      0x007fffff
                  |L6.800|
                          DCD      g_fHStandardAlcoholValue
                  |L6.804|
                          DCD      g_sAlcCalibrationParam
                  |L6.808|
                          DCD      0xbedfffff
                  |L6.812|
                          DCD      0x0127ffff
                  |L6.816|
                          DCD      g_fLStandardAlcoholValue
                  |L6.820|
                          DCD      g_fQuickTestStandardAlcoholValue

                          AREA ||i._Create||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_s
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  _Create PROC
;;;273    
;;;274    static void _Create(WM_MESSAGE *pMsg)
000000  b5f0              PUSH     {r4-r7,lr}
;;;275    {
000002  4605              MOV      r5,r0
000004  b097              SUB      sp,sp,#0x5c
;;;276    	char aTemp[50];
;;;277    	char aResult[20];
;;;278    	WM_HWIN hWin;
;;;279    	CW_InputNumberWindow *pThisWin;
;;;280    	pThisWin = (CW_InputNumberWindow *)FindWMBFromListByWin(pMsg->hWin);
000006  f9b00004          LDRSH    r0,[r0,#4]
00000a  f7fffffe          BL       FindWMBFromListByWin
00000e  4604              MOV      r4,r0
;;;281    	
;;;282    	pMsg->Data.p = pThisWin->sProperty.aCaptionText;
000010  6a40              LDR      r0,[r0,#0x24]
;;;283    	Create_Dialog_Caption(pMsg);
000012  60a8              STR      r0,[r5,#8]
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       Create_Dialog_Caption
;;;284    
;;;285    #if USE_TEXT_REPLACE_ICON
;;;286    	/*´´½¨×ó¼ü*/
;;;287    	hWin = Create_Left_Button(pMsg->hWin);
00001a  f9b50004          LDRSH    r0,[r5,#4]
00001e  f7fffffe          BL       Create_Left_Button
;;;288    	BUTTON_SetText(hWin, _Back);
000022  4e6d              LDR      r6,|L7.472|
000024  4f6b              LDR      r7,|L7.468|
000026  7831              LDRB     r1,[r6,#0]  ; g_Language
000028  f8571021          LDR      r1,[r7,r1,LSL #2]
00002c  6a09              LDR      r1,[r1,#0x20]
00002e  f7fffffe          BL       BUTTON_SetText
;;;289    
;;;290    	/*´´½¨ÓÒ¼ü*/
;;;291    	hWin = Create_Right_Button(pMsg->hWin);
000032  f9b50004          LDRSH    r0,[r5,#4]
000036  f7fffffe          BL       Create_Right_Button
;;;292    	BUTTON_SetText(hWin, _Delete);
00003a  7831              LDRB     r1,[r6,#0]  ; g_Language
00003c  f8571021          LDR      r1,[r7,r1,LSL #2]
000040  6a49              LDR      r1,[r1,#0x24]
000042  f7fffffe          BL       BUTTON_SetText
;;;293    
;;;294    	/*´´½¨ÖÐ¼ü*/
;;;295    	hWin = Create_Middle_Button(pMsg->hWin);
000046  f9b50004          LDRSH    r0,[r5,#4]
00004a  f7fffffe          BL       Create_Middle_Button
;;;296    	BUTTON_SetText(hWin, _OK);
00004e  7831              LDRB     r1,[r6,#0]  ; g_Language
000050  f8571021          LDR      r1,[r7,r1,LSL #2]
000054  f8d110c8          LDR      r1,[r1,#0xc8]
000058  f7fffffe          BL       BUTTON_SetText
;;;297    #else
;;;298    	/*´´½¨×ó¼ü*/
;;;299    	hWin = Create_Left_Button(pMsg->hWin);
;;;300    	BUTTON_SetBitmapEx(hWin, 0, BtnSetBmp(bmCancel_Released, hWin));
;;;301    	BUTTON_SetBitmapEx(hWin, 1, BtnSetBmp(bmCancel_Pressed, hWin));
;;;302    
;;;303    	/*´´½¨ÓÒ¼ü*/
;;;304    	hWin = Create_Right_Button(pMsg->hWin);
;;;305    	BUTTON_SetBitmapEx(hWin, 0, BtnSetBmp(bmLeft_Arrows_Released, hWin));
;;;306    	BUTTON_SetBitmapEx(hWin, 1, BtnSetBmp(bmLeft_Arrows_Pressed, hWin));
;;;307    
;;;308    	/*´´½¨ÖÐ¼ü*/
;;;309    	hWin = Create_Middle_Button(pMsg->hWin);
;;;310    	BUTTON_SetText(hWin, _OK);
;;;311    #endif
;;;312    
;;;313    
;;;314    	/*ÊäÈëÄÚÈÝ*/
;;;315    	pThisWin->hEditBox = EDIT_CreateEx(X_START, 34, LCD_XSIZE - X_START * 2, 33,
00005c  2000              MOVS     r0,#0
00005e  2202              MOVS     r2,#2
000060  e9cd2001          STRD     r2,r0,[sp,#4]
000064  2164              MOVS     r1,#0x64
000066  e9cd0103          STRD     r0,r1,[sp,#0xc]
00006a  f9b50004          LDRSH    r0,[r5,#4]
00006e  9000              STR      r0,[sp,#0]
000070  2321              MOVS     r3,#0x21
000072  22e2              MOVS     r2,#0xe2
000074  2122              MOVS     r1,#0x22
000076  2007              MOVS     r0,#7
000078  f7fffffe          BL       EDIT_CreateEx
00007c  82a0              STRH     r0,[r4,#0x14]
;;;316    	                     pMsg->hWin, WM_CF_SHOW, 0, 0, 100);
;;;317    	EDIT_SetFont(pThisWin->hEditBox, &GUI_FontTahomaBold23);
00007e  4957              LDR      r1,|L7.476|
000080  f7fffffe          BL       EDIT_SetFont
;;;318    	EDIT_SetTextAlign(pThisWin->hEditBox, GUI_TA_VCENTER);
000084  f9b40014          LDRSH    r0,[r4,#0x14]
000088  210c              MOVS     r1,#0xc
00008a  f7fffffe          BL       EDIT_SetTextAlign
;;;319    	EDIT_SetTextColor(pThisWin->hEditBox, 0, GUI_RED);
00008e  f9b40014          LDRSH    r0,[r4,#0x14]
000092  22ff              MOVS     r2,#0xff
000094  2100              MOVS     r1,#0
000096  f7fffffe          BL       EDIT_SetTextColor
;;;320    	
;;;321    	switch(pThisWin->sProperty.nWinType)
00009a  f8940020          LDRB     r0,[r4,#0x20]
00009e  210f              MOVS     r1,#0xf
;;;322    	{
;;;323    		case eInputDriverLicence:
;;;324    			pThisWin->hEditMaxLen = sizeof(g_sRecord.aDriverLicense) - 1;
;;;325    			EDIT_SetMaxLen(pThisWin->hEditBox, pThisWin->hEditMaxLen);
;;;326    			Voc_Cmd(eVOC_INPUT_LISENCE);
;;;327    			break;
;;;328    		case eInputPoliceID:
;;;329    			pThisWin->hEditMaxLen = sizeof(g_sRecord.aPoliceID) - 1;
;;;330    			EDIT_SetMaxLen(pThisWin->hEditBox, pThisWin->hEditMaxLen);
;;;331    			EDIT_SetText(pThisWin->hEditBox, (const char *)g_sDeviceUserInfo.aPoliceID);
;;;332    			Voc_Cmd(eVOC_INPUT_POLICEID);
;;;333    			break;
;;;334    		case eInputAdminPassword:
;;;335    			pThisWin->hEditMaxLen = 10 - 1;
;;;336    			EDIT_SetMaxLen(pThisWin->hEditBox, pThisWin->hEditMaxLen);
;;;337    			break;
;;;338    		case eInputStardardHighAlcValue:
;;;339    			pThisWin->hEditMaxLen = 15;
;;;340    			EDIT_SetMaxLen(pThisWin->hEditBox, pThisWin->hEditMaxLen);
;;;341    			if(g_nCalibrateUnit == 0)
;;;342    			{
;;;343    				sprintf(aTemp, "%.1f%s", g_fHStandardAlcoholValue,Get_Unit_String(g_nCalibrateUnit));
;;;344    			}
;;;345    			else if(g_nCalibrateUnit == 5)
;;;346    			{
;;;347    				float fTemp;
;;;348    				fTemp = Get_Final_Convert_Display_Result(g_fHStandardAlcoholValue,g_nCalibrateUnit, g_sTestParam.nBrACBACK);
0000a0  4e4f              LDR      r6,|L7.480|
;;;349    				Get_Format_Alc_Convert_String(fTemp, g_nCalibrateUnit,aResult,eFormatToFloat);
;;;350    				sprintf(aTemp, "%s%s", aResult,Get_Unit_String(g_nCalibrateUnit));
;;;351    			}
;;;352    			EDIT_SetText(pThisWin->hEditBox, aTemp);
;;;353    			EDIT_SetCursorAtChar(pThisWin->hEditBox, Get_Non_Numeric_Position(aTemp));
;;;354    			WM_DisableWindow(pThisWin->hEditBox);
;;;355    			break;
;;;356    		case eInputStardardLowAlcValue:
;;;357    			pThisWin->hEditMaxLen = 15;
;;;358    			EDIT_SetMaxLen(pThisWin->hEditBox, pThisWin->hEditMaxLen);
;;;359    			if(g_nCalibrateUnit == 0)
;;;360    			{
;;;361    				sprintf(aTemp, "%.1f%s", g_fLStandardAlcoholValue,Get_Unit_String(g_nCalibrateUnit));
;;;362    			}
;;;363    			else if(g_nCalibrateUnit == 5)
;;;364    			{
;;;365    				float fTemp;
;;;366    				fTemp = Get_Final_Convert_Display_Result(g_fLStandardAlcoholValue,g_nCalibrateUnit, g_sTestParam.nBrACBACK);
;;;367    				Get_Format_Alc_Convert_String(fTemp, g_nCalibrateUnit,aResult,eFormatToFloat);
;;;368    				sprintf(aTemp, "%s%s", aResult,Get_Unit_String(g_nCalibrateUnit));
;;;369    			}
;;;370    			EDIT_SetText(pThisWin->hEditBox, aTemp);
;;;371    			EDIT_SetCursorAtChar(pThisWin->hEditBox, Get_Non_Numeric_Position(aTemp));
;;;372    			WM_DisableWindow(pThisWin->hEditBox);
;;;373    			break;
;;;374    		case eInputQuickTestAlcValue:
;;;375    			pThisWin->hEditMaxLen = 15;
;;;376    			EDIT_SetMaxLen(pThisWin->hEditBox, pThisWin->hEditMaxLen);
;;;377    			if(g_nCalibrateUnit == 0)
;;;378    			{
;;;379    				sprintf(aTemp, "%.1f%s", g_fQuickTestStandardAlcoholValue,Get_Unit_String(g_nCalibrateUnit));
;;;380    			}
;;;381    			else if(g_nCalibrateUnit == 5)
;;;382    			{
;;;383    				float fTemp;
;;;384    				fTemp = Get_Final_Convert_Display_Result(g_fQuickTestStandardAlcoholValue,g_nCalibrateUnit, g_sTestParam.nBrACBACK);
;;;385    				Get_Format_Alc_Convert_String(fTemp, g_nCalibrateUnit,aResult,eFormatToFloat);
;;;386    				sprintf(aTemp, "%s%s", aResult,Get_Unit_String(g_nCalibrateUnit));
;;;387    			}
;;;388    			EDIT_SetText(pThisWin->hEditBox, aTemp);
;;;389    			EDIT_SetCursorAtChar(pThisWin->hEditBox, Get_Non_Numeric_Position(aTemp));
;;;390    			WM_DisableWindow(pThisWin->hEditBox);
;;;391    			break;
;;;392    		case eInputLoginID:
;;;393    			pThisWin->hEditMaxLen = sizeof(g_sCurrPoliceUserInfor.aPoliceID) - 1;
;;;394    			EDIT_SetMaxLen(pThisWin->hEditBox,pThisWin->hEditMaxLen);
;;;395    			break;
;;;396    		case eSetLoginPassword:
;;;397    			pThisWin->hEditMaxLen = sizeof(g_sCurrPoliceUserInfor.aPassword) - 1;
0000a2  2206              MOVS     r2,#6
0000a4  4d4f              LDR      r5,|L7.484|
0000a6  1f00              SUBS     r0,r0,#4              ;341
0000a8  280d              CMP      r0,#0xd               ;321
0000aa  d27b              BCS      |L7.420|
0000ac  e8dff000          TBB      [pc,r0]               ;321
0000b0  070f901e          DCB      0x07,0x0f,0x90,0x1e
0000b4  20444e90          DCB      0x20,0x44,0x4e,0x90
0000b8  7b908686          DCB      0x7b,0x90,0x86,0x86
0000bc  8b00              DCB      0x8b,0x00
0000be  2113              MOVS     r1,#0x13              ;324
0000c0  82e1              STRH     r1,[r4,#0x16]         ;324
0000c2  f9b40014          LDRSH    r0,[r4,#0x14]         ;325
0000c6  f7fffffe          BL       EDIT_SetMaxLen
0000ca  2007              MOVS     r0,#7                 ;326
0000cc  e00b              B        |L7.230|
0000ce  210e              MOVS     r1,#0xe               ;329
0000d0  82e1              STRH     r1,[r4,#0x16]         ;329
0000d2  f9b40014          LDRSH    r0,[r4,#0x14]         ;330
0000d6  f7fffffe          BL       EDIT_SetMaxLen
0000da  f9b40014          LDRSH    r0,[r4,#0x14]         ;331
0000de  4942              LDR      r1,|L7.488|
0000e0  f7fffffe          BL       EDIT_SetText
0000e4  2008              MOVS     r0,#8                 ;332
                  |L7.230|
0000e6  f7fffffe          BL       Voc_Cmd
0000ea  e061              B        |L7.432|
0000ec  2109              MOVS     r1,#9                 ;335
0000ee  e06b              B        |L7.456|
0000f0  82e1              STRH     r1,[r4,#0x16]         ;339
0000f2  f9b40014          LDRSH    r0,[r4,#0x14]         ;340
0000f6  f7fffffe          BL       EDIT_SetMaxLen
0000fa  7828              LDRB     r0,[r5,#0]            ;341  ; g_nCalibrateUnit
0000fc  4f3b              LDR      r7,|L7.492|
0000fe  e022              B        |L7.326|
                  |L7.256|
000100  f7fffffe          BL       Get_Unit_String
000104  4605              MOV      r5,r0                 ;343
000106  6838              LDR      r0,[r7,#0]            ;343  ; g_fHStandardAlcoholValue
000108  f7fffffe          BL       __aeabi_f2d
00010c  4602              MOV      r2,r0                 ;343
00010e  9500              STR      r5,[sp,#0]            ;343
000110  e042              B        |L7.408|
000112  bf00              NOP                            ;352
                  |L7.276|
000114  f9b40014          LDRSH    r0,[r4,#0x14]         ;352
000118  a905              ADD      r1,sp,#0x14           ;352
00011a  f7fffffe          BL       EDIT_SetText
00011e  a805              ADD      r0,sp,#0x14           ;353
000120  f7fffffe          BL       Get_Non_Numeric_Position
000124  4601              MOV      r1,r0                 ;353
000126  f9b40014          LDRSH    r0,[r4,#0x14]         ;353
00012a  f7fffffe          BL       EDIT_SetCursorAtChar
00012e  f9b40014          LDRSH    r0,[r4,#0x14]         ;354
000132  f7fffffe          BL       WM_DisableWindow
000136  e03b              B        |L7.432|
000138  82e1              STRH     r1,[r4,#0x16]         ;357
00013a  f9b40014          LDRSH    r0,[r4,#0x14]         ;358
00013e  f7fffffe          BL       EDIT_SetMaxLen
000142  7828              LDRB     r0,[r5,#0]            ;359  ; g_nCalibrateUnit
000144  4f2a              LDR      r7,|L7.496|
                  |L7.326|
000146  2800              CMP      r0,#0                 ;361
000148  d0da              BEQ      |L7.256|
00014a  e007              B        |L7.348|
00014c  82e1              STRH     r1,[r4,#0x16]         ;375
00014e  f9b40014          LDRSH    r0,[r4,#0x14]         ;376
000152  f7fffffe          BL       EDIT_SetMaxLen
000156  7828              LDRB     r0,[r5,#0]            ;377  ; g_nCalibrateUnit
000158  4f26              LDR      r7,|L7.500|
00015a  b1a8              CBZ      r0,|L7.392|
                  |L7.348|
00015c  2805              CMP      r0,#5                 ;381
00015e  d1d9              BNE      |L7.276|
000160  4601              MOV      r1,r0                 ;384
000162  8872              LDRH     r2,[r6,#2]            ;384  ; g_sTestParam
000164  6838              LDR      r0,[r7,#0]            ;384  ; g_fQuickTestStandardAlcoholValue
000166  f7fffffe          BL       Get_Final_Convert_Display_Result
00016a  2301              MOVS     r3,#1                 ;385
00016c  aa12              ADD      r2,sp,#0x48           ;385
00016e  7829              LDRB     r1,[r5,#0]            ;385  ; g_nCalibrateUnit
000170  f7fffffe          BL       Get_Format_Alc_Convert_String
000174  7828              LDRB     r0,[r5,#0]            ;386  ; g_nCalibrateUnit
000176  f7fffffe          BL       Get_Unit_String
00017a  4603              MOV      r3,r0                 ;386
00017c  aa12              ADD      r2,sp,#0x48           ;386
00017e  a11e              ADR      r1,|L7.504|
000180  a805              ADD      r0,sp,#0x14           ;386
000182  f7fffffe          BL       __2sprintf
000186  e7c5              B        |L7.276|
                  |L7.392|
000188  f7fffffe          BL       Get_Unit_String
00018c  4605              MOV      r5,r0                 ;379
00018e  6838              LDR      r0,[r7,#0]            ;379  ; g_fQuickTestStandardAlcoholValue
000190  f7fffffe          BL       __aeabi_f2d
000194  4602              MOV      r2,r0                 ;379
000196  9500              STR      r5,[sp,#0]            ;379
                  |L7.408|
000198  460b              MOV      r3,r1                 ;379
00019a  a119              ADR      r1,|L7.512|
00019c  a805              ADD      r0,sp,#0x14           ;379
00019e  f7fffffe          BL       __2sprintf
0001a2  e7b7              B        |L7.276|
                  |L7.420|
0001a4  e014              B        |L7.464|
0001a6  210b              MOVS     r1,#0xb               ;393
0001a8  e00e              B        |L7.456|
0001aa  bf00              NOP                            ;336
                  |L7.428|
0001ac  f7fffffe          BL       EDIT_SetMaxLen
                  |L7.432|
;;;398    			EDIT_SetMaxLen(pThisWin->hEditBox,pThisWin->hEditMaxLen);
;;;399    			break;
;;;400    		case eSetVerifyLoginPassword:
;;;401    			pThisWin->hEditMaxLen = sizeof(g_sCurrPoliceUserInfor.aPassword) - 1;
;;;402    			EDIT_SetMaxLen(pThisWin->hEditBox,pThisWin->hEditMaxLen);
;;;403    			break;
;;;404    		case eInputLoginPassword:
;;;405    			pThisWin->hEditMaxLen = MAX(sizeof(g_sCurrPoliceUserInfor.aPassword), 9) - 1;
;;;406    			EDIT_SetMaxLen(pThisWin->hEditBox,pThisWin->hEditMaxLen);
;;;407    			break;
;;;408    		default:
;;;409    			pThisWin->hEditMaxLen = 20;
;;;410    			EDIT_SetMaxLen(pThisWin->hEditBox, pThisWin->hEditMaxLen);
;;;411    			break;
;;;412    	}
;;;413    
;;;414    	WM_SetFocus(pThisWin->hEditBox);
0001b0  f9b40014          LDRSH    r0,[r4,#0x14]
0001b4  f7fffffe          BL       WM_SetFocus
;;;415    }
0001b8  b017              ADD      sp,sp,#0x5c
0001ba  bdf0              POP      {r4-r7,pc}
0001bc  82e2              STRH     r2,[r4,#0x16]         ;401
0001be  f9b40014          LDRSH    r0,[r4,#0x14]         ;402
0001c2  4611              MOV      r1,r2                 ;402
0001c4  e7f2              B        |L7.428|
0001c6  2108              MOVS     r1,#8                 ;405
                  |L7.456|
0001c8  82e1              STRH     r1,[r4,#0x16]         ;409
0001ca  f9b40014          LDRSH    r0,[r4,#0x14]         ;410
0001ce  e7ed              B        |L7.428|
                  |L7.464|
0001d0  2114              MOVS     r1,#0x14              ;409
0001d2  e7f9              B        |L7.456|
;;;416    
                          ENDP

                  |L7.468|
                          DCD      Strings
                  |L7.472|
                          DCD      g_Language
                  |L7.476|
                          DCD      GUI_FontTahomaBold23
                  |L7.480|
                          DCD      g_sTestParam
                  |L7.484|
                          DCD      g_nCalibrateUnit
                  |L7.488|
                          DCD      g_sDeviceUserInfo+0x2e
                  |L7.492|
                          DCD      g_fHStandardAlcoholValue
                  |L7.496|
                          DCD      g_fLStandardAlcoholValue
                  |L7.500|
                          DCD      g_fQuickTestStandardAlcoholValue
                  |L7.504|
0001f8  25732573          DCB      "%s%s",0
0001fc  00      
0001fd  00                DCB      0
0001fe  00                DCB      0
0001ff  00                DCB      0
                  |L7.512|
000200  252e3166          DCB      "%.1f%s",0
000204  257300  
000207  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  DriverID_Information
                          %        20

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  _PleaseInput_DriverID
000000  e8afb7e8          DCB      0xe8,0xaf,0xb7,0xe8
000004  be93e585          DCB      0xbe,0x93,0xe5,0x85
000008  a5e9a9be          DCB      0xa5,0xe9,0xa9,0xbe
00000c  e9a9b6e8          DCB      0xe9,0xa9,0xb6,0xe8
000010  af81e58f          DCB      0xaf,0x81,0xe5,0x8f
000014  b7efbc81          DCB      0xb7,0xef,0xbc,0x81
000018  00                DCB      0x00
                  _PleaseInput_PoliceID
000019  e8afb7            DCB      0xe8,0xaf,0xb7
00001c  e8be93e5          DCB      0xe8,0xbe,0x93,0xe5
000020  85a5e689          DCB      0x85,0xa5,0xe6,0x89
000024  a7e58ba4          DCB      0xa7,0xe5,0x8b,0xa4
000028  e6b091e8          DCB      0xe6,0xb0,0x91,0xe8
00002c  ada6e8ad          DCB      0xad,0xa6,0xe8,0xad
000030  a6e58fb7          DCB      0xa6,0xe5,0x8f,0xb7
000034  efbc8100          DCB      0xef,0xbc,0x81,0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  3100              DCB      "1",0
000002  00                DCB      0
000003  00                DCB      0
000004  3200              DCB      "2",0
000006  00                DCB      0
000007  00                DCB      0
000008  3300              DCB      "3",0
00000a  00                DCB      0
00000b  00                DCB      0
00000c  5800              DCB      "X",0
00000e  00                DCB      0
00000f  00                DCB      0
000010  3400              DCB      "4",0
000012  00                DCB      0
000013  00                DCB      0
000014  3500              DCB      "5",0
000016  00                DCB      0
000017  00                DCB      0
000018  3600              DCB      "6",0
00001a  00                DCB      0
00001b  00                DCB      0
00001c  2e00              DCB      ".",0
00001e  00                DCB      0
00001f  00                DCB      0
000020  3700              DCB      "7",0
000022  00                DCB      0
000023  00                DCB      0
000024  3800              DCB      "8",0
000026  00                DCB      0
000027  00                DCB      0
000028  3900              DCB      "9",0
00002a  00                DCB      0
00002b  00                DCB      0
00002c  3000              DCB      "0",0

                          AREA ||.data||, DATA, ALIGN=2

                  Btn_NumberTab
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x4
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0xc
                          DCD      ||.conststring||+0x10
                          DCD      ||.conststring||+0x14
                          DCD      ||.conststring||+0x18
                          DCD      ||.conststring||+0x1c
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x24
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x2c
