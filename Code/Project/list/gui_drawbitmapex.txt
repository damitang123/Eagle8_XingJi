; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_drawbitmapex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_drawbitmapex.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_DrawBitmapEx.c]
                          THUMB

                          AREA ||i.GL_DrawBitmapEx||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmapEx PROC
;;;35     */
;;;36     static void GL_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;37                                 int xCenter, int yCenter, int xMag, int yMag) {
000004  b08b              SUB      sp,sp,#0x2c
;;;38       LCD_PIXELINDEX Index, IndexPrev = 0;
000006  2000              MOVS     r0,#0
000008  f8ddb068          LDR      r11,[sp,#0x68]
;;;39       LCD_COLOR Color;
;;;40       int x, y, xi, yi, xSize, ySize, xAct, xStart, xMagAbs, xiMag, yMin, yMax, yEnd, yPrev, yStep;
;;;41       char Cached, HasTrans = 0;
00000c  9001              STR      r0,[sp,#4]
;;;42       /* Use clipping rect to reduce calculation */
;;;43       yMin = GUI_Context.ClipRect.y0;
00000e  9006              STR      r0,[sp,#0x18]
000010  486d              LDR      r0,|L1.456|
000012  460a              MOV      r2,r1                 ;37
000014  f9b0100a          LDRSH    r1,[r0,#0xa]  ; GUI_Context
;;;44       yMax = GUI_Context.ClipRect.y1;
000018  910a              STR      r1,[sp,#0x28]
00001a  f9b0000e          LDRSH    r0,[r0,#0xe]  ; GUI_Context
;;;45       /* Init some values */
;;;46       xSize    = pBitmap->XSize;
00001e  9009              STR      r0,[sp,#0x24]
000020  980b              LDR      r0,[sp,#0x2c]
000022  f8b09000          LDRH     r9,[r0,#0]
;;;47       ySize    = pBitmap->YSize;
000026  8840              LDRH     r0,[r0,#2]
;;;48       xMagAbs  = ((xMag < 0) ? -xMag : xMag);
000028  9008              STR      r0,[sp,#0x20]
00002a  9819              LDR      r0,[sp,#0x64]
00002c  2800              CMP      r0,#0
00002e  da01              BGE      |L1.52|
000030  f1c00000          RSB      r0,r0,#0
                  |L1.52|
;;;49       x0      -= (I32)((xMag < 0) ? xSize - xCenter - 1 : xCenter) * (I32)(xMagAbs) / (I32)(1000);
000034  9005              STR      r0,[sp,#0x14]
000036  da04              BGE      |L1.66|
000038  eba90303          SUB      r3,r9,r3
00003c  9805              LDR      r0,[sp,#0x14]
00003e  f1a30301          SUB      r3,r3,#1
                  |L1.66|
000042  fb03f300          MUL      r3,r3,r0
000046  f44f717a          MOV      r1,#0x3e8
00004a  fb93f0f1          SDIV     r0,r3,r1
00004e  eba20000          SUB      r0,r2,r0
;;;50       yEnd     = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000052  900c              STR      r0,[sp,#0x30]
000054  9818              LDR      r0,[sp,#0x60]
000056  f1c00000          RSB      r0,r0,#0
00005a  fb00f00b          MUL      r0,r0,r11
00005e  f7fffffe          BL       GUI__DivideRound32
000062  990d              LDR      r1,[sp,#0x34]
;;;51       yPrev    = yEnd + 1;
;;;52       yStep = (yMag < 0) ? -1 : 1;
000064  f1bb0f00          CMP      r11,#0
000068  eb000801          ADD      r8,r0,r1              ;50
00006c  f1080001          ADD      r0,r8,#1              ;51
000070  9004              STR      r0,[sp,#0x10]
000072  da02              BGE      |L1.122|
000074  f04f30ff          MOV      r0,#0xffffffff
000078  e000              B        |L1.124|
                  |L1.122|
00007a  2001              MOVS     r0,#1
                  |L1.124|
;;;53       if (pBitmap->pPal) {
00007c  9007              STR      r0,[sp,#0x1c]
00007e  980b              LDR      r0,[sp,#0x2c]
000080  68c0              LDR      r0,[r0,#0xc]
000082  b118              CBZ      r0,|L1.140|
;;;54         if (pBitmap->pPal->HasTrans) {
000084  7900              LDRB     r0,[r0,#4]
000086  b108              CBZ      r0,|L1.140|
;;;55           HasTrans = 1;
000088  2001              MOVS     r0,#1
00008a  9006              STR      r0,[sp,#0x18]
                  |L1.140|
;;;56         }
;;;57       }
;;;58       for (yi = 0; yi < ySize; yi++) {
00008c  2000              MOVS     r0,#0
00008e  e092              B        |L1.438|
                  |L1.144|
;;;59         y = yEnd;
;;;60         yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1 - yCenter) * (I32)(yMag)), 1000);
000090  9818              LDR      r0,[sp,#0x60]
000092  4644              MOV      r4,r8                 ;59
000094  ebaa0000          SUB      r0,r10,r0
000098  1c40              ADDS     r0,r0,#1
00009a  fb00f00b          MUL      r0,r0,r11
00009e  f44f717a          MOV      r1,#0x3e8
0000a2  f7fffffe          BL       GUI__DivideRound32
0000a6  990d              LDR      r1,[sp,#0x34]
0000a8  eb000801          ADD      r8,r0,r1
;;;61         if (y != yPrev) {
0000ac  9804              LDR      r0,[sp,#0x10]
0000ae  4284              CMP      r4,r0
0000b0  d07f              BEQ      |L1.434|
;;;62           yPrev = y;
0000b2  9404              STR      r4,[sp,#0x10]
                  |L1.180|
;;;63           do {
;;;64             if ((y >= yMin) && (y <= yMax)) {
0000b4  980a              LDR      r0,[sp,#0x28]
0000b6  4284              CMP      r4,r0
0000b8  db6e              BLT      |L1.408|
0000ba  9809              LDR      r0,[sp,#0x24]
0000bc  4284              CMP      r4,r0
0000be  dc6b              BGT      |L1.408|
;;;65               xStart = -1;
;;;66               x      =  0;
0000c0  2500              MOVS     r5,#0
0000c2  f04f30ff          MOV      r0,#0xffffffff        ;65
;;;67               xiMag  =  0;
;;;68               Cached =  0;
;;;69               for (xi = 0; xi < xSize; xi++) {
0000c6  e9cd0502          STRD     r0,r5,[sp,#8]
0000ca  462e              MOV      r6,r5                 ;67
0000cc  462f              MOV      r7,r5
0000ce  e057              B        |L1.384|
                  |L1.208|
;;;70                 xiMag += xMagAbs;
0000d0  9805              LDR      r0,[sp,#0x14]
0000d2  4406              ADD      r6,r6,r0
;;;71                 if (xiMag >= 1000) {
0000d4  f5b67f7a          CMP      r6,#0x3e8
0000d8  db51              BLT      |L1.382|
;;;72                   xAct  = (xMag > 0) ? xi : xSize - xi - 1;
0000da  9819              LDR      r0,[sp,#0x64]
0000dc  2800              CMP      r0,#0
0000de  dd01              BLE      |L1.228|
0000e0  4639              MOV      r1,r7
0000e2  e002              B        |L1.234|
                  |L1.228|
0000e4  eba90107          SUB      r1,r9,r7
0000e8  1e49              SUBS     r1,r1,#1
                  |L1.234|
;;;73                   Index = GUI_GetBitmapPixelIndex(pBitmap, xAct, yi);
0000ea  4652              MOV      r2,r10
0000ec  980b              LDR      r0,[sp,#0x2c]
0000ee  f7fffffe          BL       GUI_GetBitmapPixelIndex
0000f2  b280              UXTH     r0,r0
;;;74                   if (Index != IndexPrev || xStart == -1) {
0000f4  9901              LDR      r1,[sp,#4]
0000f6  9000              STR      r0,[sp,#0]
0000f8  4288              CMP      r0,r1
0000fa  d102              BNE      |L1.258|
0000fc  9802              LDR      r0,[sp,#8]
0000fe  1c40              ADDS     r0,r0,#1
000100  d136              BNE      |L1.368|
                  |L1.258|
;;;75                     if ((Index == 0) && HasTrans) {
000102  9800              LDR      r0,[sp,#0]
000104  b970              CBNZ     r0,|L1.292|
000106  9806              LDR      r0,[sp,#0x18]
000108  b160              CBZ      r0,|L1.292|
;;;76                       /* Transparent color ... clear cache */
;;;77                       if (Cached) {
00010a  9803              LDR      r0,[sp,#0xc]
00010c  b370              CBZ      r0,|L1.364|
;;;78                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00010e  980c              LDR      r0,[sp,#0x30]
000110  9902              LDR      r1,[sp,#8]
000112  1942              ADDS     r2,r0,r5
000114  4408              ADD      r0,r0,r1
000116  4621              MOV      r1,r4
000118  1e52              SUBS     r2,r2,#1
00011a  f7fffffe          BL       LCD_DrawHLine
;;;79                         Cached = 0;
00011e  2000              MOVS     r0,#0
000120  9003              STR      r0,[sp,#0xc]
000122  e023              B        |L1.364|
                  |L1.292|
;;;80                       }
;;;81                     } else {
;;;82                       /* Another color ... draw contents of cache */
;;;83                       if (Cached && xStart != -1) {
000124  9803              LDR      r0,[sp,#0xc]
000126  b150              CBZ      r0,|L1.318|
000128  9802              LDR      r0,[sp,#8]
00012a  1c40              ADDS     r0,r0,#1
00012c  d007              BEQ      |L1.318|
;;;84                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00012e  980c              LDR      r0,[sp,#0x30]
000130  9902              LDR      r1,[sp,#8]
000132  1942              ADDS     r2,r0,r5
000134  4408              ADD      r0,r0,r1
000136  4621              MOV      r1,r4
000138  1e52              SUBS     r2,r2,#1
00013a  f7fffffe          BL       LCD_DrawHLine
                  |L1.318|
;;;85                       }
;;;86                       xStart    = x;
;;;87                       Cached    = 1;
00013e  2001              MOVS     r0,#1
000140  e9cd5002          STRD     r5,r0,[sp,#8]
;;;88                       if (pBitmap->pMethods) {
000144  980b              LDR      r0,[sp,#0x2c]
000146  6900              LDR      r0,[r0,#0x10]
000148  b118              CBZ      r0,|L1.338|
                  |L1.330|
;;;89                         Color = pBitmap->pMethods->pfIndex2Color(Index);
00014a  6841              LDR      r1,[r0,#4]
00014c  9800              LDR      r0,[sp,#0]
00014e  4788              BLX      r1
000150  e006              B        |L1.352|
                  |L1.338|
;;;90                       } else {
;;;91                         if (pBitmap->pPal->pPalEntries) {
000152  980b              LDR      r0,[sp,#0x2c]
000154  68c0              LDR      r0,[r0,#0xc]
000156  6880              LDR      r0,[r0,#8]
000158  b330              CBZ      r0,|L1.424|
;;;92                           Color = pBitmap->pPal->pPalEntries[Index];
00015a  9900              LDR      r1,[sp,#0]
00015c  f8500021          LDR      r0,[r0,r1,LSL #2]
                  |L1.352|
;;;93                         } else {
;;;94                           Color = LCDDEV_L0_Index2Color(Index);
;;;95                         }
;;;96                       }
;;;97                       LCD_SetColorIndex(LCDDEV_L0_Color2Index(Color));
000160  4919              LDR      r1,|L1.456|
000162  6cc9              LDR      r1,[r1,#0x4c]  ; GUI_Context
000164  6809              LDR      r1,[r1,#0]
000166  4788              BLX      r1
000168  f7fffffe          BL       LCD_SetColorIndex
                  |L1.364|
;;;98                     }
;;;99                     IndexPrev = Index;
00016c  9800              LDR      r0,[sp,#0]
00016e  9001              STR      r0,[sp,#4]
                  |L1.368|
000170  f44f707a          MOV      r0,#0x3e8             ;49
                  |L1.372|
000174  1c6d              ADDS     r5,r5,#1              ;49
000176  f5a6767a          SUB      r6,r6,#0x3e8          ;49
;;;100                  }
;;;101                  do {
;;;102                    x++;
;;;103                    xiMag -= 1000;
;;;104                  } while (xiMag >= 1000);
00017a  4286              CMP      r6,r0
00017c  dafa              BGE      |L1.372|
                  |L1.382|
00017e  1c7f              ADDS     r7,r7,#1
                  |L1.384|
000180  454f              CMP      r7,r9                 ;69
000182  dba5              BLT      |L1.208|
;;;105                }
;;;106              }
;;;107              /* Clear cache */
;;;108              if (Cached) {
000184  9803              LDR      r0,[sp,#0xc]
000186  b138              CBZ      r0,|L1.408|
;;;109                LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
000188  980c              LDR      r0,[sp,#0x30]
00018a  9902              LDR      r1,[sp,#8]
00018c  1942              ADDS     r2,r0,r5
00018e  4408              ADD      r0,r0,r1
000190  4621              MOV      r1,r4
000192  1e52              SUBS     r2,r2,#1
000194  f7fffffe          BL       LCD_DrawHLine
                  |L1.408|
;;;110              }
;;;111            }
;;;112            y += yStep;
000198  9807              LDR      r0,[sp,#0x1c]
;;;113          } while ((yMag < 0) ? (y > yEnd) : (y < yEnd));
00019a  f1bb0f00          CMP      r11,#0
00019e  4404              ADD      r4,r4,r0              ;112
0001a0  da05              BGE      |L1.430|
0001a2  4544              CMP      r4,r8
0001a4  dc86              BGT      |L1.180|
0001a6  e004              B        |L1.434|
                  |L1.424|
0001a8  4807              LDR      r0,|L1.456|
0001aa  6cc0              LDR      r0,[r0,#0x4c]         ;94  ; GUI_Context
0001ac  e7cd              B        |L1.330|
                  |L1.430|
0001ae  4544              CMP      r4,r8
0001b0  db80              BLT      |L1.180|
                  |L1.434|
0001b2  f10a0001          ADD      r0,r10,#1             ;58
                  |L1.438|
0001b6  9908              LDR      r1,[sp,#0x20]         ;58
0001b8  4682              MOV      r10,r0                ;58
0001ba  4288              CMP      r0,r1                 ;58
0001bc  f6ffaf68          BLT      |L1.144|
;;;114        }
;;;115      }
;;;116    }
0001c0  b00f              ADD      sp,sp,#0x3c
0001c2  e8bd8ff0          POP      {r4-r11,pc}
;;;117    
                          ENDP

0001c6  0000              DCW      0x0000
                  |L1.456|
                          DCD      GUI_Context

                          AREA ||i.GUI_DrawBitmapEx||, CODE, READONLY, ALIGN=2

                  GUI_DrawBitmapEx PROC
;;;127    */
;;;128    void GUI_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;129                          int xCenter, int yCenter, int xMag, int yMag) {
000004  b087              SUB      sp,sp,#0x1c
000006  469a              MOV      r10,r3
000008  e9dd7611          LDRD     r7,r6,[sp,#0x44]
00000c  4693              MOV      r11,r2
00000e  460c              MOV      r4,r1
000010  4681              MOV      r9,r0
;;;130      int OldIndex;
;;;131      #if (GUI_WINSUPPORT)
;;;132        GUI_RECT r;
;;;133      #endif
;;;134      GUI_LOCK();
;;;135      OldIndex = LCD_GetColorIndex();
000012  f8dd8040          LDR      r8,[sp,#0x40]
000016  f7fffffe          BL       LCD_GetColorIndex
;;;136      #if (GUI_WINSUPPORT)
;;;137        WM_ADDORG(x0, y0);
00001a  9005              STR      r0,[sp,#0x14]
00001c  4838              LDR      r0,|L2.256|
00001e  6c41              LDR      r1,[r0,#0x44]  ; GUI_Context
000020  190d              ADDS     r5,r1,r4
000022  6c81              LDR      r1,[r0,#0x48]  ; GUI_Context
;;;138        if (xMag >= 0) {
;;;139          r.x0 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000024  f1ca0000          RSB      r0,r10,#0
000028  eb01040b          ADD      r4,r1,r11             ;137
00002c  4378              MULS     r0,r7,r0
00002e  f44f7b7a          MOV      r11,#0x3e8
000032  2f00              CMP      r7,#0                 ;138
;;;140          r.x1 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
;;;141        } else {
;;;142          r.x1 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000034  4659              MOV      r1,r11
000036  db11              BLT      |L2.92|
000038  f7fffffe          BL       GUI__DivideRound32
00003c  4428              ADD      r0,r0,r5              ;139
00003e  f8ad000c          STRH     r0,[sp,#0xc]          ;139
000042  f8b91000          LDRH     r1,[r9,#0]            ;140
000046  eba1000a          SUB      r0,r1,r10             ;140
00004a  1e40              SUBS     r0,r0,#1              ;140
00004c  4378              MULS     r0,r7,r0              ;140
00004e  4659              MOV      r1,r11                ;140
000050  f7fffffe          BL       GUI__DivideRound32
000054  4428              ADD      r0,r0,r5              ;140
000056  f8ad0010          STRH     r0,[sp,#0x10]         ;140
00005a  e010              B        |L2.126|
                  |L2.92|
00005c  f7fffffe          BL       GUI__DivideRound32
000060  4428              ADD      r0,r0,r5
000062  f8ad0010          STRH     r0,[sp,#0x10]
;;;143          r.x0 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000066  f8b91000          LDRH     r1,[r9,#0]
00006a  eba1000a          SUB      r0,r1,r10
00006e  1e40              SUBS     r0,r0,#1
000070  4378              MULS     r0,r7,r0
000072  4659              MOV      r1,r11
000074  f7fffffe          BL       GUI__DivideRound32
000078  4428              ADD      r0,r0,r5
00007a  f8ad000c          STRH     r0,[sp,#0xc]
                  |L2.126|
;;;144        }
;;;145        if (yMag >= 0) {
;;;146          r.y0 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
00007e  f1c80000          RSB      r0,r8,#0
000082  4370              MULS     r0,r6,r0
000084  2e00              CMP      r6,#0                 ;145
;;;147          r.y1 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
;;;148        } else {
;;;149          r.y1 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000086  4659              MOV      r1,r11
000088  db11              BLT      |L2.174|
00008a  f7fffffe          BL       GUI__DivideRound32
00008e  4420              ADD      r0,r0,r4              ;146
000090  f8ad000e          STRH     r0,[sp,#0xe]          ;146
000094  f8b91002          LDRH     r1,[r9,#2]            ;147
000098  eba10008          SUB      r0,r1,r8              ;147
00009c  1e40              SUBS     r0,r0,#1              ;147
00009e  4370              MULS     r0,r6,r0              ;147
0000a0  4659              MOV      r1,r11                ;147
0000a2  f7fffffe          BL       GUI__DivideRound32
0000a6  4420              ADD      r0,r0,r4              ;147
0000a8  f8ad0012          STRH     r0,[sp,#0x12]         ;147
0000ac  e010              B        |L2.208|
                  |L2.174|
0000ae  f7fffffe          BL       GUI__DivideRound32
0000b2  4420              ADD      r0,r0,r4
0000b4  f8ad0012          STRH     r0,[sp,#0x12]
;;;150          r.y0 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0000b8  f8b91002          LDRH     r1,[r9,#2]
0000bc  eba10008          SUB      r0,r1,r8
0000c0  1e40              SUBS     r0,r0,#1
0000c2  4370              MULS     r0,r6,r0
0000c4  4659              MOV      r1,r11
0000c6  f7fffffe          BL       GUI__DivideRound32
0000ca  4420              ADD      r0,r0,r4
0000cc  f8ad000e          STRH     r0,[sp,#0xe]
                  |L2.208|
;;;151        }
;;;152        WM_ITERATE_START(&r) {
0000d0  a803              ADD      r0,sp,#0xc
0000d2  f7fffffe          BL       WM__InitIVRSearch
0000d6  e00b              B        |L2.240|
                  |L2.216|
;;;153      #endif
;;;154      GL_DrawBitmapEx(pBitmap, x0, y0, xCenter, yCenter, xMag, yMag);
0000d8  f8cd8000          STR      r8,[sp,#0]
0000dc  e9cd7601          STRD     r7,r6,[sp,#4]
0000e0  4653              MOV      r3,r10
0000e2  4622              MOV      r2,r4
0000e4  4629              MOV      r1,r5
0000e6  4648              MOV      r0,r9
0000e8  f7fffffe          BL       GL_DrawBitmapEx
;;;155      #if (GUI_WINSUPPORT)
;;;156        } WM_ITERATE_END();
0000ec  f7fffffe          BL       WM__GetNextIVR
                  |L2.240|
0000f0  2800              CMP      r0,#0
0000f2  d1f1              BNE      |L2.216|
;;;157      #endif
;;;158      LCD_SetColorIndex(OldIndex);
0000f4  9805              LDR      r0,[sp,#0x14]
0000f6  f7fffffe          BL       LCD_SetColorIndex
;;;159      GUI_UNLOCK();
;;;160    }
0000fa  b007              ADD      sp,sp,#0x1c
0000fc  e8bd8ff0          POP      {r4-r11,pc}
;;;161    
                          ENDP

                  |L2.256|
                          DCD      GUI_Context
