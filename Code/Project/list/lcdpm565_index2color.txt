; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdpm565_index2color.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdpm565_index2color.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\LCDPM565_Index2Color.c]
                          THUMB

                          AREA ||i.LCD_Index2Color_M565||, CODE, READONLY, ALIGN=1

                  LCD_Index2Color_M565 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_M565(int Index) {
000000  231f              MOVS     r3,#0x1f
;;;50       unsigned int r,g,b;
;;;51       /* Seperate the color masks */
;;;52       b = Index                                  & B_MASK;
000002  f000011f          AND      r1,r0,#0x1f
;;;53       g = (Index >> B_BITS)                      & G_MASK;
000006  f3c01245          UBFX     r2,r0,#5,#6
00000a  b510              PUSH     {r4,lr}               ;49
;;;54       r = ((unsigned)Index >> (B_BITS + G_BITS)) & R_MASK;
00000c  f3c020c4          UBFX     r0,r0,#11,#5
;;;55       /* Convert the color masks */
;;;56       r = r * 255 / R_MASK;
000010  ebc02000          RSB      r0,r0,r0,LSL #8
;;;57       g = g * 255 / G_MASK;
000014  ebc22202          RSB      r2,r2,r2,LSL #8
000018  243f              MOVS     r4,#0x3f
00001a  fbb0f0f3          UDIV     r0,r0,r3              ;56
00001e  fbb2f2f4          UDIV     r2,r2,r4
;;;58       b = b * 255 / B_MASK;
000022  ebc12101          RSB      r1,r1,r1,LSL #8
000026  fbb1f1f3          UDIV     r1,r1,r3
;;;59       return r + (g<<8) + (((U32)b)<<16);
00002a  eb002002          ADD      r0,r0,r2,LSL #8
00002e  eb004001          ADD      r0,r0,r1,LSL #16
;;;60     }
000032  bd10              POP      {r4,pc}
;;;61     
                          ENDP

