; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guidev_copyfromlcd.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidev_copyfromlcd.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\MemDev\GUIDEV_CopyFromLCD.c]
                          THUMB

                          AREA ||i.GUI_MEMDEV_CopyFromLCD||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyFromLCD PROC
;;;47     */
;;;48     void GUI_MEMDEV_CopyFromLCD(GUI_MEMDEV_Handle hMem) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;49       /* Make sure memory handle is valid */
;;;50       if (!hMem) {
;;;51         hMem = GUI_Context.hDevData;
000004  4f3b              LDR      r7,|L1.244|
000006  0004              MOVS     r4,r0                 ;48
000008  d103              BNE      |L1.18|
00000a  f9b74050          LDRSH    r4,[r7,#0x50]  ; GUI_Context
00000e  2c00              CMP      r4,#0
000010  d06d              BEQ      |L1.238|
                  |L1.18|
;;;52       }
;;;53       if (!hMem) {
;;;54         return;
;;;55       }
;;;56       {
;;;57         GUI_MEMDEV* pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4606              MOV      r6,r0
;;;58         LCD_RECT r;
;;;59         int y;
;;;60         int XMax;
;;;61         GUI_USAGE* pUsage = 0;
00001a  f04f0a00          MOV      r10,#0
;;;62         GUI_MEMDEV_Handle hMemOld = GUI_Context.hDevData;
00001e  f9b7b050          LDRSH    r11,[r7,#0x50]  ; GUI_Context
;;;63         GUI_MEMDEV_Select(hMem);
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       GUI_MEMDEV_Select
;;;64         if (pDevData->hUsage) 
000028  f9b60018          LDRSH    r0,[r6,#0x18]
00002c  b110              CBZ      r0,|L1.52|
;;;65           pUsage = GUI_USAGE_H2P(pDevData->hUsage);
00002e  f7fffffe          BL       GUI_ALLOC_h2p
000032  4682              MOV      r10,r0
                  |L1.52|
;;;66         /* Get bounding rectangle */
;;;67         r.y0  = pDevData->y0;
;;;68         r.x0  = pDevData->x0;
000034  f9b61000          LDRSH    r1,[r6,#0]
;;;69         r.x1  = pDevData->x0 + pDevData->XSize - 1;
000038  88b2              LDRH     r2,[r6,#4]
00003a  f9b60002          LDRSH    r0,[r6,#2]            ;67
00003e  440a              ADD      r2,r2,r1
000040  1e52              SUBS     r2,r2,#1
000042  f362040f          BFI      r4,r2,#0,#16
;;;70         r.y1  = pDevData->y0 + pDevData->YSize - 1;
000046  88f2              LDRH     r2,[r6,#6]
000048  f360451f          BFI      r5,r0,#16,#16         ;67
00004c  4402              ADD      r2,r2,r0
00004e  1e52              SUBS     r2,r2,#1
000050  f362441f          BFI      r4,r2,#16,#16
000054  2200              MOVS     r2,#0
000056  f361050f          BFI      r5,r1,#0,#16          ;68
;;;71         /* Make sure bounds are within LCD area so we can call driver directly */
;;;72         LCD_LIMIT(r.x0, <, 0);
00005a  2900              CMP      r1,#0
00005c  da01              BGE      |L1.98|
00005e  f362050f          BFI      r5,r2,#0,#16
                  |L1.98|
;;;73         LCD_LIMIT(r.y0, <, 0);
000062  2800              CMP      r0,#0
000064  da01              BGE      |L1.106|
000066  f362451f          BFI      r5,r2,#16,#16
                  |L1.106|
;;;74         LCD_LIMIT(r.x1, >, LCD_GET_XSIZE() - 1);
00006a  f7fffffe          BL       LCD_GetXSize
00006e  b221              SXTH     r1,r4
000070  1e40              SUBS     r0,r0,#1
000072  4288              CMP      r0,r1
000074  da04              BGE      |L1.128|
000076  f7fffffe          BL       LCD_GetXSize
00007a  1e40              SUBS     r0,r0,#1
00007c  f360040f          BFI      r4,r0,#0,#16
                  |L1.128|
;;;75         LCD_LIMIT(r.y1, >, LCD_GET_YSIZE() - 1);
000080  f7fffffe          BL       LCD_GetYSize
000084  1421              ASRS     r1,r4,#16
000086  1e40              SUBS     r0,r0,#1
000088  4288              CMP      r0,r1
00008a  da04              BGE      |L1.150|
00008c  f7fffffe          BL       LCD_GetYSize
000090  1e40              SUBS     r0,r0,#1
000092  f360441f          BFI      r4,r0,#16,#16
                  |L1.150|
000096  fa0ff884          SXTH     r8,r4
00009a  142e              ASRS     r6,r5,#16
00009c  ea4f4924          ASR      r9,r4,#16
;;;76         XMax = r.x1;
;;;77         for (y = r.y0; y <= r.y1; y++) {
0000a0  e01e              B        |L1.224|
                  |L1.162|
0000a2  b22c              SXTH     r4,r5
;;;78           int x = r.x0;
;;;79           LCD_PIXELINDEX* pData = (LCD_PIXELINDEX*)GUI_MEMDEV__XY2PTR(x,y);
0000a4  4631              MOV      r1,r6
0000a6  4620              MOV      r0,r4
0000a8  f7fffffe          BL       GUI_MEMDEV__XY2PTR
0000ac  4607              MOV      r7,r0
;;;80           if (pUsage) 
0000ae  f1ba0f00          CMP      r10,#0
0000b2  d012              BEQ      |L1.218|
;;;81             GUI_USAGE_AddHLine(pUsage, x, y, r.x1 - r.x0 + 1);
0000b4  f8da0008          LDR      r0,[r10,#8]
0000b8  eba80304          SUB      r3,r8,r4
0000bc  4621              MOV      r1,r4                 ;80
0000be  f8d0c004          LDR      r12,[r0,#4]
0000c2  4632              MOV      r2,r6
0000c4  4650              MOV      r0,r10
0000c6  1c5b              ADDS     r3,r3,#1
0000c8  47e0              BLX      r12
0000ca  e006              B        |L1.218|
                  |L1.204|
;;;82           for (; x <= XMax; x++) {
;;;83             *pData++ = LCD_L0_GetPixelIndex(x, y);
0000cc  4631              MOV      r1,r6
0000ce  4620              MOV      r0,r4
0000d0  f7fffffe          BL       LCD_L0_GetPixelIndex
0000d4  f8270b02          STRH     r0,[r7],#2
0000d8  1c64              ADDS     r4,r4,#1
                  |L1.218|
0000da  4544              CMP      r4,r8                 ;82
0000dc  ddf6              BLE      |L1.204|
0000de  1c76              ADDS     r6,r6,#1              ;82
                  |L1.224|
0000e0  45b1              CMP      r9,r6                 ;77
0000e2  dade              BGE      |L1.162|
;;;84           }
;;;85         }
;;;86         GUI_MEMDEV_Select(hMemOld);
0000e4  4658              MOV      r0,r11
0000e6  e8bd5ff0          POP      {r4-r12,lr}
0000ea  f7ffbffe          B.W      GUI_MEMDEV_Select
                  |L1.238|
;;;87       }
;;;88     }
0000ee  e8bd9ff0          POP      {r4-r12,pc}
;;;89     
                          ENDP

0000f2  0000              DCW      0x0000
                  |L1.244|
                          DCD      GUI_Context
