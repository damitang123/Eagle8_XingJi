; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gb2312ex.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gb2312ex.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI_X\GB2312Ex.c]
                          THUMB

                          AREA ||i.Extern_FLASH_Read_GBK_FontImage||, CODE, READONLY, ALIGN=2

                  Extern_FLASH_Read_GBK_FontImage PROC
;;;96     
;;;97     void Extern_FLASH_Read_GBK_FontImage(U16 ch)
000000  b510              PUSH     {r4,lr}
;;;98     {
;;;99     	DWORD_VAL     glyphOffset;
;;;100    	if(ch < 0x1000)
000002  f5b05f80          CMP      r0,#0x1000
000006  d208              BCS      |L1.26|
;;;101    	{
;;;102    		//	imageSize = 16;	/*字体矩阵大小*/
;;;103    		glyphOffset.Val = ch * 16L + 1048576L;	/*字体矩阵相对基地址的偏移量*/
000008  f44f1180          MOV      r1,#0x100000
00000c  eb011400          ADD      r4,r1,r0,LSL #4
;;;104    		//	pParam->chGlyphWidth = 0x08;/*字体宽度---注意此时是定宽*/
;;;105    		Spi_Flash_Init();
000010  f7fffffe          BL       Spi_Flash_Init
;;;106    		Flash_Read_Array_For_Ex_Font(glyphOffset.Val, acGB2132_En, 16);
000014  2210              MOVS     r2,#0x10
000016  4912              LDR      r1,|L1.96|
;;;107    		Spi_Flash_DeInit();
000018  e019              B        |L1.78|
                  |L1.26|
;;;108    	}
;;;109    	else if((ch >> 8) >= 0x81)
00001a  2181              MOVS     r1,#0x81
00001c  ebb12f10          CMP      r1,r0,LSR #8
000020  d81c              BHI      |L1.92|
;;;110    	{
;;;111    		//	imageSize = 32;
;;;112    		glyphOffset.Val = (((ch >> 8) - 129) * 190 + (ch & 0xFF) - 64 - ((ch & 0xFF) >> 7)) * 32L + 65536L + 1048576L;
000022  f06f0280          MVN      r2,#0x80
000026  eb022210          ADD      r2,r2,r0,LSR #8
00002a  b2c1              UXTB     r1,r0
00002c  ebc21342          RSB      r3,r2,r2,LSL #5
000030  eb031282          ADD      r2,r3,r2,LSL #6
000034  eb010142          ADD      r1,r1,r2,LSL #1
000038  f3c010c0          UBFX     r0,r0,#7,#1
00003c  1a08              SUBS     r0,r1,r0
00003e  4909              LDR      r1,|L1.100|
000040  eb011440          ADD      r4,r1,r0,LSL #5
;;;113    		//	pParam->chGlyphWidth = 0x10;
;;;114    		Spi_Flash_Init();
000044  f7fffffe          BL       Spi_Flash_Init
;;;115    		Flash_Read_Array_For_Ex_Font(glyphOffset.Val, acGB2132_Cn, 32);
000048  4905              LDR      r1,|L1.96|
00004a  2220              MOVS     r2,#0x20
00004c  3110              ADDS     r1,r1,#0x10
                  |L1.78|
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       Flash_Read_Array_For_Ex_Font
;;;116    		Spi_Flash_DeInit();
000054  e8bd4010          POP      {r4,lr}
000058  f7ffbffe          B.W      Spi_Flash_DeInit
                  |L1.92|
;;;117    	}
;;;118    
;;;119    
;;;120    
;;;121    }
00005c  bd10              POP      {r4,pc}
;;;122    
                          ENDP

00005e  0000              DCW      0x0000
                  |L1.96|
                          DCD      ||.bss||
                  |L1.100|
                          DCD      0x0010f800

                          AREA ||i._DispLine_GB2312||, CODE, READONLY, ALIGN=1

                  _DispLine_GB2312 PROC
;;;63     
;;;64     static void _DispLine_GB2312(const char GUI_UNI_PTR *s, int Len)
000000  b570              PUSH     {r4-r6,lr}
;;;65     {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;66     	U8 c0;
;;;67     	while (--Len >= 0)
;;;68     	{
;;;69     		c0 = *(const U8 *)s++;
;;;70     		if (c0 > 127)
;;;71     		{
;;;72     			U8  c1 = *(const U8 *)s++;
;;;73     			Len--;
;;;74     			GL_DispChar (DB2S_GB2312(c0, c1));
;;;75     		}
;;;76     		else
;;;77     		{
;;;78     			GL_DispChar(c0);
000006  e00a              B        |L2.30|
                  |L2.8|
000008  f8140b01          LDRB     r0,[r4],#1            ;69
00000c  287f              CMP      r0,#0x7f              ;70
00000e  d904              BLS      |L2.26|
000010  f8141b01          LDRB     r1,[r4],#1            ;72
000014  1e6d              SUBS     r5,r5,#1              ;72
000016  ea412000          ORR      r0,r1,r0,LSL #8       ;72
                  |L2.26|
00001a  f7fffffe          BL       GL_DispChar
                  |L2.30|
00001e  1e6d              SUBS     r5,r5,#1
000020  d5f2              BPL      |L2.8|
;;;79     		}
;;;80     	}
;;;81     }
000022  bd70              POP      {r4-r6,pc}
;;;82     
                          ENDP


                          AREA ||i._GetLineDistX_GB2312||, CODE, READONLY, ALIGN=1

                  _GetLineDistX_GB2312 PROC
;;;13     
;;;14     static int _GetLineDistX_GB2312(const char GUI_UNI_PTR *s, int Len)
000000  b570              PUSH     {r4-r6,lr}
;;;15     {
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
;;;16     	int Dist = 0;
000006  f04f0600          MOV      r6,#0
00000a  d10c              BNE      |L3.38|
00000c  e00f              B        |L3.46|
                  |L3.14|
00000e  1c64              ADDS     r4,r4,#1              ;15
000010  1e6d              SUBS     r5,r5,#1              ;15
;;;17     	if (s)
;;;18     	{
;;;19     		U8 c0;
;;;20     		while (((c0 = *(const U8 *)s) != 0) && Len >= 0)
;;;21     		{
;;;22     			s++;
;;;23     			Len--;
;;;24     			if (c0 > 127)
000012  287f              CMP      r0,#0x7f
000014  d904              BLS      |L3.32|
;;;25     			{
;;;26     				U8  c1 = *(const U8 *)s++;
000016  f8141b01          LDRB     r1,[r4],#1
00001a  1e6d              SUBS     r5,r5,#1
00001c  ea412000          ORR      r0,r1,r0,LSL #8
                  |L3.32|
;;;27     				Len--;
;;;28     				Dist += GUI_GetCharDistX(DB2S_GB2312(c0, c1));
;;;29     			}
;;;30     			else
;;;31     			{
;;;32     				Dist += GUI_GetCharDistX(c0);
000020  f7fffffe          BL       GUI_GetCharDistX
000024  4406              ADD      r6,r6,r0
                  |L3.38|
000026  7820              LDRB     r0,[r4,#0]            ;20
000028  b108              CBZ      r0,|L3.46|
00002a  2d00              CMP      r5,#0                 ;20
00002c  daef              BGE      |L3.14|
                  |L3.46|
;;;33     			}
;;;34     		}
;;;35     	}
;;;36     	return Dist;
00002e  4630              MOV      r0,r6
;;;37     }
000030  bd70              POP      {r4-r6,pc}
;;;38     
                          ENDP


                          AREA ||i._GetLineLen_GB2312||, CODE, READONLY, ALIGN=1

                  _GetLineLen_GB2312 PROC
;;;38     
;;;39     static int _GetLineLen_GB2312(const char GUI_UNI_PTR *s, int MaxLen)
000000  4602              MOV      r2,r0
;;;40     {
;;;41     	int Len = 0;
000002  2000              MOVS     r0,#0
000004  e008              B        |L4.24|
                  |L4.6|
000006  1c52              ADDS     r2,r2,#1              ;40
;;;42     	U8 c0;
;;;43     	while (((c0 = *(const U8 *)s) != 0) && Len < MaxLen)
;;;44     	{
;;;45     		s++;
;;;46     		if (c0 > 127)
000008  2b7f              CMP      r3,#0x7f
00000a  d902              BLS      |L4.18|
00000c  1c40              ADDS     r0,r0,#1
00000e  1c52              ADDS     r2,r2,#1
;;;47     		{
;;;48     			Len++;
;;;49     			s++;
000010  e001              B        |L4.22|
                  |L4.18|
;;;50     		}
;;;51     		else
;;;52     		{
;;;53     			switch (c0)
000012  2b0a              CMP      r3,#0xa
000014  d005              BEQ      |L4.34|
                  |L4.22|
000016  1c40              ADDS     r0,r0,#1
                  |L4.24|
000018  7813              LDRB     r3,[r2,#0]            ;43
00001a  2b00              CMP      r3,#0                 ;43
00001c  d001              BEQ      |L4.34|
00001e  4288              CMP      r0,r1                 ;43
000020  dbf1              BLT      |L4.6|
                  |L4.34|
;;;54     			{
;;;55     				case '\n':
;;;56     					return Len;
;;;57     			}
;;;58     		}
;;;59     		Len++;
;;;60     	}
;;;61     	return Len;
;;;62     }
000022  4770              BX       lr
;;;63     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  acGB2132_En
                          %        16
                  acGB2132_Cn
                          %        32

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_ENC_APIList_GB2312
                          DCD      _GetLineDistX_GB2312
                          DCD      _GetLineLen_GB2312
                          DCD      _DispLine_GB2312

                          AREA ||area_number.9||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.constdata||
                  Font16_GB2312_CharInfo
000000  08080100          DCB      0x08,0x08,0x01,0x00
                          DCD      acGB2132_En
000008  10100200          DCB      0x10,0x10,0x02,0x00
                          DCD      acGB2132_Cn

                          AREA ||area_number.10||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.constdata||
                  GUI_Font16_GB2312_Prop
000000  a1a1fefe          DCW      0xa1a1,0xfefe
                          DCD      Font16_GB2312_CharInfo
                          DCD      0x00000000

                          AREA ||area_number.11||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.constdata||
                  GUI_Font16_GB2312
                          DCD      GUIPROP_DispChar
                          DCD      GUIPROP_GetCharDistX
                          DCD      GUIPROP_GetFontInfo
                          DCD      GUIPROP_IsInFont
                          DCD      GUI_ENC_APIList_GB2312
000014  10100101          DCB      0x10,0x10,0x01,0x01
                          DCD      GUI_Font16_GB2312_Prop
00001c  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||area_number.12||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.constdata||
                  GUI_Font16_GB2312_2SIZE
                          DCD      GUIPROP_DispChar
                          DCD      GUIPROP_GetCharDistX
                          DCD      GUIPROP_GetFontInfo
                          DCD      GUIPROP_IsInFont
                          DCD      GUI_ENC_APIList_GB2312
000014  10100202          DCB      0x10,0x10,0x02,0x02
                          DCD      GUI_Font16_GB2312_Prop
00001c  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  GUI_Font_FLASH
                          DCD      GUIPROP_DispChar
                          DCD      GUIPROP_GetCharDistX
                          DCD      GUIPROP_GetFontInfo
                          DCD      GUIPROP_IsInFont
                          DCD      GUI_ENC_APIList_GB2312
000014  10100101          DCB      0x10,0x10,0x01,0x01
                          DCD      GUI_Font16_GB2312_Prop
00001c  00000000          DCB      0x00,0x00,0x00,0x00
