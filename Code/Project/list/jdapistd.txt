; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\jdapistd.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\jdapistd.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\JPEG\jdapistd.c]
                          THUMB

                          AREA ||i.jpeg_finish_output||, CODE, READONLY, ALIGN=1

                  jpeg_finish_output PROC
;;;252    GLOBAL(boolean)
;;;253    jpeg_finish_output (j_decompress_ptr cinfo)
000000  b510              PUSH     {r4,lr}
;;;254    {
000002  4604              MOV      r4,r0
;;;255      if ((cinfo->global_state == DSTATE_SCANNING ||
000004  6940              LDR      r0,[r0,#0x14]
000006  28cd              CMP      r0,#0xcd
000008  d001              BEQ      |L1.14|
;;;256           cinfo->global_state == DSTATE_RAW_OK) && cinfo->buffered_image) {
00000a  28ce              CMP      r0,#0xce
00000c  d109              BNE      |L1.34|
                  |L1.14|
00000e  6c21              LDR      r1,[r4,#0x40]
000010  b139              CBZ      r1,|L1.34|
;;;257        /* Terminate this pass. */
;;;258        /* We do not require the whole pass to have been completed. */
;;;259        (*cinfo->master->finish_output_pass) (cinfo);
000012  f8d401a4          LDR      r0,[r4,#0x1a4]
000016  6841              LDR      r1,[r0,#4]
000018  4620              MOV      r0,r4
00001a  4788              BLX      r1
;;;260        cinfo->global_state = DSTATE_BUFPOST;
00001c  20d0              MOVS     r0,#0xd0
00001e  6160              STR      r0,[r4,#0x14]
000020  e011              B        |L1.70|
                  |L1.34|
;;;261      } else if (cinfo->global_state != DSTATE_BUFPOST) {
000022  28d0              CMP      r0,#0xd0
000024  d00f              BEQ      |L1.70|
;;;262        /* BUFPOST = repeat call after a suspension, anything else is error */
;;;263        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
000026  6821              LDR      r1,[r4,#0]
000028  2014              MOVS     r0,#0x14
00002a  6148              STR      r0,[r1,#0x14]
00002c  6821              LDR      r1,[r4,#0]
00002e  6960              LDR      r0,[r4,#0x14]
000030  6188              STR      r0,[r1,#0x18]
000032  6820              LDR      r0,[r4,#0]
000034  6801              LDR      r1,[r0,#0]
000036  4620              MOV      r0,r4
000038  4788              BLX      r1
00003a  e004              B        |L1.70|
                  |L1.60|
;;;264      }
;;;265      /* Read markers looking for SOS or EOI */
;;;266      while (cinfo->input_scan_number <= cinfo->output_scan_number &&
;;;267    	 ! cinfo->inputctl->eoi_reached) {
;;;268        if ((*cinfo->inputctl->consume_input) (cinfo) == JPEG_SUSPENDED)
00003c  6801              LDR      r1,[r0,#0]
00003e  4620              MOV      r0,r4
000040  4788              BLX      r1
000042  2800              CMP      r0,#0
000044  d00d              BEQ      |L1.98|
                  |L1.70|
000046  f8d41098          LDR      r1,[r4,#0x98]         ;266
00004a  f8d40090          LDR      r0,[r4,#0x90]         ;266
00004e  4288              CMP      r0,r1                 ;266
000050  dc04              BGT      |L1.92|
000052  f8d401b4          LDR      r0,[r4,#0x1b4]        ;267
000056  6941              LDR      r1,[r0,#0x14]         ;267
000058  2900              CMP      r1,#0                 ;267
00005a  d0ef              BEQ      |L1.60|
                  |L1.92|
;;;269          return FALSE;		/* Suspend, come back later */
;;;270      }
;;;271      cinfo->global_state = DSTATE_BUFIMAGE;
00005c  20cf              MOVS     r0,#0xcf
;;;272      return TRUE;
00005e  6160              STR      r0,[r4,#0x14]
000060  2001              MOVS     r0,#1
                  |L1.98|
;;;273    }
000062  bd10              POP      {r4,pc}
;;;274    
                          ENDP


                          AREA ||i.jpeg_read_raw_data||, CODE, READONLY, ALIGN=1

                  jpeg_read_raw_data PROC
;;;184    GLOBAL(JDIMENSION)
;;;185    jpeg_read_raw_data (j_decompress_ptr cinfo, JSAMPIMAGE data,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;186    		    JDIMENSION max_lines)
;;;187    {
000004  4604              MOV      r4,r0
;;;188      JDIMENSION lines_per_iMCU_row;
;;;189    
;;;190      if (cinfo->global_state != DSTATE_RAW_OK)
000006  6940              LDR      r0,[r0,#0x14]
000008  4616              MOV      r6,r2                 ;187
00000a  460f              MOV      r7,r1                 ;187
00000c  28ce              CMP      r0,#0xce
00000e  d009              BEQ      |L2.36|
;;;191        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
000010  6821              LDR      r1,[r4,#0]
000012  2014              MOVS     r0,#0x14
000014  6148              STR      r0,[r1,#0x14]
000016  6821              LDR      r1,[r4,#0]
000018  6960              LDR      r0,[r4,#0x14]
00001a  6188              STR      r0,[r1,#0x18]
00001c  6820              LDR      r0,[r4,#0]
00001e  6801              LDR      r1,[r0,#0]
000020  4620              MOV      r0,r4
000022  4788              BLX      r1
                  |L2.36|
;;;192      if (cinfo->output_scanline >= cinfo->output_height) {
000024  f8d4108c          LDR      r1,[r4,#0x8c]
000028  6f60              LDR      r0,[r4,#0x74]
00002a  4281              CMP      r1,r0
00002c  d30b              BCC      |L2.70|
;;;193        WARNMS(cinfo, JWRN_TOO_MUCH_DATA);
00002e  6821              LDR      r1,[r4,#0]
000030  207b              MOVS     r0,#0x7b
000032  6148              STR      r0,[r1,#0x14]
000034  6820              LDR      r0,[r4,#0]
000036  f04f31ff          MOV      r1,#0xffffffff
00003a  6842              LDR      r2,[r0,#4]
00003c  4620              MOV      r0,r4
00003e  4790              BLX      r2
;;;194        return 0;
000040  2000              MOVS     r0,#0
                  |L2.66|
;;;195      }
;;;196    
;;;197      /* Call progress monitor hook if present */
;;;198      if (cinfo->progress != NULL) {
;;;199        cinfo->progress->pass_counter = (long) cinfo->output_scanline;
;;;200        cinfo->progress->pass_limit = (long) cinfo->output_height;
;;;201        (*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
;;;202      }
;;;203    
;;;204      /* Verify that at least one iMCU row can be returned. */
;;;205      lines_per_iMCU_row = cinfo->max_v_samp_factor * cinfo->min_DCT_scaled_size;
;;;206      if (max_lines < lines_per_iMCU_row)
;;;207        ERREXIT(cinfo, JERR_BUFFER_SIZE);
;;;208    
;;;209      /* Decompress directly into user's buffer. */
;;;210      if (! (*cinfo->coef->decompress_data) (cinfo, data))
;;;211        return 0;			/* suspension forced, can do nothing more */
;;;212    
;;;213      /* OK, we processed one iMCU row. */
;;;214      cinfo->output_scanline += lines_per_iMCU_row;
;;;215      return lines_per_iMCU_row;
;;;216    }
000042  e8bd81f0          POP      {r4-r8,pc}
                  |L2.70|
000046  68a0              LDR      r0,[r4,#8]            ;198
000048  b138              CBZ      r0,|L2.90|
00004a  6041              STR      r1,[r0,#4]            ;200
00004c  68a1              LDR      r1,[r4,#8]            ;200
00004e  6f60              LDR      r0,[r4,#0x74]         ;200
000050  6088              STR      r0,[r1,#8]            ;201
000052  68a0              LDR      r0,[r4,#8]            ;201
000054  6801              LDR      r1,[r0,#0]            ;201
000056  4620              MOV      r0,r4                 ;201
000058  4788              BLX      r1                    ;201
                  |L2.90|
00005a  e9d4504e          LDRD     r5,r0,[r4,#0x138]     ;201
00005e  4345              MULS     r5,r0,r5              ;205
000060  42ae              CMP      r6,r5                 ;206
000062  d206              BCS      |L2.114|
000064  6821              LDR      r1,[r4,#0]            ;207
000066  2017              MOVS     r0,#0x17              ;207
000068  6148              STR      r0,[r1,#0x14]         ;207
00006a  6820              LDR      r0,[r4,#0]            ;207
00006c  6801              LDR      r1,[r0,#0]            ;207
00006e  4620              MOV      r0,r4                 ;207
000070  4788              BLX      r1                    ;207
                  |L2.114|
000072  f8d401ac          LDR      r0,[r4,#0x1ac]        ;210
000076  4639              MOV      r1,r7                 ;210
000078  68c2              LDR      r2,[r0,#0xc]          ;210
00007a  4620              MOV      r0,r4                 ;210
00007c  4790              BLX      r2                    ;210
00007e  2800              CMP      r0,#0                 ;210
000080  d0df              BEQ      |L2.66|
000082  f8540f8c          LDR      r0,[r4,#0x8c]!        ;214
000086  4428              ADD      r0,r0,r5              ;214
000088  6020              STR      r0,[r4,#0]            ;215
00008a  4628              MOV      r0,r5                 ;215
00008c  e7d9              B        |L2.66|
;;;217    
                          ENDP


                          AREA ||i.jpeg_read_scanlines||, CODE, READONLY, ALIGN=1

                  jpeg_read_scanlines PROC
;;;151    GLOBAL(JDIMENSION)
;;;152    jpeg_read_scanlines (j_decompress_ptr cinfo, JSAMPARRAY scanlines,
000000  b5f8              PUSH     {r3-r7,lr}
;;;153    		     JDIMENSION max_lines)
;;;154    {
000002  4604              MOV      r4,r0
;;;155      JDIMENSION row_ctr;
;;;156    
;;;157      if (cinfo->global_state != DSTATE_SCANNING)
000004  6940              LDR      r0,[r0,#0x14]
000006  4616              MOV      r6,r2                 ;154
000008  460f              MOV      r7,r1                 ;154
00000a  28cd              CMP      r0,#0xcd
00000c  d009              BEQ      |L3.34|
;;;158        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
00000e  6821              LDR      r1,[r4,#0]
000010  2014              MOVS     r0,#0x14
000012  6148              STR      r0,[r1,#0x14]
000014  6821              LDR      r1,[r4,#0]
000016  6960              LDR      r0,[r4,#0x14]
000018  6188              STR      r0,[r1,#0x18]
00001a  6820              LDR      r0,[r4,#0]
00001c  6801              LDR      r1,[r0,#0]
00001e  4620              MOV      r0,r4
000020  4788              BLX      r1
                  |L3.34|
;;;159      if (cinfo->output_scanline >= cinfo->output_height) {
000022  f8d4108c          LDR      r1,[r4,#0x8c]
000026  6f60              LDR      r0,[r4,#0x74]
000028  4281              CMP      r1,r0
00002a  d30a              BCC      |L3.66|
;;;160        WARNMS(cinfo, JWRN_TOO_MUCH_DATA);
00002c  6821              LDR      r1,[r4,#0]
00002e  207b              MOVS     r0,#0x7b
000030  6148              STR      r0,[r1,#0x14]
000032  6820              LDR      r0,[r4,#0]
000034  f04f31ff          MOV      r1,#0xffffffff
000038  6842              LDR      r2,[r0,#4]
00003a  4620              MOV      r0,r4
00003c  4790              BLX      r2
;;;161        return 0;
00003e  2000              MOVS     r0,#0
;;;162      }
;;;163    
;;;164      /* Call progress monitor hook if present */
;;;165      if (cinfo->progress != NULL) {
;;;166        cinfo->progress->pass_counter = (long) cinfo->output_scanline;
;;;167        cinfo->progress->pass_limit = (long) cinfo->output_height;
;;;168        (*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
;;;169      }
;;;170    
;;;171      /* Process some data */
;;;172      row_ctr = 0;
;;;173      (*cinfo->main->process_data) (cinfo, scanlines, &row_ctr, max_lines);
;;;174      cinfo->output_scanline += row_ctr;
;;;175      return row_ctr;
;;;176    }
000040  bdf8              POP      {r3-r7,pc}
                  |L3.66|
000042  68a0              LDR      r0,[r4,#8]            ;165
000044  b138              CBZ      r0,|L3.86|
000046  6041              STR      r1,[r0,#4]            ;167
000048  68a1              LDR      r1,[r4,#8]            ;167
00004a  6f60              LDR      r0,[r4,#0x74]         ;167
00004c  6088              STR      r0,[r1,#8]            ;168
00004e  68a0              LDR      r0,[r4,#8]            ;168
000050  6801              LDR      r1,[r0,#0]            ;168
000052  4620              MOV      r0,r4                 ;168
000054  4788              BLX      r1                    ;168
                  |L3.86|
000056  2000              MOVS     r0,#0                 ;172
000058  9000              STR      r0,[sp,#0]            ;173
00005a  f8d401a8          LDR      r0,[r4,#0x1a8]        ;173
00005e  4633              MOV      r3,r6                 ;173
000060  466a              MOV      r2,sp                 ;173
000062  6845              LDR      r5,[r0,#4]            ;173
000064  4639              MOV      r1,r7                 ;173
000066  4620              MOV      r0,r4                 ;173
000068  47a8              BLX      r5                    ;173
00006a  f8541f8c          LDR      r1,[r4,#0x8c]!        ;174
00006e  9800              LDR      r0,[sp,#0]            ;174
000070  4401              ADD      r1,r1,r0              ;174
000072  6021              STR      r1,[r4,#0]            ;174
000074  bdf8              POP      {r3-r7,pc}
;;;177    
                          ENDP


                          AREA ||i.jpeg_start_decompress||, CODE, READONLY, ALIGN=1

                  jpeg_start_decompress PROC
;;;37     GLOBAL(boolean)
;;;38     jpeg_start_decompress (j_decompress_ptr cinfo)
000000  b510              PUSH     {r4,lr}
;;;39     {
000002  4604              MOV      r4,r0
;;;40       if (cinfo->global_state == DSTATE_READY) {
000004  6940              LDR      r0,[r0,#0x14]
000006  28ca              CMP      r0,#0xca
000008  d012              BEQ      |L4.48|
;;;41         /* First call: initialize master control, select active modules */
;;;42         jinit_master_decompress(cinfo);
;;;43         if (cinfo->buffered_image) {
;;;44           /* No more work here; expecting jpeg_start_output next */
;;;45           cinfo->global_state = DSTATE_BUFIMAGE;
;;;46           return TRUE;
;;;47         }
;;;48         cinfo->global_state = DSTATE_PRELOAD;
;;;49       }
;;;50       if (cinfo->global_state == DSTATE_PRELOAD) {
00000a  28cb              CMP      r0,#0xcb
00000c  d01b              BEQ      |L4.70|
;;;51         /* If file has multiple scans, absorb them all into the coef buffer */
;;;52         if (cinfo->inputctl->has_multiple_scans) {
;;;53     #ifdef D_MULTISCAN_FILES_SUPPORTED
;;;54           while (1) {
;;;55     	int retcode;
;;;56     	/* Call progress monitor hook if present */
;;;57     	if (cinfo->progress != NULL)
;;;58     	  (*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
;;;59     	/* Absorb some more input */
;;;60     	retcode = (*cinfo->inputctl->consume_input) (cinfo);
;;;61     	if (retcode == JPEG_SUSPENDED)
;;;62     	  return FALSE;
;;;63     	if (retcode == JPEG_REACHED_EOI)
;;;64     	  break;
;;;65     	/* Advance progress counter if appropriate */
;;;66     	if (cinfo->progress != NULL &&
;;;67     	    (retcode == JPEG_ROW_COMPLETED || retcode == JPEG_REACHED_SOS)) {
;;;68     	  if (++cinfo->progress->pass_counter >= cinfo->progress->pass_limit) {
;;;69     	    /* jdmaster underestimated number of scans; ratchet up one scan */
;;;70     	    cinfo->progress->pass_limit += (long) cinfo->total_iMCU_rows;
;;;71     	  }
;;;72     	}
;;;73           }
;;;74     #else
;;;75           ERREXIT(cinfo, JERR_NOT_COMPILED);
;;;76     #endif /* D_MULTISCAN_FILES_SUPPORTED */
;;;77         }
;;;78         cinfo->output_scan_number = cinfo->input_scan_number;
;;;79       } else if (cinfo->global_state != DSTATE_PRESCAN)
00000e  28cc              CMP      r0,#0xcc
000010  d009              BEQ      |L4.38|
;;;80         ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
000012  6821              LDR      r1,[r4,#0]
000014  2014              MOVS     r0,#0x14
000016  6148              STR      r0,[r1,#0x14]
000018  6821              LDR      r1,[r4,#0]
00001a  6960              LDR      r0,[r4,#0x14]
00001c  6188              STR      r0,[r1,#0x18]
00001e  6820              LDR      r0,[r4,#0]
000020  6801              LDR      r1,[r0,#0]
000022  4620              MOV      r0,r4
000024  4788              BLX      r1
                  |L4.38|
;;;81       /* Perform any dummy output passes, and set up for the final pass */
;;;82       return output_pass_setup(cinfo);
000026  4620              MOV      r0,r4
000028  e8bd4010          POP      {r4,lr}
00002c  f7ffbffe          B.W      output_pass_setup
                  |L4.48|
000030  4620              MOV      r0,r4                 ;42
000032  f7fffffe          BL       jinit_master_decompress
000036  6c20              LDR      r0,[r4,#0x40]         ;43
000038  b118              CBZ      r0,|L4.66|
00003a  20cf              MOVS     r0,#0xcf              ;45
00003c  6160              STR      r0,[r4,#0x14]         ;46
00003e  2001              MOVS     r0,#1                 ;46
                  |L4.64|
;;;83     }
000040  bd10              POP      {r4,pc}
                  |L4.66|
000042  20cb              MOVS     r0,#0xcb              ;48
000044  6160              STR      r0,[r4,#0x14]         ;48
                  |L4.70|
000046  f8d401b4          LDR      r0,[r4,#0x1b4]        ;52
00004a  6900              LDR      r0,[r0,#0x10]         ;52
00004c  b300              CBZ      r0,|L4.144|
                  |L4.78|
00004e  68a0              LDR      r0,[r4,#8]            ;57
000050  b110              CBZ      r0,|L4.88|
000052  6801              LDR      r1,[r0,#0]            ;58
000054  4620              MOV      r0,r4                 ;58
000056  4788              BLX      r1                    ;58
                  |L4.88|
000058  f8d401b4          LDR      r0,[r4,#0x1b4]        ;60
00005c  6801              LDR      r1,[r0,#0]            ;60
00005e  4620              MOV      r0,r4                 ;60
000060  4788              BLX      r1                    ;60
000062  2800              CMP      r0,#0                 ;61
000064  d0ec              BEQ      |L4.64|
000066  2802              CMP      r0,#2                 ;63
000068  d012              BEQ      |L4.144|
00006a  68a1              LDR      r1,[r4,#8]            ;66
00006c  2900              CMP      r1,#0                 ;66
00006e  d0ee              BEQ      |L4.78|
000070  2803              CMP      r0,#3                 ;67
000072  d001              BEQ      |L4.120|
000074  2801              CMP      r0,#1                 ;67
000076  d1ea              BNE      |L4.78|
                  |L4.120|
000078  684a              LDR      r2,[r1,#4]            ;68
00007a  1c52              ADDS     r2,r2,#1              ;68
00007c  604a              STR      r2,[r1,#4]            ;68
00007e  68a1              LDR      r1,[r4,#8]            ;68
000080  6888              LDR      r0,[r1,#8]            ;68
000082  4282              CMP      r2,r0                 ;68
000084  dbe3              BLT      |L4.78|
000086  f8d42140          LDR      r2,[r4,#0x140]        ;70
00008a  4410              ADD      r0,r0,r2              ;70
00008c  6088              STR      r0,[r1,#8]            ;70
00008e  e7de              B        |L4.78|
                  |L4.144|
000090  f8d40090          LDR      r0,[r4,#0x90]         ;78
000094  f8c40098          STR      r0,[r4,#0x98]         ;78
000098  e7c5              B        |L4.38|
;;;84     
                          ENDP


                          AREA ||i.jpeg_start_output||, CODE, READONLY, ALIGN=1

                  jpeg_start_output PROC
;;;227    GLOBAL(boolean)
;;;228    jpeg_start_output (j_decompress_ptr cinfo, int scan_number)
000000  b570              PUSH     {r4-r6,lr}
;;;229    {
000002  4604              MOV      r4,r0
;;;230      if (cinfo->global_state != DSTATE_BUFIMAGE &&
000004  6940              LDR      r0,[r0,#0x14]
000006  460d              MOV      r5,r1                 ;229
000008  28cf              CMP      r0,#0xcf
00000a  d00b              BEQ      |L5.36|
;;;231          cinfo->global_state != DSTATE_PRESCAN)
00000c  28cc              CMP      r0,#0xcc
00000e  d009              BEQ      |L5.36|
;;;232        ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
000010  6821              LDR      r1,[r4,#0]
000012  2014              MOVS     r0,#0x14
000014  6148              STR      r0,[r1,#0x14]
000016  6821              LDR      r1,[r4,#0]
000018  6960              LDR      r0,[r4,#0x14]
00001a  6188              STR      r0,[r1,#0x18]
00001c  6820              LDR      r0,[r4,#0]
00001e  6801              LDR      r1,[r0,#0]
000020  4620              MOV      r0,r4
000022  4788              BLX      r1
                  |L5.36|
;;;233      /* Limit scan number to valid range */
;;;234      if (scan_number <= 0)
000024  2d00              CMP      r5,#0
000026  dc00              BGT      |L5.42|
;;;235        scan_number = 1;
000028  2501              MOVS     r5,#1
                  |L5.42|
;;;236      if (cinfo->inputctl->eoi_reached &&
00002a  f8d401b4          LDR      r0,[r4,#0x1b4]
00002e  6940              LDR      r0,[r0,#0x14]
000030  b120              CBZ      r0,|L5.60|
;;;237          scan_number > cinfo->input_scan_number)
000032  f8d40090          LDR      r0,[r4,#0x90]
000036  42a8              CMP      r0,r5
000038  da00              BGE      |L5.60|
;;;238        scan_number = cinfo->input_scan_number;
00003a  4605              MOV      r5,r0
                  |L5.60|
;;;239      cinfo->output_scan_number = scan_number;
;;;240      /* Perform any dummy output passes, and set up for the real pass */
;;;241      return output_pass_setup(cinfo);
00003c  4620              MOV      r0,r4
00003e  f8c45098          STR      r5,[r4,#0x98]
000042  e8bd4070          POP      {r4-r6,lr}
000046  f7ffbffe          B.W      output_pass_setup
;;;242    }
;;;243    
                          ENDP


                          AREA ||i.output_pass_setup||, CODE, READONLY, ALIGN=1

                  output_pass_setup PROC
;;;94     LOCAL(boolean)
;;;95     output_pass_setup (j_decompress_ptr cinfo)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;96     {
000004  4604              MOV      r4,r0
;;;97       if (cinfo->global_state != DSTATE_PRESCAN) {
000006  6940              LDR      r0,[r0,#0x14]
000008  2600              MOVS     r6,#0
00000a  28cc              CMP      r0,#0xcc
00000c  d036              BEQ      |L6.124|
;;;98         /* First call: do pass setup */
;;;99         (*cinfo->master->prepare_for_output_pass) (cinfo);
00000e  f8d401a4          LDR      r0,[r4,#0x1a4]
000012  6801              LDR      r1,[r0,#0]
000014  4620              MOV      r0,r4
000016  4788              BLX      r1
;;;100        cinfo->output_scanline = 0;
;;;101        cinfo->global_state = DSTATE_PRESCAN;
000018  20cc              MOVS     r0,#0xcc
00001a  f8c4608c          STR      r6,[r4,#0x8c]
00001e  6160              STR      r0,[r4,#0x14]
000020  e02c              B        |L6.124|
                  |L6.34|
;;;102      }
;;;103      /* Loop over any required dummy passes */
;;;104      while (cinfo->master->is_dummy_pass) {
;;;105    #ifdef QUANT_2PASS_SUPPORTED
;;;106        /* Crank through the dummy pass */
;;;107        while (cinfo->output_scanline < cinfo->output_height) {
;;;108          JDIMENSION last_scanline;
;;;109          /* Call progress monitor hook if present */
;;;110          if (cinfo->progress != NULL) {
000022  68a0              LDR      r0,[r4,#8]
000024  b138              CBZ      r0,|L6.54|
;;;111    	cinfo->progress->pass_counter = (long) cinfo->output_scanline;
;;;112    	cinfo->progress->pass_limit = (long) cinfo->output_height;
000026  6041              STR      r1,[r0,#4]
000028  68a1              LDR      r1,[r4,#8]
00002a  6f60              LDR      r0,[r4,#0x74]
;;;113    	(*cinfo->progress->progress_monitor) ((j_common_ptr) cinfo);
00002c  6088              STR      r0,[r1,#8]
00002e  68a0              LDR      r0,[r4,#8]
000030  6801              LDR      r1,[r0,#0]
000032  4620              MOV      r0,r4
000034  4788              BLX      r1
                  |L6.54|
;;;114          }
;;;115          /* Process some data */
;;;116          last_scanline = cinfo->output_scanline;
;;;117          (*cinfo->main->process_data) (cinfo, (JSAMPARRAY) NULL,
000036  f8d401a8          LDR      r0,[r4,#0x1a8]
00003a  2300              MOVS     r3,#0
00003c  f8d4508c          LDR      r5,[r4,#0x8c]
000040  6847              LDR      r7,[r0,#4]
000042  f104028c          ADD      r2,r4,#0x8c
000046  4619              MOV      r1,r3
000048  4620              MOV      r0,r4
00004a  47b8              BLX      r7
;;;118    				    &cinfo->output_scanline, (JDIMENSION) 0);
;;;119          if (cinfo->output_scanline == last_scanline)
00004c  f8d4008c          LDR      r0,[r4,#0x8c]
000050  42a8              CMP      r0,r5
000052  d102              BNE      |L6.90|
;;;120    	return FALSE;		/* No progress made, must suspend */
000054  2000              MOVS     r0,#0
                  |L6.86|
;;;121        }
;;;122        /* Finish up dummy pass, and set up for another one */
;;;123        (*cinfo->master->finish_output_pass) (cinfo);
;;;124        (*cinfo->master->prepare_for_output_pass) (cinfo);
;;;125        cinfo->output_scanline = 0;
;;;126    #else
;;;127        ERREXIT(cinfo, JERR_NOT_COMPILED);
;;;128    #endif /* QUANT_2PASS_SUPPORTED */
;;;129      }
;;;130      /* Ready for application to drive output pass through
;;;131       * jpeg_read_scanlines or jpeg_read_raw_data.
;;;132       */
;;;133      cinfo->global_state = cinfo->raw_data_out ? DSTATE_RAW_OK : DSTATE_SCANNING;
;;;134      return TRUE;
;;;135    }
000056  e8bd81f0          POP      {r4-r8,pc}
                  |L6.90|
00005a  f8d4108c          LDR      r1,[r4,#0x8c]         ;107
00005e  6f60              LDR      r0,[r4,#0x74]         ;107
000060  4281              CMP      r1,r0                 ;107
000062  d3de              BCC      |L6.34|
000064  f8d401a4          LDR      r0,[r4,#0x1a4]        ;123
000068  6841              LDR      r1,[r0,#4]            ;123
00006a  4620              MOV      r0,r4                 ;123
00006c  4788              BLX      r1                    ;123
00006e  f8d401a4          LDR      r0,[r4,#0x1a4]        ;124
000072  6801              LDR      r1,[r0,#0]            ;124
000074  4620              MOV      r0,r4                 ;124
000076  4788              BLX      r1                    ;124
000078  f8c4608c          STR      r6,[r4,#0x8c]         ;125
                  |L6.124|
00007c  f8d401a4          LDR      r0,[r4,#0x1a4]        ;104
000080  6880              LDR      r0,[r0,#8]            ;104
000082  2800              CMP      r0,#0                 ;104
000084  d1e9              BNE      |L6.90|
000086  6c60              LDR      r0,[r4,#0x44]         ;133
000088  b108              CBZ      r0,|L6.142|
00008a  20ce              MOVS     r0,#0xce              ;133
00008c  e000              B        |L6.144|
                  |L6.142|
00008e  20cd              MOVS     r0,#0xcd              ;133
                  |L6.144|
000090  6160              STR      r0,[r4,#0x14]         ;134
000092  2001              MOVS     r0,#1                 ;134
000094  e7df              B        |L6.86|
;;;136    
                          ENDP

