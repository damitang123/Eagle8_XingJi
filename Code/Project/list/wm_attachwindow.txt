; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\wm_attachwindow.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_attachwindow.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\WM\WM_AttachWindow.c]
                          THUMB

                          AREA ||i.WM_AttachWindow||, CODE, READONLY, ALIGN=1

                  WM_AttachWindow PROC
;;;55     */
;;;56     void WM_AttachWindow(WM_HWIN hWin, WM_HWIN hParent) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  000c              MOVS     r4,r1
000006  4606              MOV      r6,r0
000008  d01c              BEQ      |L1.68|
;;;57       WM_LOCK();
;;;58       if (hParent && (hParent != hWin)) {
00000a  42b4              CMP      r4,r6
00000c  d01a              BEQ      |L1.68|
;;;59         WM_Obj* pWin    = WM_H2P(hWin);
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4607              MOV      r7,r0
;;;60         WM_Obj* pParent = WM_H2P(hParent);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4605              MOV      r5,r0
;;;61         if (pWin->hParent != hParent) {
00001c  f9b70016          LDRSH    r0,[r7,#0x16]
000020  42a0              CMP      r0,r4
000022  d00f              BEQ      |L1.68|
;;;62           WM_DetachWindow(hWin);
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       WM_DetachWindow
;;;63           WM__InsertWindowIntoList(hWin, hParent);
00002a  4621              MOV      r1,r4
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       WM__InsertWindowIntoList
;;;64           WM_MoveWindow(hWin, pParent->Rect.x0,  pParent->Rect.y0);    /* Convert parent coordinates -> screen coordinates */
000032  f9b52002          LDRSH    r2,[r5,#2]
000036  f9b51000          LDRSH    r1,[r5,#0]
00003a  4630              MOV      r0,r6
00003c  e8bd41f0          POP      {r4-r8,lr}
000040  f7ffbffe          B.W      WM_MoveWindow
                  |L1.68|
;;;65         }
;;;66       }
;;;67       WM_UNLOCK();
;;;68     }
000044  e8bd81f0          POP      {r4-r8,pc}
;;;69     
                          ENDP


                          AREA ||i.WM_AttachWindowAt||, CODE, READONLY, ALIGN=1

                  WM_AttachWindowAt PROC
;;;73     */
;;;74     void WM_AttachWindowAt(WM_HWIN hWin, WM_HWIN hParent, int x, int y) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  461e              MOV      r6,r3
000006  4617              MOV      r7,r2
000008  460c              MOV      r4,r1
00000a  4605              MOV      r5,r0
;;;75       WM_DetachWindow(hWin);
00000c  f7fffffe          BL       WM_DetachWindow
;;;76       WM_MoveTo(hWin, x, y);
000010  4632              MOV      r2,r6
000012  4639              MOV      r1,r7
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       WM_MoveTo
;;;77       WM_AttachWindow(hWin, hParent);
00001a  4621              MOV      r1,r4
00001c  4628              MOV      r0,r5
00001e  e8bd41f0          POP      {r4-r8,lr}
000022  f7ffbffe          B.W      WM_AttachWindow
;;;78     }
;;;79     
                          ENDP


                          AREA ||i.WM_DetachWindow||, CODE, READONLY, ALIGN=1

                  WM_DetachWindow PROC
;;;33     */
;;;34     void WM_DetachWindow(WM_HWIN hWin) {
000000  b570              PUSH     {r4-r6,lr}
000002  0005              MOVS     r5,r0
000004  d016              BEQ      |L3.52|
;;;35       if (hWin) {
;;;36         WM_HWIN hParent;
;;;37         WM_Obj* pWin;
;;;38         WM_LOCK();
;;;39         pWin = WM_H2P(hWin);
000006  f7fffffe          BL       GUI_ALLOC_h2p
;;;40         hParent = pWin->hParent;
00000a  f9b04016          LDRSH    r4,[r0,#0x16]
;;;41         if (hParent) {
00000e  2c00              CMP      r4,#0
000010  d010              BEQ      |L3.52|
;;;42           WM_Obj* pParent;
;;;43           WM__DetachWindow(hWin);
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       WM__DetachWindow
;;;44           pParent = WM_H2P(hParent);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       GUI_ALLOC_h2p
;;;45           WM_MoveWindow(hWin, -pParent->Rect.x0,  -pParent->Rect.y0);   /* Convert screen coordinates -> parent coordinates */
00001e  f9b01002          LDRSH    r1,[r0,#2]
000022  f9b00000          LDRSH    r0,[r0,#0]
000026  424a              RSBS     r2,r1,#0
000028  4241              RSBS     r1,r0,#0
00002a  4628              MOV      r0,r5
00002c  e8bd4070          POP      {r4-r6,lr}
000030  f7ffbffe          B.W      WM_MoveWindow
                  |L3.52|
;;;46           /* ToDo: Invalidate. If Parent window is located at (0,0). */
;;;47         }
;;;48         WM_UNLOCK();
;;;49       }
;;;50     }
000034  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

