; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui2dlib.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui2dlib.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI2DLib.c]
                          THUMB

                          AREA ||i.GL_MoveTo||, CODE, READONLY, ALIGN=2

                  GL_MoveTo PROC
;;;44     */
;;;45     void GL_MoveTo(int x, int y) {
000000  4a01              LDR      r2,|L1.8|
;;;46       GUI_Context.DrawPosX = x;
000002  8550              STRH     r0,[r2,#0x2a]
;;;47       GUI_Context.DrawPosY = y;
000004  8591              STRH     r1,[r2,#0x2c]
;;;48     }
000006  4770              BX       lr
;;;49     
                          ENDP

                  |L1.8|
                          DCD      GUI_Context

                          AREA ||i.GUI_DrawRect||, CODE, READONLY, ALIGN=2

                  GUI_DrawRect PROC
;;;83     */
;;;84     void GUI_DrawRect(int x0, int y0, int x1, int y1) {
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;85       #if (GUI_WINSUPPORT)
;;;86         int Off;
;;;87         GUI_RECT r;
;;;88       #endif
;;;89       GUI_LOCK();
;;;90       #if (GUI_WINSUPPORT)
;;;91         Off = GUI_Context.PenSize -1;
000004  4c1c              LDR      r4,|L2.120|
;;;92         WM_ADDORG(x0,y0);
000006  6c66              LDR      r6,[r4,#0x44]  ; GUI_Context
000008  f894c018          LDRB     r12,[r4,#0x18]        ;91  ; GUI_Context
00000c  1837              ADDS     r7,r6,r0
00000e  6ca0              LDR      r0,[r4,#0x48]  ; GUI_Context
;;;93         WM_ADDORG(x1,y1);
000010  f1ac0c01          SUB      r12,r12,#1
000014  1845              ADDS     r5,r0,r1              ;92
000016  18c4              ADDS     r4,r0,r3
;;;94         r.x0 = x0 - Off;
000018  eba7000c          SUB      r0,r7,r12
00001c  4416              ADD      r6,r6,r2              ;93
00001e  f8ad0000          STRH     r0,[sp,#0]
;;;95         r.x1 = x1 + Off;
000022  eb06000c          ADD      r0,r6,r12
000026  f8ad0004          STRH     r0,[sp,#4]
;;;96         r.y0 = y0 - Off;
00002a  eba5000c          SUB      r0,r5,r12
00002e  f8ad0002          STRH     r0,[sp,#2]
;;;97         r.y1 = y1 + Off;
000032  eb04000c          ADD      r0,r4,r12
000036  f8ad0006          STRH     r0,[sp,#6]
;;;98         WM_ITERATE_START(&r); {
00003a  4668              MOV      r0,sp
00003c  f7fffffe          BL       WM__InitIVRSearch
000040  e015              B        |L2.110|
                  |L2.66|
000042  4632              MOV      r2,r6
000044  4629              MOV      r1,r5
000046  4638              MOV      r0,r7
000048  f7fffffe          BL       LCD_DrawHLine
00004c  4632              MOV      r2,r6
00004e  4621              MOV      r1,r4
000050  4638              MOV      r0,r7
000052  f7fffffe          BL       LCD_DrawHLine
000056  1e62              SUBS     r2,r4,#1
000058  1c69              ADDS     r1,r5,#1
00005a  4638              MOV      r0,r7
00005c  f7fffffe          BL       LCD_DrawVLine
000060  1e62              SUBS     r2,r4,#1
000062  1c69              ADDS     r1,r5,#1
000064  4630              MOV      r0,r6
000066  f7fffffe          BL       LCD_DrawVLine
;;;99       #endif
;;;100      _DrawRect(x0, y0, x1, y1);
;;;101      #if (GUI_WINSUPPORT)
;;;102        } WM_ITERATE_END();
00006a  f7fffffe          BL       WM__GetNextIVR
                  |L2.110|
00006e  2800              CMP      r0,#0
000070  d1e7              BNE      |L2.66|
;;;103      #endif
;;;104      GUI_UNLOCK();
;;;105    }
000072  e8bd81fc          POP      {r2-r8,pc}
;;;106    
                          ENDP

000076  0000              DCW      0x0000
                  |L2.120|
                          DCD      GUI_Context

                          AREA ||i.GUI_MoveRel||, CODE, READONLY, ALIGN=2

                  GUI_MoveRel PROC
;;;33     */
;;;34     void GUI_MoveRel(int dx, int dy) { /*tbd: GL_LinePos. */
000000  4a03              LDR      r2,|L3.16|
;;;35       GUI_LOCK();
;;;36       GUI_Context.DrawPosX += dx;
000002  8d53              LDRH     r3,[r2,#0x2a]  ; GUI_Context
000004  4418              ADD      r0,r0,r3
000006  8550              STRH     r0,[r2,#0x2a]
;;;37       GUI_Context.DrawPosY += dy;
000008  8d90              LDRH     r0,[r2,#0x2c]  ; GUI_Context
00000a  4408              ADD      r0,r0,r1
00000c  8590              STRH     r0,[r2,#0x2c]
;;;38       GUI_UNLOCK();
;;;39     }
00000e  4770              BX       lr
;;;40     
                          ENDP

                  |L3.16|
                          DCD      GUI_Context

                          AREA ||i.GUI_MoveTo||, CODE, READONLY, ALIGN=2

                  GUI_MoveTo PROC
;;;53     */
;;;54     void GUI_MoveTo(int x, int y) {
000000  4a03              LDR      r2,|L4.16|
;;;55       GUI_LOCK();
;;;56       #if (GUI_WINSUPPORT)
;;;57         WM_ADDORG(x,y);
000002  6c53              LDR      r3,[r2,#0x44]  ; GUI_Context
000004  6c92              LDR      r2,[r2,#0x48]  ; GUI_Context
000006  4418              ADD      r0,r0,r3
000008  4411              ADD      r1,r1,r2
;;;58       #endif
;;;59       GL_MoveTo(x,y);
00000a  f7ffbffe          B.W      GL_MoveTo
;;;60       GUI_UNLOCK();
;;;61     }
;;;62     
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      GUI_Context
