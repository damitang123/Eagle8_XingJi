; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdp233.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdp233.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\ConvertColor\LCDP233.c]
                          THUMB

                          AREA ||i.LCD_Color2Index_233||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_233 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_233(LCD_COLOR Color) {
000000  23ff              MOVS     r3,#0xff
;;;35       int r, g, b;
;;;36       r = Color & 255;
000002  b2c2              UXTB     r2,r0
;;;37       g = (Color >> 8 ) & 255;
000004  f3c02107          UBFX     r1,r0,#8,#8
;;;38       b = Color >> 16;
;;;39       r = (r * 7 + 127) / 255;
000008  ebc202c2          RSB      r2,r2,r2,LSL #3
;;;40       g = (g * 7 + 127) / 255;
00000c  ebc101c1          RSB      r1,r1,r1,LSL #3
000010  327f              ADDS     r2,r2,#0x7f           ;39
000012  317f              ADDS     r1,r1,#0x7f
000014  fb92f2f3          SDIV     r2,r2,r3              ;39
000018  fb91f1f3          SDIV     r1,r1,r3
00001c  0c00              LSRS     r0,r0,#16             ;38
;;;41       b = (b + 42) / 85;
00001e  2355              MOVS     r3,#0x55
000020  302a              ADDS     r0,r0,#0x2a
000022  fb90f0f3          SDIV     r0,r0,r3
;;;42       return r + (g << 3) + (b << 6);
000026  eb0201c1          ADD      r1,r2,r1,LSL #3
00002a  eb011080          ADD      r0,r1,r0,LSL #6
;;;43     }
00002e  4770              BX       lr
;;;44     
                          ENDP


                          AREA ||i.LCD_GetIndexMask_233||, CODE, READONLY, ALIGN=1

                  LCD_GetIndexMask_233 PROC
;;;60     */
;;;61     unsigned LCD_GetIndexMask_233(void) {
000000  20ff              MOVS     r0,#0xff
;;;62       return 0xff;
;;;63     }
000002  4770              BX       lr
;;;64     
                          ENDP


                          AREA ||i.LCD_Index2Color_233||, CODE, READONLY, ALIGN=1

                  LCD_Index2Color_233 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_233(int Index) {
000000  f0000107          AND      r1,r0,#7
;;;50       int r, g, b;
;;;51       r = (Index & 7) * 255 / 7;
000004  ebc12201          RSB      r2,r1,r1,LSL #8
000008  2107              MOVS     r1,#7
00000a  fbb2f2f1          UDIV     r2,r2,r1
;;;52       g = ((Index >> 3) & 7) * 255 / 7;
00000e  f3c003c2          UBFX     r3,r0,#3,#3
000012  ebc32303          RSB      r3,r3,r3,LSL #8
000016  fbb3f1f1          UDIV     r1,r3,r1
;;;53       b = ((Index >> 6) & 3) * 85;
00001a  f3c01081          UBFX     r0,r0,#6,#2
00001e  eb001000          ADD      r0,r0,r0,LSL #4
000022  eb000080          ADD      r0,r0,r0,LSL #2
;;;54       return r + (g << 8) + (((U32)b) << 16);
000026  eb022101          ADD      r1,r2,r1,LSL #8
00002a  eb014000          ADD      r0,r1,r0,LSL #16
;;;55     }
00002e  4770              BX       lr
;;;56     
                          ENDP

