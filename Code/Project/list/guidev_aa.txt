; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guidev_aa.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidev_aa.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\MemDev\GUIDEV_AA.c]
                          THUMB

                          AREA ||i.GUI_MEMDEV_CopyFromLCDAA||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyFromLCDAA PROC
;;;123    */
;;;124    void GUI_MEMDEV_CopyFromLCDAA(GUI_MEMDEV_Handle hMem) {
000000  e92d4ffe          PUSH     {r1-r11,lr}
000004  b920              CBNZ     r0,|L1.16|
;;;125      /* Make sure memory handle is valid */
;;;126      if (!hMem) {
;;;127        hMem = GUI_Context.hDevData;
000006  4830              LDR      r0,|L1.200|
000008  f9b00050          LDRSH    r0,[r0,#0x50]  ; GUI_Context
00000c  2800              CMP      r0,#0
00000e  d059              BEQ      |L1.196|
                  |L1.16|
;;;128      }
;;;129      if (hMem) {
;;;130        int x, y;
;;;131        GUI_MEMDEV* pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4605              MOV      r5,r0
;;;132        GUI_USAGE* pUsage = 0;
;;;133        int x0 = pDevData->x0;
000016  f9b00000          LDRSH    r0,[r0,#0]
;;;134        int y0 = pDevData->y0;
00001a  9001              STR      r0,[sp,#4]
00001c  f9b50002          LDRSH    r0,[r5,#2]
;;;135        int XMax = pDevData->XSize/2;
000020  9002              STR      r0,[sp,#8]
000022  f9b50004          LDRSH    r0,[r5,#4]
;;;136        int YMax = pDevData->YSize/2;
;;;137        LCD_PIXELINDEX* pData = (LCD_PIXELINDEX*)(pDevData+1);
;;;138        int LineOff = pDevData->BytesPerLine;
;;;139        if (pDevData->hUsage) 
000026  f8d5800c          LDR      r8,[r5,#0xc]
00002a  eb0070d0          ADD      r0,r0,r0,LSR #31      ;135
00002e  ea4f0a60          ASR      r10,r0,#1             ;135
000032  f9b50006          LDRSH    r0,[r5,#6]            ;136
000036  f04f0900          MOV      r9,#0                 ;132
00003a  eb0070d0          ADD      r0,r0,r0,LSR #31      ;136
00003e  ea4f0b60          ASR      r11,r0,#1             ;136
000042  f9b50018          LDRSH    r0,[r5,#0x18]
000046  f105042c          ADD      r4,r5,#0x2c           ;137
00004a  b110              CBZ      r0,|L1.82|
;;;140          pUsage = GUI_USAGE_H2P(pDevData->hUsage);
00004c  f7fffffe          BL       GUI_ALLOC_h2p
000050  4681              MOV      r9,r0
                  |L1.82|
;;;141        for (y=0; y< YMax; y++) {
000052  2600              MOVS     r6,#0
000054  e034              B        |L1.192|
;;;142          if (pUsage) {
000056  bf00              NOP      
                  |L1.88|
000058  f1b90f00          CMP      r9,#0
00005c  d013              BEQ      |L1.134|
;;;143            GUI_USAGE_AddHLine(pUsage, 0, y*2, pDevData->XSize);
00005e  f8d90008          LDR      r0,[r9,#8]
000062  0072              LSLS     r2,r6,#1
000064  f9b53004          LDRSH    r3,[r5,#4]
000068  6847              LDR      r7,[r0,#4]
00006a  2100              MOVS     r1,#0
00006c  4648              MOV      r0,r9
00006e  47b8              BLX      r7
;;;144            GUI_USAGE_AddHLine(pUsage, 0, y*2+1, pDevData->XSize);
000070  2001              MOVS     r0,#1
000072  eb000246          ADD      r2,r0,r6,LSL #1
000076  f8d90008          LDR      r0,[r9,#8]
00007a  f9b53004          LDRSH    r3,[r5,#4]
00007e  2100              MOVS     r1,#0
000080  6847              LDR      r7,[r0,#4]
000082  4648              MOV      r0,r9
000084  47b8              BLX      r7
                  |L1.134|
;;;145          }
;;;146          for (x=0; x< XMax; x++) {
;;;147            *pData = *(pData+1) = *(pData+LineOff) = *(pData+LineOff+1) = LCD_GetPixelIndex(x+x0,y+y0);
000086  9802              LDR      r0,[sp,#8]
000088  2700              MOVS     r7,#0                 ;146
00008a  4430              ADD      r0,r0,r6
00008c  9000              STR      r0,[sp,#0]            ;146
00008e  e00d              B        |L1.172|
                  |L1.144|
000090  e9dd1000          LDRD     r1,r0,[sp,#0]         ;146
000094  4438              ADD      r0,r0,r7
000096  f7fffffe          BL       LCD_GetPixelIndex
00009a  eb040148          ADD      r1,r4,r8,LSL #1
00009e  1c7f              ADDS     r7,r7,#1
0000a0  8048              STRH     r0,[r1,#2]
0000a2  f8240018          STRH     r0,[r4,r8,LSL #1]
0000a6  8060              STRH     r0,[r4,#2]
0000a8  f8240b04          STRH     r0,[r4],#4
                  |L1.172|
0000ac  4557              CMP      r7,r10                ;146
0000ae  dbef              BLT      |L1.144|
;;;148            pData+=2;
;;;149          }
;;;150          pData += LineOff + (pDevData->XSize&1);
0000b0  7928              LDRB     r0,[r5,#4]
0000b2  1c76              ADDS     r6,r6,#1
0000b4  f0000101          AND      r1,r0,#1
0000b8  eb010008          ADD      r0,r1,r8
0000bc  eb040440          ADD      r4,r4,r0,LSL #1
                  |L1.192|
0000c0  455e              CMP      r6,r11                ;141
0000c2  dbc9              BLT      |L1.88|
                  |L1.196|
;;;151        }
;;;152      }
;;;153    }
0000c4  e8bd8ffe          POP      {r1-r11,pc}
;;;154    
                          ENDP

                  |L1.200|
                          DCD      GUI_Context

                          AREA ||i.GUI_MEMDEV_CopyToLCDAA||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyToLCDAA PROC
;;;58     */
;;;59     void GUI_MEMDEV_CopyToLCDAA(GUI_MEMDEV_Handle hMem) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08f              SUB      sp,sp,#0x3c
000006  2800              CMP      r0,#0
000008  d07b              BEQ      |L2.258|
;;;60       GUI_LOCK();
;;;61       /* Make sure memory handle is valid */
;;;62       if (hMem) {
;;;63         GUI_MEMDEV_Handle hMemPrev;
;;;64       #if GUI_NUM_LAYERS > 1
;;;65         int PrevLayer;
;;;66       #endif
;;;67         int x, y;
;;;68         GUI_MEMDEV* pDev = (GUI_MEMDEV*)GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
00000a  f7fffffe          BL       GUI_ALLOC_h2p
;;;69         LCD_PIXELINDEX* pData0 = (LCD_PIXELINDEX*)(pDev+1);
;;;70         int LineOff = pDev->XSize;
00000e  f9b04004          LDRSH    r4,[r0,#4]
;;;71         int x0 = pDev->x0;
000012  f9b01000          LDRSH    r1,[r0,#0]
;;;72         int y0 = pDev->y0;
000016  9106              STR      r1,[sp,#0x18]
000018  f9b01002          LDRSH    r1,[r0,#2]
00001c  f100092c          ADD      r9,r0,#0x2c           ;69
;;;73         int XMax = pDev->XSize / 2;
000020  910c              STR      r1,[sp,#0x30]
;;;74         int YMax = pDev->YSize / 2;
000022  f9b00006          LDRSH    r0,[r0,#6]
000026  eb0471d4          ADD      r1,r4,r4,LSR #31      ;73
00002a  eb0070d0          ADD      r0,r0,r0,LSR #31
00002e  1040              ASRS     r0,r0,#1
;;;75         hMemPrev = GUI_Context.hDevData;
000030  900b              STR      r0,[sp,#0x2c]
000032  4835              LDR      r0,|L2.264|
000034  ea4f0861          ASR      r8,r1,#1              ;73
000038  f9b00050          LDRSH    r0,[r0,#0x50]  ; GUI_Context
;;;76       #if GUI_NUM_LAYERS > 1
;;;77         PrevLayer = GUI_SelectLayer(pDev->LayerIndex);   /* Should not we switch back to the orig. layer when done ? */
;;;78       #else
;;;79         GUI_SelectLCD();  /* Activate LCD */
00003c  900d              STR      r0,[sp,#0x34]
00003e  f7fffffe          BL       GUI_SelectLCD
;;;80       #endif
;;;81         for (y = 0; y < YMax; y++) {
000042  2700              MOVS     r7,#0
000044  e054              B        |L2.240|
                  |L2.70|
;;;82           LCD_PIXELINDEX* pData = pData0;
000046  464d              MOV      r5,r9
;;;83           for (x = 0; x < XMax; x++) {
000048  2600              MOVS     r6,#0
00004a  e04c              B        |L2.230|
                  |L2.76|
;;;84             LCD_PIXELINDEX PixelIndex;
;;;85             int ColorSep[3];
;;;86             U32 Color = LCD_Index2Color(*pData);
00004c  8828              LDRH     r0,[r5,#0]
00004e  f7fffffe          BL       LCD_Index2Color
;;;87             ColorSep[0] = Color&255;
;;;88             ColorSep[1] = (Color>>8)  &255;
000052  f3c02107          UBFX     r1,r0,#8,#8
000056  f0000aff          AND      r10,r0,#0xff          ;87
;;;89             ColorSep[2] = (Color>>16) &255;
00005a  f3c04b07          UBFX     r11,r0,#16,#8
;;;90             Color = LCD_Index2Color(*(pData+1));
00005e  9102              STR      r1,[sp,#8]
000060  8868              LDRH     r0,[r5,#2]
000062  f7fffffe          BL       LCD_Index2Color
;;;91             ColorSep[0] += Color&255;
000066  b2c2              UXTB     r2,r0
000068  eb0a0102          ADD      r1,r10,r2
;;;92             ColorSep[1] += (Color>>8)  &255;
00006c  9101              STR      r1,[sp,#4]
00006e  f3c02207          UBFX     r2,r0,#8,#8
000072  9902              LDR      r1,[sp,#8]
;;;93             ColorSep[2] += (Color>>16) &255;
000074  f3c04007          UBFX     r0,r0,#16,#8
000078  4411              ADD      r1,r1,r2              ;92
00007a  eb0b0a00          ADD      r10,r11,r0
;;;94             Color = LCD_Index2Color(*(pData+LineOff));
00007e  9102              STR      r1,[sp,#8]
000080  f8350014          LDRH     r0,[r5,r4,LSL #1]
000084  f7fffffe          BL       LCD_Index2Color
;;;95             ColorSep[0] += Color&255;
000088  9901              LDR      r1,[sp,#4]
00008a  b2c2              UXTB     r2,r0
00008c  eb010b02          ADD      r11,r1,r2
;;;96             ColorSep[1] += (Color>>8)  &255;
000090  f3c02207          UBFX     r2,r0,#8,#8
000094  9902              LDR      r1,[sp,#8]
;;;97             ColorSep[2] += (Color>>16) &255;
000096  f3c04007          UBFX     r0,r0,#16,#8
00009a  4482              ADD      r10,r10,r0
00009c  4411              ADD      r1,r1,r2              ;96
;;;98             Color = LCD_Index2Color(*(pData+LineOff+1));
00009e  eb050044          ADD      r0,r5,r4,LSL #1
0000a2  9102              STR      r1,[sp,#8]
0000a4  8840              LDRH     r0,[r0,#2]
0000a6  f7fffffe          BL       LCD_Index2Color
;;;99             ColorSep[0] += Color&255;
0000aa  b2c2              UXTB     r2,r0
;;;100            ColorSep[1] += (Color>>8)  &255;
0000ac  f3c02307          UBFX     r3,r0,#8,#8
0000b0  9902              LDR      r1,[sp,#8]
0000b2  445a              ADD      r2,r2,r11             ;99
0000b4  4419              ADD      r1,r1,r3
;;;101            ColorSep[2] += (Color>>16) &255;
0000b6  f3c04007          UBFX     r0,r0,#16,#8
0000ba  4450              ADD      r0,r0,r10
0000bc  1c92              ADDS     r2,r2,#2
;;;102            Color  = (ColorSep[0]+2)>>2;
0000be  1c89              ADDS     r1,r1,#2
0000c0  1092              ASRS     r2,r2,#2
;;;103            Color |= ((ColorSep[1]+2)>>2)<<8;
0000c2  1089              ASRS     r1,r1,#2
0000c4  1c80              ADDS     r0,r0,#2
0000c6  ea422101          ORR      r1,r2,r1,LSL #8
;;;104            Color |= ((U32)((ColorSep[2]+2)>>2))<<16;
0000ca  1080              ASRS     r0,r0,#2
0000cc  ea414000          ORR      r0,r1,r0,LSL #16
;;;105            PixelIndex = LCD_Color2Index(Color);
0000d0  f7fffffe          BL       LCD_Color2Index
0000d4  b282              UXTH     r2,r0
;;;106            LCD_SetPixelIndex(x+x0, y+y0, PixelIndex);
0000d6  980c              LDR      r0,[sp,#0x30]
0000d8  1839              ADDS     r1,r7,r0
0000da  9806              LDR      r0,[sp,#0x18]
0000dc  4430              ADD      r0,r0,r6
0000de  f7fffffe          BL       LCD_SetPixelIndex
0000e2  1d2d              ADDS     r5,r5,#4
0000e4  1c76              ADDS     r6,r6,#1
                  |L2.230|
0000e6  4546              CMP      r6,r8                 ;83
0000e8  dbb0              BLT      |L2.76|
;;;107            pData += 2;
;;;108          }
;;;109          pData0 += 2 * LineOff;
0000ea  eb090984          ADD      r9,r9,r4,LSL #2
0000ee  1c7f              ADDS     r7,r7,#1
                  |L2.240|
0000f0  980b              LDR      r0,[sp,#0x2c]         ;81
0000f2  4287              CMP      r7,r0                 ;81
0000f4  dba7              BLT      |L2.70|
;;;110        }
;;;111      #if GUI_NUM_LAYERS > 1
;;;112        GUI_SelectLayer(PrevLayer);
;;;113      #endif
;;;114        /* Reactivate previously used device */
;;;115        GUI_MEMDEV_Select(hMemPrev);
0000f6  980d              LDR      r0,[sp,#0x34]
0000f8  b00f              ADD      sp,sp,#0x3c
0000fa  e8bd4ff0          POP      {r4-r11,lr}
0000fe  f7ffbffe          B.W      GUI_MEMDEV_Select
                  |L2.258|
;;;116      }
;;;117      GUI_UNLOCK();
;;;118    }
000102  b00f              ADD      sp,sp,#0x3c
000104  e8bd8ff0          POP      {r4-r11,pc}
;;;119    
                          ENDP

                  |L2.264|
                          DCD      GUI_Context
