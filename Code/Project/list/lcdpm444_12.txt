; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdpm444_12.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdpm444_12.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\ConvertColor\LCDPM444_12.c]
                          THUMB

                          AREA ||i.LCD_Color2Index_M444_12||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_M444_12 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_M444_12(LCD_COLOR Color) {
000000  b2c3              UXTB     r3,r0
;;;35       unsigned int r,g,b;
;;;36       r = Color         & 255;
;;;37       g = (Color >> 8)  & 255;
000002  f3c02107          UBFX     r1,r0,#8,#8
;;;38       b = (Color >> 16) & 255;
000006  f3c04207          UBFX     r2,r0,#16,#8
;;;39       r = (r + 8) / 17;
00000a  2011              MOVS     r0,#0x11
00000c  3308              ADDS     r3,r3,#8
00000e  3108              ADDS     r1,r1,#8
000010  fbb3f3f0          UDIV     r3,r3,r0
;;;40       g = (g + 8) / 17;
000014  fbb1f1f0          UDIV     r1,r1,r0
000018  3208              ADDS     r2,r2,#8
;;;41       b = (b + 8) / 17;
00001a  fbb2f0f0          UDIV     r0,r2,r0
;;;42       return b + (g << 4) + (r << 8);
00001e  eb001001          ADD      r0,r0,r1,LSL #4
000022  eb002003          ADD      r0,r0,r3,LSL #8
;;;43     }
000026  4770              BX       lr
;;;44     
                          ENDP


                          AREA ||i.LCD_GetIndexMask_M444_12||, CODE, READONLY, ALIGN=1

                  LCD_GetIndexMask_M444_12 PROC
;;;65     */
;;;66     unsigned LCD_GetIndexMask_M444_12(void) {
000000  f64070ff          MOV      r0,#0xfff
;;;67       return 0x0fff;
;;;68     }
000004  4770              BX       lr
;;;69     
                          ENDP


                          AREA ||i.LCD_Index2Color_M444_12||, CODE, READONLY, ALIGN=1

                  LCD_Index2Color_M444_12 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_M444_12(int Index) {
000000  f000010f          AND      r1,r0,#0xf
;;;50       unsigned int r,g,b;
;;;51       /* Seperate the color masks */
;;;52       b = Index & 0xf;
;;;53       g = (Index >> 4) & 0xf;
000004  f3c01203          UBFX     r2,r0,#4,#4
;;;54       r = ((unsigned)Index >> 8) & 0xf;
000008  f3c02003          UBFX     r0,r0,#8,#4
;;;55       /* Convert the color masks */
;;;56       r = r * 17;
00000c  eb001000          ADD      r0,r0,r0,LSL #4
;;;57       g = g * 17;
000010  eb021202          ADD      r2,r2,r2,LSL #4
;;;58       b = b * 17;
000014  eb011101          ADD      r1,r1,r1,LSL #4
;;;59       return r + (g<<8) + (((U32)b)<<16);
000018  eb002002          ADD      r0,r0,r2,LSL #8
00001c  eb004001          ADD      r0,r0,r1,LSL #16
;;;60     }
000020  4770              BX       lr
;;;61     
                          ENDP

