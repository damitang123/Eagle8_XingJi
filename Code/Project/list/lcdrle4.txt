; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdrle4.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdrle4.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\LCDRLE4.c]
                          THUMB

                          AREA ||i._DrawBitmap_RLE4||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLE4 PROC
;;;34     */
;;;35     static void _DrawBitmap_RLE4(int x0,int y0,int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR* pLogPal, int xMag, int yMag) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b085              SUB      sp,sp,#0x14
;;;36       const LCD_PIXELINDEX* pTrans =NULL;
000006  2100              MOVS     r1,#0
;;;37       char NoTrans = !(GUI_Context.DrawMode & LCD_DRAWMODE_TRANS);
000008  9100              STR      r1,[sp,#0]
00000a  4971              LDR      r1,|L1.464|
00000c  4691              MOV      r9,r2                 ;35
00000e  e9dda012          LDRD     r10,r0,[sp,#0x48]     ;35
000012  7c0a              LDRB     r2,[r1,#0x10]  ; GUI_Context
000014  f3420240          SBFX     r2,r2,#1,#1
000018  f1020b01          ADD      r11,r2,#1
00001c  e9dd3214          LDRD     r3,r2,[sp,#0x50]
;;;38       LCD_PIXELINDEX aColorIndex[2] = {0};
;;;39       LCD_PIXELINDEX PixelIndex;
;;;40       int xi,y;
;;;41       int xL, yL;
;;;42       char IsMagnified = ((yMag | xMag) != 1);
000020  431a              ORRS     r2,r2,r3
000022  2a01              CMP      r2,#1
000024  d001              BEQ      |L1.42|
000026  2201              MOVS     r2,#1
000028  e000              B        |L1.44|
                  |L1.42|
00002a  2200              MOVS     r2,#0
                  |L1.44|
;;;43       aColorIndex[0] = LCD_ACOLORINDEX[0];
00002c  4968              LDR      r1,|L1.464|
00002e  9201              STR      r2,[sp,#4]
000030  880a              LDRH     r2,[r1,#0]  ; GUI_Context
;;;44       aColorIndex[1] = LCD_ACOLORINDEX[1];
000032  9203              STR      r2,[sp,#0xc]
000034  8849              LDRH     r1,[r1,#2]  ; GUI_Context
;;;45       /* Handle color translation */
;;;46       if ((pLogPal) && (pLogPal->pPalEntries)) {
000036  9102              STR      r1,[sp,#8]
000038  b130              CBZ      r0,|L1.72|
00003a  6881              LDR      r1,[r0,#8]
00003c  b121              CBZ      r1,|L1.72|
;;;47         if ((pTrans = LCD_GetpPalConvTable(pLogPal)) == NULL) {
00003e  f7fffffe          BL       LCD_GetpPalConvTable
000042  9000              STR      r0,[sp,#0]
000044  2800              CMP      r0,#0
000046  d075              BEQ      |L1.308|
                  |L1.72|
;;;48           return;
;;;49         }
;;;50       }
;;;51      /* Check if we can limit the number of lines due to clipping) */
;;;52       if (yMag == 1) {
000048  9815              LDR      r0,[sp,#0x54]
00004a  2801              CMP      r0,#1
00004c  d10a              BNE      |L1.100|
;;;53         if (ysize > GUI_Context.ClipRect.y1 - y0 + 1)
00004e  4860              LDR      r0,|L1.464|
000050  9a08              LDR      r2,[sp,#0x20]
000052  f9b0100e          LDRSH    r1,[r0,#0xe]  ; GUI_Context
000056  9806              LDR      r0,[sp,#0x18]
000058  1a08              SUBS     r0,r1,r0
00005a  1c41              ADDS     r1,r0,#1
00005c  4291              CMP      r1,r2
00005e  da01              BGE      |L1.100|
000060  1c40              ADDS     r0,r0,#1
;;;54           ysize = GUI_Context.ClipRect.y1 - y0 + 1;
000062  9008              STR      r0,[sp,#0x20]
                  |L1.100|
;;;55       }
;;;56       /* Repeat until we have reached bottom */
;;;57       for (xi=0, y = 0; y < ysize; ) {
000064  2400              MOVS     r4,#0
000066  4625              MOV      r5,r4
000068  e0a6              B        |L1.440|
;;;58         U8 Cmd,Data;
;;;59         Cmd= *pPixel++;
00006a  bf00              NOP      
                  |L1.108|
00006c  f10a0001          ADD      r0,r10,#1
000070  f89a7000          LDRB     r7,[r10,#0]
;;;60         Data = *pPixel++;
000074  f8106b01          LDRB     r6,[r0],#1
000078  4682              MOV      r10,r0
;;;61         if (Cmd) {
00007a  2f00              CMP      r7,#0
00007c  d07e              BEQ      |L1.380|
;;;62           LCD_SetColorIndex(pTrans ? *(pTrans+Data) : Data);
00007e  9800              LDR      r0,[sp,#0]
000080  b110              CBZ      r0,|L1.136|
000082  f8300016          LDRH     r0,[r0,r6,LSL #1]
000086  e000              B        |L1.138|
                  |L1.136|
000088  4630              MOV      r0,r6
                  |L1.138|
00008a  f7fffffe          BL       LCD_SetColorIndex
;;;63           while (Cmd) {
;;;64             int xi1 = xi+Cmd;
;;;65             if (xi1>=xsize)
;;;66               xi1 = xsize;
;;;67             Cmd -= (xi1-xi);
;;;68             if (Data || NoTrans) {  /* Skip transparent pixels */
00008e  ea46080b          ORR      r8,r6,r11
                  |L1.146|
000092  19e6              ADDS     r6,r4,r7              ;64
000094  4648              MOV      r0,r9                 ;65
000096  454e              CMP      r6,r9                 ;65
000098  db00              BLT      |L1.156|
00009a  4606              MOV      r6,r0                 ;66
                  |L1.156|
00009c  1b32              SUBS     r2,r6,r4              ;67
00009e  1ab8              SUBS     r0,r7,r2              ;67
0000a0  b2c7              UXTB     r7,r0                 ;67
0000a2  f1b80f00          CMP      r8,#0
0000a6  d01c              BEQ      |L1.226|
;;;69               if (IsMagnified) {
0000a8  9801              LDR      r0,[sp,#4]
0000aa  b188              CBZ      r0,|L1.208|
;;;70                 xL = xMag * xi + x0;
0000ac  9905              LDR      r1,[sp,#0x14]
0000ae  9814              LDR      r0,[sp,#0x50]
;;;71                 yL = yMag * y + y0;
0000b0  9b15              LDR      r3,[sp,#0x54]
0000b2  fb001004          MLA      r0,r0,r4,r1           ;70
0000b6  9906              LDR      r1,[sp,#0x18]
;;;72                 LCD_FillRect(xL, yL, xL + xMag * (xi1 - xi) -1 , yL + yMag - 1);
0000b8  f8ddc050          LDR      r12,[sp,#0x50]
0000bc  fb031105          MLA      r1,r3,r5,r1           ;71
0000c0  1e44              SUBS     r4,r0,#1
0000c2  440b              ADD      r3,r3,r1
0000c4  fb0c4202          MLA      r2,r12,r2,r4
0000c8  1e5b              SUBS     r3,r3,#1
0000ca  f7fffffe          BL       LCD_FillRect
0000ce  e008              B        |L1.226|
                  |L1.208|
;;;73               } else {
;;;74                 LCD_DrawHLine(x0+xi, y + y0, xi1+x0-1);
0000d0  9805              LDR      r0,[sp,#0x14]
0000d2  1832              ADDS     r2,r6,r0
0000d4  9806              LDR      r0,[sp,#0x18]
0000d6  1e52              SUBS     r2,r2,#1
0000d8  1829              ADDS     r1,r5,r0
0000da  9805              LDR      r0,[sp,#0x14]
0000dc  4420              ADD      r0,r0,r4
0000de  f7fffffe          BL       LCD_DrawHLine
                  |L1.226|
;;;75               }
;;;76             }
;;;77             xi =xi1;
;;;78             if (xi1==xsize) {
0000e2  4634              MOV      r4,r6
0000e4  454e              CMP      r6,r9
0000e6  d101              BNE      |L1.236|
;;;79               y++;
;;;80               xi=0;
0000e8  2400              MOVS     r4,#0
0000ea  1c6d              ADDS     r5,r5,#1
                  |L1.236|
0000ec  2f00              CMP      r7,#0                 ;63
0000ee  d1d0              BNE      |L1.146|
0000f0  e062              B        |L1.440|
;;;81             }
;;;82           }
;;;83         } else {
;;;84           while (Data--) {
;;;85             U8 Index = *pPixel++;
0000f2  bf00              NOP      
                  |L1.244|
0000f4  f81a7b01          LDRB     r7,[r10],#1
;;;86             if ((Index>>4) || NoTrans) {  /* Skip transparent pixels */
0000f8  ea5b1017          ORRS     r0,r11,r7,LSR #4
0000fc  d023              BEQ      |L1.326|
;;;87               PixelIndex = pTrans ? *(pTrans+(Index>>4)) : (Index>>4);
0000fe  9800              LDR      r0,[sp,#0]
000100  b118              CBZ      r0,|L1.266|
000102  0939              LSRS     r1,r7,#4
000104  f8300011          LDRH     r0,[r0,r1,LSL #1]
000108  e000              B        |L1.268|
                  |L1.266|
00010a  0938              LSRS     r0,r7,#4
                  |L1.268|
;;;88               if (IsMagnified) {
00010c  9901              LDR      r1,[sp,#4]
00010e  b191              CBZ      r1,|L1.310|
;;;89                 LCD_SetColorIndex(PixelIndex);
000110  f7fffffe          BL       LCD_SetColorIndex
;;;90                 xL = xMag * xi + x0;
000114  9914              LDR      r1,[sp,#0x50]
000116  9805              LDR      r0,[sp,#0x14]
;;;91                 yL = yMag * y + y0;
000118  9a15              LDR      r2,[sp,#0x54]
00011a  fb010004          MLA      r0,r1,r4,r0           ;90
00011e  9906              LDR      r1,[sp,#0x18]
000120  fb021105          MLA      r1,r2,r5,r1
;;;92                 LCD_FillRect(xL, yL, xL + xMag -1 , yL + yMag - 1);
000124  188b              ADDS     r3,r1,r2
000126  9a14              LDR      r2,[sp,#0x50]
000128  1e5b              SUBS     r3,r3,#1
00012a  4402              ADD      r2,r2,r0
00012c  1e52              SUBS     r2,r2,#1
00012e  f7fffffe          BL       LCD_FillRect
000132  e008              B        |L1.326|
                  |L1.308|
000134  e049              B        |L1.458|
                  |L1.310|
;;;93               } else {
;;;94                 LCD_SetPixelIndex(x0+xi, y + y0, PixelIndex);
000136  9a05              LDR      r2,[sp,#0x14]
000138  9906              LDR      r1,[sp,#0x18]
00013a  1913              ADDS     r3,r2,r4
00013c  4602              MOV      r2,r0
00013e  4429              ADD      r1,r1,r5
000140  4618              MOV      r0,r3
000142  f7fffffe          BL       LCD_SetPixelIndex
                  |L1.326|
000146  1c64              ADDS     r4,r4,#1
;;;95               }
;;;96             }
;;;97             if (++xi >= xsize) {
000148  454c              CMP      r4,r9
00014a  db01              BLT      |L1.336|
;;;98               xi=0; y++;
00014c  2400              MOVS     r4,#0
00014e  1c6d              ADDS     r5,r5,#1
                  |L1.336|
;;;99             }
;;;100            if (Data-- == 0)
000150  f1b80001          SUBS     r0,r8,#1
000154  b2c6              UXTB     r6,r0
000156  d32f              BCC      |L1.440|
;;;101              break;
;;;102            if ((Index&15) || NoTrans) {  /* Skip transparent pixels */
000158  f007000f          AND      r0,r7,#0xf
00015c  ea50010b          ORRS     r1,r0,r11
000160  d021              BEQ      |L1.422|
;;;103              PixelIndex = pTrans ? *(pTrans+(Index&15)) : (Index&15);
000162  9900              LDR      r1,[sp,#0]
000164  b109              CBZ      r1,|L1.362|
000166  f8310010          LDRH     r0,[r1,r0,LSL #1]
                  |L1.362|
;;;104              if (IsMagnified) {
00016a  9901              LDR      r1,[sp,#4]
00016c  b199              CBZ      r1,|L1.406|
;;;105                LCD_SetColorIndex(PixelIndex);
00016e  f7fffffe          BL       LCD_SetColorIndex
;;;106                xL = xMag * xi + x0;
000172  9914              LDR      r1,[sp,#0x50]
000174  9805              LDR      r0,[sp,#0x14]
000176  fb010004          MLA      r0,r1,r4,r0
;;;107                yL = yMag * y + y0;
00017a  e000              B        |L1.382|
                  |L1.380|
00017c  e018              B        |L1.432|
                  |L1.382|
00017e  9a15              LDR      r2,[sp,#0x54]
000180  9906              LDR      r1,[sp,#0x18]
000182  fb021105          MLA      r1,r2,r5,r1
;;;108                LCD_FillRect(xL, yL, xL + xMag -1 , yL + yMag - 1);
000186  188b              ADDS     r3,r1,r2
000188  9a14              LDR      r2,[sp,#0x50]
00018a  1e5b              SUBS     r3,r3,#1
00018c  4402              ADD      r2,r2,r0
00018e  1e52              SUBS     r2,r2,#1
000190  f7fffffe          BL       LCD_FillRect
000194  e007              B        |L1.422|
                  |L1.406|
;;;109              } else {
;;;110                LCD_SetPixelIndex(x0+xi, y + y0, PixelIndex);
000196  9a05              LDR      r2,[sp,#0x14]
000198  9906              LDR      r1,[sp,#0x18]
00019a  1913              ADDS     r3,r2,r4
00019c  4602              MOV      r2,r0
00019e  4429              ADD      r1,r1,r5
0001a0  4618              MOV      r0,r3
0001a2  f7fffffe          BL       LCD_SetPixelIndex
                  |L1.422|
0001a6  1c64              ADDS     r4,r4,#1
;;;111              }
;;;112            }
;;;113            if (++xi >= xsize) {
0001a8  454c              CMP      r4,r9
0001aa  db01              BLT      |L1.432|
;;;114              xi=0; y++;
0001ac  2400              MOVS     r4,#0
0001ae  1c6d              ADDS     r5,r5,#1
                  |L1.432|
0001b0  1e70              SUBS     r0,r6,#1              ;84
0001b2  f00008ff          AND      r8,r0,#0xff           ;84
0001b6  d29d              BCS      |L1.244|
                  |L1.440|
0001b8  9808              LDR      r0,[sp,#0x20]         ;57
0001ba  4285              CMP      r5,r0                 ;57
0001bc  f6ffaf56          BLT      |L1.108|
;;;115            }
;;;116          }
;;;117        }
;;;118      }
;;;119      LCD_ACOLORINDEX[0] = aColorIndex[0];
0001c0  4803              LDR      r0,|L1.464|
0001c2  9903              LDR      r1,[sp,#0xc]
0001c4  8001              STRH     r1,[r0,#0]
;;;120      LCD_ACOLORINDEX[1] = aColorIndex[1];
0001c6  9902              LDR      r1,[sp,#8]
0001c8  8041              STRH     r1,[r0,#2]
                  |L1.458|
;;;121    }
0001ca  b009              ADD      sp,sp,#0x24
0001cc  e8bd8ff0          POP      {r4-r11,pc}
;;;122    
                          ENDP

                  |L1.464|
                          DCD      GUI_Context

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_BitmapMethodsRLE4
                          DCD      _DrawBitmap_RLE4
                          DCD      0x00000000
