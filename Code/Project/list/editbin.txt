; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\editbin.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\editbin.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\EDITBin.c]
                          THUMB

                          AREA ||i.EDIT_SetBinMode||, CODE, READONLY, ALIGN=2

                  EDIT_SetBinMode PROC
;;;151    */
;;;152    void EDIT_SetBinMode(EDIT_Handle hEdit, U32 Value, U32 Min, U32 Max) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  461d              MOV      r5,r3
000006  4616              MOV      r6,r2
000008  460f              MOV      r7,r1
00000a  ea5f0800          MOVS     r8,r0
00000e  d029              BEQ      |L1.100|
;;;153      EDIT_Obj* pObj;
;;;154      int MaxLen;
;;;155      WM_LOCK();
;;;156      if (hEdit) {
;;;157        pObj = EDIT_H2P(hEdit);
000010  f7fffffe          BL       GUI_ALLOC_h2p
;;;158        pObj->pfAddKeyEx    = _AddKeyBin;
000014  4914              LDR      r1,|L1.104|
;;;159        pObj->pfUpdateBuffer = _UpdateBuffer;
000016  64c1              STR      r1,[r0,#0x4c]
000018  4914              LDR      r1,|L1.108|
00001a  4604              MOV      r4,r0                 ;157
;;;160        pObj->CurrentValue = Value;
;;;161        pObj->CursorPos = 0;
00001c  6501              STR      r1,[r0,#0x50]
00001e  2100              MOVS     r1,#0
000020  e9c4710f          STRD     r7,r1,[r4,#0x3c]
;;;162        MaxLen = pObj->MaxLen;
000024  f9b0102a          LDRSH    r1,[r0,#0x2a]
000028  1e0a              SUBS     r2,r1,#0
;;;163        if (MaxLen <= 0 ) {
00002a  dc06              BGT      |L1.58|
;;;164          MaxLen = _GetNumDigits(Max);
00002c  4628              MOV      r0,r5
00002e  2100              MOVS     r1,#0
000030  e001              B        |L1.54|
                  |L1.50|
000032  0840              LSRS     r0,r0,#1
000034  1c49              ADDS     r1,r1,#1
                  |L1.54|
000036  2800              CMP      r0,#0
000038  d1fb              BNE      |L1.50|
                  |L1.58|
;;;165        }
;;;166        if (MaxLen > 32) {
00003a  2920              CMP      r1,#0x20
00003c  dd00              BLE      |L1.64|
;;;167          MaxLen = 32;
00003e  2120              MOVS     r1,#0x20
                  |L1.64|
;;;168        }
;;;169        if (MaxLen != pObj->MaxLen) {
000040  428a              CMP      r2,r1
000042  d002              BEQ      |L1.74|
;;;170          EDIT_SetMaxLen(hEdit, MaxLen);
000044  4640              MOV      r0,r8
000046  f7fffffe          BL       EDIT_SetMaxLen
                  |L1.74|
;;;171        }
;;;172        pObj->Min = Min;
;;;173        pObj->Max = Max;
;;;174        pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
00004a  e9c4650c          STRD     r6,r5,[r4,#0x30]
00004e  2001              MOVS     r0,#1
000050  f8840048          STRB     r0,[r4,#0x48]
;;;175        _UpdateBuffer(hEdit);
000054  4640              MOV      r0,r8
000056  f7fffffe          BL       _UpdateBuffer
;;;176        WM_Invalidate(hEdit);
00005a  4640              MOV      r0,r8
00005c  e8bd41f0          POP      {r4-r8,lr}
000060  f7ffbffe          B.W      WM_InvalidateWindow
                  |L1.100|
;;;177      }
;;;178      WM_UNLOCK();
;;;179    }
000064  e8bd81f0          POP      {r4-r8,pc}
;;;180    
                          ENDP

                  |L1.104|
                          DCD      _AddKeyBin
                  |L1.108|
                          DCD      _UpdateBuffer

                          AREA ||i._AddKeyBin||, CODE, READONLY, ALIGN=1

                  _AddKeyBin PROC
;;;98     */
;;;99     static void _AddKeyBin(EDIT_Handle hObj, int Key) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  4606              MOV      r6,r0
;;;100      EDIT_Obj * pObj;
;;;101      pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000006  f7fffffe          BL       GUI_ALLOC_h2p
00000a  0005              MOVS     r5,r0
;;;102      if (pObj) {
00000c  d032              BEQ      |L2.116|
;;;103        switch (Key) {
00000e  2c10              CMP      r4,#0x10
000010  d02d              BEQ      |L2.110|
000012  2c11              CMP      r4,#0x11
000014  d017              BEQ      |L2.70|
000016  2c12              CMP      r4,#0x12
000018  d027              BEQ      |L2.106|
00001a  2c13              CMP      r4,#0x13
00001c  d01f              BEQ      |L2.94|
00001e  3c30              SUBS     r4,r4,#0x30
000020  2c01              CMP      r4,#1
000022  d80b              BHI      |L2.60|
;;;104        case GUI_KEY_UP:
;;;105          {
;;;106            int Bit = _GetCurrentBit(pObj) + 1;
;;;107            if (Bit > 1) {
;;;108              Bit = 0;
;;;109            }
;;;110            _EditBin(Bit, pObj, hObj);
;;;111          }
;;;112          break;
;;;113        case GUI_KEY_DOWN:
;;;114          {
;;;115            int Bit = _GetCurrentBit(pObj) - 1;
;;;116            if (Bit < 0) {
;;;117              Bit = 1;
;;;118            }
;;;119            _EditBin(Bit, pObj, hObj);
;;;120          }
;;;121          break;
;;;122        case GUI_KEY_RIGHT:
;;;123          EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
;;;124          break;
;;;125        case GUI_KEY_LEFT:
;;;126          EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
;;;127          break;
;;;128        default:
;;;129          {
;;;130            int Bit = _BinChar2Int(Key);
;;;131            if (Bit >= 0) {
000024  2c00              CMP      r4,#0
000026  db09              BLT      |L2.60|
;;;132              _EditBin(Bit, pObj, hObj);
000028  b2e0              UXTB     r0,r4
00002a  4632              MOV      r2,r6
00002c  4629              MOV      r1,r5
00002e  f7fffffe          BL       _EditBin
;;;133              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000032  6c29              LDR      r1,[r5,#0x40]
000034  4628              MOV      r0,r5
                  |L2.54|
000036  1c49              ADDS     r1,r1,#1
                  |L2.56|
000038  f7fffffe          BL       EDIT__SetCursorPos
                  |L2.60|
;;;134            }
;;;135          }
;;;136          break;
;;;137        }
;;;138        _UpdateBuffer(hObj);
00003c  4630              MOV      r0,r6
00003e  e8bd4070          POP      {r4-r6,lr}
000042  f7ffbffe          B.W      _UpdateBuffer
                  |L2.70|
000046  f7fffffe          BL       _GetCurrentBit
00004a  1c40              ADDS     r0,r0,#1              ;106
00004c  2801              CMP      r0,#1                 ;107
00004e  dd00              BLE      |L2.82|
000050  2000              MOVS     r0,#0                 ;108
                  |L2.82|
000052  b2c0              UXTB     r0,r0                 ;110
000054  4632              MOV      r2,r6                 ;110
000056  4629              MOV      r1,r5                 ;110
000058  f7fffffe          BL       _EditBin
00005c  e7ee              B        |L2.60|
                  |L2.94|
00005e  f7fffffe          BL       _GetCurrentBit
000062  1e40              SUBS     r0,r0,#1              ;115
000064  d5f5              BPL      |L2.82|
000066  2001              MOVS     r0,#1                 ;117
000068  e7f3              B        |L2.82|
                  |L2.106|
00006a  6c29              LDR      r1,[r5,#0x40]         ;124
00006c  e7e3              B        |L2.54|
                  |L2.110|
00006e  6c29              LDR      r1,[r5,#0x40]         ;126
000070  1e49              SUBS     r1,r1,#1              ;126
000072  e7e1              B        |L2.56|
                  |L2.116|
;;;139      }
;;;140    }
000074  bd70              POP      {r4-r6,pc}
;;;141    
                          ENDP


                          AREA ||i._EditBin||, CODE, READONLY, ALIGN=1

                  _EditBin PROC
;;;68     */
;;;69     static void _EditBin(U8 Bit, EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  b430              PUSH     {r4,r5}
;;;70       int Pos = pObj->MaxLen - pObj->CursorPos - 1;   /* Bit position */
000002  f891302a          LDRB     r3,[r1,#0x2a]
000006  f8914040          LDRB     r4,[r1,#0x40]
;;;71       U32 AndMask = ~(1   << Pos);
;;;72       U32 OrMask  =   Bit << Pos;
;;;73       I32 Result  = pObj->CurrentValue & AndMask;
00000a  6bc9              LDR      r1,[r1,#0x3c]
00000c  1b1b              SUBS     r3,r3,r4              ;70
00000e  2401              MOVS     r4,#1                 ;71
000010  1e5b              SUBS     r3,r3,#1              ;71
000012  409c              LSLS     r4,r4,r3              ;71
000014  43a1              BICS     r1,r1,r4
000016  4098              LSLS     r0,r0,r3              ;72
;;;74       Result     |= OrMask;
000018  4301              ORRS     r1,r1,r0
;;;75       EDIT_SetValue(hObj, Result);
00001a  bc30              POP      {r4,r5}
00001c  4610              MOV      r0,r2
00001e  f7ffbffe          B.W      EDIT_SetValue
;;;76     }
;;;77     
                          ENDP


                          AREA ||i._GetCurrentBit||, CODE, READONLY, ALIGN=1

                  _GetCurrentBit PROC
;;;81     */
;;;82     static U8 _GetCurrentBit(EDIT_Obj* pObj) {
000000  f890102a          LDRB     r1,[r0,#0x2a]
;;;83       int Pos = pObj->MaxLen - pObj->CursorPos - 1;   /* Bit position */
000004  f8902040          LDRB     r2,[r0,#0x40]
;;;84       U32 AndMask = 1 << Pos;
;;;85       U8 Bit = (pObj->CurrentValue & AndMask) >> Pos;
000008  6bc0              LDR      r0,[r0,#0x3c]
00000a  1a89              SUBS     r1,r1,r2              ;83
00000c  2201              MOVS     r2,#1                 ;84
00000e  1e49              SUBS     r1,r1,#1              ;84
000010  408a              LSLS     r2,r2,r1              ;84
000012  4010              ANDS     r0,r0,r2
000014  40c8              LSRS     r0,r0,r1
000016  b2c0              UXTB     r0,r0
;;;86       return Bit;
;;;87     }
000018  4770              BX       lr
;;;88     
                          ENDP


                          AREA ||i._UpdateBuffer||, CODE, READONLY, ALIGN=1

                  _UpdateBuffer PROC
;;;56     */
;;;57     static void _UpdateBuffer(EDIT_Handle hObj) {
000000  b538              PUSH     {r3-r5,lr}
;;;58       char * s;
;;;59       EDIT_Obj * pObj;
;;;60       pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000002  f7fffffe          BL       GUI_ALLOC_h2p
000006  4604              MOV      r4,r0
;;;61       s = (char*) GUI_ALLOC_h2p(pObj->hpText);
000008  f9b00028          LDRSH    r0,[r0,#0x28]
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;62       GUI_AddBin(pObj->CurrentValue, pObj->MaxLen, &s);
000010  9000              STR      r0,[sp,#0]
000012  f894102a          LDRB     r1,[r4,#0x2a]
000016  466a              MOV      r2,sp
000018  6be0              LDR      r0,[r4,#0x3c]
00001a  f7fffffe          BL       GUI_AddBin
;;;63     }
00001e  bd38              POP      {r3-r5,pc}
;;;64     
                          ENDP

