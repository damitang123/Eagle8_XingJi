; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\framewin_buttonmin.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin_buttonmin.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\FRAMEWIN_ButtonMin.c]
                          THUMB

                          AREA ||i.FRAMEWIN_AddMinButton||, CODE, READONLY, ALIGN=2

                  FRAMEWIN_AddMinButton PROC
;;;124    */
;;;125    WM_HWIN FRAMEWIN_AddMinButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
000000  b510              PUSH     {r4,lr}
;;;126      WM_HWIN hButton;
;;;127      hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_MINIMIZE);
000002  2308              MOVS     r3,#8
000004  f7fffffe          BL       FRAMEWIN_AddButton
000008  4604              MOV      r4,r0
;;;128      BUTTON_SetSelfDraw(hButton, 0, &_Draw);
00000a  4a05              LDR      r2,|L1.32|
00000c  2100              MOVS     r1,#0
00000e  f7fffffe          BL       BUTTON_SetSelfDraw
;;;129      WM_SetCallback(hButton, _cbMin);
000012  4904              LDR      r1,|L1.36|
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       WM_SetCallback
;;;130      return hButton;
00001a  4620              MOV      r0,r4
;;;131    }
00001c  bd10              POP      {r4,pc}
;;;132    
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      _Draw
                  |L1.36|
                          DCD      _cbMin

                          AREA ||i._Draw||, CODE, READONLY, ALIGN=1

                  _Draw PROC
;;;101    */
;;;102    static void _Draw(void) {
000000  b510              PUSH     {r4,lr}
;;;103      FRAMEWIN_Obj* pObj;
;;;104      WM_HWIN hWin;
;;;105      hWin = WM_GetActiveWindow();
000002  f7fffffe          BL       WM_GetActiveWindow
;;;106      hWin = WM_GetParent(hWin);
000006  f7fffffe          BL       WM_GetParent
;;;107      pObj = FRAMEWIN_H2P(hWin);
00000a  f7fffffe          BL       GUI_ALLOC_h2p
;;;108      if (pObj->Flags & FRAMEWIN_SF_MINIMIZED) {
00000e  f890005a          LDRB     r0,[r0,#0x5a]
000012  0640              LSLS     r0,r0,#25
000014  d503              BPL      |L2.30|
;;;109        _DrawRestore();
000016  e8bd4010          POP      {r4,lr}
00001a  f7ffbffe          B.W      _DrawRestore
                  |L2.30|
;;;110      } else {
;;;111        _DrawMin();
00001e  e8bd4010          POP      {r4,lr}
000022  f7ffbffe          B.W      _DrawMin
;;;112      }
;;;113    }
;;;114    
                          ENDP


                          AREA ||i._DrawMin||, CODE, READONLY, ALIGN=2

                  _DrawMin PROC
;;;65     */
;;;66     static void _DrawMin(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;67       GUI_RECT r;
;;;68       int i, Size;
;;;69       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;70       WM_ADDORG(r.x0, r.y0);
000008  481c              LDR      r0,|L3.124|
00000a  f8bd1000          LDRH     r1,[sp,#0]
00000e  f8302f44          LDRH     r2,[r0,#0x44]!  ; GUI_Context
000012  4411              ADD      r1,r1,r2
000014  b209              SXTH     r1,r1
000016  f8ad1000          STRH     r1,[sp,#0]
00001a  f8bd3002          LDRH     r3,[sp,#2]
00001e  8880              LDRH     r0,[r0,#4]  ; GUI_Context
000020  4403              ADD      r3,r3,r0
000022  f8ad3002          STRH     r3,[sp,#2]
;;;71       WM_ADDORG(r.x1, r.y1);
000026  f8bd3004          LDRH     r3,[sp,#4]
00002a  441a              ADD      r2,r2,r3
00002c  b212              SXTH     r2,r2
00002e  f8ad2004          STRH     r2,[sp,#4]
000032  f8bd3006          LDRH     r3,[sp,#6]
000036  4418              ADD      r0,r0,r3
000038  f8ad0006          STRH     r0,[sp,#6]
;;;72       Size = (r.x1 - r.x0 + 1) >> 1;
00003c  1a50              SUBS     r0,r2,r1
00003e  1c40              ADDS     r0,r0,#1
000040  1045              ASRS     r5,r0,#1
;;;73       WM_ITERATE_START(&r); {
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       WM__InitIVRSearch
000048  e014              B        |L3.116|
                  |L3.74|
;;;74         for (i = 1; i < Size; i++) {
00004a  2401              MOVS     r4,#1
00004c  e00e              B        |L3.108|
;;;75           LCD_DrawHLine(r.x0 + i, r.y1 - i - (Size >> 1), r.x1 - i);
00004e  bf00              NOP      
                  |L3.80|
000050  f9bd0006          LDRSH    r0,[sp,#6]
000054  1b00              SUBS     r0,r0,r4
000056  eba00165          SUB      r1,r0,r5,ASR #1
00005a  f9bd0004          LDRSH    r0,[sp,#4]
00005e  1b02              SUBS     r2,r0,r4
000060  f9bd0000          LDRSH    r0,[sp,#0]
000064  4420              ADD      r0,r0,r4
000066  f7fffffe          BL       LCD_DrawHLine
00006a  1c64              ADDS     r4,r4,#1
                  |L3.108|
00006c  42ac              CMP      r4,r5                 ;74
00006e  dbef              BLT      |L3.80|
;;;76         }
;;;77       } WM_ITERATE_END();
000070  f7fffffe          BL       WM__GetNextIVR
                  |L3.116|
000074  2800              CMP      r0,#0
000076  d1e8              BNE      |L3.74|
;;;78     }
000078  bd7c              POP      {r2-r6,pc}
;;;79     
                          ENDP

00007a  0000              DCW      0x0000
                  |L3.124|
                          DCD      GUI_Context

                          AREA ||i._DrawRestore||, CODE, READONLY, ALIGN=2

                  _DrawRestore PROC
;;;83     */
;;;84     static void _DrawRestore(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;85       GUI_RECT r;
;;;86       int i, Size;
;;;87       WM_GetInsideRect(&r);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       WM_GetInsideRect
;;;88       WM_ADDORG(r.x0, r.y0);
000008  4a1c              LDR      r2,|L4.124|
00000a  f8bd0000          LDRH     r0,[sp,#0]
00000e  f8321f44          LDRH     r1,[r2,#0x44]!  ; GUI_Context
000012  4408              ADD      r0,r0,r1
000014  b200              SXTH     r0,r0
000016  f8ad0000          STRH     r0,[sp,#0]
00001a  f8bd3002          LDRH     r3,[sp,#2]
00001e  8892              LDRH     r2,[r2,#4]  ; GUI_Context
000020  4413              ADD      r3,r3,r2
000022  f8ad3002          STRH     r3,[sp,#2]
;;;89       WM_ADDORG(r.x1, r.y1);
000026  f8bd3004          LDRH     r3,[sp,#4]
00002a  4419              ADD      r1,r1,r3
00002c  b209              SXTH     r1,r1
00002e  f8ad1004          STRH     r1,[sp,#4]
000032  f8bd3006          LDRH     r3,[sp,#6]
;;;90       Size = (r.x1 - r.x0 + 1) >> 1;
000036  1a08              SUBS     r0,r1,r0
000038  1c40              ADDS     r0,r0,#1
00003a  441a              ADD      r2,r2,r3              ;89
00003c  1045              ASRS     r5,r0,#1
00003e  f8ad2006          STRH     r2,[sp,#6]            ;89
;;;91       WM_ITERATE_START(&r); {
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       WM__InitIVRSearch
000048  e014              B        |L4.116|
                  |L4.74|
;;;92         for (i = 1; i < Size; i++) {
00004a  2401              MOVS     r4,#1
00004c  e00e              B        |L4.108|
;;;93           LCD_DrawHLine(r.x0 + i, r.y0 + i + (Size >> 1), r.x1 - i);
00004e  bf00              NOP      
                  |L4.80|
000050  f9bd0002          LDRSH    r0,[sp,#2]
000054  eb040165          ADD      r1,r4,r5,ASR #1
000058  4401              ADD      r1,r1,r0
00005a  f9bd0004          LDRSH    r0,[sp,#4]
00005e  1b02              SUBS     r2,r0,r4
000060  f9bd0000          LDRSH    r0,[sp,#0]
000064  4420              ADD      r0,r0,r4
000066  f7fffffe          BL       LCD_DrawHLine
00006a  1c64              ADDS     r4,r4,#1
                  |L4.108|
00006c  42ac              CMP      r4,r5                 ;92
00006e  dbef              BLT      |L4.80|
;;;94         }
;;;95       } WM_ITERATE_END();
000070  f7fffffe          BL       WM__GetNextIVR
                  |L4.116|
000074  2800              CMP      r0,#0
000076  d1e8              BNE      |L4.74|
;;;96     }
000078  bd7c              POP      {r2-r6,pc}
;;;97     
                          ENDP

00007a  0000              DCW      0x0000
                  |L4.124|
                          DCD      GUI_Context

                          AREA ||i._cbMin||, CODE, READONLY, ALIGN=1

                  _cbMin PROC
;;;47     */
;;;48     static void _cbMin(WM_MESSAGE* pMsg) {
000000  b510              PUSH     {r4,lr}
;;;49       if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
000002  6801              LDR      r1,[r0,#0]
000004  2927              CMP      r1,#0x27
000006  d003              BEQ      |L5.16|
;;;50         WM_HWIN hWin = pMsg->hWinSrc;
;;;51         FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
;;;52         if (pObj->Flags & FRAMEWIN_SF_MINIMIZED) {
;;;53           FRAMEWIN_Restore(hWin);
;;;54         } else {
;;;55           FRAMEWIN_Minimize(hWin);
;;;56         }
;;;57         return;                                       /* We are done ! */
;;;58       }
;;;59       BUTTON_Callback(pMsg);
000008  e8bd4010          POP      {r4,lr}
00000c  f7ffbffe          B.W      BUTTON_Callback
                  |L5.16|
000010  f9b04006          LDRSH    r4,[r0,#6]            ;50
000014  4620              MOV      r0,r4                 ;51
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  f890005a          LDRB     r0,[r0,#0x5a]         ;52
00001e  0640              LSLS     r0,r0,#25             ;52
000020  4620              MOV      r0,r4                 ;55
000022  d503              BPL      |L5.44|
000024  e8bd4010          POP      {r4,lr}               ;53
000028  f7ffbffe          B.W      FRAMEWIN_Restore
                  |L5.44|
00002c  e8bd4010          POP      {r4,lr}               ;55
000030  f7ffbffe          B.W      FRAMEWIN_Minimize
;;;60     }
;;;61     
                          ENDP

