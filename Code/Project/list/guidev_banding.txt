; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guidev_banding.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guidev_banding.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\MemDev\GUIDEV_Banding.c]
                          THUMB

                          AREA ||i.GUI_MEMDEV_Draw||, CODE, READONLY, ALIGN=1

                  GUI_MEMDEV_Draw PROC
;;;75     */
;;;76     int GUI_MEMDEV_Draw(GUI_RECT* pRect, GUI_CALLBACK_VOID_P* pfDraw, void* pData, int NumLines, int Flags) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4698              MOV      r8,r3
000006  f8dd9028          LDR      r9,[sp,#0x28]
00000a  4693              MOV      r11,r2
00000c  468a              MOV      r10,r1
00000e  0004              MOVS     r4,r0
000010  d01d              BEQ      |L1.78|
;;;77       int x0, y0, x1, y1, xsize, ysize;
;;;78       GUI_MEMDEV_Handle hMD;
;;;79       if (pRect) {
;;;80         x0 = (pRect->x0 < 0) ? 0 : pRect->x0;
000012  f9b46000          LDRSH    r6,[r4,#0]
000016  2e00              CMP      r6,#0
000018  da00              BGE      |L1.28|
00001a  2600              MOVS     r6,#0
                  |L1.28|
;;;81         y0 = (pRect->y0 < 0) ? 0 : pRect->y0;
00001c  f9b45002          LDRSH    r5,[r4,#2]
000020  2d00              CMP      r5,#0
000022  da00              BGE      |L1.38|
000024  2500              MOVS     r5,#0
                  |L1.38|
;;;82         #if GUI_NUM_LAYERS == 1
;;;83           x1 = _Min(pRect->x1, LCD_GET_XSIZE() - 1);
000026  f7fffffe          BL       LCD_GetXSize
00002a  1e41              SUBS     r1,r0,#1
00002c  f9b40004          LDRSH    r0,[r4,#4]
000030  f7fffffe          BL       _Min
000034  4607              MOV      r7,r0
;;;84           y1 = _Min(pRect->y1, LCD_GET_YSIZE() - 1);
000036  f7fffffe          BL       LCD_GetYSize
00003a  1e41              SUBS     r1,r0,#1
00003c  f9b40006          LDRSH    r0,[r4,#6]
000040  f7fffffe          BL       _Min
;;;85         #else
;;;86           x1 = _Min(pRect->x1, LCD_GetXSizeEx(GUI_Context.SelLayer) - 1);
;;;87           y1 = _Min(pRect->y1, LCD_GetYSizeEx(GUI_Context.SelLayer) - 1);
;;;88         #endif
;;;89         xsize = x1 - x0 + 1;
;;;90         ysize = y1 - y0 + 1;
000044  1b44              SUBS     r4,r0,r5
000046  1bbf              SUBS     r7,r7,r6              ;89
000048  1c64              ADDS     r4,r4,#1
00004a  1c7f              ADDS     r7,r7,#1
00004c  e007              B        |L1.94|
                  |L1.78|
;;;91       } else {
;;;92         x0 = 0;
00004e  2600              MOVS     r6,#0
;;;93         y0 = 0;
000050  4635              MOV      r5,r6
;;;94         #if GUI_NUM_LAYERS == 1
;;;95           xsize = LCD_GET_XSIZE();
000052  f7fffffe          BL       LCD_GetXSize
000056  4607              MOV      r7,r0
;;;96           ysize = LCD_GET_YSIZE();
000058  f7fffffe          BL       LCD_GetYSize
00005c  4604              MOV      r4,r0
                  |L1.94|
;;;97         #else
;;;98           xsize = LCD_GetXSizeEx(GUI_Context.SelLayer);
;;;99           ysize = LCD_GetYSizeEx(GUI_Context.SelLayer);
;;;100        #endif
;;;101      }
;;;102      if (NumLines == 0) {
00005e  f1b80f00          CMP      r8,#0
000062  d101              BNE      |L1.104|
;;;103        NumLines = -ysize;   /* Request <ysize> lines ... Less is o.k. */
000064  f1c40800          RSB      r8,r4,#0
                  |L1.104|
;;;104      }
;;;105      if ((xsize <= 0) || (ysize <= 0))
000068  2f00              CMP      r7,#0
00006a  dd01              BLE      |L1.112|
00006c  2c00              CMP      r4,#0
00006e  dc02              BGT      |L1.118|
                  |L1.112|
;;;106        return 0;           /* Nothing to do ... */
000070  2000              MOVS     r0,#0
                  |L1.114|
;;;107    /* Create memory device */
;;;108      hMD = GUI_MEMDEV_CreateEx(x0, y0, xsize, NumLines, Flags);
;;;109      if (!hMD) {
;;;110        GUI_DEBUG_ERROROUT("GUI_MEMDEV_Draw() Not enough memory ...");            /* Not enough memory ! */
;;;111        pfDraw(pData);
;;;112        return 1;
;;;113      }
;;;114      NumLines = GUI_MEMDEV_GetYSize(hMD);
;;;115      GUI_MEMDEV_Select(hMD);
;;;116    /* Start drawing ... */
;;;117      {
;;;118        int i;
;;;119        for (i = 0; i < ysize; i += NumLines) {
;;;120          int RemLines = ysize - i;
;;;121          if (RemLines < NumLines) {
;;;122            GUI_MEMDEV_ReduceYSize(hMD, RemLines);
;;;123          }
;;;124          if (i) {
;;;125            GUI_MEMDEV_SetOrg(hMD, x0, y0 + i);
;;;126            GUI_MEMDEV_Clear(hMD);
;;;127          }
;;;128          pfDraw(pData);
;;;129          GUI_MEMDEV_CopyToLCD(hMD);
;;;130        }
;;;131      }
;;;132      GUI_MEMDEV_Delete(hMD);
;;;133      GUI_MEMDEV_Select(0);
;;;134      return 0;             /* Success ! */
;;;135    }
000072  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.118|
000076  4643              MOV      r3,r8                 ;108
000078  463a              MOV      r2,r7                 ;108
00007a  4629              MOV      r1,r5                 ;108
00007c  4630              MOV      r0,r6                 ;108
00007e  f8cd9000          STR      r9,[sp,#0]            ;108
000082  f7fffffe          BL       GUI_MEMDEV_CreateEx
000086  ea5f0900          MOVS     r9,r0                 ;108
00008a  d007              BEQ      |L1.156|
00008c  f7fffffe          BL       GUI_MEMDEV_GetYSize
000090  4680              MOV      r8,r0                 ;114
000092  4648              MOV      r0,r9                 ;115
000094  f7fffffe          BL       GUI_MEMDEV_Select
000098  2700              MOVS     r7,#0                 ;119
00009a  e01a              B        |L1.210|
                  |L1.156|
00009c  4658              MOV      r0,r11                ;111
00009e  4651              MOV      r1,r10                ;111
0000a0  4788              BLX      r1                    ;111
0000a2  2001              MOVS     r0,#1                 ;112
0000a4  e7e5              B        |L1.114|
                  |L1.166|
0000a6  1be1              SUBS     r1,r4,r7              ;120
0000a8  4541              CMP      r1,r8                 ;121
0000aa  da02              BGE      |L1.178|
0000ac  4648              MOV      r0,r9                 ;122
0000ae  f7fffffe          BL       GUI_MEMDEV_ReduceYSize
                  |L1.178|
0000b2  b13f              CBZ      r7,|L1.196|
0000b4  19ea              ADDS     r2,r5,r7              ;125
0000b6  4631              MOV      r1,r6                 ;125
0000b8  4648              MOV      r0,r9                 ;125
0000ba  f7fffffe          BL       GUI_MEMDEV_SetOrg
0000be  4648              MOV      r0,r9                 ;126
0000c0  f7fffffe          BL       GUI_MEMDEV_Clear
                  |L1.196|
0000c4  4658              MOV      r0,r11                ;128
0000c6  4651              MOV      r1,r10                ;128
0000c8  4788              BLX      r1                    ;128
0000ca  4648              MOV      r0,r9                 ;129
0000cc  f7fffffe          BL       GUI_MEMDEV_CopyToLCD
0000d0  4447              ADD      r7,r7,r8              ;119
                  |L1.210|
0000d2  42a7              CMP      r7,r4                 ;119
0000d4  dbe7              BLT      |L1.166|
0000d6  4648              MOV      r0,r9                 ;132
0000d8  f7fffffe          BL       GUI_MEMDEV_Delete
0000dc  2000              MOVS     r0,#0                 ;133
0000de  f7fffffe          BL       GUI_MEMDEV_Select
0000e2  e7c5              B        |L1.112|
;;;136    
                          ENDP


                          AREA ||i._Min||, CODE, READONLY, ALIGN=1

                  _Min PROC
;;;53     */
;;;54     static int _Min(int v0, int v1) {
000000  4288              CMP      r0,r1
000002  dd00              BLE      |L2.6|
;;;55       if (v0 <= v1) {
;;;56         return v0;
;;;57       }
;;;58       return v1;
000004  4608              MOV      r0,r1
                  |L2.6|
;;;59     }
000006  4770              BX       lr
;;;60     
                          ENDP

