; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\spi_sim_driver.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\spi_sim_driver.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\Board_Support_Package\spi_sim_driver.c]
                          THUMB

                          AREA ||i.Spi_Delay||, CODE, READONLY, ALIGN=2

                  Spi_Delay PROC
;;;11     
;;;12     static void Spi_Delay(unsigned char n)
000000  b508              PUSH     {r3,lr}
;;;13     {
;;;14     	volatile char i = n;
000002  f88d0000          STRB     r0,[sp,#0]
;;;15     	while(i--);
000006  bf00              NOP      
                  |L1.8|
000008  f89d0000          LDRB     r0,[sp,#0]
00000c  1e41              SUBS     r1,r0,#1
00000e  f88d1000          STRB     r1,[sp,#0]
000012  d2f9              BCS      |L1.8|
;;;16     }
000014  bd08              POP      {r3,pc}
;;;17     
                          ENDP


                          AREA ||i.Spi_Sim_Get_Single_Byte||, CODE, READONLY, ALIGN=2

                  Spi_Sim_Get_Single_Byte PROC
;;;34     
;;;35     unsigned char Spi_Sim_Get_Single_Byte(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;36     {
;;;37     	unsigned char i, nValue = 0;
;;;38     
;;;39     	SCLK_L;
000004  4f11              LDR      r7,|L2.76|
000006  2400              MOVS     r4,#0                 ;37
000008  2620              MOVS     r6,#0x20
00000a  603e              STR      r6,[r7,#0]
;;;40     	Spi_Delay(1);
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       Spi_Delay
;;;41     	for(i = 0; i < 8; i++)
;;;42     	{
;;;43     		SCLK_H;
;;;44     		Spi_Delay(2);
;;;45     		nValue <<= 1;
;;;46     		if(MISO_INPUT)
000012  f8df903c          LDR      r9,|L2.80|
000016  2500              MOVS     r5,#0                 ;41
000018  f1a70804          SUB      r8,r7,#4              ;43
                  |L2.28|
00001c  f8c86000          STR      r6,[r8,#0]            ;43
000020  2002              MOVS     r0,#2                 ;44
000022  f7fffffe          BL       Spi_Delay
000026  0660              LSLS     r0,r4,#25             ;45
000028  0e04              LSRS     r4,r0,#24             ;45
00002a  f8d90000          LDR      r0,[r9,#0]
00002e  06c0              LSLS     r0,r0,#27
000030  d501              BPL      |L2.54|
;;;47     		{
;;;48     			nValue |= 0x01;
000032  f0440401          ORR      r4,r4,#1
                  |L2.54|
;;;49     		}
;;;50     		Spi_Delay(1);
000036  2001              MOVS     r0,#1
000038  f7fffffe          BL       Spi_Delay
;;;51     		SCLK_L;
00003c  603e              STR      r6,[r7,#0]
00003e  1c6d              ADDS     r5,r5,#1
000040  b2ed              UXTB     r5,r5                 ;41
000042  2d08              CMP      r5,#8                 ;41
000044  d3ea              BCC      |L2.28|
;;;52     	}
;;;53     	
;;;54     	return nValue;
000046  4620              MOV      r0,r4
;;;55     }
000048  e8bd87f0          POP      {r4-r10,pc}
;;;56     
                          ENDP

                  |L2.76|
                          DCD      0x40010814
                  |L2.80|
                          DCD      0x40010c08

                          AREA ||i.Spi_Sim_Init||, CODE, READONLY, ALIGN=2

                  Spi_Sim_Init PROC
;;;17     
;;;18     void Spi_Sim_Init(void)
000000  b538              PUSH     {r3-r5,lr}
;;;19     {
;;;20     	GPIO_InitTypeDef GPIO_InitStructure;
;;;21     
;;;22     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5  | GPIO_Pin_7;
000002  20a0              MOVS     r0,#0xa0
000004  f8ad0000          STRH     r0,[sp,#0]
;;;23     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000008  2403              MOVS     r4,#3
00000a  f88d4002          STRB     r4,[sp,#2]
;;;24     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00000e  2010              MOVS     r0,#0x10
;;;25     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000010  4d09              LDR      r5,|L3.56|
000012  f88d0003          STRB     r0,[sp,#3]            ;24
000016  4669              MOV      r1,sp
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       GPIO_Init
;;;26     
;;;27     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
00001e  2040              MOVS     r0,#0x40
000020  f8ad0000          STRH     r0,[sp,#0]
;;;28     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000024  f88d4002          STRB     r4,[sp,#2]
;;;29     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;
000028  2048              MOVS     r0,#0x48
00002a  f88d0003          STRB     r0,[sp,#3]
;;;30     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00002e  4669              MOV      r1,sp
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       GPIO_Init
;;;31     }
000036  bd38              POP      {r3-r5,pc}
;;;32     
                          ENDP

                  |L3.56|
                          DCD      0x40010800

                          AREA ||i.Spi_Sim_Send_Single_Byte||, CODE, READONLY, ALIGN=2

                  Spi_Sim_Send_Single_Byte PROC
;;;56     
;;;57     void Spi_Sim_Send_Single_Byte(unsigned char nData)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;58     {
;;;59     	unsigned char i;
;;;60     
;;;61     	SCLK_L;
000004  4f13              LDR      r7,|L4.84|
000006  2520              MOVS     r5,#0x20
000008  4606              MOV      r6,r0                 ;58
00000a  603d              STR      r5,[r7,#0]
;;;62     	Spi_Delay(1);
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       Spi_Delay
;;;63     	for(i = 0; i < 8; i++)
000012  2400              MOVS     r4,#0
;;;64     	{
;;;65     		if(0x80 & nData)
;;;66     		{
;;;67     			MOSI_H;
000014  f04f0980          MOV      r9,#0x80
000018  f1a70804          SUB      r8,r7,#4
                  |L4.28|
00001c  0630              LSLS     r0,r6,#24             ;65
;;;68     		}
;;;69     		else
;;;70     		{
;;;71     			MOSI_L;
00001e  4648              MOV      r0,r9
000020  d502              BPL      |L4.40|
000022  f8c80000          STR      r0,[r8,#0]            ;67
000026  e000              B        |L4.42|
                  |L4.40|
000028  6038              STR      r0,[r7,#0]
                  |L4.42|
;;;72     		}
;;;73     		Spi_Delay(1);
00002a  2001              MOVS     r0,#1
00002c  f7fffffe          BL       Spi_Delay
;;;74     		SCLK_H;
000030  f8c85000          STR      r5,[r8,#0]
;;;75     		Spi_Delay(1);
000034  2001              MOVS     r0,#1
000036  f7fffffe          BL       Spi_Delay
;;;76     		SCLK_L;
00003a  603d              STR      r5,[r7,#0]
;;;77     		Spi_Delay(1);
00003c  2001              MOVS     r0,#1
00003e  f7fffffe          BL       Spi_Delay
;;;78     		nData <<= 1;
000042  0670              LSLS     r0,r6,#25
000044  1c64              ADDS     r4,r4,#1
000046  0e06              LSRS     r6,r0,#24
000048  b2e4              UXTB     r4,r4                 ;63
00004a  2c08              CMP      r4,#8                 ;63
00004c  d3e6              BCC      |L4.28|
;;;79     	}
;;;80     }
00004e  e8bd87f0          POP      {r4-r10,pc}
;;;81     
                          ENDP

000052  0000              DCW      0x0000
                  |L4.84|
                          DCD      0x40010814
