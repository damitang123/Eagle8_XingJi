; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\framewin__updatebuttons.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\framewin__updatebuttons.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\FRAMEWIN__UpdateButtons.c]
                          THUMB

                          AREA ||i.FRAMEWIN__UpdateButtons||, CODE, READONLY, ALIGN=1

                  FRAMEWIN__UpdateButtons PROC
;;;40     */
;;;41     void FRAMEWIN__UpdateButtons(FRAMEWIN_Obj* pObj, int OldHeight) {
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  4607              MOV      r7,r0
;;;42       int TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
000008  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
;;;43       int Diff = TitleHeight - OldHeight;
00000c  9904              LDR      r1,[sp,#0x10]
00000e  1a40              SUBS     r0,r0,r1
000010  ea5f0a00          MOVS     r10,r0
;;;44       if (Diff) {
000014  d05e              BEQ      |L1.212|
;;;45         WM_HWIN hLeft;
;;;46         WM_HWIN hRight;
;;;47         WM_HWIN hChild;
;;;48         WM_Obj* pChild;
;;;49         GUI_RECT r;
;;;50         int xLeft, xRight, n;
;;;51         n = 0;
000016  f04f0800          MOV      r8,#0
                  |L1.26|
;;;52         do {
;;;53           hLeft  = hRight = 0;
;;;54           xLeft  = GUI_XMAX;
00001a  f6407bff          MOV      r11,#0xfff
;;;55           xRight = GUI_XMIN;
00001e  f1cb0000          RSB      r0,r11,#0
000022  2500              MOVS     r5,#0                 ;53
;;;56           for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
000024  9000              STR      r0,[sp,#0]
000026  462e              MOV      r6,r5                 ;53
000028  f9b74018          LDRSH    r4,[r7,#0x18]
00002c  e033              B        |L1.150|
                  |L1.46|
;;;57             pChild = WM_H2P(hChild);
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       GUI_ALLOC_h2p
000034  4681              MOV      r9,r0
;;;58             r = pChild->Rect;
000036  e9d01000          LDRD     r1,r0,[r0,#0]
00003a  e9cd1001          STRD     r1,r0,[sp,#4]
;;;59             GUI_MoveRect(&r, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
00003e  f9b70002          LDRSH    r0,[r7,#2]
000042  4242              RSBS     r2,r0,#0
000044  f9b70000          LDRSH    r0,[r7,#0]
000048  4241              RSBS     r1,r0,#0
00004a  a801              ADD      r0,sp,#4
00004c  f7fffffe          BL       GUI_MoveRect
;;;60             if ((r.y0 == pObj->Props.BorderSize) && ((r.y1 - r.y0 + 1) == OldHeight)) {
000050  f9bd0006          LDRSH    r0,[sp,#6]
000054  f9b71042          LDRSH    r1,[r7,#0x42]
000058  4288              CMP      r0,r1
00005a  d11a              BNE      |L1.146|
00005c  f9bd100a          LDRSH    r1,[sp,#0xa]
000060  1a08              SUBS     r0,r1,r0
000062  9904              LDR      r1,[sp,#0x10]
000064  1c40              ADDS     r0,r0,#1
000066  4288              CMP      r0,r1
000068  d113              BNE      |L1.146|
;;;61               if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
00006a  f899001c          LDRB     r0,[r9,#0x1c]
00006e  0600              LSLS     r0,r0,#24
000070  d509              BPL      |L1.134|
;;;62                 if (r.x1 > xRight) {
000072  f9bd1008          LDRSH    r1,[sp,#8]
000076  9800              LDR      r0,[sp,#0]
000078  4281              CMP      r1,r0
00007a  dd0a              BLE      |L1.146|
;;;63                   hRight = hChild;
;;;64                   xRight = r.x0;
00007c  f9bd0004          LDRSH    r0,[sp,#4]
000080  4626              MOV      r6,r4                 ;63
000082  9000              STR      r0,[sp,#0]
000084  e005              B        |L1.146|
                  |L1.134|
;;;65                 }
;;;66               } else {
;;;67                 if (r.x0 < xLeft) {
000086  f9bd0004          LDRSH    r0,[sp,#4]
00008a  4558              CMP      r0,r11
00008c  da01              BGE      |L1.146|
;;;68                   hLeft = hChild;
00008e  4625              MOV      r5,r4
;;;69                   xLeft = r.x0;
000090  4683              MOV      r11,r0
                  |L1.146|
000092  f9b9401a          LDRSH    r4,[r9,#0x1a]         ;56
                  |L1.150|
000096  2c00              CMP      r4,#0                 ;56
000098  d1c9              BNE      |L1.46|
;;;70                 }
;;;71               }
;;;72             }
;;;73           }
;;;74           if (hLeft) {
00009a  b155              CBZ      r5,|L1.178|
;;;75             WM_ResizeWindow(hLeft, Diff, Diff);
00009c  4652              MOV      r2,r10
00009e  4611              MOV      r1,r2
0000a0  4628              MOV      r0,r5
0000a2  f7fffffe          BL       WM_ResizeWindow
;;;76             WM_MoveWindow(hLeft, n * Diff, 0);
0000a6  fb08f10a          MUL      r1,r8,r10
0000aa  2200              MOVS     r2,#0
0000ac  4628              MOV      r0,r5
0000ae  f7fffffe          BL       WM_MoveWindow
                  |L1.178|
;;;77           }
;;;78           if (hRight) {
0000b2  b15e              CBZ      r6,|L1.204|
;;;79             WM_ResizeWindow(hRight, Diff, Diff);
0000b4  4652              MOV      r2,r10
0000b6  4611              MOV      r1,r2
0000b8  4630              MOV      r0,r6
0000ba  f7fffffe          BL       WM_ResizeWindow
;;;80             WM_MoveWindow(hRight, -(n * Diff), 0);
0000be  fb08f00a          MUL      r0,r8,r10
0000c2  4241              RSBS     r1,r0,#0
0000c4  2200              MOVS     r2,#0
0000c6  4630              MOV      r0,r6
0000c8  f7fffffe          BL       WM_MoveWindow
                  |L1.204|
;;;81           }
;;;82           n++;
0000cc  f1080801          ADD      r8,r8,#1
;;;83         } while (hLeft || hRight);
0000d0  4335              ORRS     r5,r5,r6
0000d2  d1a2              BNE      |L1.26|
                  |L1.212|
;;;84       }
;;;85     }
0000d4  b005              ADD      sp,sp,#0x14
0000d6  e8bd8ff0          POP      {r4-r11,pc}
;;;86     
                          ENDP

