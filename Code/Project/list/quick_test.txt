; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\quick_test.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\quick_test.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\User\quick_test.c]
                          THUMB

                          AREA ||i.Alc_Adc_Temperature_Calibration||, CODE, READONLY, ALIGN=2

                  Alc_Adc_Temperature_Calibration PROC
;;;43     
;;;44     static unsigned short Alc_Adc_Temperature_Calibration(unsigned long nOrignalValue, float fTemperature)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;45     {
000004  b08f              SUB      sp,sp,#0x3c
000006  4688              MOV      r8,r1
000008  4681              MOV      r9,r0
;;;46     	typedef struct
;;;47     	{
;;;48     		signed char nTemperature;
;;;49     		float fRatio;
;;;50     	}__attribute__ ((packed))sTempCaliRatio;
;;;51     
;;;52     	const sTempCaliRatio aTempCaliRatio[]=
00000a  2238              MOVS     r2,#0x38
00000c  492e              LDR      r1,|L1.200|
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memcpy4
;;;53     	{
;;;54     		-5,		2.0,
;;;55     		0,		1.7,
;;;56     		5,		1.4,
;;;57     		10,		1.2,
;;;58     		15,		1.1,
;;;59     		20,		1.05,
;;;60     		25,		1.0,
;;;61     		30,		1.0,
;;;62     		35,		1.0,
;;;63     		40,		0.98,
;;;64     		45,		0.95,
;;;65     	};
;;;66     
;;;67     	int i = 0;
000014  2400              MOVS     r4,#0
;;;68     	float fRatio,k;
;;;69     	float x1,x2,y1,y2;
;;;70     	unsigned char nSize = ARR_SIZE(aTempCaliRatio);
000016  260b              MOVS     r6,#0xb
;;;71     
;;;72     	if(fTemperature <= aTempCaliRatio[0].nTemperature)
000018  f99d0000          LDRSB    r0,[sp,#0]
00001c  f7fffffe          BL       __aeabi_i2f
000020  4641              MOV      r1,r8
000022  f7fffffe          BL       __aeabi_cfrcmple
000026  d802              BHI      |L1.46|
;;;73     	{
;;;74     		fRatio = aTempCaliRatio[0].fRatio;
000028  f8dd4001          LDR      r4,[sp,#1]
00002c  e040              B        |L1.176|
                  |L1.46|
;;;75     	}
;;;76     	else if(fTemperature >= aTempCaliRatio[nSize - 1].nTemperature)
00002e  f99d0032          LDRSB    r0,[sp,#0x32]
000032  f7fffffe          BL       __aeabi_i2f
000036  4641              MOV      r1,r8
000038  f7fffffe          BL       __aeabi_cfcmple
00003c  d802              BHI      |L1.68|
;;;77     	{
;;;78     		fRatio = aTempCaliRatio[nSize - 1].fRatio;
00003e  f8dd4033          LDR      r4,[sp,#0x33]
000042  e035              B        |L1.176|
                  |L1.68|
000044  ea4f050d          MOV.W    r5,sp                 ;52
                  |L1.72|
;;;79     	}
;;;80     	else
;;;81     	{
;;;82     		for(i = 0; i < nSize ; i++)
;;;83     		{
;;;84     			if(fTemperature < aTempCaliRatio[i].nTemperature) 
000048  eb040084          ADD      r0,r4,r4,LSL #2
00004c  5628              LDRSB    r0,[r5,r0]
00004e  f7fffffe          BL       __aeabi_i2f
000052  4641              MOV      r1,r8
000054  f7fffffe          BL       __aeabi_cfrcmple
000058  d302              BCC      |L1.96|
00005a  1c64              ADDS     r4,r4,#1
00005c  42b4              CMP      r4,r6                 ;82
00005e  dbf3              BLT      |L1.72|
                  |L1.96|
;;;85     				break;
;;;86     		}
;;;87     
;;;88     		y2 = aTempCaliRatio[i].fRatio;
000060  eb040084          ADD      r0,r4,r4,LSL #2
000064  1944              ADDS     r4,r0,r5
;;;89     		y1 = aTempCaliRatio[i - 1].fRatio;
;;;90     		x2 = aTempCaliRatio[i].nTemperature;
000066  5628              LDRSB    r0,[r5,r0]
000068  f8d47001          LDR      r7,[r4,#1]            ;88
00006c  f8546c04          LDR      r6,[r4,#-4]           ;89
000070  f7fffffe          BL       __aeabi_i2f
000074  4605              MOV      r5,r0
;;;91     		x1 = aTempCaliRatio[i - 1].nTemperature;
000076  f9140c05          LDRSB    r0,[r4,#-5]
00007a  f7fffffe          BL       __aeabi_i2f
00007e  4604              MOV      r4,r0
;;;92     
;;;93     		k = (float)(y2 - y1) / (float)(x2 - x1);
000080  4601              MOV      r1,r0
000082  4628              MOV      r0,r5
000084  f7fffffe          BL       __aeabi_fsub
000088  4605              MOV      r5,r0
00008a  4631              MOV      r1,r6
00008c  4638              MOV      r0,r7
00008e  f7fffffe          BL       __aeabi_fsub
000092  4629              MOV      r1,r5
000094  f7fffffe          BL       __aeabi_fdiv
000098  4605              MOV      r5,r0
;;;94     
;;;95     		fRatio = y1 + k * (fTemperature - x1);
00009a  4621              MOV      r1,r4
00009c  4640              MOV      r0,r8
00009e  f7fffffe          BL       __aeabi_fsub
0000a2  4629              MOV      r1,r5
0000a4  f7fffffe          BL       __aeabi_fmul
0000a8  4631              MOV      r1,r6
0000aa  f7fffffe          BL       __aeabi_fadd
0000ae  4604              MOV      r4,r0
                  |L1.176|
;;;96     	}
;;;97     
;;;98     	return (unsigned short)(nOrignalValue * fRatio);
0000b0  4648              MOV      r0,r9
0000b2  f7fffffe          BL       __aeabi_ui2f
0000b6  4621              MOV      r1,r4
0000b8  f7fffffe          BL       __aeabi_fmul
0000bc  f7fffffe          BL       __aeabi_f2uiz
;;;99     }
0000c0  b00f              ADD      sp,sp,#0x3c
0000c2  b280              UXTH     r0,r0                 ;98
0000c4  e8bd83f0          POP      {r4-r9,pc}
;;;100    
                          ENDP

                  |L1.200|
                          DCD      ||.constdata||

                          AREA ||i.Scan_Quick_Test_State||, CODE, READONLY, ALIGN=2

                  Scan_Quick_Test_State PROC
;;;418    
;;;419    void Scan_Quick_Test_State(WM_MESSAGE *pMsg)
000000  b510              PUSH     {r4,lr}
;;;420    {
000002  4604              MOV      r4,r0
;;;421    	switch(g_eTestState)
000004  481d              LDR      r0,|L2.124|
000006  7800              LDRB     r0,[r0,#0]  ; g_eTestState
000008  1f00              SUBS     r0,r0,#4
00000a  280a              CMP      r0,#0xa
00000c  d235              BCS      |L2.122|
00000e  e8dff000          TBB      [pc,r0]
000012  050a              DCB      0x05,0x0a
000014  0f343434          DCB      0x0f,0x34,0x34,0x34
000018  34341419          DCB      0x34,0x34,0x14,0x19
;;;422    	{	
;;;423    		case eWaitStart:
;;;424    			_WaitStart(pMsg);
00001c  4620              MOV      r0,r4
00001e  e8bd4010          POP      {r4,lr}
000022  f7ffbffe          B.W      _WaitStart
;;;425    			break;
;;;426    			
;;;427    		case eStartTestPrepare:
;;;428    			_StartTestPrepare(pMsg);
000026  4620              MOV      r0,r4
000028  e8bd4010          POP      {r4,lr}
00002c  f7ffbffe          B.W      _StartTestPrepare
;;;429    			break;
;;;430    	
;;;431    		case eInhaling:
;;;432    			_Inhaling(pMsg);
000030  4620              MOV      r0,r4
000032  e8bd4010          POP      {r4,lr}
000036  f7ffbffe          B.W      _Inhaling
;;;433    			break;
;;;434    
;;;435    		case eFinishTest:
;;;436    			_FinishTest(pMsg);
00003a  4620              MOV      r0,r4
00003c  e8bd4010          POP      {r4,lr}
000040  f7ffbffe          B.W      _FinishTest
000044  480e              LDR      r0,|L2.128|
000046  490f              LDR      r1,|L2.132|
000048  7800              LDRB     r0,[r0,#0]  ; g_eTestMode
00004a  74c8              STRB     r0,[r1,#0x13]
00004c  480e              LDR      r0,|L2.136|
00004e  490f              LDR      r1,|L2.140|
000050  68c0              LDR      r0,[r0,#0xc]  ; g_fAlcValue
000052  6008              STR      r0,[r1,#0]  ; g_fAlcoholVolume
000054  f7fffffe          BL       Adc_Get_Sensor_Temperature
000058  490d              LDR      r1,|L2.144|
00005a  6809              LDR      r1,[r1,#0]  ; pTestWin
00005c  6308              STR      r0,[r1,#0x30]
00005e  490d              LDR      r1,|L2.148|
000060  2000              MOVS     r0,#0
000062  60c8              STR      r0,[r1,#0xc]  ; g_sAlcSample
000064  f9b40004          LDRSH    r0,[r4,#4]
000068  f7fffffe          BL       WM_DeleteWindow
00006c  f7fffffe          BL       GetLastWinFromList
000070  e8bd4010          POP      {r4,lr}
000074  2101              MOVS     r1,#1
000076  f7ffbffe          B.W      CW_ShowReport_Create
                  |L2.122|
;;;437    			break;
;;;438    		
;;;439    		case eDisplayResult:
;;;440    			_DisplayResult(pMsg);
;;;441    			break;
;;;442    	}
;;;443    }
00007a  bd10              POP      {r4,pc}
;;;444    
                          ENDP

                  |L2.124|
                          DCD      g_eTestState
                  |L2.128|
                          DCD      g_eTestMode
                  |L2.132|
                          DCD      g_sRecord
                  |L2.136|
                          DCD      ||.data||
                  |L2.140|
                          DCD      g_fAlcoholVolume
                  |L2.144|
                          DCD      pTestWin
                  |L2.148|
                          DCD      g_sAlcSample

                          AREA ||i._FinishTest||, CODE, READONLY, ALIGN=2

                  _FinishTest PROC
;;;332    
;;;333    static void _FinishTest(WM_MESSAGE *pMsg)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;334    {
;;;335    	/*ÖØÖÃÉ¨Ãè¶¨Ê±Æ÷.*/
;;;336    	GUI_TIMER_SetPeriod(pTestWin->hTMTest, 50);
000004  4829              LDR      r0,|L3.172|
000006  2132              MOVS     r1,#0x32
000008  6800              LDR      r0,[r0,#0]  ; pTestWin
00000a  f9b0006e          LDRSH    r0,[r0,#0x6e]
00000e  f7fffffe          BL       GUI_TIMER_SetPeriod
;;;337    	
;;;338    	/*Í£µô³éÆø,´ò¿ªÇåÁã¿ª¹Ø¿ìËÙÇåÁã*/
;;;339    	Gpio_Ctrl(eGpio_Moto_Ctrl, false);
000012  2100              MOVS     r1,#0
000014  200b              MOVS     r0,#0xb
000016  f7fffffe          BL       Gpio_Ctrl
;;;340    	Gpio_Ctrl(eGpio_QuickTest_Alc_Clean_Sw_Ctrl, true);
00001a  2101              MOVS     r1,#1
00001c  2008              MOVS     r0,#8
00001e  f7fffffe          BL       Gpio_Ctrl
;;;341    
;;;342    	/*´æ´¢ÀÛ¼Æ³éÆøÊ±¼ä.*/
;;;343    	if(g_nStartInhaleTime)
000022  4c23              LDR      r4,|L3.176|
000024  2600              MOVS     r6,#0
000026  6820              LDR      r0,[r4,#0]  ; g_nStartInhaleTime
000028  b188              CBZ      r0,|L3.78|
;;;344    	{
;;;345    		g_fTotalInhaleTimeCounter += (float)(Get_System_Time() - g_nStartInhaleTime) / (float)1000;
00002a  f7fffffe          BL       Get_System_Time
00002e  6821              LDR      r1,[r4,#0]  ; g_nStartInhaleTime
000030  1a40              SUBS     r0,r0,r1
000032  f7fffffe          BL       __aeabi_ui2f
000036  491f              LDR      r1,|L3.180|
000038  f7fffffe          BL       __aeabi_fdiv
00003c  4d1e              LDR      r5,|L3.184|
00003e  6829              LDR      r1,[r5,#0]  ; g_fTotalInhaleTimeCounter
000040  f7fffffe          BL       __aeabi_fadd
;;;346    		Data_Total_InhaleTime_Counter_Save(&g_fTotalInhaleTimeCounter);
000044  6028              STR      r0,[r5,#0]  ; g_fTotalInhaleTimeCounter
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       Data_Total_InhaleTime_Counter_Save
;;;347    		g_nStartInhaleTime = 0;
00004c  6026              STR      r6,[r4,#0]  ; g_nStartInhaleTime
                  |L3.78|
;;;348    	}
;;;349    
;;;350    	/*¸ù¾Ýµ¥Î»×ª»»½á¹û*/
;;;351    	if(g_fAlcValue < MIN_DISPLAY_ALC_VALUE)
00004e  481b              LDR      r0,|L3.188|
;;;352    	{
;;;353    		g_fAlcValue = 0;
;;;354    	}
;;;355    
;;;356    #if TRIGER_DRINK_ALARM_AFTER_INHALE
;;;357    	/*¸ù¾Ý¾Æ¾«Êý¾ÝÖµ,ÏÔÊ¾²»Í¬µÄ×´Ì¬.*/
;;;358    	if(g_fAlcValue > g_sTestParam.fAlcDrinkThreshold && !s_bAlreadyTrigerAlcAlarm)
;;;359    	{
;;;360    		Voc_Cmd(eVOC_RESULT_DRINK);
;;;361    		if(g_sTestParam.nAlcAlarmMode == 2 || g_sTestParam.nAlcAlarmMode == 3)
;;;362    		{
;;;363    		//	Gpio_Ctrl(eGpio_Vibrate_Ctrl,true);
;;;364    		}
;;;365    		if(g_sTestParam.nAlcAlarmMode == 1 || g_sTestParam.nAlcAlarmMode == 3)
;;;366    		{
;;;367    		//	Led_Alcohol_Concentration_Alarm_On(g_fAlcValue);
;;;368    		}
;;;369    		s_nStartAlcAlarmTime= Get_System_Time();
;;;370    		s_bAlreadyTrigerAlcAlarm = true;
;;;371    	}
;;;372    	else
;;;373    	{
;;;374    		Voc_Cmd(eVOC_RESULT_PASS);
;;;375    	}
;;;376    #else
;;;377    	if(g_fAlcValue < g_sTestParam.fAlcDrinkThreshold)
000050  4d1b              LDR      r5,|L3.192|
000052  68c1              LDR      r1,[r0,#0xc]          ;351  ; g_fAlcValue
000054  f1b14f82          CMP      r1,#0x41000000        ;351
000058  da00              BGE      |L3.92|
00005a  60c6              STR      r6,[r0,#0xc]          ;353  ; g_fAlcValue
                  |L3.92|
00005c  68a9              LDR      r1,[r5,#8]  ; g_sTestParam
00005e  68c0              LDR      r0,[r0,#0xc]  ; g_fAlcValue
000060  f7fffffe          BL       __aeabi_cfcmple
000064  d202              BCS      |L3.108|
;;;378    	{
;;;379    		Voc_Cmd(eVOC_RESULT_PASS);
000066  200c              MOVS     r0,#0xc
000068  f7fffffe          BL       Voc_Cmd
                  |L3.108|
;;;380    	}
;;;381    #endif
;;;382    
;;;383    	/*¼ÇÂ¼Êý¾Ý*/
;;;384    	g_eTestMode = eTestQuickTest;
00006c  4815              LDR      r0,|L3.196|
00006e  2703              MOVS     r7,#3
;;;385    	if(g_sTestParam.nResultMode == 0)
;;;386    	{
;;;387    		g_sRecord.nTestResult = 0;
000070  4c15              LDR      r4,|L3.200|
000072  7007              STRB     r7,[r0,#0]            ;384
000074  7c28              LDRB     r0,[r5,#0x10]         ;385  ; g_sTestParam
000076  b138              CBZ      r0,|L3.136|
;;;388    	}
;;;389    	else
;;;390    	{
;;;391    		if(g_sRecord.fAlcValue > g_sTestParam.fAlcDrunkThreshold)
000078  68e9              LDR      r1,[r5,#0xc]  ; g_sTestParam
00007a  f8d40005          LDR      r0,[r4,#5]  ; g_sRecord
00007e  f7fffffe          BL       __aeabi_cfrcmple
000082  d203              BCS      |L3.140|
;;;392    		{
;;;393    			g_sRecord.nTestResult = 3;
000084  7627              STRB     r7,[r4,#0x18]
000086  e00b              B        |L3.160|
                  |L3.136|
000088  7626              STRB     r6,[r4,#0x18]         ;387
00008a  e009              B        |L3.160|
                  |L3.140|
;;;394    		}
;;;395    		else if(g_sRecord.fAlcValue > g_sTestParam.fAlcDrinkThreshold)
00008c  68a9              LDR      r1,[r5,#8]  ; g_sTestParam
00008e  f8d40005          LDR      r0,[r4,#5]  ; g_sRecord
000092  f7fffffe          BL       __aeabi_cfrcmple
000096  d201              BCS      |L3.156|
;;;396    		{
;;;397    			g_sRecord.nTestResult = 2;
000098  2002              MOVS     r0,#2
00009a  e000              B        |L3.158|
                  |L3.156|
;;;398    		}
;;;399    		else
;;;400    		{
;;;401    			g_sRecord.nTestResult = 1;
00009c  2001              MOVS     r0,#1
                  |L3.158|
00009e  7620              STRB     r0,[r4,#0x18]         ;397
                  |L3.160|
;;;402    		}
;;;403    	}
;;;404    	
;;;405    	/*×´Ì¬Ìø×ª*/
;;;406    	g_eTestState = eDisplayResult;
0000a0  490a              LDR      r1,|L3.204|
0000a2  200d              MOVS     r0,#0xd
0000a4  7008              STRB     r0,[r1,#0]
;;;407    }
0000a6  e8bd81f0          POP      {r4-r8,pc}
;;;408    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L3.172|
                          DCD      pTestWin
                  |L3.176|
                          DCD      g_nStartInhaleTime
                  |L3.180|
                          DCD      0x447a0000
                  |L3.184|
                          DCD      g_fTotalInhaleTimeCounter
                  |L3.188|
                          DCD      ||.data||
                  |L3.192|
                          DCD      g_sTestParam
                  |L3.196|
                          DCD      g_eTestMode
                  |L3.200|
                          DCD      g_sRecord
                  |L3.204|
                          DCD      g_eTestState

                          AREA ||i._Inhaling||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  _Inhaling PROC
;;;182    
;;;183    static void _Inhaling(WM_MESSAGE *pMsg)
000000  e92d4ff1          PUSH     {r0,r4-r11,lr}
;;;184    {
000004  b092              SUB      sp,sp,#0x48
;;;185    	char aTemp[30],aStrTemp[30];
;;;186    	float fK,fTemp,fAlc;
;;;187    	signed int x0,x1,y0,y1;
;;;188    	unsigned short nAdc,nCaliAdc;
;;;189    	/*¾Æ¾«Å¨¶È¶ÔÓ¦µÄ¿Ì¶È*/
;;;190    	unsigned short nAlcVsYCoordinate;
;;;191    
;;;192    	/*1.»ñÈ¡²ÉÑùµÄADC,²¢½øÐÐÎÂ¶ÈÐ£×¼*/
;;;193    	nAdc = ADC_Get_Quick_ALC_Sensor();
000006  f7fffffe          BL       ADC_Get_Quick_ALC_Sensor
00000a  4604              MOV      r4,r0
;;;194    	fTemp = Adc_Get_Alc_Sensor_Temprature_Value();
00000c  2002              MOVS     r0,#2
00000e  f7fffffe          BL       ADC_Software_Filter
000012  f7fffffe          BL       __aeabi_ui2f
000016  4601              MOV      r1,r0
;;;195    	nCaliAdc = Alc_Adc_Temperature_Calibration(nAdc, fTemp);
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       Alc_Adc_Temperature_Calibration
;;;196    
;;;197    	/*2.ÊµÊ±¼ÆËãµ±Ç°µÄ¾Æ¾«Öµ.*/
;;;198    	if(nCaliAdc < s_nAlc_Adc_Lowest_Threshold)
00001e  f8df81fc          LDR      r8,|L4.540|
;;;199    	{
;;;200    		fAlc = 0;
;;;201    	}
;;;202    	else
;;;203    	{
;;;204    		fK = ((float) 80) / (g_sAlcCalibrationParam.nPeekCaliValue - s_nAlc_Adc_Lowest_Threshold);
;;;205    		fAlc = fK * (nCaliAdc - s_nAlc_Adc_Lowest_Threshold) + 0;
;;;206    	}
;;;207    
;;;208    	/*3.ÖØÓ³Éä³öÖµÇø¼ä*/
;;;209    	if(fAlc < g_sTestParam.nAlcMinRemapValue)
;;;210    	{
;;;211    		fAlc = 0;
;;;212    	}
;;;213    	else
;;;214    	{
;;;215    		fK = (float)MAX_QUICK_TEST_DISPLAY_ALC_VALUE / (float)(MAX_QUICK_TEST_DISPLAY_ALC_VALUE - g_sTestParam.nAlcMinRemapValue);
000022  f8df91fc          LDR      r9,|L4.544|
000026  f8dfb1fc          LDR      r11,|L4.548|
00002a  f8b86004          LDRH     r6,[r8,#4]            ;198  ; s_nAlc_Adc_Lowest_Threshold
00002e  4d7e              LDR      r5,|L4.552|
000030  4604              MOV      r4,r0                 ;195
000032  42b0              CMP      r0,r6                 ;198
000034  d201              BCS      |L4.58|
000036  2400              MOVS     r4,#0                 ;200
000038  e011              B        |L4.94|
                  |L4.58|
00003a  487c              LDR      r0,|L4.556|
00003c  f8d00007          LDR      r0,[r0,#7]            ;204  ; g_sAlcCalibrationParam
000040  1b80              SUBS     r0,r0,r6              ;204
000042  f7fffffe          BL       __aeabi_ui2f
000046  4601              MOV      r1,r0                 ;204
000048  4879              LDR      r0,|L4.560|
00004a  f7fffffe          BL       __aeabi_fdiv
00004e  4607              MOV      r7,r0                 ;204
000050  1ba0              SUBS     r0,r4,r6              ;205
000052  f7fffffe          BL       __aeabi_i2f
000056  4639              MOV      r1,r7                 ;205
000058  f7fffffe          BL       __aeabi_fmul
00005c  4604              MOV      r4,r0                 ;205
                  |L4.94|
00005e  7ee8              LDRB     r0,[r5,#0x1b]         ;209  ; g_sTestParam
000060  f7fffffe          BL       __aeabi_ui2f
000064  4621              MOV      r1,r4                 ;209
000066  f7fffffe          BL       __aeabi_cfrcmple
00006a  d201              BCS      |L4.112|
00006c  2400              MOVS     r4,#0                 ;211
00006e  e018              B        |L4.162|
                  |L4.112|
000070  7eee              LDRB     r6,[r5,#0x1b]  ; g_sTestParam
000072  4630              MOV      r0,r6
000074  f7fffffe          BL       __aeabi_ui2d
000078  2200              MOVS     r2,#0
00007a  464b              MOV      r3,r9
00007c  f7fffffe          BL       __aeabi_drsub
000080  f7fffffe          BL       __aeabi_d2f
000084  4601              MOV      r1,r0
000086  4658              MOV      r0,r11
000088  f7fffffe          BL       __aeabi_fdiv
00008c  4607              MOV      r7,r0
00008e  4630              MOV      r0,r6
;;;216    		fAlc = fK * (fAlc - g_sTestParam.nAlcMinRemapValue) + 0;
000090  f7fffffe          BL       __aeabi_ui2f
000094  4621              MOV      r1,r4
000096  f7fffffe          BL       __aeabi_frsub
00009a  4639              MOV      r1,r7
00009c  f7fffffe          BL       __aeabi_fmul
0000a0  4604              MOV      r4,r0
                  |L4.162|
;;;217    	}
;;;218    
;;;219    	/*4.Çó³ö×î´óµÄ¾Æ¾«Å¨¶ÈÖµ*/
;;;220    	if(fAlc > g_fAlcValue)
0000a2  4646              MOV      r6,r8
0000a4  4620              MOV      r0,r4
0000a6  f8d8100c          LDR      r1,[r8,#0xc]  ; g_fAlcValue
0000aa  f7fffffe          BL       __aeabi_cfrcmple
0000ae  d200              BCS      |L4.178|
;;;221    	{
;;;222    		g_fAlcValue = fAlc;
0000b0  60f4              STR      r4,[r6,#0xc]  ; g_fAlcValue
                  |L4.178|
;;;223    
;;;224    	}
;;;225    
;;;226    	/*5.¼ÆËã»æÍ¼µÄ×ø±ê*/
;;;227    	nAlcVsYCoordinate = fAlc * Get_Curve_Windows_Height() / MAX_QUICK_TEST_DISPLAY_ALC_VALUE;
0000b2  f7fffffe          BL       Get_Curve_Windows_Height
0000b6  f7fffffe          BL       __aeabi_ui2f
0000ba  4621              MOV      r1,r4
0000bc  f7fffffe          BL       __aeabi_fmul
0000c0  f7fffffe          BL       __aeabi_f2d
0000c4  2200              MOVS     r2,#0
0000c6  464b              MOV      r3,r9
0000c8  f7fffffe          BL       __aeabi_ddiv
0000cc  f7fffffe          BL       __aeabi_d2uiz
0000d0  b284              UXTH     r4,r0
;;;228    
;;;229    	/*6.·ÀÖ¹»æÖÆµÄÇúÏßÌ«Ï¸,·ÀÖ¹¿´²»Çå,²»»æÖÆ³¬³ö·¶Î§µÄÇúÏß.*/
;;;230    	if(nAlcVsYCoordinate < 3)
0000d2  2c03              CMP      r4,#3
0000d4  d201              BCS      |L4.218|
;;;231    	{
;;;232    		nAlcVsYCoordinate = 3;
0000d6  2403              MOVS     r4,#3
0000d8  e006              B        |L4.232|
                  |L4.218|
;;;233    	}
;;;234    	else if(nAlcVsYCoordinate >= Get_Curve_Windows_Height())
0000da  f7fffffe          BL       Get_Curve_Windows_Height
0000de  42a0              CMP      r0,r4
0000e0  d802              BHI      |L4.232|
;;;235    	{
;;;236    		nAlcVsYCoordinate = Get_Curve_Windows_Height();
0000e2  f7fffffe          BL       Get_Curve_Windows_Height
0000e6  4604              MOV      r4,r0
                  |L4.232|
;;;237    	}
;;;238    
;;;239    	/*7.¸ù¾Ý¾Æ¾«Å¨¶È»æÖÆ´¹Ö±Ïß.*/
;;;240    	x0 = s_nInhalingTimeCnt + 20; /*COORDINATE_X0 = 20*/
;;;241    	y0 = 200;
;;;242    	x1 = s_nInhalingTimeCnt + 20;/*COORDINATE_X0 = 20*/
;;;243    	y1  = 200 - nAlcVsYCoordinate;
;;;244    
;;;245    	WM_SelectWindow(pTestWin->hQuickTestDraw);
0000e8  f8dfa148          LDR      r10,|L4.564|
0000ec  46b1              MOV      r9,r6                 ;240
0000ee  8876              LDRH     r6,[r6,#2]            ;240  ; s_nInhalingTimeCnt
0000f0  f8da0000          LDR      r0,[r10,#0]  ; pTestWin
0000f4  f04f08c8          MOV      r8,#0xc8              ;241
0000f8  f1c407c8          RSB      r7,r4,#0xc8           ;243
0000fc  f9b00024          LDRSH    r0,[r0,#0x24]
000100  3614              ADDS     r6,r6,#0x14
000102  f7fffffe          BL       WM_SelectWindow
;;;246    	GUI_SetColor(RGB2Hex(255,128,0));
000106  f24800ff          MOV      r0,#0x80ff
00010a  f7fffffe          BL       GUI_SetColor
;;;247    	GUI_DrawLine(x0, y0,  x1, y1);
00010e  4632              MOV      r2,r6
000110  463b              MOV      r3,r7
000112  4641              MOV      r1,r8
000114  4610              MOV      r0,r2
000116  f7fffffe          BL       GUI_DrawLine
;;;248    
;;;249    	/*8.¼ÇÂ¼ÏÂ²ÉÑùÊ±¼ÆËã³öÀ´µÄY×ø±ê,ÖØ»æÊ±Ê¹ÓÃ*/
;;;250    	if(s_nInhalingTimeCnt < Get_Curve_Windows_Width())
00011a  f7fffffe          BL       Get_Curve_Windows_Width
00011e  4601              MOV      r1,r0
000120  f8b90002          LDRH     r0,[r9,#2]  ; s_nInhalingTimeCnt
000124  4281              CMP      r1,r0
000126  d901              BLS      |L4.300|
;;;251    	{
;;;252    		g_aSampleBuffer[s_nInhalingTimeCnt] = nAlcVsYCoordinate;
000128  4943              LDR      r1,|L4.568|
00012a  540c              STRB     r4,[r1,r0]
                  |L4.300|
;;;253    	#if defined(_USER_DEBUG_)
;;;254    		g_aSampleDebugBufferA[s_nInhalingTimeCnt] = nAdc;
;;;255    		g_aSampleDebugBufferB[s_nInhalingTimeCnt] = nCaliAdc;
;;;256    		g_nSampleTemp[s_nInhalingTimeCnt] = fTemp;
;;;257    	#endif
;;;258    	}
;;;259    
;;;260    #if !TRIGER_DRINK_ALARM_AFTER_INHALE
;;;261    	/*9.¸ù¾Ý¾Æ¾«Êý¾ÝÖµ,ÏÔÊ¾²»Í¬µÄ×´Ì¬.*/
;;;262    	if(g_fAlcValue > g_sTestParam.fAlcDrinkThreshold && !s_bAlreadyTrigerAlcAlarm)
00012c  68a9              LDR      r1,[r5,#8]  ; g_sTestParam
00012e  464c              MOV      r4,r9
000130  f8d9000c          LDR      r0,[r9,#0xc]  ; g_fAlcValue
000134  f7fffffe          BL       __aeabi_cfrcmple
000138  d209              BCS      |L4.334|
00013a  7820              LDRB     r0,[r4,#0]  ; s_bAlreadyTrigerAlcAlarm
00013c  b938              CBNZ     r0,|L4.334|
;;;263    	{
;;;264    		Voc_Cmd(eVOC_RESULT_DRINK);
00013e  2002              MOVS     r0,#2
000140  f7fffffe          BL       Voc_Cmd
;;;265    		if(g_sTestParam.nAlcAlarmMode == 2 || g_sTestParam.nAlcAlarmMode == 3)
;;;266    		{
;;;267    		//	Gpio_Ctrl(eGpio_Vibrate_Ctrl,true);
;;;268    		}
;;;269    		if(g_sTestParam.nAlcAlarmMode == 1 || g_sTestParam.nAlcAlarmMode == 3)
;;;270    		{
;;;271    		//	Led_Alcohol_Concentration_Alarm_On(g_fAlcValue);
;;;272    		}
;;;273    		s_nStartAlcAlarmTime= Get_System_Time();
000144  f7fffffe          BL       Get_System_Time
;;;274    		s_bAlreadyTrigerAlcAlarm = true;
000148  60a0              STR      r0,[r4,#8]  ; s_nStartAlcAlarmTime
00014a  2001              MOVS     r0,#1
00014c  7020              STRB     r0,[r4,#0]
                  |L4.334|
;;;275    	}
;;;276    #endif
;;;277    
;;;278    	/*10.¸üÐÂÊµÊ±³éÆøÊ±¼ä*/
;;;279    	sprintf(aTemp,"T= %.1fS", ((float)g_sTestParam.nInhaleTime * (float)s_nInhalingTimeCnt / (float)Get_Curve_Windows_Width()) / 1000);
00014e  f7fffffe          BL       Get_Curve_Windows_Width
000152  f7fffffe          BL       __aeabi_ui2f
000156  4606              MOV      r6,r0
000158  8860              LDRH     r0,[r4,#2]  ; s_nInhalingTimeCnt
00015a  f7fffffe          BL       __aeabi_ui2f
00015e  4607              MOV      r7,r0
000160  6868              LDR      r0,[r5,#4]  ; g_sTestParam
000162  f7fffffe          BL       __aeabi_ui2f
000166  4639              MOV      r1,r7
000168  f7fffffe          BL       __aeabi_fmul
00016c  4631              MOV      r1,r6
00016e  f7fffffe          BL       __aeabi_fdiv
000172  4932              LDR      r1,|L4.572|
000174  f7fffffe          BL       __aeabi_fdiv
000178  f7fffffe          BL       __aeabi_f2d
00017c  4602              MOV      r2,r0
00017e  460b              MOV      r3,r1
000180  a12f              ADR      r1,|L4.576|
000182  a801              ADD      r0,sp,#4
000184  f7fffffe          BL       __2sprintf
;;;280    	TEXT_SetText(pTestWin->hQuickTestDisplayTime, aTemp);
000188  f8da0000          LDR      r0,[r10,#0]  ; pTestWin
00018c  4656              MOV      r6,r10
00018e  a901              ADD      r1,sp,#4
000190  f9b00028          LDRSH    r0,[r0,#0x28]
000194  f7fffffe          BL       TEXT_SetText
;;;281    
;;;282    	/*11.¸üÐÂÊµÊ±×î´óµÄ²âÁ¿¾Æ¾«Öµ*/
;;;283    	if(g_fAlcValue >= MAX_QUICK_TEST_DISPLAY_ALC_VALUE)
000198  68e3              LDR      r3,[r4,#0xc]  ; g_fAlcValue
00019a  4658              MOV      r0,r11
00019c  4283              CMP      r3,r0
00019e  db0b              BLT      |L4.440|
;;;284    	{
;;;285    		float fAlcUnitConvertValue;
;;;286    		aTemp[0] = '>';
0001a0  213e              MOVS     r1,#0x3e
0001a2  f88d1004          STRB     r1,[sp,#4]
;;;287    		fAlcUnitConvertValue = Get_Final_Convert_Display_Result(MAX_QUICK_TEST_DISPLAY_ALC_VALUE,g_sTestParam.nTestUnit, g_sTestParam.nBrACBACK);
0001a6  886a              LDRH     r2,[r5,#2]  ; g_sTestParam
0001a8  7869              LDRB     r1,[r5,#1]  ; g_sTestParam
0001aa  f7fffffe          BL       Get_Final_Convert_Display_Result
;;;288    		Get_Format_Alc_Convert_String(fAlcUnitConvertValue,g_sTestParam.nTestUnit,&aTemp[1],eFormatToInt);
0001ae  7869              LDRB     r1,[r5,#1]  ; g_sTestParam
0001b0  2300              MOVS     r3,#0
0001b2  f10d0205          ADD      r2,sp,#5
;;;289    	}
0001b6  e007              B        |L4.456|
                  |L4.440|
;;;290    	else
;;;291    	{
;;;292    		float fAlcUnitConvertValue;
;;;293    		fAlcUnitConvertValue = Get_Final_Convert_Display_Result(g_fAlcValue,g_sTestParam.nTestUnit, g_sTestParam.nBrACBACK);
0001b8  886a              LDRH     r2,[r5,#2]  ; g_sTestParam
0001ba  7869              LDRB     r1,[r5,#1]  ; g_sTestParam
0001bc  4618              MOV      r0,r3
0001be  f7fffffe          BL       Get_Final_Convert_Display_Result
;;;294    		Get_Format_Alc_Convert_String(fAlcUnitConvertValue,g_sTestParam.nTestUnit,aTemp,eFormatToInt);
0001c2  7869              LDRB     r1,[r5,#1]  ; g_sTestParam
0001c4  2300              MOVS     r3,#0
0001c6  aa01              ADD      r2,sp,#4
                  |L4.456|
0001c8  f7fffffe          BL       Get_Format_Alc_Convert_String
;;;295    	}
;;;296    	sprintf(aStrTemp,"%s= %s%s", Get_TestMode_String(g_sTestParam.nTestUnit), aTemp, Get_Unit_String(g_sTestParam.nTestUnit));
0001cc  7868              LDRB     r0,[r5,#1]  ; g_sTestParam
0001ce  f7fffffe          BL       Get_Unit_String
0001d2  4607              MOV      r7,r0
0001d4  7868              LDRB     r0,[r5,#1]  ; g_sTestParam
0001d6  f7fffffe          BL       Get_TestMode_String
0001da  4602              MOV      r2,r0
0001dc  ab01              ADD      r3,sp,#4
0001de  a11b              ADR      r1,|L4.588|
0001e0  a809              ADD      r0,sp,#0x24
0001e2  9700              STR      r7,[sp,#0]
0001e4  f7fffffe          BL       __2sprintf
;;;297    	TEXT_SetText(pTestWin->hQuickTestDisplayValue, aStrTemp);
0001e8  6830              LDR      r0,[r6,#0]  ; pTestWin
0001ea  a909              ADD      r1,sp,#0x24
0001ec  f9b00026          LDRSH    r0,[r0,#0x26]
0001f0  f7fffffe          BL       TEXT_SetText
;;;298    
;;;299    	/*12.ÅÐ¶Ï³éÆøÊÇ·ñÍê³É.*/
;;;300    	if(++s_nInhalingTimeCnt > Get_Curve_Windows_Width())
0001f4  f7fffffe          BL       Get_Curve_Windows_Width
0001f8  8861              LDRH     r1,[r4,#2]  ; s_nInhalingTimeCnt
;;;301    	{
;;;302    		/*³éÆøÊ±¼äÍê*/
;;;303    	#if ALWAYS_INHAL_WHILE_WITHOUT_ALCOHOL
;;;304    		if(g_fAlcValue <= g_sTestParam.fAlcDrinkThreshold)
;;;305    		{
;;;306    			/*¼ÌÐø³éÆø*/
;;;307    			g_eTestState = eStartTestPrepare;
;;;308    			if(g_nStartInhaleTime)
;;;309    			{
;;;310    				g_fTotalInhaleTimeCounter += (float)(Get_System_Time() - g_nStartInhaleTime) / (float)1000;
;;;311    				Data_Total_InhaleTime_Counter_Save(&g_fTotalInhaleTimeCounter);
;;;312    				g_nStartInhaleTime = 0;
;;;313    			}
;;;314    		}
;;;315    		else
;;;316    		{
;;;317    			g_eTestState = eFinishTest;
;;;318    		}
;;;319    	#else
;;;320    		g_eTestState = eFinishTest;
0001fa  4a17              LDR      r2,|L4.600|
0001fc  1c49              ADDS     r1,r1,#1              ;300
0001fe  b28b              UXTH     r3,r1                 ;300
000200  210c              MOVS     r1,#0xc
000202  8063              STRH     r3,[r4,#2]            ;300
000204  4298              CMP      r0,r3                 ;300
000206  d200              BCS      |L4.522|
000208  7011              STRB     r1,[r2,#0]
                  |L4.522|
;;;321    	#endif
;;;322    	}
;;;323    
;;;324    	/*13.´¦Àí°´¼ü ÊÂ¼þ,Ö»´¦ÀíÖÐ¼ä°´¼ü-->ÌáÇ°½áÊø²âÊÔ*/
;;;325    	switch(WM_Key_Code)
00020a  9812              LDR      r0,[sp,#0x48]
00020c  6880              LDR      r0,[r0,#8]
00020e  6800              LDR      r0,[r0,#0]
000210  280d              CMP      r0,#0xd
000212  d100              BNE      |L4.534|
;;;326    	{
;;;327    		case GUI_KEY_ENTER:
;;;328    			g_eTestState = eFinishTest;
000214  7011              STRB     r1,[r2,#0]
                  |L4.534|
;;;329    			break;
;;;330    	}
;;;331    }
000216  b013              ADD      sp,sp,#0x4c
000218  e8bd8ff0          POP      {r4-r11,pc}
;;;332    
                          ENDP

                  |L4.540|
                          DCD      ||.data||
                  |L4.544|
                          DCD      0x40590000
                  |L4.548|
                          DCD      0x42c80000
                  |L4.552|
                          DCD      g_sTestParam
                  |L4.556|
                          DCD      g_sAlcCalibrationParam
                  |L4.560|
                          DCD      0x42a00000
                  |L4.564|
                          DCD      pTestWin
                  |L4.568|
                          DCD      ||.bss||
                  |L4.572|
                          DCD      0x447a0000
                  |L4.576|
000240  543d2025          DCB      "T= %.1fS",0
000244  2e316653
000248  00      
000249  00                DCB      0
00024a  00                DCB      0
00024b  00                DCB      0
                  |L4.588|
00024c  25733d20          DCB      "%s= %s%s",0
000250  25732573
000254  00      
000255  00                DCB      0
000256  00                DCB      0
000257  00                DCB      0
                  |L4.600|
                          DCD      g_eTestState

                          AREA ||i._StartTestPrepare||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  _StartTestPrepare PROC
;;;136    
;;;137    static void _StartTestPrepare(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;138    {
;;;139    	float fTemp;
;;;140    	char aTemp[30],aStrTemp[30];
;;;141    	
;;;142    	g_eTestState = eInhaling;
000002  494b              LDR      r1,|L5.304|
000004  b092              SUB      sp,sp,#0x48           ;138
000006  2006              MOVS     r0,#6
000008  7008              STRB     r0,[r1,#0]
;;;143    
;;;144    	/*³éÆøÇ°±äÁ¿³õÊ¼»¯*/
;;;145    	g_fAlcValue = 0;
00000a  4c4a              LDR      r4,|L5.308|
00000c  2000              MOVS     r0,#0
;;;146    	s_nInhalingTimeCnt = 0;
;;;147    	s_nStartAlcAlarmTime = 0;
;;;148    	s_bAlreadyTrigerAlcAlarm = false;
;;;149    	memset(g_aSampleBuffer, 0, sizeof(g_aSampleBuffer));
00000e  21f0              MOVS     r1,#0xf0
000010  60e0              STR      r0,[r4,#0xc]          ;146  ; g_fAlcValue
000012  8060              STRH     r0,[r4,#2]            ;146
000014  60a0              STR      r0,[r4,#8]            ;148  ; s_nStartAlcAlarmTime
000016  7020              STRB     r0,[r4,#0]            ;148
000018  4847              LDR      r0,|L5.312|
00001a  f7fffffe          BL       __aeabi_memclr
;;;150    	s_nAlc_Adc_Lowest_Threshold = g_sAlcCalibrationParam.nPeekCaliValue * DEAULT_ALC_ADC_LOWEST_THRESHOLD / DEFAULT_PEEK_CALIBRATION_VALUE;
00001e  4847              LDR      r0,|L5.316|
000020  f44f7196          MOV      r1,#0x12c
000024  f8d00007          LDR      r0,[r0,#7]  ; g_sAlcCalibrationParam
000028  4348              MULS     r0,r1,r0
00002a  f6404158          MOV      r1,#0xc58
00002e  fbb0f0f1          UDIV     r0,r0,r1
000032  b281              UXTH     r1,r0
000034  80a1              STRH     r1,[r4,#4]
;;;151    
;;;152    	TRACE_PRINTF("s_nAlc_Adc_Lowest_Threshold = %d\r\n",s_nAlc_Adc_Lowest_Threshold);
000036  a042              ADR      r0,|L5.320|
000038  f7fffffe          BL       User_Debug_Printf
;;;153    
;;;154    	/*³éÆøÇ°µÄÓ²¼þ×¼±¸*/
;;;155    	Voc_Cmd(eVOC_BLOW);
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       Voc_Cmd
;;;156    	Gpio_Ctrl(eGpio_Moto_Ctrl, true);
000042  2101              MOVS     r1,#1
000044  200b              MOVS     r0,#0xb
000046  f7fffffe          BL       Gpio_Ctrl
;;;157    	Gpio_Ctrl(eGpio_QuickTest_Alc_Clean_Sw_Ctrl, false);
00004a  2100              MOVS     r1,#0
00004c  2008              MOVS     r0,#8
00004e  f7fffffe          BL       Gpio_Ctrl
;;;158    	Gpio_Ctrl(eGpio_Buzzer_Ctrl,false);
000052  2100              MOVS     r1,#0
000054  2009              MOVS     r0,#9
000056  f7fffffe          BL       Gpio_Ctrl
;;;159    	g_nStartInhaleTime  = Get_System_Time();
00005a  f7fffffe          BL       Get_System_Time
00005e  4941              LDR      r1,|L5.356|
;;;160    
;;;161    	WM_HideWindow(pTestWin->hTestTips);
000060  4c41              LDR      r4,|L5.360|
000062  6008              STR      r0,[r1,#0]  ; g_nStartInhaleTime
000064  6820              LDR      r0,[r4,#0]  ; pTestWin
000066  f9b00020          LDRSH    r0,[r0,#0x20]
00006a  f7fffffe          BL       WM_HideWindow
;;;162    	WM_HideWindow(pTestWin->hTimeProgressBar);
00006e  6820              LDR      r0,[r4,#0]  ; pTestWin
000070  f9b0001a          LDRSH    r0,[r0,#0x1a]
000074  f7fffffe          BL       WM_HideWindow
;;;163    	WM_HideWindow(pTestWin->hBlowFlowVolume);
000078  6820              LDR      r0,[r4,#0]  ; pTestWin
00007a  f9b0001c          LDRSH    r0,[r0,#0x1c]
00007e  f7fffffe          BL       WM_HideWindow
;;;164    	WM_HideWindow(pTestWin->hLeftButton);
000082  6820              LDR      r0,[r4,#0]  ; pTestWin
000084  f9b00014          LDRSH    r0,[r0,#0x14]
000088  f7fffffe          BL       WM_HideWindow
;;;165    	WM_HideWindow(pTestWin->hRightButton);
00008c  6820              LDR      r0,[r4,#0]  ; pTestWin
00008e  f9b00016          LDRSH    r0,[r0,#0x16]
000092  f7fffffe          BL       WM_HideWindow
;;;166    	
;;;167    	WM_ShowWindow(pTestWin->hQuickTestDraw);
000096  6820              LDR      r0,[r4,#0]  ; pTestWin
000098  f9b00024          LDRSH    r0,[r0,#0x24]
00009c  f7fffffe          BL       WM_ShowWindow
;;;168    	WM_ShowWindow(pTestWin->hQuickTestDisplayValue);
0000a0  6820              LDR      r0,[r4,#0]  ; pTestWin
0000a2  f9b00026          LDRSH    r0,[r0,#0x26]
0000a6  f7fffffe          BL       WM_ShowWindow
;;;169    	WM_ShowWindow(pTestWin->hQuickTestDisplayTime);
0000aa  6820              LDR      r0,[r4,#0]  ; pTestWin
0000ac  f9b00028          LDRSH    r0,[r0,#0x28]
0000b0  f7fffffe          BL       WM_ShowWindow
;;;170    	BUTTON_SetText(pTestWin->hMiddleButton, _OK);
0000b4  492e              LDR      r1,|L5.368|
0000b6  482d              LDR      r0,|L5.364|
0000b8  7809              LDRB     r1,[r1,#0]  ; g_Language
0000ba  f8500021          LDR      r0,[r0,r1,LSL #2]
0000be  f8d010c8          LDR      r1,[r0,#0xc8]
0000c2  6820              LDR      r0,[r4,#0]  ; pTestWin
0000c4  f9b00018          LDRSH    r0,[r0,#0x18]
0000c8  f7fffffe          BL       BUTTON_SetText
;;;171    
;;;172    	fTemp = Get_Final_Convert_Display_Result(0, g_sTestParam.nTestUnit, g_sTestParam.nBrACBACK);
0000cc  4d29              LDR      r5,|L5.372|
0000ce  2000              MOVS     r0,#0
0000d0  886a              LDRH     r2,[r5,#2]  ; g_sTestParam
0000d2  7869              LDRB     r1,[r5,#1]  ; g_sTestParam
0000d4  f7fffffe          BL       Get_Final_Convert_Display_Result
;;;173    	Get_Format_Alc_Convert_String(fTemp, g_sTestParam.nTestUnit, aTemp, eFormatToInt);
0000d8  7869              LDRB     r1,[r5,#1]  ; g_sTestParam
0000da  2300              MOVS     r3,#0
0000dc  aa01              ADD      r2,sp,#4
0000de  f7fffffe          BL       Get_Format_Alc_Convert_String
;;;174    
;;;175    	TEXT_SetText(pTestWin->hQuickTestDisplayTime, "T= 0.0S");
0000e2  6820              LDR      r0,[r4,#0]  ; pTestWin
0000e4  a124              ADR      r1,|L5.376|
0000e6  f9b00028          LDRSH    r0,[r0,#0x28]
0000ea  f7fffffe          BL       TEXT_SetText
;;;176    	sprintf(aStrTemp,"%s= %s%s", Get_TestMode_String(g_sTestParam.nTestUnit), aTemp, Get_Unit_String(g_sTestParam.nTestUnit));
0000ee  7868              LDRB     r0,[r5,#1]  ; g_sTestParam
0000f0  f7fffffe          BL       Get_Unit_String
0000f4  4606              MOV      r6,r0
0000f6  7868              LDRB     r0,[r5,#1]  ; g_sTestParam
0000f8  f7fffffe          BL       Get_TestMode_String
0000fc  4602              MOV      r2,r0
0000fe  ab01              ADD      r3,sp,#4
000100  a11f              ADR      r1,|L5.384|
000102  a809              ADD      r0,sp,#0x24
000104  9600              STR      r6,[sp,#0]
000106  f7fffffe          BL       __2sprintf
;;;177    	TEXT_SetText(pTestWin->hQuickTestDisplayValue, aStrTemp);
00010a  6820              LDR      r0,[r4,#0]  ; pTestWin
00010c  a909              ADD      r1,sp,#0x24
00010e  f9b00026          LDRSH    r0,[r0,#0x26]
000112  f7fffffe          BL       TEXT_SetText
;;;178    
;;;179    	/*ÖØÖÃÉ¨Ãè¶¨Ê±Æ÷.*/
;;;180    	GUI_TIMER_SetPeriod(pTestWin->hTMTest, g_sTestParam.nInhaleTime / Get_Curve_Windows_Width());
000116  f7fffffe          BL       Get_Curve_Windows_Width
00011a  6869              LDR      r1,[r5,#4]  ; g_sTestParam
00011c  fbb1f1f0          UDIV     r1,r1,r0
000120  6820              LDR      r0,[r4,#0]  ; pTestWin
000122  f9b0006e          LDRSH    r0,[r0,#0x6e]
000126  f7fffffe          BL       GUI_TIMER_SetPeriod
;;;181    }
00012a  b012              ADD      sp,sp,#0x48
00012c  bd70              POP      {r4-r6,pc}
;;;182    
                          ENDP

00012e  0000              DCW      0x0000
                  |L5.304|
                          DCD      g_eTestState
                  |L5.308|
                          DCD      ||.data||
                  |L5.312|
                          DCD      ||.bss||
                  |L5.316|
                          DCD      g_sAlcCalibrationParam
                  |L5.320|
000140  735f6e41          DCB      "s_nAlc_Adc_Lowest_Threshold = %d\r\n",0
000144  6c635f41
000148  64635f4c
00014c  6f776573
000150  745f5468
000154  72657368
000158  6f6c6420
00015c  3d202564
000160  0d0a00  
000163  00                DCB      0
                  |L5.356|
                          DCD      g_nStartInhaleTime
                  |L5.360|
                          DCD      pTestWin
                  |L5.364|
                          DCD      Strings
                  |L5.368|
                          DCD      g_Language
                  |L5.372|
                          DCD      g_sTestParam
                  |L5.376|
000178  543d2030          DCB      "T= 0.0S",0
00017c  2e305300
                  |L5.384|
000180  25733d20          DCB      "%s= %s%s",0
000184  25732573
000188  00      
000189  00                DCB      0
00018a  00                DCB      0
00018b  00                DCB      0

                          AREA ||i._WaitStart||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  _WaitStart PROC
;;;100    
;;;101    static void _WaitStart(WM_MESSAGE *pMsg)
000000  b5f0              PUSH     {r4-r7,lr}
;;;102    {	
;;;103    	char aTemp[30],aStrTemp[30];
;;;104    	
;;;105    	if(pTestWin->bNeedRefreshState)
000002  4c35              LDR      r4,|L6.216|
000004  4606              MOV      r6,r0                 ;102
000006  b091              SUB      sp,sp,#0x44           ;102
000008  6820              LDR      r0,[r4,#0]  ; pTestWin
00000a  f890102a          LDRB     r1,[r0,#0x2a]
00000e  2900              CMP      r1,#0
000010  d051              BEQ      |L6.182|
;;;106    	{
;;;107    		pTestWin->bNeedRefreshState = false;
000012  2100              MOVS     r1,#0
000014  f880102a          STRB     r1,[r0,#0x2a]
;;;108    		WM_HideWindow(pTestWin->hTestTips);
000018  f9b00020          LDRSH    r0,[r0,#0x20]
00001c  f7fffffe          BL       WM_HideWindow
;;;109    		WM_HideWindow(pTestWin->hTimeProgressBar);
000020  6820              LDR      r0,[r4,#0]  ; pTestWin
000022  f9b0001a          LDRSH    r0,[r0,#0x1a]
000026  f7fffffe          BL       WM_HideWindow
;;;110    		WM_HideWindow(pTestWin->hBlowFlowVolume);
00002a  6820              LDR      r0,[r4,#0]  ; pTestWin
00002c  f9b0001c          LDRSH    r0,[r0,#0x1c]
000030  f7fffffe          BL       WM_HideWindow
;;;111    		WM_HideWindow(pTestWin->hRightButton);
000034  6820              LDR      r0,[r4,#0]  ; pTestWin
000036  f9b00016          LDRSH    r0,[r0,#0x16]
00003a  f7fffffe          BL       WM_HideWindow
;;;112    		
;;;113    		WM_ShowWindow(pTestWin->hQuickTestDraw);
00003e  6820              LDR      r0,[r4,#0]  ; pTestWin
000040  f9b00024          LDRSH    r0,[r0,#0x24]
000044  f7fffffe          BL       WM_ShowWindow
;;;114    		WM_ShowWindow(pTestWin->hQuickTestDisplayValue);
000048  6820              LDR      r0,[r4,#0]  ; pTestWin
00004a  f9b00026          LDRSH    r0,[r0,#0x26]
00004e  f7fffffe          BL       WM_ShowWindow
;;;115    		WM_ShowWindow(pTestWin->hQuickTestDisplayTime);
000052  6820              LDR      r0,[r4,#0]  ; pTestWin
000054  f9b00028          LDRSH    r0,[r0,#0x28]
000058  f7fffffe          BL       WM_ShowWindow
;;;116    		BUTTON_SetText(pTestWin->hMiddleButton, _StartTest);
00005c  4920              LDR      r1,|L6.224|
00005e  481f              LDR      r0,|L6.220|
000060  7809              LDRB     r1,[r1,#0]  ; g_Language
000062  f8500021          LDR      r0,[r0,r1,LSL #2]
000066  f8d01184          LDR      r1,[r0,#0x184]
00006a  6820              LDR      r0,[r4,#0]  ; pTestWin
00006c  f9b00018          LDRSH    r0,[r0,#0x18]
000070  f7fffffe          BL       BUTTON_SetText
;;;117    
;;;118    		TEXT_SetText(pTestWin->hQuickTestDisplayTime, "T= 0.0S");
000074  6820              LDR      r0,[r4,#0]  ; pTestWin
000076  a11b              ADR      r1,|L6.228|
000078  f9b00028          LDRSH    r0,[r0,#0x28]
00007c  f7fffffe          BL       TEXT_SetText
;;;119    		Get_Format_Alc_Convert_String(0.0, g_sTestParam.nTestUnit, aTemp, eFormatToInt);
000080  4d1a              LDR      r5,|L6.236|
000082  2300              MOVS     r3,#0
000084  aa01              ADD      r2,sp,#4
000086  7869              LDRB     r1,[r5,#1]  ; g_sTestParam
000088  4618              MOV      r0,r3
00008a  f7fffffe          BL       Get_Format_Alc_Convert_String
;;;120    		sprintf(aStrTemp,"%s= %s%s", Get_TestMode_String(g_sTestParam.nTestUnit), aTemp, Get_Unit_String(g_sTestParam.nTestUnit));
00008e  7868              LDRB     r0,[r5,#1]  ; g_sTestParam
000090  f7fffffe          BL       Get_Unit_String
000094  4607              MOV      r7,r0
000096  7868              LDRB     r0,[r5,#1]  ; g_sTestParam
000098  f7fffffe          BL       Get_TestMode_String
00009c  4602              MOV      r2,r0
00009e  ab01              ADD      r3,sp,#4
0000a0  a113              ADR      r1,|L6.240|
0000a2  a809              ADD      r0,sp,#0x24
0000a4  9700              STR      r7,[sp,#0]
0000a6  f7fffffe          BL       __2sprintf
;;;121    		TEXT_SetText(pTestWin->hQuickTestDisplayValue, aStrTemp);
0000aa  6820              LDR      r0,[r4,#0]  ; pTestWin
0000ac  a909              ADD      r1,sp,#0x24
0000ae  f9b00026          LDRSH    r0,[r0,#0x26]
0000b2  f7fffffe          BL       TEXT_SetText
                  |L6.182|
;;;122    	}
;;;123    	
;;;124    	/*´¦Àí°´¼ü ÊÂ¼þ*/
;;;125    	switch(WM_Key_Code)
0000b6  68b0              LDR      r0,[r6,#8]
0000b8  6800              LDR      r0,[r0,#0]
0000ba  2805              CMP      r0,#5
0000bc  d006              BEQ      |L6.204|
0000be  280d              CMP      r0,#0xd
0000c0  d102              BNE      |L6.200|
;;;126    	{
;;;127    		case GUI_KEY_LEFT_FUN:
;;;128    			WM_DeleteWindow(pMsg->hWin);
;;;129    			break;
;;;130    			
;;;131    		case GUI_KEY_MIDDLE_FUN:
;;;132    			g_eTestState = eStartTestPrepare;
0000c2  490e              LDR      r1,|L6.252|
0000c4  2005              MOVS     r0,#5
0000c6  7008              STRB     r0,[r1,#0]
                  |L6.200|
;;;133    			break;
;;;134    	}
;;;135    }
0000c8  b011              ADD      sp,sp,#0x44
0000ca  bdf0              POP      {r4-r7,pc}
                  |L6.204|
0000cc  f9b60004          LDRSH    r0,[r6,#4]            ;128
0000d0  f7fffffe          BL       WM_DeleteWindow
0000d4  e7f8              B        |L6.200|
;;;136    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L6.216|
                          DCD      pTestWin
                  |L6.220|
                          DCD      Strings
                  |L6.224|
                          DCD      g_Language
                  |L6.228|
0000e4  543d2030          DCB      "T= 0.0S",0
0000e8  2e305300
                  |L6.236|
                          DCD      g_sTestParam
                  |L6.240|
0000f0  25733d20          DCB      "%s= %s%s",0
0000f4  25732573
0000f8  00      
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L6.252|
                          DCD      g_eTestState

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  g_aSampleBuffer
                          %        240

                          AREA ||area_number.9||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.9||, ||.bss||
                  g_nSampleTemp
                          %        240

                          AREA ||area_number.10||, DATA, NOINIT, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.bss||
                  g_aSampleDebugBufferA
                          %        480

                          AREA ||area_number.11||, DATA, NOINIT, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.bss||
                  g_aSampleDebugBufferB
                          %        480

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  fb                DCB      0xfb
000001  40000000          DCFSU    0x40000000 ; 2
000005  00                DCB      0x00
000006  3fd9999a          DCFSU    0x3fd9999a ; 1.7000000476837158
00000a  05                DCB      0x05
00000b  3fb33333          DCFSU    0x3fb33333 ; 1.3999999761581421
00000f  0a                DCB      0x0a
000010  3f99999a          DCFS     0x3f99999a ; 1.2000000476837158
000014  0f                DCB      0x0f
000015  3f8ccccd          DCFSU    0x3f8ccccd ; 1.1000000238418579
000019  14                DCB      0x14
00001a  3f866666          DCFSU    0x3f866666 ; 1.0499999523162842
00001e  19                DCB      0x19
00001f  3f800000          DCFSU    0x3f800000 ; 1
000023  1e                DCB      0x1e
000024  3f800000          DCFS     0x3f800000 ; 1
000028  23                DCB      0x23
000029  3f800000          DCFSU    0x3f800000 ; 1
00002d  28                DCB      0x28
00002e  3f7ae148          DCFSU    0x3f7ae148 ; 0.98000001907348633
000032  2d                DCB      0x2d
000033  3f733333          DCFSU    0x3f733333 ; 0.94999998807907104

                          AREA ||.data||, DATA, ALIGN=2

                  s_bAlreadyTrigerAlcAlarm
000000  0000              DCB      0x00,0x00
                  s_nInhalingTimeCnt
000002  0000              DCB      0x00,0x00
                  s_nAlc_Adc_Lowest_Threshold
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  s_nStartAlcAlarmTime
                          DCD      0x00000000
                  g_fAlcValue
                          DCD      0x00000000
