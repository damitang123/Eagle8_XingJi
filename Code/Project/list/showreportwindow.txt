; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\showreportwindow.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\showreportwindow.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\User\UserWindow\ShowReportWindow.c]
                          THUMB

                          AREA ||i.CW_ShowReport_Create||, CODE, READONLY, ALIGN=2

                  CW_ShowReport_Create PROC
;;;537    
;;;538    CW_ShowReport *CW_ShowReport_Create(WM_HWIN hParent, void *pData)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;539    {
000004  4604              MOV      r4,r0
;;;540    	WM_HWIN hWin;
;;;541    	eUserWindow WinType = eShowReport;
000006  250a              MOVS     r5,#0xa
000008  460f              MOV      r7,r1                 ;539
;;;542    
;;;543    	if(GetWinHandleByWinType(WinType))
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GetWinHandleByWinType
000010  b130              CBZ      r0,|L1.32|
;;;544    	{
;;;545    		TRACE_PRINTF("eShowReport window is alreay exist!\r\n");
000012  a019              ADR      r0,|L1.120|
000014  f7fffffe          BL       User_Debug_Printf
;;;546    		return (CW_ShowReport *)0;
000018  2000              MOVS     r0,#0
                  |L1.26|
;;;547    	}
;;;548    
;;;549    	hWin = WM_CreateWindowAsChild(0, 0, LCD_X_SIZE, LCD_Y_SIZE,
;;;550    	                              hParent, WM_CF_SHOW, NULL, sizeof(CW_ShowReport));
;;;551    
;;;552    	if(hWin)
;;;553    	{
;;;554    		TRACE_PRINTF("eShowReport windows is created!hWin = 0x%04X\r\n", hWin);
;;;555    
;;;556    		pThisWin = (CW_ShowReport *)((unsigned long)WM_H2P(hWin) + sizeof(WM_Obj));
;;;557    
;;;558    		pThisWin->wObj.hWin = hWin;
;;;559    		pThisWin->wObj.Property = (unsigned long)pData;
;;;560    		pThisWin->wObj.eWinType = (eUserWindow)WinType;
;;;561    		
;;;562    		AddWindowToList(&pThisWin->wObj);
;;;563    
;;;564    		WM_SetCallback(hWin, _Callback);
;;;565    		WM__SendMsgNoData(hWin, WM_CREATE);
;;;566    	}
;;;567    	else
;;;568    	{
;;;569    		TRACE_PRINTF("eShowReport window can't be created!\r\n");
;;;570    	}
;;;571    
;;;572    	return pThisWin;
;;;573    }
00001a  b004              ADD      sp,sp,#0x10
00001c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.32|
000020  201c              MOVS     r0,#0x1c              ;549
000022  2100              MOVS     r1,#0                 ;549
000024  9003              STR      r0,[sp,#0xc]          ;549
000026  2202              MOVS     r2,#2                 ;549
000028  9400              STR      r4,[sp,#0]            ;549
00002a  e9cd2101          STRD     r2,r1,[sp,#4]         ;549
00002e  f44f73a0          MOV      r3,#0x140             ;549
000032  22f0              MOVS     r2,#0xf0              ;549
000034  4608              MOV      r0,r1                 ;549
000036  f7fffffe          BL       WM_CreateWindowAsChild
00003a  4e19              LDR      r6,|L1.160|
00003c  0004              MOVS     r4,r0                 ;549
00003e  d016              BEQ      |L1.110|
000040  4601              MOV      r1,r0                 ;554
000042  a018              ADR      r0,|L1.164|
000044  f7fffffe          BL       User_Debug_Printf
000048  4620              MOV      r0,r4                 ;556
00004a  f7fffffe          BL       GUI_ALLOC_h2p
00004e  3020              ADDS     r0,r0,#0x20           ;556
000050  6030              STR      r0,[r6,#0]            ;558  ; pThisWin
000052  8004              STRH     r4,[r0,#0]            ;558
000054  6047              STR      r7,[r0,#4]            ;560
000056  7205              STRB     r5,[r0,#8]            ;560
000058  f7fffffe          BL       AddWindowToList
00005c  491d              LDR      r1,|L1.212|
00005e  4620              MOV      r0,r4                 ;564
000060  f7fffffe          BL       WM_SetCallback
000064  2101              MOVS     r1,#1                 ;565
000066  4620              MOV      r0,r4                 ;565
000068  f7fffffe          BL       WM__SendMsgNoData
00006c  e002              B        |L1.116|
                  |L1.110|
00006e  a01a              ADR      r0,|L1.216|
000070  f7fffffe          BL       User_Debug_Printf
                  |L1.116|
000074  6830              LDR      r0,[r6,#0]            ;572  ; pThisWin
000076  e7d0              B        |L1.26|
;;;574    
                          ENDP

                  |L1.120|
000078  6553686f          DCB      "eShowReport window is alreay exist!\r\n",0
00007c  77526570
000080  6f727420
000084  77696e64
000088  6f772069
00008c  7320616c
000090  72656179
000094  20657869
000098  7374210d
00009c  0a00    
00009e  00                DCB      0
00009f  00                DCB      0
                  |L1.160|
                          DCD      ||.data||
                  |L1.164|
0000a4  6553686f          DCB      "eShowReport windows is created!hWin = 0x%04X\r\n",0
0000a8  77526570
0000ac  6f727420
0000b0  77696e64
0000b4  6f777320
0000b8  69732063
0000bc  72656174
0000c0  65642168
0000c4  57696e20
0000c8  3d203078
0000cc  25303458
0000d0  0d0a00  
0000d3  00                DCB      0
                  |L1.212|
                          DCD      _Callback
                  |L1.216|
0000d8  6553686f          DCB      "eShowReport window can't be created!\r\n",0
0000dc  77526570
0000e0  6f727420
0000e4  77696e64
0000e8  6f772063
0000ec  616e2774
0000f0  20626520
0000f4  63726561
0000f8  74656421
0000fc  0d0a00  
0000ff  00                DCB      0

                          AREA ||i.Display_AlcoholTest_Result||, CODE, READONLY, ALIGN=2

                  Display_AlcoholTest_Result PROC
;;;116    
;;;117    static void Display_AlcoholTest_Result(WM_MESSAGE *pMsg,sRecord *pRecord)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;118    {
000004  4607              MOV      r7,r0
000006  b090              SUB      sp,sp,#0x40
000008  460c              MOV      r4,r1
;;;119    	GUI_RECT rect;
;;;120    	WM_HWIN hWin;
;;;121    	float fAlcUnitConvertValue;
;;;122    	char *pStr = NULL;
;;;123    	char aTemp[30];
;;;124    	
;;;125    	/*1.显示Brac或者BAC*/
;;;126    	GUI_SetFont(&GUI_FontTahomaBold33);
00000a  486d              LDR      r0,|L2.448|
00000c  f7fffffe          BL       GUI_SetFont
;;;127    	pStr = pRecord->nTestUnit ? "BrAC" : "BAC";
000010  7d20              LDRB     r0,[r4,#0x14]
000012  b108              CBZ      r0,|L2.24|
000014  a56b              ADR      r5,|L2.452|
000016  e000              B        |L2.26|
                  |L2.24|
000018  a56c              ADR      r5,|L2.460|
                  |L2.26|
;;;128    	GUI_GetTextExtend(&rect, pStr, 20);
00001a  2214              MOVS     r2,#0x14
00001c  4629              MOV      r1,r5
00001e  a805              ADD      r0,sp,#0x14
000020  f7fffffe          BL       GUI_GetTextExtend
;;;129    	hWin = TEXT_CreateEx(5, 60, rect.x1 - rect.x0 + 1, rect.y1 - rect.y0 + 1,
000024  f04f0800          MOV      r8,#0
000028  f04f0902          MOV      r9,#2
00002c  e9cd9801          STRD     r9,r8,[sp,#4]
000030  e9cd8503          STRD     r8,r5,[sp,#0xc]
000034  f9b70004          LDRSH    r0,[r7,#4]
000038  9000              STR      r0,[sp,#0]
00003a  f9bd001a          LDRSH    r0,[sp,#0x1a]
00003e  f9bd1016          LDRSH    r1,[sp,#0x16]
000042  1a43              SUBS     r3,r0,r1
000044  f9bd0018          LDRSH    r0,[sp,#0x18]
000048  f9bd1014          LDRSH    r1,[sp,#0x14]
00004c  1c5b              ADDS     r3,r3,#1
00004e  1a42              SUBS     r2,r0,r1
000050  213c              MOVS     r1,#0x3c
000052  2005              MOVS     r0,#5
000054  1c52              ADDS     r2,r2,#1
000056  f7fffffe          BL       TEXT_CreateEx
00005a  4605              MOV      r5,r0
;;;130    	                     pMsg->hWin, WM_CF_SHOW, 0, 0, pStr);
;;;131    	TEXT_SetFont(hWin, &GUI_FontTahomaBold33);
00005c  4958              LDR      r1,|L2.448|
00005e  f7fffffe          BL       TEXT_SetFont
;;;132    	TEXT_SetTextColor(hWin, GUI_WHITE);
000062  f06f4a7f          MVN      r10,#0xff000000
000066  4651              MOV      r1,r10
000068  4628              MOV      r0,r5
00006a  f7fffffe          BL       TEXT_SetTextColor
;;;133    
;;;134    	/*2显示值*/
;;;135    	if(pRecord->fAlcValue > MAX_DISPLAY_ALC_VALUE && (pRecord->nTestMode == eTestActive || pRecord->nTestMode == eTestPassive))
00006e  f8d40005          LDR      r0,[r4,#5]
000072  4b57              LDR      r3,|L2.464|
;;;136    	{
;;;137    		aTemp[0] = '>';
000074  213e              MOVS     r1,#0x3e
;;;138    		fAlcUnitConvertValue = Get_Final_Convert_Display_Result(MAX_DISPLAY_ALC_VALUE,pRecord->nTestUnit, pRecord->nKBrACBAC);
;;;139    		if(g_eAlcTestPurpose == eTestForNormal)
000076  4d57              LDR      r5,|L2.468|
000078  ae07              ADD      r6,sp,#0x1c           ;123
00007a  4298              CMP      r0,r3                 ;135
00007c  dd03              BLE      |L2.134|
00007e  7ce2              LDRB     r2,[r4,#0x13]         ;135
000080  b1b2              CBZ      r2,|L2.176|
000082  2a01              CMP      r2,#1                 ;135
000084  d014              BEQ      |L2.176|
                  |L2.134|
;;;140    		{
;;;141    			Get_Format_Alc_Convert_String(fAlcUnitConvertValue, pRecord->nTestUnit, &aTemp[1], eFormatToInt);
;;;142    		}
;;;143    		else if(g_eAlcTestPurpose == eTestForMaintain)
;;;144    		{
;;;145    			Get_Format_Alc_Convert_String(fAlcUnitConvertValue, pRecord->nTestUnit, &aTemp[1], eFormatToFloat);
;;;146    		}
;;;147    	}
;;;148    	else if(pRecord->fAlcValue > MAX_QUICK_TEST_DISPLAY_ALC_VALUE && pRecord->nTestMode == eTestQuickTest)
000086  4b54              LDR      r3,|L2.472|
000088  4298              CMP      r0,r3
00008a  dd02              BLE      |L2.146|
00008c  7ce2              LDRB     r2,[r4,#0x13]
00008e  2a03              CMP      r2,#3
000090  d00e              BEQ      |L2.176|
                  |L2.146|
;;;149    	{
;;;150    		aTemp[0] = '>';
;;;151    		fAlcUnitConvertValue = Get_Final_Convert_Display_Result(MAX_QUICK_TEST_DISPLAY_ALC_VALUE,pRecord->nTestUnit, pRecord->nKBrACBAC);
;;;152    		if(g_eAlcTestPurpose == eTestForNormal)
;;;153    		{
;;;154    			Get_Format_Alc_Convert_String(fAlcUnitConvertValue, pRecord->nTestUnit, &aTemp[1], eFormatToInt);
;;;155    		}
;;;156    		else if(g_eAlcTestPurpose == eTestForMaintain)
;;;157    		{
;;;158    			Get_Format_Alc_Convert_String(fAlcUnitConvertValue, pRecord->nTestUnit, &aTemp[1], eFormatToFloat);
;;;159    		}
;;;160    	}
;;;161    	else
;;;162    	{
;;;163    		fAlcUnitConvertValue = Get_Final_Convert_Display_Result(pRecord->fAlcValue,pRecord->nTestUnit, pRecord->nKBrACBAC);
000092  f8b42015          LDRH     r2,[r4,#0x15]
000096  7d21              LDRB     r1,[r4,#0x14]
000098  f7fffffe          BL       Get_Final_Convert_Display_Result
;;;164    		if(g_eAlcTestPurpose == eTestForNormal)
00009c  7829              LDRB     r1,[r5,#0]  ; g_eAlcTestPurpose
00009e  b1c1              CBZ      r1,|L2.210|
;;;165    		{
;;;166    			Get_Format_Alc_Convert_String(fAlcUnitConvertValue, pRecord->nTestUnit, aTemp,eFormatToInt);
;;;167    		}
;;;168    		else if(g_eAlcTestPurpose == eTestForMaintain)
0000a0  2902              CMP      r1,#2
0000a2  d019              BEQ      |L2.216|
0000a4  e01d              B        |L2.226|
                  |L2.166|
0000a6  2902              CMP      r1,#2                 ;143
0000a8  d010              BEQ      |L2.204|
0000aa  e01a              B        |L2.226|
                  |L2.172|
0000ac  1c72              ADDS     r2,r6,#1              ;141
0000ae  e016              B        |L2.222|
                  |L2.176|
0000b0  f88d101c          STRB     r1,[sp,#0x1c]         ;150
0000b4  f8b42015          LDRH     r2,[r4,#0x15]         ;151
0000b8  7d21              LDRB     r1,[r4,#0x14]         ;151
0000ba  4618              MOV      r0,r3                 ;151
0000bc  f7fffffe          BL       Get_Final_Convert_Display_Result
0000c0  7829              LDRB     r1,[r5,#0]            ;152  ; g_eAlcTestPurpose
0000c2  2900              CMP      r1,#0                 ;152
0000c4  d1ef              BNE      |L2.166|
0000c6  7d21              LDRB     r1,[r4,#0x14]         ;154
0000c8  2300              MOVS     r3,#0                 ;154
0000ca  e7ef              B        |L2.172|
                  |L2.204|
0000cc  7d21              LDRB     r1,[r4,#0x14]         ;158
0000ce  2301              MOVS     r3,#1                 ;158
0000d0  e7ec              B        |L2.172|
                  |L2.210|
0000d2  7d21              LDRB     r1,[r4,#0x14]         ;166
0000d4  2300              MOVS     r3,#0                 ;166
0000d6  e001              B        |L2.220|
                  |L2.216|
;;;169    		{
;;;170    			Get_Format_Alc_Convert_String(fAlcUnitConvertValue, pRecord->nTestUnit, aTemp,eFormatToFloat);
0000d8  7d21              LDRB     r1,[r4,#0x14]
0000da  2301              MOVS     r3,#1
                  |L2.220|
0000dc  aa07              ADD      r2,sp,#0x1c
                  |L2.222|
0000de  f7fffffe          BL       Get_Format_Alc_Convert_String
                  |L2.226|
;;;171    		}
;;;172    	}
;;;173    	GUI_SetFont(&GUI_FontTimesNewRoman73);
0000e2  483e              LDR      r0,|L2.476|
0000e4  f7fffffe          BL       GUI_SetFont
;;;174    	GUI_GetTextExtend(&rect, aTemp, 20);
0000e8  2214              MOVS     r2,#0x14
0000ea  a907              ADD      r1,sp,#0x1c
0000ec  a805              ADD      r0,sp,#0x14
0000ee  f7fffffe          BL       GUI_GetTextExtend
;;;175    	hWin = TEXT_CreateEx((LCD_XSIZE - (rect.x1 - rect.x0 + 1)) >> 1, (LCD_YSIZE - (rect.y1 - rect.y0 + 1)) >> 1, rect.x1 - rect.x0 + 1, rect.y1 - rect.y0 + 1,
0000f2  4645              MOV      r5,r8
0000f4  e9cd9501          STRD     r9,r5,[sp,#4]
0000f8  e9cd5603          STRD     r5,r6,[sp,#0xc]
0000fc  f9b70004          LDRSH    r0,[r7,#4]
000100  9000              STR      r0,[sp,#0]
000102  f9bd001a          LDRSH    r0,[sp,#0x1a]
000106  f9bd1016          LDRSH    r1,[sp,#0x16]
00010a  f9bd2014          LDRSH    r2,[sp,#0x14]
00010e  1a41              SUBS     r1,r0,r1
000110  f9bd0018          LDRSH    r0,[sp,#0x18]
000114  1c4b              ADDS     r3,r1,#1
000116  1a80              SUBS     r0,r0,r2
000118  1c42              ADDS     r2,r0,#1
00011a  f2a1113f          SUB      r1,r1,#0x13f
00011e  4249              RSBS     r1,r1,#0
000120  f1c000ef          RSB      r0,r0,#0xef
000124  46c8              MOV      r8,r9
000126  1049              ASRS     r1,r1,#1
000128  1040              ASRS     r0,r0,#1
00012a  f7fffffe          BL       TEXT_CreateEx
00012e  4606              MOV      r6,r0
;;;176    	                     pMsg->hWin, WM_CF_SHOW, 0, 0, aTemp);
;;;177    	TEXT_SetFont(hWin, &GUI_FontTimesNewRoman73);
000130  492a              LDR      r1,|L2.476|
000132  f7fffffe          BL       TEXT_SetFont
;;;178    	TEXT_SetTextColor(hWin, GUI_WHITE);
000136  4651              MOV      r1,r10
000138  4630              MOV      r0,r6
00013a  f7fffffe          BL       TEXT_SetTextColor
;;;179    
;;;180    	if(pRecord->fAlcValue < 20)
00013e  f8d40005          LDR      r0,[r4,#5]
000142  4927              LDR      r1,|L2.480|
000144  4288              CMP      r0,r1
000146  da01              BGE      |L2.332|
;;;181    	{
;;;182    		Voc_Cmd(eVOC_RESULT_PASS);
000148  200c              MOVS     r0,#0xc
00014a  e008              B        |L2.350|
                  |L2.332|
;;;183    	}
;;;184    	else if(pRecord->fAlcValue >= 20 && pRecord->fAlcValue < 80)
00014c  4924              LDR      r1,|L2.480|
00014e  4249              RSBS     r1,r1,#0
000150  4408              ADD      r0,r0,r1
000152  f1b07f80          CMP      r0,#0x1000000
000156  d201              BCS      |L2.348|
;;;185    	{
;;;186    		Voc_Cmd(eVOC_RESULT_DRINK);
000158  2002              MOVS     r0,#2
00015a  e000              B        |L2.350|
                  |L2.348|
;;;187    	}
;;;188    	else
;;;189    	{
;;;190    		Voc_Cmd(eVOC_RESULT_DRUNK);
00015c  2003              MOVS     r0,#3
                  |L2.350|
00015e  f7fffffe          BL       Voc_Cmd
;;;191    	}
;;;192    
;;;193    	/*3显示单位*/
;;;194    	GUI_SetFont(&GUI_FontTahomaBold33);
000162  4817              LDR      r0,|L2.448|
000164  f7fffffe          BL       GUI_SetFont
;;;195    	pStr = Get_Unit_String(pRecord->nTestUnit);
000168  7d20              LDRB     r0,[r4,#0x14]
00016a  f7fffffe          BL       Get_Unit_String
00016e  4604              MOV      r4,r0
;;;196    	GUI_GetTextExtend(&rect, pStr, 20);
000170  4601              MOV      r1,r0
000172  2214              MOVS     r2,#0x14
000174  a805              ADD      r0,sp,#0x14
000176  f7fffffe          BL       GUI_GetTextExtend
00017a  e9cd8501          STRD     r8,r5,[sp,#4]
00017e  e9cd5403          STRD     r5,r4,[sp,#0xc]
;;;197    	hWin = TEXT_CreateEx(LCD_XSIZE - (rect.x1 - rect.x0 + 1) - 5, 240, rect.x1 - rect.x0 + 1, rect.y1 - rect.y0 + 1,
000182  f9b70004          LDRSH    r0,[r7,#4]
000186  9000              STR      r0,[sp,#0]
000188  f9bd001a          LDRSH    r0,[sp,#0x1a]
00018c  f9bd1016          LDRSH    r1,[sp,#0x16]
000190  1a43              SUBS     r3,r0,r1
000192  f9bd0018          LDRSH    r0,[sp,#0x18]
000196  f9bd1014          LDRSH    r1,[sp,#0x14]
00019a  1c5b              ADDS     r3,r3,#1
00019c  1a41              SUBS     r1,r0,r1
00019e  1c4a              ADDS     r2,r1,#1
0001a0  f1c100ea          RSB      r0,r1,#0xea
0001a4  21f0              MOVS     r1,#0xf0
0001a6  f7fffffe          BL       TEXT_CreateEx
0001aa  4604              MOV      r4,r0
;;;198    	                     pMsg->hWin, WM_CF_SHOW, 0, 0, pStr);
;;;199    	TEXT_SetFont(hWin, &GUI_FontTahomaBold33);
0001ac  4904              LDR      r1,|L2.448|
0001ae  f7fffffe          BL       TEXT_SetFont
;;;200    	TEXT_SetTextColor(hWin, GUI_WHITE);
0001b2  4651              MOV      r1,r10
0001b4  4620              MOV      r0,r4
0001b6  f7fffffe          BL       TEXT_SetTextColor
;;;201    }
0001ba  b010              ADD      sp,sp,#0x40
0001bc  e8bd87f0          POP      {r4-r10,pc}
;;;202    
                          ENDP

                  |L2.448|
                          DCD      GUI_FontTahomaBold33
                  |L2.452|
0001c4  42724143          DCB      "BrAC",0
0001c8  00      
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L2.460|
0001cc  42414300          DCB      "BAC",0
                  |L2.464|
                          DCD      0x44098000
                  |L2.468|
                          DCD      g_eAlcTestPurpose
                  |L2.472|
                          DCD      0x42c80000
                  |L2.476|
                          DCD      GUI_FontTimesNewRoman73
                  |L2.480|
                          DCD      0x41a00000

                          AREA ||i.Display_Calibration_Result||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  Display_Calibration_Result PROC
;;;202    
;;;203    void Display_Calibration_Result(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;204    {
000002  4606              MOV      r6,r0
000004  b08c              SUB      sp,sp,#0x30
;;;205    	WM_HWIN hWin;
;;;206    	char aTemp[15];
;;;207    	GUI_RECT rect;
;;;208    	GUI_SetFont(&GUI_FontTahomaBold33);
000006  4829              LDR      r0,|L3.172|
000008  f7fffffe          BL       GUI_SetFont
;;;209    	if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliHighPoint || g_sAlcCalibrationParam.nCurrCalibrteState == eCaliLowPoint)
00000c  4c28              LDR      r4,|L3.176|
00000e  f894003e          LDRB     r0,[r4,#0x3e]  ; g_sAlcCalibrationParam
000012  b120              CBZ      r0,|L3.30|
000014  2801              CMP      r0,#1
000016  d002              BEQ      |L3.30|
;;;210    	{
;;;211    		sprintf(aTemp, "%d", g_sAlcSample.nIntegralSumValue);
;;;212    	}
;;;213    	else if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliQuickTest)
000018  2802              CMP      r0,#2
00001a  d003              BEQ      |L3.36|
00001c  e017              B        |L3.78|
                  |L3.30|
00001e  4825              LDR      r0,|L3.180|
000020  68c2              LDR      r2,[r0,#0xc]          ;211  ; g_sAlcSample
000022  e010              B        |L3.70|
                  |L3.36|
;;;214    	{
;;;215    		sprintf(aTemp, "%d", (unsigned short)((float)g_sAlcCalibrationParam.nPeekCaliValue * ((float)g_fAlcoholVolume / (float)g_fQuickTestStandardAlcoholValue)));
000024  4824              LDR      r0,|L3.184|
000026  6801              LDR      r1,[r0,#0]  ; g_fQuickTestStandardAlcoholValue
000028  4824              LDR      r0,|L3.188|
00002a  6800              LDR      r0,[r0,#0]  ; g_fAlcoholVolume
00002c  f7fffffe          BL       __aeabi_fdiv
000030  4605              MOV      r5,r0
000032  f8d40007          LDR      r0,[r4,#7]  ; g_sAlcCalibrationParam
000036  f7fffffe          BL       __aeabi_ui2f
00003a  4629              MOV      r1,r5
00003c  f7fffffe          BL       __aeabi_fmul
000040  f7fffffe          BL       __aeabi_f2uiz
000044  b282              UXTH     r2,r0
                  |L3.70|
000046  a11e              ADR      r1,|L3.192|
000048  a807              ADD      r0,sp,#0x1c
00004a  f7fffffe          BL       __2sprintf
                  |L3.78|
;;;216    	}
;;;217    	GUI_GetTextExtend(&rect, aTemp, 20);
00004e  2214              MOVS     r2,#0x14
000050  a907              ADD      r1,sp,#0x1c
000052  a805              ADD      r0,sp,#0x14
000054  f7fffffe          BL       GUI_GetTextExtend
;;;218    	hWin = TEXT_CreateEx((LCD_XSIZE - (rect.x1 - rect.x0 + 1)) >> 1, (LCD_YSIZE - (rect.y1 - rect.y0 + 1)) >> 1,
000058  2000              MOVS     r0,#0
00005a  2202              MOVS     r2,#2
00005c  e9cd2001          STRD     r2,r0,[sp,#4]
000060  a907              ADD      r1,sp,#0x1c
000062  e9cd0103          STRD     r0,r1,[sp,#0xc]
000066  f9b60004          LDRSH    r0,[r6,#4]
00006a  9000              STR      r0,[sp,#0]
00006c  f9bd001a          LDRSH    r0,[sp,#0x1a]
000070  f9bd1016          LDRSH    r1,[sp,#0x16]
000074  f9bd2014          LDRSH    r2,[sp,#0x14]
000078  1a40              SUBS     r0,r0,r1
00007a  f9bd1018          LDRSH    r1,[sp,#0x18]
00007e  1c43              ADDS     r3,r0,#1
000080  1a8c              SUBS     r4,r1,r2
000082  f2a0103f          SUB      r0,r0,#0x13f
000086  4240              RSBS     r0,r0,#0
000088  1041              ASRS     r1,r0,#1
00008a  f1c400ef          RSB      r0,r4,#0xef
00008e  1c62              ADDS     r2,r4,#1
000090  1040              ASRS     r0,r0,#1
000092  f7fffffe          BL       TEXT_CreateEx
000096  4604              MOV      r4,r0
;;;219    	                     rect.x1 - rect.x0 + 1, rect.y1 - rect.y0 + 1,
;;;220    	                     pMsg->hWin, WM_CF_SHOW, 0, 0, aTemp);
;;;221    	TEXT_SetFont(hWin, &GUI_FontTahomaBold33);
000098  4904              LDR      r1,|L3.172|
00009a  f7fffffe          BL       TEXT_SetFont
;;;222    	TEXT_SetTextColor(hWin, GUI_BLACK);
00009e  2100              MOVS     r1,#0
0000a0  4620              MOV      r0,r4
0000a2  f7fffffe          BL       TEXT_SetTextColor
;;;223    }
0000a6  b00c              ADD      sp,sp,#0x30
0000a8  bd70              POP      {r4-r6,pc}
;;;224    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L3.172|
                          DCD      GUI_FontTahomaBold33
                  |L3.176|
                          DCD      g_sAlcCalibrationParam
                  |L3.180|
                          DCD      g_sAlcSample
                  |L3.184|
                          DCD      g_fQuickTestStandardAlcoholValue
                  |L3.188|
                          DCD      g_fAlcoholVolume
                  |L3.192|
0000c0  256400            DCB      "%d",0
0000c3  00                DCB      0

                          AREA ||i.Execute_Action_After_Test_Or_ShowReport||, CODE, READONLY, ALIGN=2

                  Execute_Action_After_Test_Or_ShowReport PROC
;;;224    
;;;225    void Execute_Action_After_Test_Or_ShowReport(WM_MESSAGE *pMsg)
000000  b51f              PUSH     {r0-r4,lr}
;;;226    {
;;;227    	sInputWindowProperty s;
;;;228    	s.nWinType = ePlateNumber;
000002  2100              MOVS     r1,#0
;;;229    	s.aCaptionText = _PlateNumberInput;
000004  4a0c              LDR      r2,|L4.56|
000006  f88d1008          STRB     r1,[sp,#8]            ;228
00000a  490a              LDR      r1,|L4.52|
00000c  7812              LDRB     r2,[r2,#0]  ; g_Language
00000e  f8511022          LDR      r1,[r1,r2,LSL #2]
000012  f8d111bc          LDR      r1,[r1,#0x1bc]
;;;230    	if(g_sRecord.nTestMode == eTestRefuseMode)
000016  9103              STR      r1,[sp,#0xc]
000018  4908              LDR      r1,|L4.60|
00001a  7cc9              LDRB     r1,[r1,#0x13]  ; g_sRecord
00001c  2902              CMP      r1,#2
00001e  d103              BNE      |L4.40|
;;;231    	{
;;;232    		WM_DeleteWindow(pMsg->hWin);
000020  f9b00004          LDRSH    r0,[r0,#4]
000024  f7fffffe          BL       WM_DeleteWindow
                  |L4.40|
;;;233    	}
;;;234    	CW_InputPlateNumWindow_Create(GetLastWinFromList(),(void *)&s);
000028  f7fffffe          BL       GetLastWinFromList
00002c  4669              MOV      r1,sp
00002e  f7fffffe          BL       CW_InputPlateNumWindow_Create
;;;235    }
000032  bd1f              POP      {r0-r4,pc}
;;;236    
                          ENDP

                  |L4.52|
                          DCD      Strings
                  |L4.56|
                          DCD      g_Language
                  |L4.60|
                          DCD      g_sRecord

                          AREA ||i.Save_Calibrate_Result||, CODE, READONLY, ALIGN=2

                  Save_Calibrate_Result PROC
;;;18     
;;;19     static bool Save_Calibrate_Result(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;20     {	
;;;21     	float fTemp;
;;;22     	if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliLowPoint)
;;;23     	{
;;;24     		fTemp = (float)g_sAlcSample.nIntegralSumValue * ((float)20.0 / (float)g_fLStandardAlcoholValue);
;;;25     		if(fTemp < 1000000 || fTemp > 30000000)
;;;26     		{
;;;27     			sDialogWindowProperty s;
;;;28     			s.nWinType = eDialogOK;
;;;29     			s.pFont = _GetFont(Font_Content);
;;;30     			s.pContent = _InvalidCaliData;
;;;31     			s.nContentColor = GUI_RED;
;;;32     			s.nBackGroundColor = GUI_LIGHTGRAY;
;;;33     			s.nAutoCloseTime = 3;
;;;34     			s.pFunMiddleOK = NULL;
;;;35     			CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;36     			return false;
;;;37     		}
;;;38     		else
;;;39     		{
;;;40     			g_sAlcCalibrationParam.nIntergralLowPoint = fTemp;
;;;41     			g_sAlcCalibrationParam.fLStandardAlcoholValue = g_fLStandardAlcoholValue;
;;;42     			g_sAlcCalibrationParam.nUserIntergralLowPoint = g_sAlcSample.nIntegralSumValue;
;;;43     		}
;;;44     		memcpy(g_sAlcCalibrationParam.aDateTimeIntergral, (unsigned char *)&g_sDateTime, sizeof(sDateTime));
000004  495c              LDR      r1,|L5.376|
000006  4c59              LDR      r4,|L5.364|
000008  f8df9164          LDR      r9,|L5.368|
00000c  680e              LDR      r6,[r1,#0]
00000e  888d              LDRH     r5,[r1,#4]
000010  495a              LDR      r1,|L5.380|
000012  f894003e          LDRB     r0,[r4,#0x3e]         ;22  ; g_sAlcCalibrationParam
000016  f8dfa15c          LDR      r10,|L5.372|
00001a  68cf              LDR      r7,[r1,#0xc]          ;22
00001c  b08d              SUB      sp,sp,#0x34           ;20
00001e  f04f0800          MOV      r8,#0                 ;22
000022  f04f0bff          MOV      r11,#0xff             ;31
000026  2801              CMP      r0,#1                 ;22
000028  d003              BEQ      |L5.50|
;;;45     	}
;;;46     	else if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliHighPoint)
00002a  b1f0              CBZ      r0,|L5.106|
;;;47     	{
;;;48     		/*积分*/
;;;49     		fTemp = (float)g_sAlcSample.nIntegralSumValue * ((float)80.0 / (float)g_fHStandardAlcoholValue);
;;;50     		if(fTemp < 1000000 || fTemp > 30000000)
;;;51     		{
;;;52     			sDialogWindowProperty s;
;;;53     			s.nWinType = eDialogOK;
;;;54     			s.pFont = _GetFont(Font_Content);
;;;55     			s.pContent = _InvalidCaliData;
;;;56     			s.nContentColor = GUI_RED;
;;;57     			s.nBackGroundColor = GUI_LIGHTGRAY;
;;;58     			s.nAutoCloseTime = 3;
;;;59     			s.pFunMiddleOK = NULL;
;;;60     			CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
;;;61     			return false;
;;;62     		}	
;;;63     		else
;;;64     		{
;;;65     			g_sAlcCalibrationParam.nIntergralHighPoint = fTemp;
;;;66     			g_sAlcCalibrationParam.nIntergralLowPoint = g_sAlcCalibrationParam.nIntergralHighPoint / 4.04;
;;;67     			g_sAlcCalibrationParam.fHStandardAlcoholValue = g_fHStandardAlcoholValue;
;;;68     			g_sAlcCalibrationParam.nUserIntergralHighPoint = g_sAlcSample.nIntegralSumValue;
;;;69     
;;;70     			/*刷新低浓度标定值*/
;;;71     			g_sAlcCalibrationParam.fLStandardAlcoholValue = 20;
;;;72     			g_sAlcCalibrationParam.nUserIntergralLowPoint = g_sAlcCalibrationParam.nIntergralLowPoint;
;;;73     		}
;;;74     		memcpy(g_sAlcCalibrationParam.aDateTimeIntergral, (unsigned char *)&g_sDateTime, sizeof(sDateTime));
;;;75     	}
;;;76     	else if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliQuickTest)
00002c  2802              CMP      r0,#2
00002e  d047              BEQ      |L5.192|
000030  e07f              B        |L5.306|
                  |L5.50|
000032  4853              LDR      r0,|L5.384|
000034  6801              LDR      r1,[r0,#0]            ;24  ; g_fLStandardAlcoholValue
000036  4853              LDR      r0,|L5.388|
000038  9101              STR      r1,[sp,#4]            ;24
00003a  f7fffffe          BL       __aeabi_fdiv
00003e  9000              STR      r0,[sp,#0]            ;24
000040  4638              MOV      r0,r7                 ;24
000042  f7fffffe          BL       __aeabi_ui2f
000046  9900              LDR      r1,[sp,#0]            ;24
000048  f7fffffe          BL       __aeabi_fmul
00004c  494e              LDR      r1,|L5.392|
00004e  1842              ADDS     r2,r0,r1              ;25
000050  494e              LDR      r1,|L5.396|
000052  428a              CMP      r2,r1                 ;25
000054  d247              BCS      |L5.230|
000056  f7fffffe          BL       __aeabi_f2uiz
00005a  f8c40019          STR      r0,[r4,#0x19]         ;40  ; g_sAlcCalibrationParam
00005e  9801              LDR      r0,[sp,#4]            ;41
000060  f8c4001d          STR      r0,[r4,#0x1d]         ;41  ; g_sAlcCalibrationParam
000064  f8c47031          STR      r7,[r4,#0x31]         ;42  ; g_sAlcCalibrationParam
000068  e05f              B        |L5.298|
                  |L5.106|
00006a  4849              LDR      r0,|L5.400|
00006c  6801              LDR      r1,[r0,#0]            ;49  ; g_fHStandardAlcoholValue
00006e  4849              LDR      r0,|L5.404|
000070  9101              STR      r1,[sp,#4]            ;49
000072  f7fffffe          BL       __aeabi_fdiv
000076  9000              STR      r0,[sp,#0]            ;49
000078  4638              MOV      r0,r7                 ;49
00007a  f7fffffe          BL       __aeabi_ui2f
00007e  9900              LDR      r1,[sp,#0]            ;49
000080  f7fffffe          BL       __aeabi_fmul
000084  4940              LDR      r1,|L5.392|
000086  1842              ADDS     r2,r0,r1              ;50
000088  4940              LDR      r1,|L5.396|
00008a  428a              CMP      r2,r1                 ;50
00008c  d22b              BCS      |L5.230|
00008e  f7fffffe          BL       __aeabi_f2uiz
000092  f8c40025          STR      r0,[r4,#0x25]         ;65  ; g_sAlcCalibrationParam
000096  3415              ADDS     r4,r4,#0x15           ;65
000098  f7fffffe          BL       __aeabi_ui2d
00009c  4a3e              LDR      r2,|L5.408|
00009e  4b3f              LDR      r3,|L5.412|
0000a0  f7fffffe          BL       __aeabi_ddiv
0000a4  f7fffffe          BL       __aeabi_d2uiz
0000a8  6060              STR      r0,[r4,#4]            ;66  ; g_sAlcCalibrationParam
0000aa  9901              LDR      r1,[sp,#4]            ;67
0000ac  6161              STR      r1,[r4,#0x14]         ;67  ; g_sAlcCalibrationParam
0000ae  6227              STR      r7,[r4,#0x20]         ;68  ; g_sAlcCalibrationParam
0000b0  4934              LDR      r1,|L5.388|
0000b2  60a1              STR      r1,[r4,#8]            ;71  ; g_sAlcCalibrationParam
0000b4  61e0              STR      r0,[r4,#0x1c]         ;72  ; g_sAlcCalibrationParam
0000b6  f8446c02          STR      r6,[r4,#-2]           ;74  ; g_sAlcCalibrationParam
0000ba  8065              STRH     r5,[r4,#2]            ;74
0000bc  3c15              SUBS     r4,r4,#0x15           ;74
0000be  e038              B        |L5.306|
                  |L5.192|
;;;77     	{
;;;78     		fTemp = (float)g_sAlcCalibrationParam.nPeekCaliValue * ((float)g_fAlcoholVolume / (float)g_fQuickTestStandardAlcoholValue);
0000c0  4837              LDR      r0,|L5.416|
0000c2  6801              LDR      r1,[r0,#0]  ; g_fQuickTestStandardAlcoholValue
0000c4  4837              LDR      r0,|L5.420|
0000c6  6800              LDR      r0,[r0,#0]  ; g_fAlcoholVolume
0000c8  f7fffffe          BL       __aeabi_fdiv
0000cc  4607              MOV      r7,r0
0000ce  f8d40007          LDR      r0,[r4,#7]  ; g_sAlcCalibrationParam
0000d2  f7fffffe          BL       __aeabi_ui2f
0000d6  4639              MOV      r1,r7
0000d8  f7fffffe          BL       __aeabi_fmul
;;;79     		if(fTemp < 1000 || fTemp > 4095)
0000dc  4932              LDR      r1,|L5.424|
0000de  4a33              LDR      r2,|L5.428|
0000e0  4401              ADD      r1,r1,r0
0000e2  4291              CMP      r1,r2
0000e4  d31d              BCC      |L5.290|
                  |L5.230|
;;;80     		{
;;;81     			sDialogWindowProperty s;
;;;82     			s.nWinType = eDialogOK;
0000e6  4644              MOV      r4,r8
0000e8  f88d8000          STRB     r8,[sp,#0]
;;;83     			s.pFont = _GetFont(Font_Content);
0000ec  2004              MOVS     r0,#4
0000ee  f7fffffe          BL       _GetFont
;;;84     			s.pContent = _InvalidCaliData;
0000f2  9002              STR      r0,[sp,#8]
0000f4  f89a1000          LDRB     r1,[r10,#0]  ; g_Language
0000f8  f8590021          LDR      r0,[r9,r1,LSL #2]
0000fc  f8d001b0          LDR      r0,[r0,#0x1b0]
;;;85     			s.nContentColor = GUI_RED;
;;;86     			s.nBackGroundColor = GUI_LIGHTGRAY;
000100  9001              STR      r0,[sp,#4]
000102  482b              LDR      r0,|L5.432|
000104  e9cdb003          STRD     r11,r0,[sp,#0xc]
;;;87     			s.nAutoCloseTime = 3;
000108  2003              MOVS     r0,#3
00010a  f88d0014          STRB     r0,[sp,#0x14]
;;;88     			s.pFunMiddleOK = NULL;
;;;89     			CW_ShowDialog_Create(GetLastWinFromList(),(void *)&s);
00010e  9408              STR      r4,[sp,#0x20]
000110  f7fffffe          BL       GetLastWinFromList
000114  4669              MOV      r1,sp
000116  f7fffffe          BL       CW_ShowDialog_Create
;;;90     			return false;
00011a  2000              MOVS     r0,#0
                  |L5.284|
;;;91     		}	
;;;92     		else
;;;93     		{
;;;94     			g_sAlcCalibrationParam.nPeekCaliValue = fTemp;
;;;95     		}
;;;96     		memcpy(g_sAlcCalibrationParam.aDateTimeIntergral, (unsigned char *)&g_sDateTime, sizeof(sDateTime));
;;;97     	}
;;;98     	
;;;99     	/*还原标定中的值为默认值.*/
;;;100    	g_sAlcCalibrationParam.fLStandardAlcoholValue = 20;
;;;101    	g_sAlcCalibrationParam.fHStandardAlcoholValue = 80;
;;;102    	g_sAlcCalibrationParam.fLRealTestAlcoholValue = 20;
;;;103    	g_sAlcCalibrationParam.fHRealTestAlcoholValue = 80;
;;;104    
;;;105    	Spi_Flash_Init();
;;;106    	Data_AlcCalibration_Parameter_Save(&g_sAlcCalibrationParam);
;;;107    	Data_AlcCalibration_Parameter_Load(&g_sAlcCalibrationParam);
;;;108    	g_sTestParam.nAdjustCoefficientIntegral = 100;
;;;109    	Data_Test_Parameter_Save(&g_sTestParam);
;;;110    	Data_Test_Parameter_Load(&g_sTestParam);
;;;111    	Spi_Flash_DeInit();
;;;112    	
;;;113    	return true;
;;;114    }
00011c  b00d              ADD      sp,sp,#0x34
00011e  e8bd8ff0          POP      {r4-r11,pc}
                  |L5.290|
000122  f7fffffe          BL       __aeabi_f2uiz
000126  f8c40007          STR      r0,[r4,#7]            ;94  ; g_sAlcCalibrationParam
                  |L5.298|
00012a  f8c46013          STR      r6,[r4,#0x13]         ;96  ; g_sAlcCalibrationParam
00012e  f8a45017          STRH     r5,[r4,#0x17]         ;96
                  |L5.306|
000132  4814              LDR      r0,|L5.388|
000134  f8440f1d          STR      r0,[r4,#0x1d]!        ;100  ; g_sAlcCalibrationParam
000138  4916              LDR      r1,|L5.404|
00013a  60e1              STR      r1,[r4,#0xc]          ;101  ; g_sAlcCalibrationParam
00013c  6060              STR      r0,[r4,#4]            ;102  ; g_sAlcCalibrationParam
00013e  6121              STR      r1,[r4,#0x10]         ;103  ; g_sAlcCalibrationParam
000140  f7fffffe          BL       Spi_Flash_Init
000144  4809              LDR      r0,|L5.364|
000146  f7fffffe          BL       Data_AlcCalibration_Parameter_Save
00014a  4808              LDR      r0,|L5.364|
00014c  f7fffffe          BL       Data_AlcCalibration_Parameter_Load
000150  4918              LDR      r1,|L5.436|
000152  2064              MOVS     r0,#0x64              ;108
000154  75c8              STRB     r0,[r1,#0x17]         ;108
000156  4608              MOV      r0,r1                 ;109
000158  f7fffffe          BL       Data_Test_Parameter_Save
00015c  4815              LDR      r0,|L5.436|
00015e  f7fffffe          BL       Data_Test_Parameter_Load
000162  f7fffffe          BL       Spi_Flash_DeInit
000166  2001              MOVS     r0,#1                 ;113
000168  e7d8              B        |L5.284|
;;;115    /*标定相关的函数--End*/
                          ENDP

00016a  0000              DCW      0x0000
                  |L5.364|
                          DCD      g_sAlcCalibrationParam
                  |L5.368|
                          DCD      Strings
                  |L5.372|
                          DCD      g_Language
                  |L5.376|
                          DCD      g_sDateTime
                  |L5.380|
                          DCD      g_sAlcSample
                  |L5.384|
                          DCD      g_fLStandardAlcoholValue
                  |L5.388|
                          DCD      0x41a00000
                  |L5.392|
                          DCD      0xb68bdc00
                  |L5.396|
                          DCD      0x0270bdc1
                  |L5.400|
                          DCD      g_fHStandardAlcoholValue
                  |L5.404|
                          DCD      0x42a00000
                  |L5.408|
                          DCD      0xc28f5c29
                  |L5.412|
                          DCD      0x401028f5
                  |L5.416|
                          DCD      g_fQuickTestStandardAlcoholValue
                  |L5.420|
                          DCD      g_fAlcoholVolume
                  |L5.424|
                          DCD      0xbb860000
                  |L5.428|
                          DCD      0x0105f001
                  |L5.432|
                          DCD      0x00d3d3d3
                  |L5.436|
                          DCD      g_sTestParam

                          AREA ||i._Callback||, CODE, READONLY, ALIGN=2

                  _Callback PROC
;;;433    
;;;434    static void _Callback(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;435    {
000002  4604              MOV      r4,r0
;;;436    	Enter_Callback_Hook(pMsg);
000004  f7fffffe          BL       Enter_Callback_Hook
;;;437    	switch(pMsg->MsgId)
000008  6823              LDR      r3,[r4,#0]
;;;438    	{
;;;439    		case WM_CREATE:
;;;440    			_Create(pMsg);
;;;441    			break;
;;;442    
;;;443    		case WM_PAINT:
;;;444    			if(g_eAlcTestPurpose == eTestForNormal || g_eAlcTestPurpose == eTestForMaintain)
;;;445    			{
;;;446    				if(g_sRecord.fAlcValue < 20)
00000a  4a4d              LDR      r2,|L6.320|
00000c  484d              LDR      r0,|L6.324|
00000e  494e              LDR      r1,|L6.328|
000010  2b0e              CMP      r3,#0xe               ;437
000012  d02c              BEQ      |L6.110|
000014  dc04              BGT      |L6.32|
000016  2b01              CMP      r3,#1                 ;437
000018  d007              BEQ      |L6.42|
00001a  2b0b              CMP      r3,#0xb               ;437
00001c  d108              BNE      |L6.48|
00001e  e07a              B        |L6.278|
                  |L6.32|
000020  2b0f              CMP      r3,#0xf               ;437
000022  d006              BEQ      |L6.50|
000024  2b26              CMP      r3,#0x26              ;437
000026  d103              BNE      |L6.48|
000028  e06c              B        |L6.260|
                  |L6.42|
00002a  4620              MOV      r0,r4                 ;440
00002c  f7fffffe          BL       _Create
                  |L6.48|
000030  e07f              B        |L6.306|
                  |L6.50|
000032  7809              LDRB     r1,[r1,#0]            ;444  ; g_eAlcTestPurpose
000034  b109              CBZ      r1,|L6.58|
000036  2902              CMP      r1,#2                 ;444
000038  d17b              BNE      |L6.306|
                  |L6.58|
00003a  f8d00005          LDR      r0,[r0,#5]  ; g_sRecord
00003e  4290              CMP      r0,r2
000040  da02              BGE      |L6.72|
;;;447    				{
;;;448    					GUI_SetColor(GUI_DARKGREEN);
000042  f44f4000          MOV      r0,#0x8000
000046  e008              B        |L6.90|
                  |L6.72|
;;;449    				}
;;;450    				else if(g_sRecord.fAlcValue >= 20 && g_sRecord.fAlcValue < 80)
000048  493d              LDR      r1,|L6.320|
00004a  4249              RSBS     r1,r1,#0
00004c  4408              ADD      r0,r0,r1
00004e  f1b07f80          CMP      r0,#0x1000000
000052  d201              BCS      |L6.88|
;;;451    				{
;;;452    					GUI_SetColor(_RGB(255, 128, 64));
000054  483d              LDR      r0,|L6.332|
000056  e000              B        |L6.90|
                  |L6.88|
;;;453    				}
;;;454    				else
;;;455    				{
;;;456    					GUI_SetColor(GUI_DARKRED);
000058  2080              MOVS     r0,#0x80
                  |L6.90|
00005a  f7fffffe          BL       GUI_SetColor
;;;457    				}
;;;458    				GUI_FillRect(0, Caption_Height, LCD_XSIZE - 1, LCD_YSIZE - 1 - Bottom_Height);
00005e  f2401321          MOV      r3,#0x121
000062  22ef              MOVS     r2,#0xef
000064  211e              MOVS     r1,#0x1e
000066  2000              MOVS     r0,#0
000068  f7fffffe          BL       GUI_FillRect
00006c  e061              B        |L6.306|
                  |L6.110|
;;;459    			}
;;;460    			break;
;;;461    			
;;;462    		case WM_KEY:
;;;463    			if(WM_Key_Status == 0)
00006e  68a3              LDR      r3,[r4,#8]
000070  685d              LDR      r5,[r3,#4]
000072  2d00              CMP      r5,#0
000074  d162              BNE      |L6.316|
;;;464    			{
;;;465    				switch (WM_Key_Code)
000076  681b              LDR      r3,[r3,#0]
000078  2b05              CMP      r3,#5
00007a  d017              BEQ      |L6.172|
00007c  2b06              CMP      r3,#6
00007e  d01e              BEQ      |L6.190|
000080  2b0d              CMP      r3,#0xd
000082  d15b              BNE      |L6.316|
;;;466    				{
;;;467    					case GUI_KEY_LEFT_FUN:
;;;468    					     #if SERVER_USE_XING_JIKONG_GU
;;;469    						XingJiKongGu_AlcoholValue_Analyse_Left(pMsg);
;;;470    					    #else
;;;471    					    	#if ALWAYS_SAVE_TEST_RESULT
;;;472    						Data_Record_Full_Save();
;;;473    						#endif
;;;474    						WM_DeleteWindow(pMsg->hWin);
;;;475    					    #endif
;;;476    						break;
;;;477    						
;;;478    					case GUI_KEY_RIGHT_FUN:
;;;479    						#if SERVER_USE_XING_JIKONG_GU
;;;480    							XingJiKongGu_AlcoholValue_Analyse_Right(pMsg);
;;;481    						#else
;;;482    							#if ALWAYS_SAVE_TEST_RESULT
;;;483    								Data_Record_Full_Save();
;;;484    							#endif
;;;485    						WM_DeleteWindow(pMsg->hWin);
;;;486    						CW_TestMain_Create(GetLastWinFromList(),(void *)g_eTestMode);
;;;487    						#endif
;;;488    						break;
;;;489    						
;;;490    					case GUI_KEY_MIDDLE_FUN:
;;;491    						if(g_eAlcTestPurpose == eTestForCalibration)
000084  7809              LDRB     r1,[r1,#0]  ; g_eAlcTestPurpose
000086  2901              CMP      r1,#1
000088  d02d              BEQ      |L6.230|
;;;492    						{
;;;493    							if(Save_Calibrate_Result())
;;;494    							{
;;;495    								WM_DeleteWindow(pMsg->hWin);
;;;496    							}
;;;497    						}
;;;498    						else if(g_eAlcTestPurpose == eTestForNormal)
00008a  b3b1              CBZ      r1,|L6.250|
;;;499    						{
;;;500    							Execute_Action_After_Test_Or_ShowReport(pMsg);
;;;501    						}
;;;502    						else if(g_eAlcTestPurpose == eTestForMaintain)
00008c  2902              CMP      r1,#2
00008e  d155              BNE      |L6.316|
;;;503    						{
;;;504    							/*保存记录*/
;;;505    							pApp->bNewDataNeedSave = true;
000090  4a2f              LDR      r2,|L6.336|
000092  2101              MOVS     r1,#1
000094  6812              LDR      r2,[r2,#0]  ; pApp
000096  7591              STRB     r1,[r2,#0x16]
;;;506    							g_sRecord.nTestUnit = 0;
000098  2100              MOVS     r1,#0
00009a  7501              STRB     r1,[r0,#0x14]
;;;507    							g_sRecord.nTestMode = eTestMaintenance;
00009c  21fa              MOVS     r1,#0xfa
00009e  74c1              STRB     r1,[r0,#0x13]
;;;508    							memset(g_sRecord.aLocation, 0, sizeof(g_sRecord.aLocation));
0000a0  4828              LDR      r0,|L6.324|
0000a2  212e              MOVS     r1,#0x2e
0000a4  3038              ADDS     r0,r0,#0x38
0000a6  f7fffffe          BL       __aeabi_memclr
;;;509    							Data_Record_Full_Save();
;;;510    							WM_DeleteWindow(pMsg->hWin);
0000aa  e005              B        |L6.184|
                  |L6.172|
0000ac  7809              LDRB     r1,[r1,#0]  ; g_eAlcTestPurpose
0000ae  b9f1              CBNZ     r1,|L6.238|
0000b0  f8d00005          LDR      r0,[r0,#5]  ; g_sRecord
0000b4  4290              CMP      r0,r2
0000b6  da41              BGE      |L6.316|
                  |L6.184|
0000b8  f7fffffe          BL       Data_Record_Full_Save
0000bc  e017              B        |L6.238|
                  |L6.190|
0000be  7809              LDRB     r1,[r1,#0]  ; g_eAlcTestPurpose
0000c0  4d24              LDR      r5,|L6.340|
0000c2  b929              CBNZ     r1,|L6.208|
0000c4  f8d00005          LDR      r0,[r0,#5]  ; g_sRecord
0000c8  4290              CMP      r0,r2
0000ca  da37              BGE      |L6.316|
0000cc  f7fffffe          BL       Data_Record_Full_Save
                  |L6.208|
0000d0  f9b40004          LDRSH    r0,[r4,#4]
0000d4  f7fffffe          BL       WM_DeleteWindow
0000d8  f7fffffe          BL       GetLastWinFromList
0000dc  7829              LDRB     r1,[r5,#0]  ; g_eTestMode
0000de  e8bd4070          POP      {r4-r6,lr}
0000e2  f7ffbffe          B.W      CW_TestMain_Create
                  |L6.230|
0000e6  f7fffffe          BL       Save_Calibrate_Result
0000ea  2800              CMP      r0,#0                 ;493
0000ec  d026              BEQ      |L6.316|
                  |L6.238|
0000ee  f9b40004          LDRSH    r0,[r4,#4]            ;495
0000f2  e8bd4070          POP      {r4-r6,lr}            ;495
0000f6  f7ffbffe          B.W      WM_DeleteWindow
                  |L6.250|
0000fa  4620              MOV      r0,r4                 ;500
0000fc  e8bd4070          POP      {r4-r6,lr}            ;500
000100  f7ffbffe          B.W      Execute_Action_After_Test_Or_ShowReport
                  |L6.260|
;;;511    						}
;;;512    						break;
;;;513    					default:
;;;514    						break;
;;;515    				}
;;;516    			}
;;;517    			return;
;;;518    			
;;;519    		case WM_NOTIFY_PARENT:
;;;520    			switch(pMsg->Data.v)
000104  68a0              LDR      r0,[r4,#8]
000106  2811              CMP      r0,#0x11
000108  d118              BNE      |L6.316|
;;;521    			{
;;;522    				case WM_NOTIFICATION_WIN_DELETE:
;;;523    					WM_SetFocus(pMsg->hWin);
00010a  f9b40004          LDRSH    r0,[r4,#4]
00010e  e8bd4070          POP      {r4-r6,lr}
000112  f7ffbffe          B.W      WM_SetFocus
                  |L6.278|
;;;524    					break;
;;;525    			}
;;;526    			return;
;;;527    			
;;;528    		case WM_DELETE:
;;;529    			Voc_Close();
000116  f7fffffe          BL       Voc_Close
;;;530    			DeleteWindowFromList(pMsg->hWin);
00011a  f9b40004          LDRSH    r0,[r4,#4]
00011e  f7fffffe          BL       DeleteWindowFromList
;;;531    			WM_NotifyParent(pMsg->hWin, WM_NOTIFICATION_WIN_DELETE);
000122  f9b40004          LDRSH    r0,[r4,#4]
000126  2111              MOVS     r1,#0x11
000128  f7fffffe          BL       WM_NotifyParent
;;;532    			TRACE_PRINTF("ShowReportWindow will be destroyed!\r\n");
00012c  a00a              ADR      r0,|L6.344|
00012e  f7fffffe          BL       User_Debug_Printf
                  |L6.306|
;;;533    			break;
;;;534    	}
;;;535    	Exit_Callback_Hook(pMsg);
000132  4620              MOV      r0,r4
000134  e8bd4070          POP      {r4-r6,lr}
000138  f7ffbffe          B.W      Exit_Callback_Hook
                  |L6.316|
;;;536    }
00013c  bd70              POP      {r4-r6,pc}
;;;537    
                          ENDP

00013e  0000              DCW      0x0000
                  |L6.320|
                          DCD      0x41a00000
                  |L6.324|
                          DCD      g_sRecord
                  |L6.328|
                          DCD      g_eAlcTestPurpose
                  |L6.332|
                          DCD      0x004080ff
                  |L6.336|
                          DCD      pApp
                  |L6.340|
                          DCD      g_eTestMode
                  |L6.344|
000158  53686f77          DCB      "ShowReportWindow will be destroyed!\r\n",0
00015c  5265706f
000160  72745769
000164  6e646f77
000168  2077696c
00016c  6c206265
000170  20646573
000174  74726f79
000178  6564210d
00017c  0a00    
00017e  00                DCB      0
00017f  00                DCB      0

                          AREA ||i._Create||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  _Create PROC
;;;236    
;;;237    static void _Create(WM_MESSAGE *pMsg)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;238    {
000004  4607              MOV      r7,r0
000006  b08f              SUB      sp,sp,#0x3c
;;;239    	pMsg->Data.p = " ";
000008  a088              ADR      r0,|L7.556|
;;;240    	pThisWin->hCaption = Create_Dialog_Caption(pMsg);
00000a  60b8              STR      r0,[r7,#8]
00000c  4638              MOV      r0,r7
00000e  f7fffffe          BL       Create_Dialog_Caption
000012  4e87              LDR      r6,|L7.560|
;;;241    
;;;242    	#if SERVER_USE_XING_JIKONG_GU
;;;243    	if(g_eAlcTestPurpose == eTestForNormal)
000014  f8df921c          LDR      r9,|L7.564|
;;;244    	{
;;;245             	if(g_sRecord.fAlcValue<20)
000018  f8dfb21c          LDR      r11,|L7.568|
00001c  6831              LDR      r1,[r6,#0]            ;240  ; pThisWin
;;;246             	{
;;;247    			/*创建左键*/
;;;248    			pThisWin->hLeftButton = Create_Left_Button(pMsg->hWin);
;;;249    			BUTTON_SetText(pThisWin->hLeftButton, __Exit);
00001e  4c87              LDR      r4,|L7.572|
000020  4d87              LDR      r5,|L7.576|
000022  8348              STRH     r0,[r1,#0x1a]         ;240
000024  f8990000          LDRB     r0,[r9,#0]            ;243  ; g_eAlcTestPurpose
000028  f8df8218          LDR      r8,|L7.580|
00002c  b918              CBNZ     r0,|L7.54|
00002e  f8d81005          LDR      r1,[r8,#5]            ;245  ; g_sRecord
000032  4559              CMP      r1,r11                ;245
000034  da19              BGE      |L7.106|
                  |L7.54|
000036  f9b70004          LDRSH    r0,[r7,#4]            ;248
00003a  f7fffffe          BL       Create_Left_Button
00003e  6831              LDR      r1,[r6,#0]            ;248  ; pThisWin
000040  8288              STRH     r0,[r1,#0x14]         ;248
000042  7829              LDRB     r1,[r5,#0]  ; g_Language
000044  f8541021          LDR      r1,[r4,r1,LSL #2]
000048  f8d110cc          LDR      r1,[r1,#0xcc]
00004c  f7fffffe          BL       BUTTON_SetText
;;;250    
;;;251    			/*创建右键*/
;;;252    			pThisWin->hRightButton = Create_Right_Button(pMsg->hWin);
000050  f9b70004          LDRSH    r0,[r7,#4]
000054  f7fffffe          BL       Create_Right_Button
000058  6831              LDR      r1,[r6,#0]  ; pThisWin
00005a  82c8              STRH     r0,[r1,#0x16]
;;;253    			BUTTON_SetText(pThisWin->hRightButton, _Retest);
00005c  7829              LDRB     r1,[r5,#0]  ; g_Language
00005e  f8541021          LDR      r1,[r4,r1,LSL #2]
000062  f8d1110c          LDR      r1,[r1,#0x10c]
000066  f7fffffe          BL       BUTTON_SetText
                  |L7.106|
;;;254    		}
;;;255    	}
;;;256    	else
;;;257    	{
;;;258    		/*创建左键*/
;;;259    		pThisWin->hLeftButton = Create_Left_Button(pMsg->hWin);
;;;260    		BUTTON_SetText(pThisWin->hLeftButton, __Exit);
;;;261    
;;;262    		/*创建右键*/
;;;263    		pThisWin->hRightButton = Create_Right_Button(pMsg->hWin);
;;;264    		BUTTON_SetText(pThisWin->hRightButton, _Retest);
;;;265    	}
;;;266    	#else
;;;267    	pThisWin->hLeftButton = Create_Left_Button(pMsg->hWin);
;;;268    	BUTTON_SetText(pThisWin->hLeftButton, __Exit);
;;;269    
;;;270    	/*创建右键*/
;;;271    	pThisWin->hRightButton = Create_Right_Button(pMsg->hWin);
;;;272    	BUTTON_SetText(pThisWin->hRightButton, _Retest);
;;;273    	#endif
;;;274    
;;;275    	/*创建中键*/
;;;276    	pThisWin->hMiddleButton = Create_Middle_Button(pMsg->hWin);
00006a  f9b70004          LDRSH    r0,[r7,#4]
00006e  f7fffffe          BL       Create_Middle_Button
000072  4601              MOV      r1,r0
000074  6830              LDR      r0,[r6,#0]  ; pThisWin
000076  f04f0a01          MOV      r10,#1                ;243
00007a  8301              STRH     r1,[r0,#0x18]
;;;277    
;;;278    	if(g_eAlcTestPurpose == eTestForCalibration)
00007c  f8991000          LDRB     r1,[r9,#0]  ; g_eAlcTestPurpose
000080  2901              CMP      r1,#1
000082  d004              BEQ      |L7.142|
;;;279    	{
;;;280    		char aTemp[30];
;;;281    		char aResult[20];
;;;282    		if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliLowPoint)
;;;283    		{
;;;284    			if(g_nCalibrateUnit == 0)
;;;285    			{
;;;286    				sprintf(aResult, "%.1f", g_fLStandardAlcoholValue);
;;;287    			}
;;;288    			else if(g_nCalibrateUnit == 5)
;;;289    			{
;;;290    				float fTemp;
;;;291    				fTemp = Get_Final_Convert_Display_Result(g_fLStandardAlcoholValue,g_nCalibrateUnit, g_sTestParam.nBrACBACK);
;;;292    				Get_Format_Alc_Convert_String(fTemp, g_nCalibrateUnit,aResult,eFormatToFloat);
;;;293    			}
;;;294    			sprintf(aTemp, "%s(%s%s)",_Calibration, aResult,Get_Unit_String(g_nCalibrateUnit));
;;;295    		}
;;;296    		else if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliHighPoint)
;;;297    		{
;;;298    			if(g_nCalibrateUnit == 0)
;;;299    			{
;;;300    				sprintf(aResult, "%.1f", g_fHStandardAlcoholValue);
;;;301    			}
;;;302    			else if(g_nCalibrateUnit == 5)
;;;303    			{
;;;304    				float fTemp;
;;;305    				fTemp = Get_Final_Convert_Display_Result(g_fHStandardAlcoholValue,g_nCalibrateUnit, g_sTestParam.nBrACBACK);
;;;306    				Get_Format_Alc_Convert_String(fTemp, g_nCalibrateUnit,aResult,eFormatToFloat);
;;;307    			}
;;;308    			sprintf(aTemp, "%s(%s%s)",_Calibration, aResult,Get_Unit_String(g_nCalibrateUnit));
;;;309    		}
;;;310    		else if(g_sAlcCalibrationParam.nCurrCalibrteState == eCaliQuickTest)
;;;311    		{
;;;312    			if(g_nCalibrateUnit == 0)
;;;313    			{
;;;314    				sprintf(aResult, "%.1f", g_fQuickTestStandardAlcoholValue);
;;;315    			}
;;;316    			else if(g_nCalibrateUnit == 5)
;;;317    			{
;;;318    				float fTemp;
;;;319    				fTemp = Get_Final_Convert_Display_Result(g_fQuickTestStandardAlcoholValue,g_nCalibrateUnit, g_sTestParam.nBrACBACK);
;;;320    				Get_Format_Alc_Convert_String(fTemp, g_nCalibrateUnit,aResult,eFormatToFloat);
;;;321    			}
;;;322    			sprintf(aTemp, "%s(%s%s)",_Calibration, aResult,Get_Unit_String(g_nCalibrateUnit));
;;;323    		}
;;;324    		Set_Dialog_Caption_Content(aTemp, pThisWin->hCaption);
;;;325    		Display_Calibration_Result(pMsg);
;;;326    		BUTTON_SetText(pThisWin->hMiddleButton, _Save);
;;;327    	}
;;;328    	else if(g_eAlcTestPurpose == eTestForNormal)
000084  2900              CMP      r1,#0
000086  d050              BEQ      |L7.298|
;;;329    	{
;;;330    		pApp->bNewDataNeedSave = true;
;;;331    		if(g_sRecord.nTestMode == eTestRefuseMode)
;;;332    		{
;;;333    			Execute_Action_After_Test_Or_ShowReport(pMsg);
;;;334    			return;
;;;335    		}
;;;336    		else
;;;337    		{
;;;338    			Set_Dialog_Caption_Content(_TestReport,pThisWin->hCaption);
;;;339    			Display_AlcoholTest_Result(pMsg,&g_sRecord);
;;;340    			BUTTON_SetText(pThisWin->hMiddleButton, _OK);
;;;341    		}
;;;342    	}
;;;343    	else if(g_eAlcTestPurpose == eTestForMaintain)
000088  2902              CMP      r1,#2
00008a  d066              BEQ      |L7.346|
00008c  e07f              B        |L7.398|
                  |L7.142|
00008e  486e              LDR      r0,|L7.584|
000090  4a6f              LDR      r2,|L7.592|
000092  f890103e          LDRB     r1,[r0,#0x3e]         ;282  ; g_sAlcCalibrationParam
000096  486d              LDR      r0,|L7.588|
000098  2901              CMP      r1,#1                 ;282
00009a  d003              BEQ      |L7.164|
00009c  b3d1              CBZ      r1,|L7.276|
00009e  2902              CMP      r1,#2                 ;310
0000a0  d03d              BEQ      |L7.286|
0000a2  e028              B        |L7.246|
                  |L7.164|
0000a4  4691              MOV      r9,r2                 ;284
0000a6  7811              LDRB     r1,[r2,#0]            ;284  ; g_nCalibrateUnit
0000a8  4b6a              LDR      r3,|L7.596|
0000aa  e03b              B        |L7.292|
                  |L7.172|
0000ac  6818              LDR      r0,[r3,#0]            ;286  ; g_fLStandardAlcoholValue
0000ae  f7fffffe          BL       __aeabi_f2d
0000b2  4602              MOV      r2,r0                 ;286
0000b4  460b              MOV      r3,r1                 ;286
0000b6  a168              ADR      r1,|L7.600|
0000b8  a801              ADD      r0,sp,#4              ;286
0000ba  f7fffffe          BL       __2sprintf
0000be  e00b              B        |L7.216|
                  |L7.192|
0000c0  2905              CMP      r1,#5                 ;288
0000c2  d109              BNE      |L7.216|
0000c4  8842              LDRH     r2,[r0,#2]            ;291  ; g_sTestParam
0000c6  6818              LDR      r0,[r3,#0]            ;291  ; g_fLStandardAlcoholValue
0000c8  f7fffffe          BL       Get_Final_Convert_Display_Result
0000cc  2301              MOVS     r3,#1                 ;292
0000ce  aa01              ADD      r2,sp,#4              ;292
0000d0  f8991000          LDRB     r1,[r9,#0]            ;292  ; g_nCalibrateUnit
0000d4  f7fffffe          BL       Get_Format_Alc_Convert_String
                  |L7.216|
0000d8  f8990000          LDRB     r0,[r9,#0]            ;322  ; g_nCalibrateUnit
0000dc  f7fffffe          BL       Get_Unit_String
0000e0  9000              STR      r0,[sp,#0]            ;322
0000e2  7828              LDRB     r0,[r5,#0]            ;322  ; g_Language
0000e4  ab01              ADD      r3,sp,#4              ;322
0000e6  a15e              ADR      r1,|L7.608|
0000e8  f8540020          LDR      r0,[r4,r0,LSL #2]     ;322
0000ec  f8d02124          LDR      r2,[r0,#0x124]        ;322
0000f0  a806              ADD      r0,sp,#0x18           ;322
0000f2  f7fffffe          BL       __2sprintf
                  |L7.246|
0000f6  6830              LDR      r0,[r6,#0]            ;324  ; pThisWin
0000f8  f9b0101a          LDRSH    r1,[r0,#0x1a]         ;324
0000fc  a806              ADD      r0,sp,#0x18           ;324
0000fe  f7fffffe          BL       Set_Dialog_Caption_Content
000102  4638              MOV      r0,r7                 ;325
000104  f7fffffe          BL       Display_Calibration_Result
000108  7828              LDRB     r0,[r5,#0]            ;326  ; g_Language
00010a  f8540020          LDR      r0,[r4,r0,LSL #2]     ;326
00010e  f8d01180          LDR      r1,[r0,#0x180]        ;327
000112  e037              B        |L7.388|
                  |L7.276|
000114  e7ff              B        |L7.278|
                  |L7.278|
000116  4691              MOV      r9,r2                 ;298
000118  7811              LDRB     r1,[r2,#0]            ;298  ; g_nCalibrateUnit
00011a  4b54              LDR      r3,|L7.620|
00011c  e002              B        |L7.292|
                  |L7.286|
00011e  7811              LDRB     r1,[r2,#0]            ;312  ; g_nCalibrateUnit
000120  4b53              LDR      r3,|L7.624|
000122  4691              MOV      r9,r2                 ;312
                  |L7.292|
000124  2900              CMP      r1,#0                 ;314
000126  d1cb              BNE      |L7.192|
000128  e7c0              B        |L7.172|
                  |L7.298|
00012a  4a52              LDR      r2,|L7.628|
00012c  6812              LDR      r2,[r2,#0]            ;330  ; pApp
00012e  f882a016          STRB     r10,[r2,#0x16]        ;330
000132  f8981013          LDRB     r1,[r8,#0x13]         ;331  ; g_sRecord
000136  2902              CMP      r1,#2                 ;331
000138  d009              BEQ      |L7.334|
00013a  f9b0101a          LDRSH    r1,[r0,#0x1a]         ;338
00013e  7828              LDRB     r0,[r5,#0]            ;338  ; g_Language
000140  f8540020          LDR      r0,[r4,r0,LSL #2]     ;338
000144  f8d001b4          LDR      r0,[r0,#0x1b4]        ;338
000148  f7fffffe          BL       Set_Dialog_Caption_Content
00014c  e011              B        |L7.370|
                  |L7.334|
00014e  b00f              ADD      sp,sp,#0x3c           ;333
000150  4638              MOV      r0,r7                 ;333
000152  e8bd4ff0          POP      {r4-r11,lr}           ;333
000156  f7ffbffe          B.W      Execute_Action_After_Test_Or_ShowReport
                  |L7.346|
;;;344    	{
;;;345    		Set_Dialog_Caption_Content(_TestReport,pThisWin->hCaption);
00015a  f9b0101a          LDRSH    r1,[r0,#0x1a]
00015e  7828              LDRB     r0,[r5,#0]  ; g_Language
000160  f8540020          LDR      r0,[r4,r0,LSL #2]
000164  f8d001b4          LDR      r0,[r0,#0x1b4]
000168  f7fffffe          BL       Set_Dialog_Caption_Content
;;;346    		g_sRecord.nTestUnit = 5;
00016c  2105              MOVS     r1,#5
00016e  f8881014          STRB     r1,[r8,#0x14]
                  |L7.370|
;;;347    		Display_AlcoholTest_Result(pMsg,&g_sRecord);
000172  4934              LDR      r1,|L7.580|
000174  4638              MOV      r0,r7
000176  f7fffffe          BL       Display_AlcoholTest_Result
;;;348    		BUTTON_SetText(pThisWin->hMiddleButton, _OK);
00017a  7828              LDRB     r0,[r5,#0]  ; g_Language
00017c  f8540020          LDR      r0,[r4,r0,LSL #2]
000180  f8d010c8          LDR      r1,[r0,#0xc8]
                  |L7.388|
000184  6830              LDR      r0,[r6,#0]  ; pThisWin
000186  f9b00018          LDRSH    r0,[r0,#0x18]
00018a  f7fffffe          BL       BUTTON_SetText
                  |L7.398|
;;;349    	}
;;;350    
;;;351    	Buzzer_Beep(eBUZ_REPORT);
00018e  2004              MOVS     r0,#4
000190  f7fffffe          BL       Buzzer_Beep
;;;352    
;;;353    	#if SERVER_USE_XING_JIKONG_GU
;;;354    	// 如果有网且记录信息上传完毕，方可上传
;;;355    	if((g_sXingJiKongGU.bReveiceAckFromServer==false)&&g_sXingJiKongGU.bSingal_Strength)// 如果有网且记录信息上传完毕，方可上传
000194  4c38              LDR      r4,|L7.632|
000196  7860              LDRB     r0,[r4,#1]  ; g_sXingJiKongGU
000198  b9b0              CBNZ     r0,|L7.456|
00019a  78a0              LDRB     r0,[r4,#2]  ; g_sXingJiKongGU
00019c  b1a0              CBZ      r0,|L7.456|
;;;356    	{
;;;357    		memset(GPRS_Tx_Buffer,0,sizeof(GPRS_Tx_Buffer));
00019e  f24051dc          MOV      r1,#0x5dc
0001a2  4836              LDR      r0,|L7.636|
0001a4  f7fffffe          BL       __aeabi_memclr
;;;358            	g_nGprs_Tx_Cnt=Get_GPRS_To_Server_Result_Packet(GPRS_Tx_Buffer);
0001a8  4834              LDR      r0,|L7.636|
0001aa  f7fffffe          BL       Get_GPRS_To_Server_Result_Packet
0001ae  4d34              LDR      r5,|L7.640|
0001b0  8028              STRH     r0,[r5,#0]
;;;359            	g_sXingJiKongGU.bResult_Packet_Flag=true;//g_Result_Packet_Flag=true;//有结果数据包上传 20180815
0001b2  f884a000          STRB     r10,[r4,#0]
;;;360            	
;;;361           		TRACE_PRINTF("GPRS_Tx_Buffer:%s\r\n",GPRS_Tx_Buffer);
0001b6  4931              LDR      r1,|L7.636|
0001b8  a032              ADR      r0,|L7.644|
0001ba  f7fffffe          BL       User_Debug_Printf
;;;362        		TRACE_PRINTF("length:%d\r\n",g_nGprs_Tx_Cnt);
0001be  8829              LDRH     r1,[r5,#0]  ; g_nGprs_Tx_Cnt
0001c0  a035              ADR      r0,|L7.664|
0001c2  f7fffffe          BL       User_Debug_Printf
0001c6  e001              B        |L7.460|
                  |L7.456|
;;;363        	}
;;;364        	else
;;;365        	{
;;;366        		g_sXingJiKongGU.bResult_Packet_Flag=false;//g_Result_Packet_Flag=false;
0001c8  2000              MOVS     r0,#0
0001ca  7020              STRB     r0,[r4,#0]
                  |L7.460|
;;;367        	}
;;;368    
;;;369        	if(g_sRecord.fAlcValue>=20) //酒精浓度标志位 超标后则不能手动关机也不能进行超时关机
0001cc  f8d81005          LDR      r1,[r8,#5]  ; g_sRecord
0001d0  4559              CMP      r1,r11
0001d2  db01              BLT      |L7.472|
;;;370        	{
;;;371        		g_sXingJiKongGU.bAlcValue_Excessive_Flag=true;//g_nAlcValue_Excessive_Flag=true;
0001d4  f884a003          STRB     r10,[r4,#3]
                  |L7.472|
;;;372        	}
;;;373    	#endif
;;;374    	
;;;375    	/*更新测试次数*/
;;;376    	Spi_Flash_Init();
0001d8  f7fffffe          BL       Spi_Flash_Init
;;;377    	g_nTotalTestCounter++;
0001dc  4831              LDR      r0,|L7.676|
0001de  6801              LDR      r1,[r0,#0]  ; g_nTotalTestCounter
0001e0  1c49              ADDS     r1,r1,#1
;;;378    	Data_Total_Test_Counter_Save(&g_nTotalTestCounter);
0001e2  6001              STR      r1,[r0,#0]  ; g_nTotalTestCounter
0001e4  f7fffffe          BL       Data_Total_Test_Counter_Save
;;;379    	Data_Total_Test_Counter_Load(&g_nTotalTestCounter);
0001e8  482e              LDR      r0,|L7.676|
0001ea  f7fffffe          BL       Data_Total_Test_Counter_Load
;;;380    	Spi_Flash_DeInit();
0001ee  f7fffffe          BL       Spi_Flash_DeInit
;;;381    
;;;382    	/*更新总的抽气时间*/
;;;383    	Spi_Flash_Init();
0001f2  f7fffffe          BL       Spi_Flash_Init
;;;384    	g_fTotalInhaleTimeCounter += (float)g_sAlcSample.nTotalIntegralCnt / 1000;
0001f6  482c              LDR      r0,|L7.680|
0001f8  8900              LDRH     r0,[r0,#8]  ; g_sAlcSample
0001fa  f7fffffe          BL       __aeabi_ui2f
0001fe  492b              LDR      r1,|L7.684|
000200  f7fffffe          BL       __aeabi_fdiv
000204  4c2a              LDR      r4,|L7.688|
000206  6821              LDR      r1,[r4,#0]  ; g_fTotalInhaleTimeCounter
000208  f7fffffe          BL       __aeabi_fadd
;;;385    	Data_Total_InhaleTime_Counter_Save(&g_fTotalInhaleTimeCounter);
00020c  6020              STR      r0,[r4,#0]  ; g_fTotalInhaleTimeCounter
00020e  4620              MOV      r0,r4
000210  f7fffffe          BL       Data_Total_InhaleTime_Counter_Save
;;;386    	Data_Total_InhaleTime_Counter_Load(&g_fTotalInhaleTimeCounter);
000214  4620              MOV      r0,r4
000216  f7fffffe          BL       Data_Total_InhaleTime_Counter_Load
;;;387    	Spi_Flash_DeInit();
00021a  f7fffffe          BL       Spi_Flash_DeInit
;;;388    
;;;389    	
;;;390    	
;;;391    	WM_SetFocus(pMsg->hWin);
00021e  f9b70004          LDRSH    r0,[r7,#4]
000222  b00f              ADD      sp,sp,#0x3c
000224  e8bd4ff0          POP      {r4-r11,lr}
000228  f7ffbffe          B.W      WM_SetFocus
;;;392    }
;;;393    
                          ENDP

                  |L7.556|
00022c  2000              DCB      " ",0
00022e  00                DCB      0
00022f  00                DCB      0
                  |L7.560|
                          DCD      ||.data||
                  |L7.564|
                          DCD      g_eAlcTestPurpose
                  |L7.568|
                          DCD      0x41a00000
                  |L7.572|
                          DCD      Strings
                  |L7.576|
                          DCD      g_Language
                  |L7.580|
                          DCD      g_sRecord
                  |L7.584|
                          DCD      g_sAlcCalibrationParam
                  |L7.588|
                          DCD      g_sTestParam
                  |L7.592|
                          DCD      g_nCalibrateUnit
                  |L7.596|
                          DCD      g_fLStandardAlcoholValue
                  |L7.600|
000258  252e3166          DCB      "%.1f",0
00025c  00      
00025d  00                DCB      0
00025e  00                DCB      0
00025f  00                DCB      0
                  |L7.608|
000260  25732825          DCB      "%s(%s%s)",0
000264  73257329
000268  00      
000269  00                DCB      0
00026a  00                DCB      0
00026b  00                DCB      0
                  |L7.620|
                          DCD      g_fHStandardAlcoholValue
                  |L7.624|
                          DCD      g_fQuickTestStandardAlcoholValue
                  |L7.628|
                          DCD      pApp
                  |L7.632|
                          DCD      g_sXingJiKongGU
                  |L7.636|
                          DCD      GPRS_Tx_Buffer
                  |L7.640|
                          DCD      g_nGprs_Tx_Cnt
                  |L7.644|
000284  47505253          DCB      "GPRS_Tx_Buffer:%s\r\n",0
000288  5f54785f
00028c  42756666
000290  65723a25
000294  730d0a00
                  |L7.664|
000298  6c656e67          DCB      "length:%d\r\n",0
00029c  74683a25
0002a0  640d0a00
                  |L7.676|
                          DCD      g_nTotalTestCounter
                  |L7.680|
                          DCD      g_sAlcSample
                  |L7.684|
                          DCD      0x447a0000
                  |L7.688|
                          DCD      g_fTotalInhaleTimeCounter

                          AREA ||.data||, DATA, ALIGN=2

                  pThisWin
                          DCD      0x00000000
