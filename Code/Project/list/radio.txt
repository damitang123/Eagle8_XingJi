; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\radio.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\radio.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\RADIO.c]
                          THUMB

                          AREA ||i.RADIO_AddValue||, CODE, READONLY, ALIGN=1

                  RADIO_AddValue PROC
;;;407    */
;;;408    void RADIO_AddValue(RADIO_Handle hObj, int Add) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
000006  d009              BEQ      |L1.28|
;;;409      if (hObj) {
;;;410        RADIO_Obj* pObj;
;;;411        WM_LOCK();
;;;412        pObj = RADIO_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;413        RADIO_SetValue(hObj, pObj->Sel + Add);
00000c  f9b00048          LDRSH    r0,[r0,#0x48]
000010  1941              ADDS     r1,r0,r5
000012  4620              MOV      r0,r4
000014  e8bd4070          POP      {r4-r6,lr}
000018  f7ffbffe          B.W      RADIO_SetValue
                  |L1.28|
;;;414        WM_UNLOCK();
;;;415      }
;;;416    }
00001c  bd70              POP      {r4-r6,pc}
;;;417    
                          ENDP


                          AREA ||i.RADIO_Callback||, CODE, READONLY, ALIGN=1

                  RADIO_Callback PROC
;;;307    */
;;;308    void RADIO_Callback (WM_MESSAGE* pMsg) {
000000  b570              PUSH     {r4-r6,lr}
;;;309      RADIO_Handle hObj;
;;;310      RADIO_Obj*   pObj;
;;;311      hObj = pMsg->hWin;
000002  f9b06004          LDRSH    r6,[r0,#4]
000006  4605              MOV      r5,r0                 ;308
;;;312      pObj = (RADIO_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  4604              MOV      r4,r0
;;;313      /* Let widget handle the standard messages */
;;;314      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000010  4629              MOV      r1,r5
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       WIDGET_HandleActive
000018  2800              CMP      r0,#0
00001a  d016              BEQ      |L2.74|
;;;315        return;
;;;316      }
;;;317      switch (pMsg->MsgId) {
00001c  6828              LDR      r0,[r5,#0]
00001e  280e              CMP      r0,#0xe
000020  d03c              BEQ      |L2.156|
000022  dc04              BGT      |L2.46|
000024  280b              CMP      r0,#0xb
000026  d04e              BEQ      |L2.198|
000028  280c              CMP      r0,#0xc
00002a  d150              BNE      |L2.206|
00002c  e00e              B        |L2.76|
                  |L2.46|
00002e  280f              CMP      r0,#0xf
000030  d002              BEQ      |L2.56|
000032  282b              CMP      r0,#0x2b
000034  d14b              BNE      |L2.206|
000036  e005              B        |L2.68|
                  |L2.56|
;;;318      case WM_PAINT:
;;;319        GUI_DEBUG_LOG("RADIO: _Callback(WM_PAINT)\n");
;;;320        _OnPaint(hObj, pObj);
000038  4621              MOV      r1,r4
00003a  4630              MOV      r0,r6
00003c  e8bd4070          POP      {r4-r6,lr}
000040  f7ffbffe          B.W      _OnPaint
                  |L2.68|
;;;321        return;
;;;322      case WM_GET_RADIOGROUP:
;;;323        pMsg->Data.v = pObj->GroupId;
000044  f8940050          LDRB     r0,[r4,#0x50]
;;;324        return;
000048  60a8              STR      r0,[r5,#8]
                  |L2.74|
;;;325      case WM_TOUCH:
;;;326        _OnTouch(hObj, pObj, pMsg);
;;;327        break;
;;;328      case WM_KEY:
;;;329        _OnKey(hObj, pMsg);
;;;330        break;
;;;331      case WM_DELETE:
;;;332        GUI_ARRAY_Delete(&pObj->TextArray);
;;;333        break;
;;;334      }
;;;335      WM_DefaultProc(pMsg);
;;;336    }
00004a  bd70              POP      {r4-r6,pc}
                  |L2.76|
00004c  68a8              LDR      r0,[r5,#8]
00004e  b300              CBZ      r0,|L2.146|
000050  7a01              LDRB     r1,[r0,#8]
000052  b1a9              CBZ      r1,|L2.128|
000054  6840              LDR      r0,[r0,#4]
000056  f8342f4a          LDRH     r2,[r4,#0x4a]!
00005a  fb90f1f2          SDIV     r1,r0,r2
00005e  fb010012          MLS      r0,r1,r2,r0
000062  8862              LDRH     r2,[r4,#2]
000064  4282              CMP      r2,r0
000066  db02              BLT      |L2.110|
000068  4630              MOV      r0,r6
00006a  f7fffffe          BL       RADIO_SetValue
                  |L2.110|
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       WM_IsFocussable
000074  b110              CBZ      r0,|L2.124|
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       WM_SetFocus
                  |L2.124|
00007c  2101              MOVS     r1,#1
00007e  e009              B        |L2.148|
                  |L2.128|
000080  2102              MOVS     r1,#2
000082  4630              MOV      r0,r6
000084  f7fffffe          BL       WM_NotifyParent
000088  f9b40024          LDRSH    r0,[r4,#0x24]
00008c  f7fffffe          BL       GUI_StoreKey
000090  e01d              B        |L2.206|
                  |L2.146|
000092  2103              MOVS     r1,#3
                  |L2.148|
000094  4630              MOV      r0,r6
000096  f7fffffe          BL       WM_NotifyParent
00009a  e018              B        |L2.206|
                  |L2.156|
00009c  68a8              LDR      r0,[r5,#8]
00009e  6841              LDR      r1,[r0,#4]
0000a0  2900              CMP      r1,#0
0000a2  dd14              BLE      |L2.206|
0000a4  6800              LDR      r0,[r0,#0]
0000a6  2810              CMP      r0,#0x10
0000a8  d009              BEQ      |L2.190|
0000aa  2811              CMP      r0,#0x11
0000ac  d007              BEQ      |L2.190|
0000ae  2812              CMP      r0,#0x12
0000b0  d001              BEQ      |L2.182|
0000b2  2813              CMP      r0,#0x13
0000b4  d10b              BNE      |L2.206|
                  |L2.182|
0000b6  4630              MOV      r0,r6
0000b8  f7fffffe          BL       RADIO_Inc
0000bc  e007              B        |L2.206|
                  |L2.190|
0000be  4630              MOV      r0,r6
0000c0  f7fffffe          BL       RADIO_Dec
0000c4  e003              B        |L2.206|
                  |L2.198|
0000c6  f1040044          ADD      r0,r4,#0x44           ;332
0000ca  f7fffffe          BL       GUI_ARRAY_Delete
                  |L2.206|
0000ce  4628              MOV      r0,r5                 ;335
0000d0  e8bd4070          POP      {r4-r6,lr}            ;335
0000d4  f7ffbffe          B.W      WM_DefaultProc
;;;337    
                          ENDP


                          AREA ||i.RADIO_CreateEx||, CODE, READONLY, ALIGN=2

                  RADIO_CreateEx PROC
;;;351    */
;;;352    RADIO_Handle RADIO_CreateEx(int x0, int y0, int xSize, int ySize, WM_HWIN hParent,
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;353                                int WinFlags, int ExFlags, int Id, int NumItems, int Spacing)
;;;354    {
;;;355      RADIO_Handle hObj;
;;;356      int Height, i;
;;;357      WM_LOCK();
;;;358      /* Calculate helper variables */
;;;359      Height   = RADIO__DefaultProps.apBmRadio[0]->YSize + RADIO_BORDER * 2;
000004  4c29              LDR      r4,|L3.172|
000006  e9dd5612          LDRD     r5,r6,[sp,#0x48]      ;354
00000a  6924              LDR      r4,[r4,#0x10]  ; RADIO__DefaultProps
00000c  e9ddb70e          LDRD     r11,r7,[sp,#0x38]     ;354
000010  f8b4c002          LDRH     r12,[r4,#2]
;;;360      Spacing  = (Spacing  <= 0) ? RADIO_SPACING_DEFAULT : Spacing;
000014  2e00              CMP      r6,#0
000016  f10c0904          ADD      r9,r12,#4             ;359
00001a  dc00              BGT      |L3.30|
00001c  2614              MOVS     r6,#0x14
                  |L3.30|
;;;361      NumItems = (NumItems <= 0) ? 2                     : NumItems;
00001e  2d00              CMP      r5,#0
000020  dc00              BGT      |L3.36|
000022  2502              MOVS     r5,#2
                  |L3.36|
;;;362      if (ySize == 0) {
000024  b91b              CBNZ     r3,|L3.46|
;;;363        ySize  = Height + ((NumItems - 1) * Spacing);
000026  f1a50c01          SUB      r12,r5,#1
00002a  fb0c9306          MLA      r3,r12,r6,r9
                  |L3.46|
;;;364      }
;;;365      if (xSize == 0) {
00002e  b90a              CBNZ     r2,|L3.52|
;;;366        xSize  = RADIO__DefaultProps.apBmRadio[0]->XSize + RADIO_BORDER * 2;
000030  8822              LDRH     r2,[r4,#0]
000032  1d12              ADDS     r2,r2,#4
                  |L3.52|
;;;367      }
;;;368    #if WM_SUPPORT_TRANSPARENCY
;;;369      WinFlags |= WM_CF_HASTRANS;
000034  b2bc              UXTH     r4,r7
;;;370    #endif
;;;371      /* Create the window */
;;;372      hObj = WM_CreateWindowAsChild(x0, y0, xSize, ySize, hParent, WinFlags, RADIO_Callback, sizeof(RADIO_Obj) - sizeof(WM_Obj));
000036  2734              MOVS     r7,#0x34
000038  f8dfc074          LDR      r12,|L3.176|
00003c  f0440401          ORR      r4,r4,#1
000040  f8cdb000          STR      r11,[sp,#0]
000044  9703              STR      r7,[sp,#0xc]
000046  e9cd4c01          STRD     r4,r12,[sp,#4]
00004a  f7fffffe          BL       WM_CreateWindowAsChild
00004e  ea5f0800          MOVS     r8,r0
;;;373      if (hObj) {
000052  d026              BEQ      |L3.162|
;;;374        RADIO_Obj* pObj;
;;;375        pObj = (RADIO_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000054  f7fffffe          BL       GUI_ALLOC_h2p
000058  4604              MOV      r4,r0
;;;376        /* Init sub-classes */
;;;377        GUI_ARRAY_CREATE(&pObj->TextArray);
;;;378        for (i = 0; i < NumItems; i++) {
00005a  2700              MOVS     r7,#0
;;;379          GUI_ARRAY_AddItem(&pObj->TextArray, NULL, 0);
00005c  f1000a44          ADD      r10,r0,#0x44
000060  e005              B        |L3.110|
                  |L3.98|
000062  2200              MOVS     r2,#0
000064  4611              MOV      r1,r2
000066  4650              MOV      r0,r10
000068  f7fffffe          BL       GUI_ARRAY_AddItem
00006c  1c7f              ADDS     r7,r7,#1
                  |L3.110|
00006e  42af              CMP      r7,r5                 ;378
000070  dbf7              BLT      |L3.98|
;;;380        }
;;;381        /* Init widget specific variables */
;;;382        ExFlags &= RADIO_TEXTPOS_LEFT;
000072  9810              LDR      r0,[sp,#0x40]
;;;383        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | ExFlags);
000074  9911              LDR      r1,[sp,#0x44]
000076  f4007080          AND      r0,r0,#0x100          ;382
00007a  f0400210          ORR      r2,r0,#0x10
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       WIDGET__Init
;;;384        /* Init member variables */
;;;385        RADIO_INIT_ID(pObj);
;;;386        pObj->Props = RADIO__DefaultProps;
000084  221c              MOVS     r2,#0x1c
000086  4909              LDR      r1,|L3.172|
000088  f1040028          ADD      r0,r4,#0x28
00008c  f7fffffe          BL       __aeabi_memcpy4
;;;387        pObj->Props.BkColor= WM_GetBkColor(hParent);
000090  4658              MOV      r0,r11
000092  f7fffffe          BL       WM_GetBkColor
000096  f8440f28          STR      r0,[r4,#0x28]!
;;;388        pObj->NumItems     = NumItems;
00009a  84e5              STRH     r5,[r4,#0x26]
;;;389        pObj->Spacing      = Spacing;
00009c  8466              STRH     r6,[r4,#0x22]
;;;390        pObj->Height       = Height;
00009e  f8a49024          STRH     r9,[r4,#0x24]
                  |L3.162|
;;;391      } else {
;;;392        GUI_DEBUG_ERROROUT_IF(hObj==0, "RADIO_Create failed")
;;;393      }
;;;394      WM_UNLOCK();
;;;395      return hObj;
;;;396    }
0000a2  b004              ADD      sp,sp,#0x10
0000a4  4640              MOV      r0,r8                 ;395
0000a6  e8bd9ff0          POP      {r4-r12,pc}
;;;397    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L3.172|
                          DCD      ||.data||+0x4
                  |L3.176|
                          DCD      RADIO_Callback

                          AREA ||i.RADIO_Dec||, CODE, READONLY, ALIGN=1

                  RADIO_Dec PROC
;;;421    */
;;;422    void RADIO_Dec(RADIO_Handle hObj) {
000000  f04f31ff          MOV      r1,#0xffffffff
;;;423      RADIO_AddValue(hObj, -1);
000004  f7ffbffe          B.W      RADIO_AddValue
;;;424    }
;;;425    
                          ENDP


                          AREA ||i.RADIO_GetValue||, CODE, READONLY, ALIGN=1

                  RADIO_GetValue PROC
;;;464    */
;;;465    int RADIO_GetValue(RADIO_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  0001              MOVS     r1,r0
;;;466      int r = 0;
000004  f04f0000          MOV      r0,#0
000008  d004              BEQ      |L5.20|
;;;467      if (hObj) {
;;;468        RADIO_Obj* pObj;
;;;469        WM_LOCK();
;;;470        pObj = RADIO_H2P(hObj);
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;471        r = pObj->Sel;
000010  f9b00048          LDRSH    r0,[r0,#0x48]
                  |L5.20|
;;;472        WM_UNLOCK();
;;;473      }
;;;474      return r;
;;;475    }
000014  bd10              POP      {r4,pc}
;;;476    
                          ENDP


                          AREA ||i.RADIO_Inc||, CODE, READONLY, ALIGN=1

                  RADIO_Inc PROC
;;;429    */
;;;430    void RADIO_Inc(RADIO_Handle hObj) {
000000  2101              MOVS     r1,#1
;;;431      RADIO_AddValue(hObj,  1);
000002  f7ffbffe          B.W      RADIO_AddValue
;;;432    }
;;;433    
                          ENDP


                          AREA ||i.RADIO_SetValue||, CODE, READONLY, ALIGN=2

                  RADIO_SetValue PROC
;;;437    */
;;;438    void RADIO_SetValue(RADIO_Handle hObj, int v) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d016              BEQ      |L7.54|
;;;439      if (hObj) {
;;;440        RADIO_Obj* pObj;
;;;441        WM_LOCK();
;;;442        pObj = RADIO_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4601              MOV      r1,r0
;;;443        if (pObj->GroupId && RADIO__pfHandleSetValue) {
00000e  f8900050          LDRB     r0,[r0,#0x50]
000012  b138              CBZ      r0,|L7.36|
000014  4808              LDR      r0,|L7.56|
000016  6803              LDR      r3,[r0,#0]  ; RADIO__pfHandleSetValue
000018  b123              CBZ      r3,|L7.36|
;;;444          (*RADIO__pfHandleSetValue)(hObj, pObj, v);
00001a  4622              MOV      r2,r4
00001c  4628              MOV      r0,r5
00001e  e8bd4070          POP      {r4-r6,lr}
000022  4718              BX       r3
                  |L7.36|
;;;445        } else {
;;;446          if (v < 0) {
000024  2c00              CMP      r4,#0
000026  da00              BGE      |L7.42|
;;;447            v = 0;
000028  2400              MOVS     r4,#0
                  |L7.42|
;;;448          }
;;;449          RADIO__SetValue(hObj, pObj, v);
00002a  4622              MOV      r2,r4
00002c  4628              MOV      r0,r5
00002e  e8bd4070          POP      {r4-r6,lr}
000032  f7ffbffe          B.W      RADIO__SetValue
                  |L7.54|
;;;450        }
;;;451        WM_UNLOCK();
;;;452      }
;;;453    }
000036  bd70              POP      {r4-r6,pc}
;;;454    
                          ENDP

                  |L7.56|
                          DCD      ||.data||

                          AREA ||i.RADIO__SetValue||, CODE, READONLY, ALIGN=1

                  RADIO__SetValue PROC
;;;286    */
;;;287    void RADIO__SetValue(RADIO_Handle hObj, RADIO_Obj* pObj, int v) {
000000  b510              PUSH     {r4,lr}
;;;288      if (v >= (int)pObj->NumItems) {
000002  f8b1304e          LDRH     r3,[r1,#0x4e]
000006  4604              MOV      r4,r0                 ;287
000008  4293              CMP      r3,r2
00000a  dc00              BGT      |L8.14|
;;;289        v = pObj->NumItems - 1;
00000c  1e5a              SUBS     r2,r3,#1
                  |L8.14|
;;;290      }
;;;291      if (v != pObj->Sel) {
00000e  f9b10048          LDRSH    r0,[r1,#0x48]
000012  4290              CMP      r0,r2
000014  d00a              BEQ      |L8.44|
;;;292        pObj->Sel = v;
000016  f8a12048          STRH     r2,[r1,#0x48]
;;;293        WM_InvalidateWindow(hObj);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       WM_InvalidateWindow
;;;294        WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000020  4620              MOV      r0,r4
000022  e8bd4010          POP      {r4,lr}
000026  2105              MOVS     r1,#5
000028  f7ffbffe          B.W      WM_NotifyParent
                  |L8.44|
;;;295      }
;;;296    }
00002c  bd10              POP      {r4,pc}
;;;297    
                          ENDP


                          AREA ||i._OnPaint||, CODE, READONLY, ALIGN=2

                  _OnPaint PROC
;;;113    */
;;;114    static void _OnPaint(RADIO_Handle hObj, RADIO_Obj* pObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b091              SUB      sp,sp,#0x44
000006  4680              MOV      r8,r0
;;;115      const GUI_BITMAP* pBmRadio;
;;;116      const GUI_BITMAP* pBmCheck;
;;;117      const char* pText;
;;;118      GUI_FONTINFO FontInfo;
;;;119      GUI_RECT Rect, r, rFocus = {0};
000008  2000              MOVS     r0,#0
00000a  460c              MOV      r4,r1                 ;114
00000c  900b              STR      r0,[sp,#0x2c]
;;;120      int i, y, HasFocus, FontDistY;
;;;121      U8 SpaceAbove, CHeight, FocusBorder;
;;;122    
;;;123      /* Init some data */
;;;124      WIDGET__GetClientRect(&pObj->Widget, &rFocus);
00000e  900c              STR      r0,[sp,#0x30]
000010  a90b              ADD      r1,sp,#0x2c
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       WIDGET__GetClientRect
;;;125      HasFocus  = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 1 : 0;
000018  f8940026          LDRB     r0,[r4,#0x26]
00001c  f0000a01          AND      r10,r0,#1
;;;126      pBmRadio  = pObj->Props.apBmRadio[WM__IsEnabled(hObj)];
000020  4640              MOV      r0,r8
000022  f7fffffe          BL       WM__IsEnabled
000026  eb040080          ADD      r0,r4,r0,LSL #2
;;;127      pBmCheck  = pObj->Props.pBmCheck;
;;;128      rFocus.x1 = pBmRadio->XSize + RADIO_BORDER * 2 - 1;
00002a  f8d4b040          LDR      r11,[r4,#0x40]
00002e  6b86              LDR      r6,[r0,#0x38]         ;127
000030  8830              LDRH     r0,[r6,#0]
000032  1cc0              ADDS     r0,r0,#3
000034  f8ad0030          STRH     r0,[sp,#0x30]
;;;129      rFocus.y1 = pObj->Height + ((pObj->NumItems - 1) * pObj->Spacing) - 1;
000038  f8b4004e          LDRH     r0,[r4,#0x4e]
00003c  f8b4104c          LDRH     r1,[r4,#0x4c]
000040  f8b4204a          LDRH     r2,[r4,#0x4a]
000044  1e40              SUBS     r0,r0,#1
000046  fb001002          MLA      r0,r0,r2,r1
00004a  1e40              SUBS     r0,r0,#1
00004c  f8ad0032          STRH     r0,[sp,#0x32]
;;;130    
;;;131      /* Select font and text color */
;;;132      LCD_SetColor(pObj->Props.TextColor);
000050  f8540f2c          LDR      r0,[r4,#0x2c]!
000054  f7fffffe          BL       LCD_SetColor
;;;133      GUI_SetFont(pObj->Props.pFont);
000058  68a0              LDR      r0,[r4,#8]
00005a  f7fffffe          BL       GUI_SetFont
;;;134      GUI_SetTextMode(GUI_TM_TRANS);
00005e  2002              MOVS     r0,#2
000060  f7fffffe          BL       GUI_SetTextMode
;;;135    
;;;136      /* Get font infos */
;;;137      GUI_GetFontInfo(pObj->Props.pFont, &FontInfo);
000064  a904              ADD      r1,sp,#0x10
000066  68a0              LDR      r0,[r4,#8]
000068  f7fffffe          BL       GUI_GetFontInfo
;;;138      FontDistY   = GUI_GetFontDistY();
00006c  f7fffffe          BL       GUI_GetFontDistY
000070  4602              MOV      r2,r0
;;;139      CHeight     = FontInfo.CHeight;
000072  f89d0014          LDRB     r0,[sp,#0x14]
;;;140      SpaceAbove  = FontInfo.Baseline - CHeight;
000076  f89d1012          LDRB     r1,[sp,#0x12]
00007a  1a09              SUBS     r1,r1,r0
00007c  b2c9              UXTB     r1,r1
;;;141      Rect.x0     = pBmRadio->XSize + RADIO_BORDER * 2 + 2;
00007e  9109              STR      r1,[sp,#0x24]
000080  8831              LDRH     r1,[r6,#0]
000082  1d89              ADDS     r1,r1,#6
000084  f361050f          BFI      r5,r1,#0,#16
;;;142      Rect.y0     = (CHeight <= pObj->Height) ? ((pObj->Height - CHeight) / 2) : 0;
000088  8c21              LDRH     r1,[r4,#0x20]
00008a  3c2c              SUBS     r4,r4,#0x2c
00008c  4281              CMP      r1,r0
00008e  d304              BCC      |L9.154|
000090  1a09              SUBS     r1,r1,r0
000092  eb0171d1          ADD      r1,r1,r1,LSR #31
000096  1049              ASRS     r1,r1,#1
000098  e000              B        |L9.156|
                  |L9.154|
00009a  2100              MOVS     r1,#0
                  |L9.156|
00009c  b209              SXTH     r1,r1
00009e  1e40              SUBS     r0,r0,#1
;;;143      Rect.y1     = Rect.y0 + CHeight - 1;
0000a0  4408              ADD      r0,r0,r1
0000a2  f360471f          BFI      r7,r0,#16,#16
0000a6  f361451f          BFI      r5,r1,#16,#16         ;142
;;;144      FocusBorder = (FontDistY <= 12) ? 2 : 3;
0000aa  9706              STR      r7,[sp,#0x18]
0000ac  9501              STR      r5,[sp,#4]
0000ae  2a0c              CMP      r2,#0xc
0000b0  dc01              BGT      |L9.182|
0000b2  2702              MOVS     r7,#2
0000b4  e000              B        |L9.184|
                  |L9.182|
0000b6  2703              MOVS     r7,#3
                  |L9.184|
;;;145      if (Rect.y0 < FocusBorder) {
0000b8  42b9              CMP      r1,r7
0000ba  da00              BGE      |L9.190|
;;;146        FocusBorder = Rect.y0;
0000bc  b2cf              UXTB     r7,r1
                  |L9.190|
;;;147      }
;;;148    
;;;149      /* Clear inside ... Just in case      */
;;;150      /* Fill with parents background color */
;;;151    #if WM_SUPPORT_TRANSPARENCY
;;;152      if (!WM_GetHasTrans(hObj))
0000be  4640              MOV      r0,r8
0000c0  f7fffffe          BL       WM_GetHasTrans
0000c4  b948              CBNZ     r0,|L9.218|
;;;153    #endif
;;;154      {
;;;155        if (pObj->Props.BkColor != GUI_INVALID_COLOR) {
0000c6  6aa0              LDR      r0,[r4,#0x28]
0000c8  f06f4170          MVN      r1,#0xf0000000
0000cc  4288              CMP      r0,r1
0000ce  d100              BNE      |L9.210|
;;;156          LCD_SetBkColor(pObj->Props.BkColor);
;;;157        } else {
;;;158          LCD_SetBkColor(RADIO_DEFAULT_BKCOLOR);
0000d0  4837              LDR      r0,|L9.432|
                  |L9.210|
0000d2  f7fffffe          BL       LCD_SetBkColor
;;;159        }
;;;160        GUI_Clear();
0000d6  f7fffffe          BL       GUI_Clear
                  |L9.218|
;;;161      }
;;;162    
;;;163      /* Iterate over all items */
;;;164      for (i = 0; i < pObj->NumItems; i++) {
0000da  2500              MOVS     r5,#0
0000dc  e056              B        |L9.396|
;;;165        y = i * pObj->Spacing;
0000de  bf00              NOP      
                  |L9.224|
0000e0  f8b4204a          LDRH     r2,[r4,#0x4a]
;;;166        /* Draw the radio button bitmap */
;;;167        GUI_DrawBitmap(pBmRadio, RADIO_BORDER, RADIO_BORDER + y);
0000e4  2102              MOVS     r1,#2
0000e6  fb02f905          MUL      r9,r2,r5              ;165
0000ea  f1090202          ADD      r2,r9,#2
0000ee  4630              MOV      r0,r6
0000f0  f7fffffe          BL       GUI_DrawBitmap
;;;168        /* Draw the check bitmap */
;;;169        if (pObj->Sel == i) {
0000f4  f9b40048          LDRSH    r0,[r4,#0x48]
0000f8  42a8              CMP      r0,r5
0000fa  d114              BNE      |L9.294|
;;;170          GUI_DrawBitmap(pBmCheck, RADIO_BORDER +  (pBmRadio->XSize - pBmCheck->XSize) / 2, 
0000fc  8831              LDRH     r1,[r6,#0]
0000fe  f8bb0000          LDRH     r0,[r11,#0]
000102  8872              LDRH     r2,[r6,#2]
000104  1a08              SUBS     r0,r1,r0
000106  f8bb1002          LDRH     r1,[r11,#2]
00010a  1a51              SUBS     r1,r2,r1
00010c  eb0172d1          ADD      r2,r1,r1,LSR #31
000110  eb0071d0          ADD      r1,r0,r0,LSR #31
000114  2002              MOVS     r0,#2
000116  eb090262          ADD      r2,r9,r2,ASR #1
00011a  eb000161          ADD      r1,r0,r1,ASR #1
00011e  4658              MOV      r0,r11
000120  1c92              ADDS     r2,r2,#2
000122  f7fffffe          BL       GUI_DrawBitmap
                  |L9.294|
;;;171                                   RADIO_BORDER + ((pBmRadio->YSize - pBmCheck->YSize) / 2) + y);
;;;172        }
;;;173        /* Draw text if available */
;;;174        pText = (const char*)GUI_ARRAY_GetpItem(&pObj->TextArray, i);
000126  4629              MOV      r1,r5
000128  f1040044          ADD      r0,r4,#0x44
00012c  f7fffffe          BL       GUI_ARRAY_GetpItem
000130  ea5f0800          MOVS     r8,r0
;;;175        if (pText) {
000134  d029              BEQ      |L9.394|
;;;176          if (*pText) {
000136  f8980000          LDRB     r0,[r8,#0]
00013a  b330              CBZ      r0,|L9.394|
;;;177            r = Rect;
00013c  9906              LDR      r1,[sp,#0x18]
00013e  9801              LDR      r0,[sp,#4]
000140  e9cd0107          STRD     r0,r1,[sp,#0x1c]
;;;178            r.x1 = r.x0 + GUI_GetStringDistX(pText) - 2;
000144  4640              MOV      r0,r8
000146  f7fffffe          BL       GUI_GetStringDistX
00014a  f8bd101c          LDRH     r1,[sp,#0x1c]
00014e  1e80              SUBS     r0,r0,#2
000150  4408              ADD      r0,r0,r1
000152  f8ad0020          STRH     r0,[sp,#0x20]
;;;179            GUI_MoveRect(&r, 0, y);
000156  464a              MOV      r2,r9
000158  2100              MOVS     r1,#0
00015a  a807              ADD      r0,sp,#0x1c
00015c  f7fffffe          BL       GUI_MoveRect
;;;180            GUI_DispStringAt(pText, r.x0, r.y0 - SpaceAbove);
000160  f9bd101e          LDRSH    r1,[sp,#0x1e]
000164  9809              LDR      r0,[sp,#0x24]
000166  1a0a              SUBS     r2,r1,r0
000168  f9bd101c          LDRSH    r1,[sp,#0x1c]
00016c  4640              MOV      r0,r8
00016e  f7fffffe          BL       GUI_DispStringAt
;;;181            /* Calculate focus rect */
;;;182            if (HasFocus && (pObj->Sel == i)) {
000172  f1ba0f00          CMP      r10,#0
000176  d008              BEQ      |L9.394|
000178  f9b40048          LDRSH    r0,[r4,#0x48]
00017c  42a8              CMP      r0,r5
00017e  d104              BNE      |L9.394|
;;;183              GUI__ReduceRect(&rFocus, &r, -FocusBorder);
000180  427a              RSBS     r2,r7,#0
000182  a907              ADD      r1,sp,#0x1c
000184  a80b              ADD      r0,sp,#0x2c
000186  f7fffffe          BL       GUI__ReduceRect
                  |L9.394|
00018a  1c6d              ADDS     r5,r5,#1
                  |L9.396|
00018c  f8b4004e          LDRH     r0,[r4,#0x4e]         ;164
000190  42a8              CMP      r0,r5                 ;164
000192  dca5              BGT      |L9.224|
;;;184            }
;;;185          }
;;;186        }
;;;187      }
;;;188    
;;;189      /* Draw the focus rect */
;;;190      if (HasFocus) {
000194  f1ba0f00          CMP      r10,#0
000198  d006              BEQ      |L9.424|
;;;191        LCD_SetColor(pObj->Props.FocusColor);
00019a  6b20              LDR      r0,[r4,#0x30]
00019c  f7fffffe          BL       LCD_SetColor
;;;192        GUI_DrawFocusRect(&rFocus, 0);
0001a0  2100              MOVS     r1,#0
0001a2  a80b              ADD      r0,sp,#0x2c
0001a4  f7fffffe          BL       GUI_DrawFocusRect
                  |L9.424|
;;;193      }
;;;194    }
0001a8  b011              ADD      sp,sp,#0x44
0001aa  e8bd8ff0          POP      {r4-r11,pc}
;;;195    
                          ENDP

0001ae  0000              DCW      0x0000
                  |L9.432|
                          DCD      0x00c0c0c0

                          AREA ||.data||, DATA, ALIGN=2

                  RADIO__pfHandleSetValue
                          DCD      0x00000000
                  RADIO__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      GUI_Font13_1
                          DCD      RADIO__abmRadio
                          DCD      RADIO__abmRadio+0x14
                          DCD      RADIO__bmCheck
