; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdrle8.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdrle8.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\LCDRLE8.c]
                          THUMB

                          AREA ||i._DrawBitmap_RLE8||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLE8 PROC
;;;47     */
;;;48     static void _DrawBitmap_RLE8(int x0,int y0,int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  468b              MOV      r11,r1
;;;49       LCD_PIXELINDEX aColorIndex[2] = {0};
;;;50       LCD_PIXELINDEX PixelIndex;
;;;51       int xi,y;
;;;52       int xL, yL;
;;;53       const U8 GUI_UNI_PTR * pPixelOrg = pPixel;
;;;54       char NoTrans = !(GUI_Context.DrawMode & LCD_DRAWMODE_TRANS);
000006  4971              LDR      r1,|L1.460|
000008  b087              SUB      sp,sp,#0x1c           ;48
00000a  4691              MOV      r9,r2                 ;48
00000c  7c0a              LDRB     r2,[r1,#0x10]  ; GUI_Context
00000e  469a              MOV      r10,r3                ;48
000010  f3420240          SBFX     r2,r2,#1,#1
000014  1c52              ADDS     r2,r2,#1
;;;55       const LCD_PIXELINDEX* pTrans =NULL;
000016  9202              STR      r2,[sp,#8]
000018  e9dd5014          LDRD     r5,r0,[sp,#0x50]      ;48
00001c  e9dd3216          LDRD     r3,r2,[sp,#0x58]
000020  f04f0800          MOV      r8,#0                 ;49
;;;56       char IsMagnified = ((yMag | xMag) != 1);
000024  431a              ORRS     r2,r2,r3
000026  462f              MOV      r7,r5                 ;53
000028  f8cd8000          STR      r8,[sp,#0]            ;55
00002c  2a01              CMP      r2,#1
00002e  d001              BEQ      |L1.52|
000030  2201              MOVS     r2,#1
000032  e000              B        |L1.54|
                  |L1.52|
000034  2200              MOVS     r2,#0
                  |L1.54|
;;;57       aColorIndex[0] = LCD_ACOLORINDEX[0];
000036  4965              LDR      r1,|L1.460|
000038  9201              STR      r2,[sp,#4]
00003a  880a              LDRH     r2,[r1,#0]  ; GUI_Context
;;;58       aColorIndex[1] = LCD_ACOLORINDEX[1];
00003c  9205              STR      r2,[sp,#0x14]
00003e  8849              LDRH     r1,[r1,#2]  ; GUI_Context
;;;59       /* Handle color translation */
;;;60       if ((pLogPal) && (pLogPal->pPalEntries)) {
000040  9104              STR      r1,[sp,#0x10]
000042  b130              CBZ      r0,|L1.82|
000044  6881              LDR      r1,[r0,#8]
000046  b121              CBZ      r1,|L1.82|
;;;61         if ((pTrans = LCD_GetpPalConvTable(pLogPal)) == NULL) {
000048  f7fffffe          BL       LCD_GetpPalConvTable
00004c  9000              STR      r0,[sp,#0]
00004e  2800              CMP      r0,#0
000050  d070              BEQ      |L1.308|
                  |L1.82|
;;;62           return;
;;;63         }
;;;64       }
;;;65      /* Check if we can limit the number of lines due to clipping) */
;;;66       if (yMag == 1) {
000052  9817              LDR      r0,[sp,#0x5c]
000054  2801              CMP      r0,#1
000056  d108              BNE      |L1.106|
;;;67         if (ysize > GUI_Context.ClipRect.y1 - y0 + 1)
000058  485c              LDR      r0,|L1.460|
00005a  f9b0100e          LDRSH    r1,[r0,#0xe]  ; GUI_Context
00005e  eba1000b          SUB      r0,r1,r11
000062  1c41              ADDS     r1,r0,#1
000064  4551              CMP      r1,r10
000066  da00              BGE      |L1.106|
000068  468a              MOV      r10,r1
                  |L1.106|
;;;68           ysize = GUI_Context.ClipRect.y1 - y0 + 1;
;;;69       }
;;;70       /* Init variables for looping */
;;;71       xi=0;
00006a  2400              MOVS     r4,#0
;;;72       y =0;
;;;73       /* Check if we can use the cache to save some unnecessary iterations */
;;;74       if (!IsMagnified) {
;;;75         int yDiff = GUI_Context.ClipRect.y0 - y0;
;;;76         if ((Cache.pPixelStart == pPixel) && (yDiff > Cache.y)) {
00006c  4858              LDR      r0,|L1.464|
00006e  9901              LDR      r1,[sp,#4]            ;74
000070  4626              MOV      r6,r4                 ;72
000072  b969              CBNZ     r1,|L1.144|
000074  4955              LDR      r1,|L1.460|
000076  f9b1200a          LDRSH    r2,[r1,#0xa]          ;75  ; GUI_Context
00007a  68c1              LDR      r1,[r0,#0xc]  ; Cache
00007c  eba2020b          SUB      r2,r2,r11             ;75
000080  42a9              CMP      r1,r5
000082  d105              BNE      |L1.144|
000084  6841              LDR      r1,[r0,#4]  ; Cache
000086  4291              CMP      r1,r2
000088  da02              BGE      |L1.144|
;;;77           /* Accept cache values */
;;;78           y = Cache.y;
;;;79           xi = Cache.x;
;;;80           pPixel = Cache.pPixel;
00008a  6885              LDR      r5,[r0,#8]  ; Cache
00008c  6804              LDR      r4,[r0,#0]  ; Cache
00008e  460e              MOV      r6,r1                 ;78
                  |L1.144|
;;;81         }
;;;82       }
;;;83       /* Init values for caching */
;;;84       Cache.pPixel = Cache.pPixelStart = pPixelOrg;
000090  484f              LDR      r0,|L1.464|
000092  60c7              STR      r7,[r0,#0xc]  ; Cache
000094  e9c08701          STRD     r8,r7,[r0,#4]
;;;85       Cache.x = Cache.y = 0;
;;;86       /* Repeat until we have reached bottom */
;;;87       for (; y < ysize; ) {
000098  f8c08000          STR      r8,[r0,#0]  ; Cache
00009c  e08a              B        |L1.436|
;;;88         U8 Cmd  = *pPixel++;
00009e  bf00              NOP      
                  |L1.160|
0000a0  f8150b01          LDRB     r0,[r5],#1
;;;89         U8 Data = *pPixel++;
0000a4  f8157b01          LDRB     r7,[r5],#1
0000a8  ea5f0800          MOVS     r8,r0                 ;88
;;;90         if (Cmd) {
0000ac  d043              BEQ      |L1.310|
;;;91           /* Save cache info */
;;;92           Cache.pPixel = pPixel-2;
0000ae  4848              LDR      r0,|L1.464|
0000b0  1ea9              SUBS     r1,r5,#2
;;;93           Cache.x = xi;
0000b2  6004              STR      r4,[r0,#0]  ; Cache
0000b4  e9c06101          STRD     r6,r1,[r0,#4]
;;;94           Cache.y = y;
;;;95           LCD_ACOLORINDEX[1] = pTrans ? *(pTrans+Data) : Data;
0000b8  9800              LDR      r0,[sp,#0]
0000ba  b110              CBZ      r0,|L1.194|
0000bc  f8300017          LDRH     r0,[r0,r7,LSL #1]
0000c0  e000              B        |L1.196|
                  |L1.194|
0000c2  4638              MOV      r0,r7
                  |L1.196|
0000c4  4941              LDR      r1,|L1.460|
0000c6  8048              STRH     r0,[r1,#2]
;;;96           while (Cmd) {
;;;97             int xi1 = xi+Cmd;
;;;98             if (xi1>=xsize)
;;;99               xi1 = xsize;
;;;100            Cmd -= (xi1-xi);
;;;101            if (Data || NoTrans) {  /* Skip transparent pixels */
0000c8  9802              LDR      r0,[sp,#8]
0000ca  4307              ORRS     r7,r7,r0
0000cc  f8cd700c          STR.W    r7,[sp,#0xc]
                  |L1.208|
0000d0  eb040708          ADD      r7,r4,r8              ;97
0000d4  4648              MOV      r0,r9                 ;98
0000d6  454f              CMP      r7,r9                 ;98
0000d8  db00              BLT      |L1.220|
0000da  4607              MOV      r7,r0                 ;99
                  |L1.220|
0000dc  1b3a              SUBS     r2,r7,r4              ;100
0000de  eba80002          SUB      r0,r8,r2              ;100
0000e2  f00008ff          AND      r8,r0,#0xff           ;100
0000e6  9803              LDR      r0,[sp,#0xc]
0000e8  b1d8              CBZ      r0,|L1.290|
;;;102              if (IsMagnified) {
0000ea  9801              LDR      r0,[sp,#4]
0000ec  2800              CMP      r0,#0
0000ee  9807              LDR      r0,[sp,#0x1c]
0000f0  d00f              BEQ      |L1.274|
;;;103                xL = xMag * xi + x0;
0000f2  9916              LDR      r1,[sp,#0x58]
;;;104                yL = yMag * y + y0;
0000f4  9b17              LDR      r3,[sp,#0x5c]
0000f6  fb010004          MLA      r0,r1,r4,r0           ;103
0000fa  fb03b106          MLA      r1,r3,r6,r11
;;;105                LCD_FillRect(xL, yL, xL + xMag * (xi1 - xi) -1 , yL + yMag - 1);
0000fe  f8ddc058          LDR      r12,[sp,#0x58]
000102  1e44              SUBS     r4,r0,#1
000104  440b              ADD      r3,r3,r1
000106  fb0c4202          MLA      r2,r12,r2,r4
00010a  1e5b              SUBS     r3,r3,#1
00010c  f7fffffe          BL       LCD_FillRect
000110  e007              B        |L1.290|
                  |L1.274|
;;;106              } else {
;;;107                LCD_DrawHLine(x0+xi, y + y0, xi1+x0-1);
000112  183a              ADDS     r2,r7,r0
000114  9807              LDR      r0,[sp,#0x1c]
000116  eb06010b          ADD      r1,r6,r11
00011a  4420              ADD      r0,r0,r4
00011c  1e52              SUBS     r2,r2,#1
00011e  f7fffffe          BL       LCD_DrawHLine
                  |L1.290|
;;;108              }
;;;109            }
;;;110            xi =xi1;
;;;111            if (xi1==xsize) {
000122  463c              MOV      r4,r7
000124  454f              CMP      r7,r9
000126  d101              BNE      |L1.300|
;;;112              y++;
;;;113              xi=0;
000128  2400              MOVS     r4,#0
00012a  1c76              ADDS     r6,r6,#1
                  |L1.300|
00012c  f1b80f00          CMP      r8,#0                 ;96
000130  d1ce              BNE      |L1.208|
000132  e03f              B        |L1.436|
                  |L1.308|
000134  e046              B        |L1.452|
                  |L1.310|
;;;114            }
;;;115          }
;;;116        } else {
;;;117          do {
;;;118            U8 Index = *pPixel++;
000136  f8150b01          LDRB     r0,[r5],#1
;;;119            if (Index || NoTrans) {  /* Skip transparent pixels */
00013a  9902              LDR      r1,[sp,#8]
00013c  4301              ORRS     r1,r1,r0
00013e  d02e              BEQ      |L1.414|
;;;120              int x = x0+xi;
000140  9907              LDR      r1,[sp,#0x1c]
000142  eb010c04          ADD      r12,r1,r4
;;;121              PixelIndex = pTrans ? *(pTrans+Index) : Index;
000146  9900              LDR      r1,[sp,#0]
000148  b109              CBZ      r1,|L1.334|
00014a  f8310010          LDRH     r0,[r1,r0,LSL #1]
                  |L1.334|
;;;122              if (IsMagnified) {
00014e  9901              LDR      r1,[sp,#4]
000150  b189              CBZ      r1,|L1.374|
;;;123                LCD_SetColorIndex(PixelIndex);
000152  f7fffffe          BL       LCD_SetColorIndex
;;;124                xL = xMag * xi + x0;
000156  9916              LDR      r1,[sp,#0x58]
000158  9807              LDR      r0,[sp,#0x1c]
;;;125                yL = yMag * y + y0;
;;;126                LCD_FillRect(xL, yL, xL + xMag -1 , yL + yMag - 1);
00015a  9a17              LDR      r2,[sp,#0x5c]
00015c  fb010004          MLA      r0,r1,r4,r0           ;124
000160  9917              LDR      r1,[sp,#0x5c]         ;125
000162  fb01b106          MLA      r1,r1,r6,r11          ;125
000166  188b              ADDS     r3,r1,r2
000168  9a16              LDR      r2,[sp,#0x58]
00016a  1e5b              SUBS     r3,r3,#1
00016c  4402              ADD      r2,r2,r0
00016e  1e52              SUBS     r2,r2,#1
000170  f7fffffe          BL       LCD_FillRect
000174  e013              B        |L1.414|
                  |L1.374|
;;;127              } else {
;;;128                #if 1 /* High speed variant */
;;;129                  if (y + y0>= GUI_Context.ClipRect.y0)
000176  4a15              LDR      r2,|L1.460|
000178  eb06010b          ADD      r1,r6,r11
00017c  f9b2300a          LDRSH    r3,[r2,#0xa]  ; GUI_Context
000180  4299              CMP      r1,r3
000182  db0c              BLT      |L1.414|
;;;130                    if (x >= GUI_Context.ClipRect.x0)
000184  f9b23008          LDRSH    r3,[r2,#8]  ; GUI_Context
000188  4563              CMP      r3,r12
00018a  dc08              BGT      |L1.414|
;;;131                      if (x <= GUI_Context.ClipRect.x1)
00018c  f9b2300c          LDRSH    r3,[r2,#0xc]  ; GUI_Context
000190  4563              CMP      r3,r12
000192  db04              BLT      |L1.414|
;;;132                        LCDDEV_L0_SetPixelIndex(x, y + y0, PixelIndex);
000194  6cd2              LDR      r2,[r2,#0x4c]  ; GUI_Context
000196  6a53              LDR      r3,[r2,#0x24]
000198  4602              MOV      r2,r0
00019a  4660              MOV      r0,r12
00019c  4798              BLX      r3
                  |L1.414|
00019e  1c64              ADDS     r4,r4,#1
;;;133                #else
;;;134                  LCD_SetPixelIndex(x, y + y0, PixelIndex);
;;;135                #endif
;;;136              }
;;;137            }
;;;138            if (++xi >= xsize) {
0001a0  454c              CMP      r4,r9
0001a2  db03              BLT      |L1.428|
;;;139              xi=0; y++;
0001a4  2400              MOVS     r4,#0
0001a6  1c76              ADDS     r6,r6,#1
;;;140              if (y >= ysize)
0001a8  4556              CMP      r6,r10
0001aa  da03              BGE      |L1.436|
                  |L1.428|
0001ac  1e7f              SUBS     r7,r7,#1
;;;141                break;
;;;142            }
;;;143          } while (--Data);
0001ae  f01707ff          ANDS     r7,r7,#0xff
0001b2  d1c0              BNE      |L1.310|
                  |L1.436|
0001b4  4556              CMP      r6,r10                ;87
0001b6  f6ffaf73          BLT      |L1.160|
;;;144        }
;;;145      }
;;;146      LCD_ACOLORINDEX[0] = aColorIndex[0];
0001ba  4804              LDR      r0,|L1.460|
0001bc  9905              LDR      r1,[sp,#0x14]
0001be  8001              STRH     r1,[r0,#0]
;;;147      LCD_ACOLORINDEX[1] = aColorIndex[1];
0001c0  9904              LDR      r1,[sp,#0x10]
0001c2  8041              STRH     r1,[r0,#2]
                  |L1.452|
;;;148    }
0001c4  b00b              ADD      sp,sp,#0x2c
0001c6  e8bd8ff0          POP      {r4-r11,pc}
;;;149    
                          ENDP

0001ca  0000              DCW      0x0000
                  |L1.460|
                          DCD      GUI_Context
                  |L1.464|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Cache
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_BitmapMethodsRLE8
                          DCD      _DrawBitmap_RLE8
                          DCD      0x00000000
