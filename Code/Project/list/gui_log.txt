; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\gui_log.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\gui_log.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUI_Log.c]
                          THUMB

                          AREA ||i.GUI_Log||, CODE, READONLY, ALIGN=1

                  GUI_Log PROC
;;;63     */
;;;64     void GUI_Log(const char *s) {
000000  f7ffbffe          B.W      GUI_X_Log
;;;65       GUI_X_Log(s);
;;;66     }
;;;67     
                          ENDP


                          AREA ||i.GUI_Log1||, CODE, READONLY, ALIGN=1

                  GUI_Log1 PROC
;;;71     */
;;;72     void GUI_Log1(const char *s, int p0) {
000000  b510              PUSH     {r4,lr}
000002  b090              SUB      sp,sp,#0x40
000004  460c              MOV      r4,r1
;;;73       char ac[MAXLEN + 10];
;;;74       char* sOut = ac;
;;;75       _CopyString(ac, s, MAXLEN);
000006  4601              MOV      r1,r0
000008  f8cdd03c          STR      sp,[sp,#0x3c]         ;74
00000c  2232              MOVS     r2,#0x32
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       _CopyString
;;;76       sOut += strlen(sOut);
000014  980f              LDR      r0,[sp,#0x3c]
000016  f7fffffe          BL       strlen
00001a  990f              LDR      r1,[sp,#0x3c]
;;;77       GUI__AddSpaceHex(p0, 8, &sOut);
00001c  aa0f              ADD      r2,sp,#0x3c
00001e  4408              ADD      r0,r0,r1              ;76
000020  900f              STR      r0,[sp,#0x3c]
000022  2108              MOVS     r1,#8
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       GUI__AddSpaceHex
;;;78       GUI_Log(ac);
00002a  4668              MOV      r0,sp
00002c  f7fffffe          BL       GUI_X_Log
;;;79     }
000030  b010              ADD      sp,sp,#0x40
000032  bd10              POP      {r4,pc}
;;;80     
                          ENDP


                          AREA ||i.GUI_Log2||, CODE, READONLY, ALIGN=1

                  GUI_Log2 PROC
;;;84     */
;;;85     void GUI_Log2(const char *s, int p0, int p1) {
000000  b530              PUSH     {r4,r5,lr}
000002  b093              SUB      sp,sp,#0x4c
000004  460d              MOV      r5,r1
000006  4614              MOV      r4,r2
;;;86       char ac[MAXLEN + 20];
;;;87       char* sOut = ac;
;;;88       _CopyString(ac, s, MAXLEN);
000008  4601              MOV      r1,r0
00000a  f8cdd048          STR      sp,[sp,#0x48]         ;87
00000e  2232              MOVS     r2,#0x32
000010  4668              MOV      r0,sp
000012  f7fffffe          BL       _CopyString
;;;89       sOut += strlen(sOut);
000016  9812              LDR      r0,[sp,#0x48]
000018  f7fffffe          BL       strlen
00001c  9912              LDR      r1,[sp,#0x48]
;;;90       GUI__AddSpaceHex(p0, 8, &sOut);
00001e  aa12              ADD      r2,sp,#0x48
000020  4408              ADD      r0,r0,r1              ;89
000022  9012              STR      r0,[sp,#0x48]
000024  2108              MOVS     r1,#8
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GUI__AddSpaceHex
;;;91       GUI__AddSpaceHex(p1, 8, &sOut);
00002c  aa12              ADD      r2,sp,#0x48
00002e  2108              MOVS     r1,#8
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       GUI__AddSpaceHex
;;;92       GUI_Log(ac);
000036  4668              MOV      r0,sp
000038  f7fffffe          BL       GUI_X_Log
;;;93     }
00003c  b013              ADD      sp,sp,#0x4c
00003e  bd30              POP      {r4,r5,pc}
;;;94     
                          ENDP


                          AREA ||i.GUI_Log3||, CODE, READONLY, ALIGN=1

                  GUI_Log3 PROC
;;;98     */
;;;99     void GUI_Log3(const char *s, int p0, int p1, int p2) {
000000  b570              PUSH     {r4-r6,lr}
000002  b096              SUB      sp,sp,#0x58
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
;;;100      char ac[MAXLEN + 30];
;;;101      char* sOut = ac;
;;;102      _CopyString(ac, s, MAXLEN);
000008  4601              MOV      r1,r0
00000a  461c              MOV      r4,r3                 ;99
00000c  f8cdd050          STR      sp,[sp,#0x50]         ;101
000010  2232              MOVS     r2,#0x32
000012  4668              MOV      r0,sp
000014  f7fffffe          BL       _CopyString
;;;103      sOut += strlen(sOut);
000018  9814              LDR      r0,[sp,#0x50]
00001a  f7fffffe          BL       strlen
00001e  9914              LDR      r1,[sp,#0x50]
;;;104      GUI__AddSpaceHex(p0, 8, &sOut);
000020  aa14              ADD      r2,sp,#0x50
000022  4408              ADD      r0,r0,r1              ;103
000024  9014              STR      r0,[sp,#0x50]
000026  2108              MOVS     r1,#8
000028  4630              MOV      r0,r6
00002a  f7fffffe          BL       GUI__AddSpaceHex
;;;105      GUI__AddSpaceHex(p1, 8, &sOut);
00002e  aa14              ADD      r2,sp,#0x50
000030  2108              MOVS     r1,#8
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       GUI__AddSpaceHex
;;;106      GUI__AddSpaceHex(p2, 8, &sOut);
000038  aa14              ADD      r2,sp,#0x50
00003a  2108              MOVS     r1,#8
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       GUI__AddSpaceHex
;;;107      GUI_Log(ac);
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       GUI_X_Log
;;;108    }
000048  b016              ADD      sp,sp,#0x58
00004a  bd70              POP      {r4-r6,pc}
;;;109    
                          ENDP


                          AREA ||i.GUI_Log4||, CODE, READONLY, ALIGN=1

                  GUI_Log4 PROC
;;;113    */
;;;114    void GUI_Log4(const char *s, int p0, int p1, int p2, int p3) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b099              SUB      sp,sp,#0x64
000004  460f              MOV      r7,r1
000006  4616              MOV      r6,r2
;;;115      char ac[MAXLEN + 40];
;;;116      char* sOut = ac;
;;;117      _CopyString(ac, s, MAXLEN);
000008  4601              MOV      r1,r0
00000a  461d              MOV      r5,r3                 ;114
00000c  9c1e              LDR      r4,[sp,#0x78]         ;116
00000e  f8cdd05c          STR      sp,[sp,#0x5c]         ;116
000012  2232              MOVS     r2,#0x32
000014  4668              MOV      r0,sp
000016  f7fffffe          BL       _CopyString
;;;118      sOut += strlen(sOut);
00001a  9817              LDR      r0,[sp,#0x5c]
00001c  f7fffffe          BL       strlen
000020  9917              LDR      r1,[sp,#0x5c]
;;;119      GUI__AddSpaceHex(p0, 8, &sOut);
000022  aa17              ADD      r2,sp,#0x5c
000024  4408              ADD      r0,r0,r1              ;118
000026  9017              STR      r0,[sp,#0x5c]
000028  2108              MOVS     r1,#8
00002a  4638              MOV      r0,r7
00002c  f7fffffe          BL       GUI__AddSpaceHex
;;;120      GUI__AddSpaceHex(p1, 8, &sOut);
000030  aa17              ADD      r2,sp,#0x5c
000032  2108              MOVS     r1,#8
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       GUI__AddSpaceHex
;;;121      GUI__AddSpaceHex(p2, 8, &sOut);
00003a  aa17              ADD      r2,sp,#0x5c
00003c  2108              MOVS     r1,#8
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       GUI__AddSpaceHex
;;;122      GUI__AddSpaceHex(p3, 8, &sOut);
000044  aa17              ADD      r2,sp,#0x5c
000046  2108              MOVS     r1,#8
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       GUI__AddSpaceHex
;;;123      GUI_Log(ac);
00004e  4668              MOV      r0,sp
000050  f7fffffe          BL       GUI_X_Log
;;;124    }
000054  b019              ADD      sp,sp,#0x64
000056  bdf0              POP      {r4-r7,pc}
;;;125    
                          ENDP


                          AREA ||i._CopyString||, CODE, READONLY, ALIGN=2

                  _CopyString PROC
;;;43     */
;;;44     static void _CopyString(char* d, const char* s, int MaxLen) {
000000  e004              B        |L6.12|
;;;45       while ((MaxLen > 0) && *s) {
;;;46         *d++ = *s++;
000002  bf00              NOP      
                  |L6.4|
000004  1c49              ADDS     r1,r1,#1
000006  f8003b01          STRB     r3,[r0],#1
00000a  1e52              SUBS     r2,r2,#1
                  |L6.12|
00000c  2a00              CMP      r2,#0                 ;45
00000e  dd02              BLE      |L6.22|
000010  780b              LDRB     r3,[r1,#0]            ;45
000012  2b00              CMP      r3,#0                 ;45
000014  d1f6              BNE      |L6.4|
                  |L6.22|
;;;47         MaxLen--;
;;;48       }
;;;49       *d = 0;
000016  2100              MOVS     r1,#0
000018  7001              STRB     r1,[r0,#0]
;;;50     }
00001a  4770              BX       lr
;;;51     
                          ENDP

