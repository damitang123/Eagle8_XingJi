; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guicharline.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guicharline.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUICharLine.c]
                          THUMB

                          AREA ||i.GUI__DispLine||, CODE, READONLY, ALIGN=2

                  GUI__DispLine PROC
;;;121    */
;;;122    void GUI__DispLine(const char GUI_UNI_PTR *s, int MaxNumChars, const GUI_RECT* pr) {
000000  b57c              PUSH     {r2-r6,lr}
000002  4606              MOV      r6,r0
;;;123      GUI_RECT r;
;;;124      #if GUI_SUPPORT_ROTATION
;;;125      if (GUI_pLCD_APIList) {
000004  4826              LDR      r0,|L1.160|
000006  460d              MOV      r5,r1                 ;122
000008  6800              LDR      r0,[r0,#0]  ; GUI_pLCD_APIList
00000a  b168              CBZ      r0,|L1.40|
;;;126        #if GUI_WINSUPPORT
;;;127        WM_ITERATE_START(NULL) {
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       WM__InitIVRSearch
000012  e006              B        |L1.34|
                  |L1.20|
;;;128        #endif
;;;129          /* Do the actual drawing via routine call. */
;;;130          _DispLine(s, MaxNumChars, &r);
000014  466a              MOV      r2,sp
000016  4629              MOV      r1,r5
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       _DispLine
;;;131        #if GUI_WINSUPPORT
;;;132        } WM_ITERATE_END();
00001e  f7fffffe          BL       WM__GetNextIVR
                  |L1.34|
000022  2800              CMP      r0,#0
000024  d1f6              BNE      |L1.20|
;;;133        #endif
;;;134      } else
;;;135      #endif
;;;136      {
;;;137        r = *pr;
;;;138        #if GUI_WINSUPPORT
;;;139        WM_ADDORG(r.x0, r.y0);
;;;140        WM_ADDORG(r.x1, r.y1);
;;;141        WM_ITERATE_START(&r) {
;;;142        #endif
;;;143          GUI_Context.DispPosX = r.x0;
;;;144          GUI_Context.DispPosY = r.y0;
;;;145          /* Do the actual drawing via routine call. */
;;;146          _DispLine(s, MaxNumChars, &r);
;;;147        #if GUI_WINSUPPORT
;;;148        } WM_ITERATE_END();
;;;149        WM_SUBORG(GUI_Context.DispPosX, GUI_Context.DispPosY);
;;;150        #endif
;;;151      }
;;;152    }
000026  bd7c              POP      {r2-r6,pc}
                  |L1.40|
000028  6810              LDR      r0,[r2,#0]            ;137
00002a  9000              STR      r0,[sp,#0]            ;137
00002c  4c1d              LDR      r4,|L1.164|
00002e  6850              LDR      r0,[r2,#4]            ;137
000030  9001              STR      r0,[sp,#4]            ;139
000032  f8bd1000          LDRH     r1,[sp,#0]            ;139
000036  f8b40044          LDRH     r0,[r4,#0x44]         ;139  ; GUI_Context
00003a  4401              ADD      r1,r1,r0              ;139
00003c  f8ad1000          STRH     r1,[sp,#0]            ;139
000040  f8bd2002          LDRH     r2,[sp,#2]            ;139
000044  f8b41048          LDRH     r1,[r4,#0x48]         ;139  ; GUI_Context
000048  440a              ADD      r2,r2,r1              ;139
00004a  f8ad2002          STRH     r2,[sp,#2]            ;139
00004e  f8bd2004          LDRH     r2,[sp,#4]            ;140
000052  4410              ADD      r0,r0,r2              ;140
000054  f8ad0004          STRH     r0,[sp,#4]            ;140
000058  f8bd0006          LDRH     r0,[sp,#6]            ;140
00005c  4408              ADD      r0,r0,r1              ;140
00005e  f8ad0006          STRH     r0,[sp,#6]            ;140
000062  4668              MOV      r0,sp                 ;141
000064  f7fffffe          BL       WM__InitIVRSearch
000068  e00d              B        |L1.134|
00006a  bf00              NOP                            ;143
                  |L1.108|
00006c  f8bd0000          LDRH     r0,[sp,#0]            ;143
000070  84e0              STRH     r0,[r4,#0x26]         ;143
000072  f8bd0002          LDRH     r0,[sp,#2]            ;144
000076  8520              STRH     r0,[r4,#0x28]         ;144
000078  466a              MOV      r2,sp                 ;146
00007a  4629              MOV      r1,r5                 ;146
00007c  4630              MOV      r0,r6                 ;146
00007e  f7fffffe          BL       _DispLine
000082  f7fffffe          BL       WM__GetNextIVR
                  |L1.134|
000086  2800              CMP      r0,#0                 ;148
000088  d1f0              BNE      |L1.108|
00008a  f8340f26          LDRH     r0,[r4,#0x26]!        ;149  ; GUI_Context
00008e  8be1              LDRH     r1,[r4,#0x1e]         ;149  ; GUI_Context
000090  1a40              SUBS     r0,r0,r1              ;149
000092  8020              STRH     r0,[r4,#0]            ;149
000094  8860              LDRH     r0,[r4,#2]            ;149  ; GUI_Context
000096  8c61              LDRH     r1,[r4,#0x22]         ;149  ; GUI_Context
000098  1a40              SUBS     r0,r0,r1              ;149
00009a  8060              STRH     r0,[r4,#2]            ;149
00009c  bd7c              POP      {r2-r6,pc}
;;;153    
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
                          DCD      GUI_pLCD_APIList
                  |L1.164|
                          DCD      GUI_Context

                          AREA ||i.GUI__GetLineDistX||, CODE, READONLY, ALIGN=2

                  GUI__GetLineDistX PROC
;;;95     */
;;;96     int GUI__GetLineDistX(const char GUI_UNI_PTR *s, int MaxNumChars) {
000000  b573              PUSH     {r0,r1,r4-r6,lr}
000002  460d              MOV      r5,r1
000004  9800              LDR      r0,[sp,#0]
;;;97       int Dist;
;;;98       #if GUI_SUPPORT_ARABIC
;;;99         Dist = GUI__GetLineDistXArabic(s, MaxNumChars);
;;;100      #else
;;;101        Dist = 0;
000006  2400              MOVS     r4,#0
000008  b178              CBZ      r0,|L2.42|
;;;102        if (s) {
;;;103          U16 Char;
;;;104          #if GUI_COMPILER_SUPPORTS_FP
;;;105            if (GUI_Context.pAFont->pafEncode) {
00000a  4909              LDR      r1,|L2.48|
00000c  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
00000e  6909              LDR      r1,[r1,#0x10]
000010  b149              CBZ      r1,|L2.38|
;;;106              return GUI_Context.pAFont->pafEncode->pfGetLineDistX(s, MaxNumChars);
000012  680a              LDR      r2,[r1,#0]
000014  4629              MOV      r1,r5
000016  4790              BLX      r2
;;;107            }
;;;108          #endif
;;;109          while (--MaxNumChars >= 0) {
;;;110            Char  = GUI_UC__GetCharCodeInc(&s);
;;;111            Dist += GUI_GetCharDistX(Char);
;;;112          }
;;;113        }
;;;114      #endif
;;;115      return Dist;
;;;116    }
000018  bd7c              POP      {r2-r6,pc}
                  |L2.26|
00001a  4668              MOV      r0,sp                 ;110
00001c  f7fffffe          BL       GUI_UC__GetCharCodeInc
000020  f7fffffe          BL       GUI_GetCharDistX
000024  4404              ADD      r4,r4,r0              ;111
                  |L2.38|
000026  1e6d              SUBS     r5,r5,#1              ;111
000028  d5f7              BPL      |L2.26|
                  |L2.42|
00002a  4620              MOV      r0,r4                 ;115
00002c  bd7c              POP      {r2-r6,pc}
;;;117    
                          ENDP

00002e  0000              DCW      0x0000
                  |L2.48|
                          DCD      GUI_Context

                          AREA ||i.GUI__GetLineNumChars||, CODE, READONLY, ALIGN=2

                  GUI__GetLineNumChars PROC
;;;71     */
;;;72     int GUI__GetLineNumChars(const char GUI_UNI_PTR *s, int MaxNumChars) {
000000  b573              PUSH     {r0,r1,r4-r6,lr}
000002  460d              MOV      r5,r1
000004  9800              LDR      r0,[sp,#0]
;;;73       int NumChars = 0;
000006  2400              MOVS     r4,#0
000008  b180              CBZ      r0,|L3.44|
;;;74       if (s) {
;;;75         #if GUI_COMPILER_SUPPORTS_FP
;;;76           if (GUI_Context.pAFont->pafEncode) {
00000a  4909              LDR      r1,|L3.48|
00000c  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
00000e  6909              LDR      r1,[r1,#0x10]
000010  b151              CBZ      r1,|L3.40|
;;;77             return GUI_Context.pAFont->pafEncode->pfGetLineLen(s, MaxNumChars);
000012  684a              LDR      r2,[r1,#4]
000014  4629              MOV      r1,r5
000016  4790              BLX      r2
;;;78           }
;;;79         #endif
;;;80         for (; NumChars < MaxNumChars; NumChars++) {
;;;81           U16 Data = GUI_UC__GetCharCodeInc(&s);
;;;82           if ((Data == 0) || (Data == '\n')) {
;;;83             break;
;;;84           }
;;;85         }
;;;86       }
;;;87       return NumChars;
;;;88     }
000018  bd7c              POP      {r2-r6,pc}
                  |L3.26|
00001a  4668              MOV      r0,sp                 ;81
00001c  f7fffffe          BL       GUI_UC__GetCharCodeInc
000020  b120              CBZ      r0,|L3.44|
000022  280a              CMP      r0,#0xa               ;82
000024  d002              BEQ      |L3.44|
000026  1c64              ADDS     r4,r4,#1              ;82
                  |L3.40|
000028  42ac              CMP      r4,r5                 ;80
00002a  dbf6              BLT      |L3.26|
                  |L3.44|
00002c  4620              MOV      r0,r4                 ;87
00002e  bd7c              POP      {r2-r6,pc}
;;;89     
                          ENDP

                  |L3.48|
                          DCD      GUI_Context

                          AREA ||i._DispLine||, CODE, READONLY, ALIGN=2

                  _DispLine PROC
;;;33     */
;;;34     static void _DispLine(const char GUI_UNI_PTR *s, int MaxNumChars, const GUI_RECT *pRect) {
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;35       #if GUI_SUPPORT_ARABIC
;;;36         GUI__DispLineArabic(s, MaxNumChars, pRect);
;;;37       #else
;;;38         /* Check if we have anything to do at all ... */
;;;39         if (GUI_Context.pClipRect_HL) {
000002  4c11              LDR      r4,|L4.72|
000004  460d              MOV      r5,r1                 ;34
000006  6960              LDR      r0,[r4,#0x14]         ;34  ; GUI_Context
000008  b120              CBZ      r0,|L4.20|
;;;40           if (GUI_RectsIntersect(GUI_Context.pClipRect_HL, pRect) == 0)
00000a  4611              MOV      r1,r2
00000c  f7fffffe          BL       GUI_RectsIntersect
000010  2800              CMP      r0,#0
000012  d006              BEQ      |L4.34|
                  |L4.20|
;;;41             return;
;;;42         }
;;;43         #if GUI_COMPILER_SUPPORTS_FP
;;;44         if (GUI_Context.pAFont->pafEncode) {
000014  69e0              LDR      r0,[r4,#0x1c]  ; GUI_Context
000016  6900              LDR      r0,[r0,#0x10]
000018  b120              CBZ      r0,|L4.36|
;;;45           GUI_Context.pAFont->pafEncode->pfDispLine(s, MaxNumChars);
00001a  6882              LDR      r2,[r0,#8]
00001c  4629              MOV      r1,r5
00001e  9800              LDR      r0,[sp,#0]
000020  4790              BLX      r2
                  |L4.34|
;;;46         } else {
;;;47         #else
;;;48         {
;;;49         #endif
;;;50           U16 Char;
;;;51           while (--MaxNumChars >= 0) {
;;;52             Char = GUI_UC__GetCharCodeInc(&s);
;;;53             GUI_Context.pAFont->pfDispChar(Char);
;;;54             if (GUI_pfDispCharStyle) {
;;;55               GUI_pfDispCharStyle(Char);
;;;56             }
;;;57           }
;;;58         }
;;;59       #endif
;;;60     }
000022  bdfe              POP      {r1-r7,pc}
                  |L4.36|
000024  4e09              LDR      r6,|L4.76|
000026  e00b              B        |L4.64|
                  |L4.40|
000028  4668              MOV      r0,sp                 ;52
00002a  f7fffffe          BL       GUI_UC__GetCharCodeInc
00002e  4607              MOV      r7,r0                 ;52
000030  69e0              LDR      r0,[r4,#0x1c]         ;53  ; GUI_Context
000032  6801              LDR      r1,[r0,#0]            ;53
000034  4638              MOV      r0,r7                 ;53
000036  4788              BLX      r1                    ;53
000038  6831              LDR      r1,[r6,#0]            ;54  ; GUI_pfDispCharStyle
00003a  b109              CBZ      r1,|L4.64|
00003c  4638              MOV      r0,r7                 ;55
00003e  4788              BLX      r1                    ;55
                  |L4.64|
000040  1e6d              SUBS     r5,r5,#1              ;55
000042  d5f1              BPL      |L4.40|
000044  bdfe              POP      {r1-r7,pc}
;;;61     
                          ENDP

000046  0000              DCW      0x0000
                  |L4.72|
                          DCD      GUI_Context
                  |L4.76|
                          DCD      GUI_pfDispCharStyle
