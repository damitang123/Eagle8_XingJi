; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\header.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\header.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Widget\HEADER.c]
                          THUMB

                          AREA ||i.HEADER_AddItem||, CODE, READONLY, ALIGN=2

                  HEADER_AddItem PROC
;;;722    */
;;;723    void HEADER_AddItem(HEADER_Handle hObj, int Width, const char * s, int Align) {
000000  e92d43fe          PUSH     {r1-r9,lr}
000004  461e              MOV      r6,r3
000006  4691              MOV      r9,r2
000008  460d              MOV      r5,r1
00000a  ea5f0800          MOVS     r8,r0
00000e  d03e              BEQ      |L1.142|
;;;724      if (hObj) {
;;;725        HEADER_Obj * pObj;
;;;726        HEADER_COLUMN Column;
;;;727        int Index;
;;;728        WM_LOCK();
;;;729        pObj = HEADER_H2P(hObj);
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;730        if (!Width) {
000016  b985              CBNZ     r5,|L1.58|
;;;731          const GUI_FONT GUI_UNI_PTR * pFont = GUI_SetFont(pObj->pFont);
000018  6ce0              LDR      r0,[r4,#0x4c]
00001a  f7fffffe          BL       GUI_SetFont
00001e  4607              MOV      r7,r0
;;;732          Width = GUI_GetStringDistX(s) + 2 * (pObj->Widget.pEffect->EffectSize + _DefaultBorderH);
000020  4648              MOV      r0,r9
000022  f7fffffe          BL       GUI_GetStringDistX
000026  6a21              LDR      r1,[r4,#0x20]
000028  4a1a              LDR      r2,|L1.148|
00002a  6949              LDR      r1,[r1,#0x14]
00002c  68d2              LDR      r2,[r2,#0xc]  ; _DefaultBorderH
00002e  4411              ADD      r1,r1,r2
000030  eb000541          ADD      r5,r0,r1,LSL #1
;;;733          GUI_SetFont(pFont);
000034  4638              MOV      r0,r7
000036  f7fffffe          BL       GUI_SetFont
                  |L1.58|
;;;734        }
;;;735        Column.Width    = Width;
;;;736        Column.Align    = Align;
00003a  f8ad6004          STRH     r6,[sp,#4]
;;;737        Column.hDrawObj = 0;
00003e  2000              MOVS     r0,#0
000040  f8ad0006          STRH     r0,[sp,#6]
000044  9500              STR      r5,[sp,#0]            ;736
;;;738        Index = GUI_ARRAY_GetNumItems(&pObj->Columns);
000046  f1040030          ADD      r0,r4,#0x30
00004a  4605              MOV      r5,r0
00004c  f7fffffe          BL       GUI_ARRAY_GetNumItems
000050  4604              MOV      r4,r0
;;;739        if (GUI_ARRAY_AddItem(&pObj->Columns, &Column, sizeof(HEADER_COLUMN) + strlen(s) + 1) == 0) {
000052  4648              MOV      r0,r9
000054  f7fffffe          BL       strlen
000058  f100020d          ADD      r2,r0,#0xd
00005c  4669              MOV      r1,sp
00005e  4628              MOV      r0,r5
000060  f7fffffe          BL       GUI_ARRAY_AddItem
000064  2800              CMP      r0,#0
000066  d112              BNE      |L1.142|
;;;740          HEADER_COLUMN * pColumn;
;;;741          pObj = HEADER_H2P(hObj);
000068  4640              MOV      r0,r8
00006a  f7fffffe          BL       GUI_ALLOC_h2p
;;;742          pColumn = (HEADER_COLUMN *)GUI_ARRAY_GetpItem(&pObj->Columns, Index);
00006e  4621              MOV      r1,r4
000070  3030              ADDS     r0,r0,#0x30
000072  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;743          strcpy(pColumn->acText, s);
000076  4649              MOV      r1,r9
000078  3008              ADDS     r0,r0,#8
00007a  f7fffffe          BL       strcpy
;;;744          WM_InvalidateWindow(hObj);
00007e  4640              MOV      r0,r8
000080  f7fffffe          BL       WM_InvalidateWindow
;;;745          WM_InvalidateWindow(WM_GetParent(hObj));
000084  4640              MOV      r0,r8
000086  f7fffffe          BL       WM_GetParent
00008a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.142|
;;;746        }
;;;747        WM_UNLOCK();
;;;748      }
;;;749    }
00008e  e8bd83fe          POP      {r1-r9,pc}
;;;750    
                          ENDP

000092  0000              DCW      0x0000
                  |L1.148|
                          DCD      ||.data||

                          AREA ||i.HEADER_Callback||, CODE, READONLY, ALIGN=1

                  HEADER_Callback PROC
;;;440    */
;;;441    void HEADER_Callback (WM_MESSAGE *pMsg) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;442      HEADER_Handle hObj;
;;;443      HEADER_Obj * pObj;
;;;444      hObj = pMsg->hWin;
000004  f9b04004          LDRSH    r4,[r0,#4]
000008  4605              MOV      r5,r0                 ;441
;;;445      /* Let widget handle the standard messages */
;;;446      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00000a  4601              MOV      r1,r0
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       WIDGET_HandleActive
000012  2800              CMP      r0,#0
000014  d044              BEQ      |L2.160|
;;;447        return;
;;;448      }
;;;449      WM_LOCK();
;;;450      pObj = (HEADER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       GUI_ALLOC_h2p
;;;451      switch (pMsg->MsgId) {
00001c  6829              LDR      r1,[r5,#0]
00001e  290b              CMP      r1,#0xb
000020  d05b              BEQ      |L2.218|
000022  290c              CMP      r1,#0xc
000024  d03e              BEQ      |L2.164|
000026  290f              CMP      r1,#0xf
000028  d002              BEQ      |L2.48|
00002a  2911              CMP      r1,#0x11
00002c  d16d              BNE      |L2.266|
00002e  e003              B        |L2.56|
                  |L2.48|
;;;452      case WM_PAINT:
;;;453        _Paint(pObj);
000030  e8bd4ff8          POP      {r3-r11,lr}
000034  f7ffbffe          B.W      _Paint
                  |L2.56|
;;;454        break;
;;;455      case WM_PID_STATE_CHANGED:
;;;456        _OnPidStateChange(hObj, pObj, pMsg);
000038  4606              MOV      r6,r0
00003a  68a8              LDR      r0,[r5,#8]
00003c  7a41              LDRB     r1,[r0,#9]
00003e  2901              CMP      r1,#1
000040  d12e              BNE      |L2.160|
000042  7a01              LDRB     r1,[r0,#8]
000044  2900              CMP      r1,#0
000046  d12b              BNE      |L2.160|
000048  6801              LDR      r1,[r0,#0]
00004a  6bf2              LDR      r2,[r6,#0x3c]
00004c  6847              LDR      r7,[r0,#4]
00004e  eb010902          ADD      r9,r1,r2
000052  f04f35ff          MOV      r5,#0xffffffff
000056  2f00              CMP      r7,#0
000058  db21              BLT      |L2.158|
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       WM_GetWindowSizeY
000060  42b8              CMP      r0,r7
000062  dd1c              BLE      |L2.158|
000064  b1dc              CBZ      r4,|L2.158|
000066  f1060030          ADD      r0,r6,#0x30
00006a  2400              MOVS     r4,#0
00006c  4682              MOV      r10,r0
00006e  f7fffffe          BL       GUI_ARRAY_GetNumItems
000072  4680              MOV      r8,r0
000074  2700              MOVS     r7,#0
000076  e010              B        |L2.154|
                  |L2.120|
000078  4639              MOV      r1,r7
00007a  4650              MOV      r0,r10
00007c  f7fffffe          BL       GUI_ARRAY_GetpItem
000080  1d22              ADDS     r2,r4,#4
000082  4591              CMP      r9,r2
000084  dd06              BLE      |L2.148|
000086  6802              LDR      r2,[r0,#0]
000088  1f21              SUBS     r1,r4,#4
00008a  440a              ADD      r2,r2,r1
00008c  454a              CMP      r2,r9
00008e  dd01              BLE      |L2.148|
000090  463d              MOV      r5,r7
000092  e004              B        |L2.158|
                  |L2.148|
000094  6800              LDR      r0,[r0,#0]
000096  1c7f              ADDS     r7,r7,#1
000098  4404              ADD      r4,r4,r0
                  |L2.154|
00009a  4547              CMP      r7,r8
00009c  dbec              BLT      |L2.120|
                  |L2.158|
00009e  6435              STR      r5,[r6,#0x40]
                  |L2.160|
;;;457        break;
;;;458    #if (HEADER_SUPPORT_DRAG)
;;;459      case WM_TOUCH:
;;;460        _OnTouch(hObj, pObj, pMsg);
;;;461        break;
;;;462    #endif
;;;463    #if (HEADER_SUPPORT_DRAG & GUI_SUPPORT_MOUSE)
;;;464      case WM_MOUSEOVER:
;;;465        _OnMouseOver(hObj, pObj, pMsg);
;;;466        break;
;;;467    #endif
;;;468      case WM_DELETE:
;;;469        _FreeAttached(pObj); /* No return here ... WM_DefaultProc needs to be called */
;;;470      default:
;;;471        WM_DefaultProc(pMsg);
;;;472      }
;;;473      WM_UNLOCK();
;;;474    }
0000a0  e8bd8ff8          POP      {r3-r11,pc}
                  |L2.164|
0000a4  4626              MOV      r6,r4                 ;460
0000a6  68ac              LDR      r4,[r5,#8]            ;460
0000a8  4601              MOV      r1,r0                 ;460
0000aa  b184              CBZ      r4,|L2.206|
0000ac  7a20              LDRB     r0,[r4,#8]            ;460
0000ae  9000              STR      r0,[sp,#0]            ;460
0000b0  6820              LDR      r0,[r4,#0]            ;460
0000b2  6bca              LDR      r2,[r1,#0x3c]         ;460
0000b4  6863              LDR      r3,[r4,#4]            ;460
0000b6  4402              ADD      r2,r2,r0              ;460
0000b8  4630              MOV      r0,r6                 ;460
0000ba  f7fffffe          BL       _HandlePID
0000be  68a8              LDR      r0,[r5,#8]            ;460
0000c0  b128              CBZ      r0,|L2.206|
0000c2  7a20              LDRB     r0,[r4,#8]            ;460
0000c4  b108              CBZ      r0,|L2.202|
0000c6  2101              MOVS     r1,#1                 ;460
0000c8  e002              B        |L2.208|
                  |L2.202|
0000ca  2102              MOVS     r1,#2                 ;460
0000cc  e000              B        |L2.208|
                  |L2.206|
0000ce  2103              MOVS     r1,#3                 ;460
                  |L2.208|
0000d0  4630              MOV      r0,r6                 ;460
0000d2  e8bd4ff8          POP      {r3-r11,lr}           ;460
0000d6  f7ffbffe          B.W      WM_NotifyParent
                  |L2.218|
0000da  3030              ADDS     r0,r0,#0x30           ;460
0000dc  4607              MOV      r7,r0                 ;460
0000de  f7fffffe          BL       GUI_ARRAY_GetNumItems
0000e2  4606              MOV      r6,r0                 ;460
0000e4  2400              MOVS     r4,#0                 ;460
0000e6  e009              B        |L2.252|
                  |L2.232|
0000e8  4621              MOV      r1,r4                 ;469
0000ea  4638              MOV      r0,r7                 ;469
0000ec  f7fffffe          BL       GUI_ARRAY_GetpItem
0000f0  f9b00006          LDRSH    r0,[r0,#6]            ;469
0000f4  b108              CBZ      r0,|L2.250|
0000f6  f7fffffe          BL       GUI_ALLOC_Free
                  |L2.250|
0000fa  1c64              ADDS     r4,r4,#1              ;469
                  |L2.252|
0000fc  42b4              CMP      r4,r6                 ;469
0000fe  dbf3              BLT      |L2.232|
000100  4638              MOV      r0,r7                 ;469
000102  f7fffffe          BL       GUI_ARRAY_Delete
000106  f7fffffe          BL       _RestoreOldCursor
                  |L2.266|
00010a  4628              MOV      r0,r5                 ;471
00010c  e8bd4ff8          POP      {r3-r11,lr}           ;471
000110  f7ffbffe          B.W      WM_DefaultProc
;;;475    
                          ENDP


                          AREA ||i.HEADER_Create||, CODE, READONLY, ALIGN=1

                  HEADER_Create PROC
;;;485    */
;;;486    HEADER_Handle HEADER_Create(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int Id, int Flags, int ExFlags) {
000000  e92d41ff          PUSH     {r0-r8,lr}
000004  f10d0828          ADD      r8,sp,#0x28
000008  e89800f0          LDM      r8,{r4-r7}
;;;487      return HEADER_CreateEx(x0, y0, xsize, ysize, hParent, Flags, ExFlags, Id);
00000c  9503              STR      r5,[sp,#0xc]
00000e  e88d00d0          STM      sp,{r4,r6,r7}
000012  f7fffffe          BL       HEADER_CreateEx
;;;488    }
000016  b004              ADD      sp,sp,#0x10
000018  e8bd81f0          POP      {r4-r8,pc}
;;;489    
                          ENDP


                          AREA ||i.HEADER_CreateEx||, CODE, READONLY, ALIGN=2

                  HEADER_CreateEx PROC
;;;493    */
;;;494    HEADER_Handle HEADER_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;495                                  int WinFlags, int ExFlags, int Id)
;;;496    {
000004  4605              MOV      r5,r0
000006  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
00000a  460e              MOV      r6,r1
;;;497      HEADER_Handle hObj;
;;;498      GUI_USE_PARA(ExFlags);
;;;499      /* Create the window */
;;;500      WM_LOCK();
;;;501      if ((xsize == 0) && (x0 == 0) && (y0 == 0)) {
00000c  ea420005          ORR      r0,r2,r5
000010  461f              MOV      r7,r3                 ;496
000012  4614              MOV      r4,r2                 ;496
000014  4330              ORRS     r0,r0,r6
000016  d10b              BNE      |L4.48|
;;;502        GUI_RECT Rect;
;;;503        WM_GetInsideRectEx(hParent, &Rect);
000018  4669              MOV      r1,sp
00001a  4650              MOV      r0,r10
00001c  f7fffffe          BL       WM_GetInsideRectEx
;;;504        xsize = Rect.x1 - Rect.x0 + 1;
000020  f9bd0004          LDRSH    r0,[sp,#4]
000024  f9bd5000          LDRSH    r5,[sp,#0]
;;;505        x0    = Rect.x0;
;;;506        y0    = Rect.y0;
000028  f9bd6002          LDRSH    r6,[sp,#2]
00002c  1b44              SUBS     r4,r0,r5              ;504
00002e  1c64              ADDS     r4,r4,#1
                  |L4.48|
;;;507      }
;;;508      if (ysize == 0) {
;;;509        const WIDGET_EFFECT* pEffect = WIDGET_GetDefaultEffect();
;;;510        ysize  = GUI_GetYDistOfFont(_pDefaultFont);
000030  f8df807c          LDR      r8,|L4.176|
000034  b977              CBNZ     r7,|L4.84|
000036  f7fffffe          BL       WIDGET_GetDefaultEffect
00003a  4681              MOV      r9,r0                 ;509
00003c  4647              MOV      r7,r8
00003e  f8d80014          LDR      r0,[r8,#0x14]  ; _pDefaultFont
000042  f7fffffe          BL       GUI_GetYDistOfFont
;;;511        ysize += 2 * _DefaultBorderV;
000046  6939              LDR      r1,[r7,#0x10]  ; _DefaultBorderV
000048  eb000141          ADD      r1,r0,r1,LSL #1
;;;512        ysize += 2 * (unsigned)pEffect->EffectSize;
00004c  f8d90014          LDR      r0,[r9,#0x14]
000050  eb010740          ADD      r7,r1,r0,LSL #1
                  |L4.84|
;;;513      }
;;;514      WinFlags |= WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_RIGHT;
;;;515      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &HEADER_Callback,
000054  2134              MOVS     r1,#0x34
000056  fa1ff08b          UXTH     r0,r11                ;514
00005a  4a16              LDR      r2,|L4.180|
00005c  9103              STR      r1,[sp,#0xc]
00005e  f4407020          ORR      r0,r0,#0x280
000062  f8cda000          STR      r10,[sp,#0]
000066  e9cd0201          STRD     r0,r2,[sp,#4]
00006a  463b              MOV      r3,r7
00006c  4622              MOV      r2,r4
00006e  4631              MOV      r1,r6
000070  4628              MOV      r0,r5
000072  f7fffffe          BL       WM_CreateWindowAsChild
000076  0005              MOVS     r5,r0
;;;516                                    sizeof(HEADER_Obj) - sizeof(WM_Obj));
;;;517      if (hObj) {
000078  d016              BEQ      |L4.168|
;;;518        HEADER_Obj * pObj;
;;;519        pObj = (HEADER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00007a  f7fffffe          BL       GUI_ALLOC_h2p
00007e  4604              MOV      r4,r0
;;;520        /* Init sub-classes */
;;;521        GUI_ARRAY_CREATE(&pObj->Columns);
;;;522        /* init widget specific variables */
;;;523        WIDGET__Init(&pObj->Widget, Id, 0);
000080  2200              MOVS     r2,#0
000082  9911              LDR      r1,[sp,#0x44]
000084  f7fffffe          BL       WIDGET__Init
;;;524        /* init member variables */
;;;525        HEADER_INIT_ID(pObj);
;;;526        pObj->BkColor     = _DefaultBkColor;
000088  f8d80004          LDR      r0,[r8,#4]  ; _DefaultBkColor
;;;527        pObj->TextColor   = _DefaultTextColor;
00008c  62a0              STR      r0,[r4,#0x28]
00008e  f8d80008          LDR      r0,[r8,#8]  ; _DefaultTextColor
;;;528        pObj->pFont       = _pDefaultFont;
000092  62e0              STR      r0,[r4,#0x2c]
000094  f8d80014          LDR      r0,[r8,#0x14]  ; _pDefaultFont
;;;529        pObj->CapturePosX = -1;
000098  f04f31ff          MOV      r1,#0xffffffff
;;;530        pObj->CaptureItem = -1;
;;;531        pObj->ScrollPos   = 0;
00009c  6361              STR      r1,[r4,#0x34]
00009e  64e0              STR      r0,[r4,#0x4c]
0000a0  2000              MOVS     r0,#0
0000a2  e9c4100e          STRD     r1,r0,[r4,#0x38]
;;;532        pObj->DirIndicatorColumn = -1;
0000a6  6461              STR      r1,[r4,#0x44]
                  |L4.168|
;;;533      } else {
;;;534        GUI_DEBUG_ERROROUT_IF(hObj==0, "HEADER_Create failed")
;;;535      }
;;;536      WM_UNLOCK();
;;;537      return hObj;
;;;538    }
0000a8  b004              ADD      sp,sp,#0x10
0000aa  4628              MOV      r0,r5                 ;537
0000ac  e8bd9ff0          POP      {r4-r12,pc}
;;;539    
                          ENDP

                  |L4.176|
                          DCD      ||.data||
                  |L4.180|
                          DCD      HEADER_Callback

                          AREA ||i.HEADER_DeleteItem||, CODE, READONLY, ALIGN=1

                  HEADER_DeleteItem PROC
;;;754    */
;;;755    void HEADER_DeleteItem(HEADER_Handle hObj, unsigned Index) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d015              BEQ      |L5.52|
;;;756      if (hObj) {
;;;757        HEADER_Obj* pObj;
;;;758        WM_LOCK();
;;;759        pObj = HEADER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  3030              ADDS     r0,r0,#0x30
;;;760        if (Index < GUI_ARRAY_GetNumItems(&pObj->Columns)) {
00000e  4606              MOV      r6,r0
000010  f7fffffe          BL       GUI_ARRAY_GetNumItems
000014  42a0              CMP      r0,r4
000016  d90d              BLS      |L5.52|
;;;761          GUI_ARRAY_DeleteItem(&pObj->Columns, Index);
000018  4621              MOV      r1,r4
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       GUI_ARRAY_DeleteItem
;;;762          WM_InvalidateWindow(hObj);
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       WM_InvalidateWindow
;;;763          WM_InvalidateWindow(WM_GetParent(hObj));
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       WM_GetParent
00002c  e8bd4070          POP      {r4-r6,lr}
000030  f7ffbffe          B.W      WM_InvalidateWindow
                  |L5.52|
;;;764        }
;;;765        WM_UNLOCK();
;;;766      }
;;;767    }
000034  bd70              POP      {r4-r6,pc}
;;;768    
                          ENDP


                          AREA ||i.HEADER_GetDefaultBkColor||, CODE, READONLY, ALIGN=2

                  HEADER_GetDefaultBkColor PROC
;;;610    const GUI_CURSOR GUI_UNI_PTR *  HEADER_GetDefaultCursor(void)    { return _pDefaultCursor; }
;;;611    GUI_COLOR          HEADER_GetDefaultBkColor(void)   { return _DefaultBkColor; }
000000  4801              LDR      r0,|L6.8|
000002  6840              LDR      r0,[r0,#4]  ; _DefaultBkColor
000004  4770              BX       lr
;;;612    GUI_COLOR          HEADER_GetDefaultTextColor(void) { return _DefaultTextColor; }
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      ||.data||

                          AREA ||i.HEADER_GetDefaultBorderH||, CODE, READONLY, ALIGN=2

                  HEADER_GetDefaultBorderH PROC
;;;612    GUI_COLOR          HEADER_GetDefaultTextColor(void) { return _DefaultTextColor; }
;;;613    int                HEADER_GetDefaultBorderH(void)   { return _DefaultBorderH; }
000000  4801              LDR      r0,|L7.8|
000002  68c0              LDR      r0,[r0,#0xc]  ; _DefaultBorderH
000004  4770              BX       lr
;;;614    int                HEADER_GetDefaultBorderV(void)   { return _DefaultBorderV; }
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      ||.data||

                          AREA ||i.HEADER_GetDefaultBorderV||, CODE, READONLY, ALIGN=2

                  HEADER_GetDefaultBorderV PROC
;;;613    int                HEADER_GetDefaultBorderH(void)   { return _DefaultBorderH; }
;;;614    int                HEADER_GetDefaultBorderV(void)   { return _DefaultBorderV; }
000000  4801              LDR      r0,|L8.8|
000002  6900              LDR      r0,[r0,#0x10]  ; _DefaultBorderV
000004  4770              BX       lr
;;;615    const GUI_FONT GUI_UNI_PTR *    HEADER_GetDefaultFont(void)      { return _pDefaultFont; }
                          ENDP

000006  0000              DCW      0x0000
                  |L8.8|
                          DCD      ||.data||

                          AREA ||i.HEADER_GetDefaultCursor||, CODE, READONLY, ALIGN=2

                  HEADER_GetDefaultCursor PROC
;;;609    */
;;;610    const GUI_CURSOR GUI_UNI_PTR *  HEADER_GetDefaultCursor(void)    { return _pDefaultCursor; }
000000  4801              LDR      r0,|L9.8|
000002  6800              LDR      r0,[r0,#0]  ; _pDefaultCursor
000004  4770              BX       lr
;;;611    GUI_COLOR          HEADER_GetDefaultBkColor(void)   { return _DefaultBkColor; }
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      ||.data||

                          AREA ||i.HEADER_GetDefaultFont||, CODE, READONLY, ALIGN=2

                  HEADER_GetDefaultFont PROC
;;;614    int                HEADER_GetDefaultBorderV(void)   { return _DefaultBorderV; }
;;;615    const GUI_FONT GUI_UNI_PTR *    HEADER_GetDefaultFont(void)      { return _pDefaultFont; }
000000  4801              LDR      r0,|L10.8|
000002  6940              LDR      r0,[r0,#0x14]  ; _pDefaultFont
000004  4770              BX       lr
;;;616    
                          ENDP

000006  0000              DCW      0x0000
                  |L10.8|
                          DCD      ||.data||

                          AREA ||i.HEADER_GetDefaultTextColor||, CODE, READONLY, ALIGN=2

                  HEADER_GetDefaultTextColor PROC
;;;611    GUI_COLOR          HEADER_GetDefaultBkColor(void)   { return _DefaultBkColor; }
;;;612    GUI_COLOR          HEADER_GetDefaultTextColor(void) { return _DefaultTextColor; }
000000  4801              LDR      r0,|L11.8|
000002  6880              LDR      r0,[r0,#8]  ; _DefaultTextColor
000004  4770              BX       lr
;;;613    int                HEADER_GetDefaultBorderH(void)   { return _DefaultBorderH; }
                          ENDP

000006  0000              DCW      0x0000
                  |L11.8|
                          DCD      ||.data||

                          AREA ||i.HEADER_GetHeight||, CODE, READONLY, ALIGN=1

                  HEADER_GetHeight PROC
;;;820    */
;;;821    int HEADER_GetHeight(HEADER_Handle hObj) {
000000  b51c              PUSH     {r2-r4,lr}
000002  0002              MOVS     r2,r0
;;;822      int Height = 0;
000004  f04f0000          MOV      r0,#0
000008  d012              BEQ      |L12.48|
;;;823      if (hObj) {
;;;824        GUI_RECT Rect;
;;;825        WM_GetClientRectEx(hObj, &Rect);
00000a  4669              MOV      r1,sp
00000c  4610              MOV      r0,r2
00000e  f7fffffe          BL       WM_GetClientRectEx
;;;826        GUI_MoveRect(&Rect, -Rect.x0, -Rect.y0);
000012  f9bd0002          LDRSH    r0,[sp,#2]
000016  4242              RSBS     r2,r0,#0
000018  f9bd0000          LDRSH    r0,[sp,#0]
00001c  4241              RSBS     r1,r0,#0
00001e  4668              MOV      r0,sp
000020  f7fffffe          BL       GUI_MoveRect
;;;827        Height = Rect.y1 - Rect.y0 + 1;
000024  f9bd0006          LDRSH    r0,[sp,#6]
000028  f9bd1002          LDRSH    r1,[sp,#2]
00002c  1a40              SUBS     r0,r0,r1
00002e  1c40              ADDS     r0,r0,#1
                  |L12.48|
;;;828      }
;;;829      return Height;
;;;830    }
000030  bd1c              POP      {r2-r4,pc}
;;;831    
                          ENDP


                          AREA ||i.HEADER_GetItemWidth||, CODE, READONLY, ALIGN=1

                  HEADER_GetItemWidth PROC
;;;835    */
;;;836    int HEADER_GetItemWidth(HEADER_Handle hObj, unsigned int Index) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
;;;837      int Width = 0;
000004  2400              MOVS     r4,#0
000006  b160              CBZ      r0,|L13.34|
;;;838      if (hObj) {
;;;839        HEADER_Obj * pObj;
;;;840        WM_LOCK();
;;;841        pObj = HEADER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  3030              ADDS     r0,r0,#0x30
;;;842        if (Index <= GUI_ARRAY_GetNumItems(&pObj->Columns)) {
00000e  4606              MOV      r6,r0
000010  f7fffffe          BL       GUI_ARRAY_GetNumItems
000014  42a8              CMP      r0,r5
000016  d304              BCC      |L13.34|
;;;843          HEADER_COLUMN * pColumn;
;;;844          pColumn = (HEADER_COLUMN *)GUI_ARRAY_GetpItem(&pObj->Columns, Index);
000018  4629              MOV      r1,r5
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;845          Width = pColumn->Width;
000020  6804              LDR      r4,[r0,#0]
                  |L13.34|
;;;846        }
;;;847        WM_UNLOCK();
;;;848      }
;;;849      return Width;
000022  4620              MOV      r0,r4
;;;850    }
000024  bd70              POP      {r4-r6,pc}
;;;851    
                          ENDP


                          AREA ||i.HEADER_GetNumItems||, CODE, READONLY, ALIGN=1

                  HEADER_GetNumItems PROC
;;;855    */
;;;856    int  HEADER_GetNumItems(HEADER_Handle hObj) {
000000  b510              PUSH     {r4,lr}
000002  0001              MOVS     r1,r0
;;;857      int NumCols = 0;
000004  f04f0000          MOV      r0,#0
000008  d007              BEQ      |L14.26|
;;;858      if (hObj) {
;;;859        HEADER_Obj * pObj;
;;;860        WM_LOCK();
;;;861        pObj = HEADER_H2P(hObj);
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;862        NumCols = GUI_ARRAY_GetNumItems(&pObj->Columns);
000010  e8bd4010          POP      {r4,lr}
000014  3030              ADDS     r0,r0,#0x30           ;861
000016  f7ffbffe          B.W      GUI_ARRAY_GetNumItems
                  |L14.26|
;;;863        WM_UNLOCK();
;;;864      }
;;;865      return NumCols;
;;;866    }
00001a  bd10              POP      {r4,pc}
;;;867    
                          ENDP


                          AREA ||i.HEADER_SetBkColor||, CODE, READONLY, ALIGN=1

                  HEADER_SetBkColor PROC
;;;670    */
;;;671    void HEADER_SetBkColor(HEADER_Handle hObj, GUI_COLOR Color) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
000006  d007              BEQ      |L15.24|
;;;672      if (hObj) {
;;;673        HEADER_Obj * pObj;
;;;674        WM_LOCK();
;;;675        pObj = HEADER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;676        pObj->BkColor = Color;
;;;677        WM_InvalidateWindow(hObj);
00000c  6285              STR      r5,[r0,#0x28]
00000e  4620              MOV      r0,r4
000010  e8bd4070          POP      {r4-r6,lr}
000014  f7ffbffe          B.W      WM_InvalidateWindow
                  |L15.24|
;;;678        WM_UNLOCK();
;;;679      }
;;;680    }
000018  bd70              POP      {r4-r6,pc}
;;;681    
                          ENDP


                          AREA ||i.HEADER_SetDefaultBkColor||, CODE, READONLY, ALIGN=2

                  HEADER_SetDefaultBkColor PROC
;;;559    */
;;;560    GUI_COLOR HEADER_SetDefaultBkColor(GUI_COLOR Color) {
000000  4902              LDR      r1,|L16.12|
;;;561      GUI_COLOR OldColor = _DefaultBkColor;
;;;562      _DefaultBkColor = Color;
000002  684a              LDR      r2,[r1,#4]  ; _DefaultBkColor
;;;563      return OldColor;
000004  6048              STR      r0,[r1,#4]  ; _DefaultBkColor
000006  4610              MOV      r0,r2
;;;564    }
000008  4770              BX       lr
;;;565    
                          ENDP

00000a  0000              DCW      0x0000
                  |L16.12|
                          DCD      ||.data||

                          AREA ||i.HEADER_SetDefaultBorderH||, CODE, READONLY, ALIGN=2

                  HEADER_SetDefaultBorderH PROC
;;;579    */
;;;580    int HEADER_SetDefaultBorderH(int Spacing) {
000000  4902              LDR      r1,|L17.12|
;;;581      int OldSpacing = _DefaultBorderH;
;;;582      _DefaultBorderH = Spacing;
000002  68ca              LDR      r2,[r1,#0xc]  ; _DefaultBorderH
;;;583      return OldSpacing;
000004  60c8              STR      r0,[r1,#0xc]  ; _DefaultBorderH
000006  4610              MOV      r0,r2
;;;584    }
000008  4770              BX       lr
;;;585    
                          ENDP

00000a  0000              DCW      0x0000
                  |L17.12|
                          DCD      ||.data||

                          AREA ||i.HEADER_SetDefaultBorderV||, CODE, READONLY, ALIGN=2

                  HEADER_SetDefaultBorderV PROC
;;;589    */
;;;590    int HEADER_SetDefaultBorderV(int Spacing) {
000000  4902              LDR      r1,|L18.12|
;;;591      int OldSpacing = _DefaultBorderV;
;;;592      _DefaultBorderV = Spacing;
000002  690a              LDR      r2,[r1,#0x10]  ; _DefaultBorderV
;;;593      return OldSpacing;
000004  6108              STR      r0,[r1,#0x10]  ; _DefaultBorderV
000006  4610              MOV      r0,r2
;;;594    }
000008  4770              BX       lr
;;;595    
                          ENDP

00000a  0000              DCW      0x0000
                  |L18.12|
                          DCD      ||.data||

                          AREA ||i.HEADER_SetDefaultCursor||, CODE, READONLY, ALIGN=2

                  HEADER_SetDefaultCursor PROC
;;;549    */
;;;550    const GUI_CURSOR GUI_UNI_PTR * HEADER_SetDefaultCursor(const GUI_CURSOR * pCursor) {
000000  4902              LDR      r1,|L19.12|
;;;551      const GUI_CURSOR GUI_UNI_PTR * pOldCursor = _pDefaultCursor;
;;;552      _pDefaultCursor = pCursor;
000002  680a              LDR      r2,[r1,#0]  ; _pDefaultCursor
;;;553      return pOldCursor;
000004  6008              STR      r0,[r1,#0]  ; _pDefaultCursor
000006  4610              MOV      r0,r2
;;;554    }
000008  4770              BX       lr
;;;555    
                          ENDP

00000a  0000              DCW      0x0000
                  |L19.12|
                          DCD      ||.data||

                          AREA ||i.HEADER_SetDefaultFont||, CODE, READONLY, ALIGN=2

                  HEADER_SetDefaultFont PROC
;;;599    */
;;;600    const GUI_FONT GUI_UNI_PTR * HEADER_SetDefaultFont(const GUI_FONT GUI_UNI_PTR * pFont) {
000000  4902              LDR      r1,|L20.12|
;;;601      const GUI_FONT GUI_UNI_PTR * pOldFont = _pDefaultFont;
;;;602      _pDefaultFont = pFont;
000002  694a              LDR      r2,[r1,#0x14]  ; _pDefaultFont
;;;603      return pOldFont;
000004  6148              STR      r0,[r1,#0x14]  ; _pDefaultFont
000006  4610              MOV      r0,r2
;;;604    }
000008  4770              BX       lr
;;;605    
                          ENDP

00000a  0000              DCW      0x0000
                  |L20.12|
                          DCD      ||.data||

                          AREA ||i.HEADER_SetDefaultTextColor||, CODE, READONLY, ALIGN=2

                  HEADER_SetDefaultTextColor PROC
;;;569    */
;;;570    GUI_COLOR HEADER_SetDefaultTextColor(GUI_COLOR Color) {
000000  4902              LDR      r1,|L21.12|
;;;571      GUI_COLOR OldColor = _DefaultTextColor;
;;;572      _DefaultTextColor = Color;
000002  688a              LDR      r2,[r1,#8]  ; _DefaultTextColor
;;;573      return OldColor;
000004  6088              STR      r0,[r1,#8]  ; _DefaultTextColor
000006  4610              MOV      r0,r2
;;;574    }
000008  4770              BX       lr
;;;575    
                          ENDP

00000a  0000              DCW      0x0000
                  |L21.12|
                          DCD      ||.data||

                          AREA ||i.HEADER_SetDirIndicator||, CODE, READONLY, ALIGN=1

                  HEADER_SetDirIndicator PROC
;;;871    */
;;;872    void HEADER_SetDirIndicator(HEADER_Handle hObj, int Column, int Reverse) {
000000  b570              PUSH     {r4-r6,lr}
000002  4614              MOV      r4,r2
000004  460d              MOV      r5,r1
000006  0006              MOVS     r6,r0
000008  d00e              BEQ      |L22.40|
;;;873      if (hObj) {
;;;874        HEADER_Obj * pObj;
;;;875        WM_LOCK();
;;;876        pObj = HEADER_H2P(hObj);
00000a  f7fffffe          BL       GUI_ALLOC_h2p
;;;877        if ((pObj->DirIndicatorColumn != Column) || (pObj->DirIndicatorReverse != Reverse)) {
00000e  6c41              LDR      r1,[r0,#0x44]
000010  42a9              CMP      r1,r5
000012  d102              BNE      |L22.26|
000014  6c81              LDR      r1,[r0,#0x48]
000016  42a1              CMP      r1,r4
000018  d006              BEQ      |L22.40|
                  |L22.26|
00001a  e9c05411          STRD     r5,r4,[r0,#0x44]
;;;878          pObj->DirIndicatorColumn = Column;
;;;879          pObj->DirIndicatorReverse = Reverse;
;;;880          WM_InvalidateWindow(hObj);
00001e  4630              MOV      r0,r6
000020  e8bd4070          POP      {r4-r6,lr}
000024  f7ffbffe          B.W      WM_InvalidateWindow
                  |L22.40|
;;;881        }
;;;882        WM_UNLOCK();
;;;883      }
;;;884    }
000028  bd70              POP      {r4-r6,pc}
;;;885    
                          ENDP


                          AREA ||i.HEADER_SetFont||, CODE, READONLY, ALIGN=1

                  HEADER_SetFont PROC
;;;626    */
;;;627    void HEADER_SetFont(HEADER_Handle hObj, const GUI_FONT GUI_UNI_PTR * pFont) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0006              MOVS     r6,r0
000006  d012              BEQ      |L23.46|
;;;628      if (hObj) {
;;;629        HEADER_Obj * pObj;
;;;630        WM_LOCK();
;;;631        pObj = HEADER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
00000c  4605              MOV      r5,r0
;;;632        pObj->pFont = pFont;
;;;633        HEADER_SetHeight(hObj, GUI_GetYDistOfFont(pFont) + 2 * HEADER_BORDER_V_DEFAULT + 2 * pObj->Widget.pEffect->EffectSize);
00000e  64c4              STR      r4,[r0,#0x4c]
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       GUI_GetYDistOfFont
000016  6a29              LDR      r1,[r5,#0x20]
000018  6949              LDR      r1,[r1,#0x14]
00001a  eb000141          ADD      r1,r0,r1,LSL #1
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       HEADER_SetHeight
;;;634        WM_InvalidateWindow(hObj);
000024  4630              MOV      r0,r6
000026  e8bd4070          POP      {r4-r6,lr}
00002a  f7ffbffe          B.W      WM_InvalidateWindow
                  |L23.46|
;;;635        WM_UNLOCK();
;;;636      }
;;;637    }
00002e  bd70              POP      {r4-r6,pc}
;;;638    
                          ENDP


                          AREA ||i.HEADER_SetHeight||, CODE, READONLY, ALIGN=1

                  HEADER_SetHeight PROC
;;;642    */
;;;643    void HEADER_SetHeight(HEADER_Handle hObj, int Height) {
000000  b57c              PUSH     {r2-r6,lr}
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
000006  d011              BEQ      |L24.44|
;;;644      if (hObj) {
;;;645        GUI_RECT Rect;
;;;646        WM_GetClientRectEx(hObj, &Rect);
000008  4669              MOV      r1,sp
00000a  f7fffffe          BL       WM_GetClientRectEx
;;;647        WM_SetSize(hObj, Rect.x1 - Rect.x0 + 1, Height);
00000e  f9bd0004          LDRSH    r0,[sp,#4]
000012  f9bd1000          LDRSH    r1,[sp,#0]
000016  462a              MOV      r2,r5
000018  1a41              SUBS     r1,r0,r1
00001a  4620              MOV      r0,r4
00001c  1c49              ADDS     r1,r1,#1
00001e  f7fffffe          BL       WM_SetSize
;;;648        WM_InvalidateWindow(WM_GetParent(hObj));
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       WM_GetParent
000028  f7fffffe          BL       WM_InvalidateWindow
                  |L24.44|
;;;649      }
;;;650    }
00002c  bd7c              POP      {r2-r6,pc}
;;;651    
                          ENDP


                          AREA ||i.HEADER_SetItemText||, CODE, READONLY, ALIGN=1

                  HEADER_SetItemText PROC
;;;772    */
;;;773    void HEADER_SetItemText(HEADER_Handle hObj, unsigned int Index, const char* s) {
000000  b570              PUSH     {r4-r6,lr}
000002  4614              MOV      r4,r2
000004  460d              MOV      r5,r1
000006  2800              CMP      r0,#0
000008  d018              BEQ      |L25.60|
;;;774      if (hObj) {
;;;775        HEADER_Obj* pObj;
;;;776        WM_LOCK();
;;;777        pObj = HEADER_H2P(hObj);
00000a  f7fffffe          BL       GUI_ALLOC_h2p
00000e  3030              ADDS     r0,r0,#0x30
;;;778        if (Index < GUI_ARRAY_GetNumItems(&pObj->Columns)) {
000010  4606              MOV      r6,r0
000012  f7fffffe          BL       GUI_ARRAY_GetNumItems
000016  42a8              CMP      r0,r5
000018  d910              BLS      |L25.60|
;;;779          HEADER_COLUMN* pColumn;
;;;780          pColumn = (HEADER_COLUMN*)GUI_ARRAY_ResizeItem(&pObj->Columns, Index, sizeof(HEADER_COLUMN) + strlen(s));
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       strlen
000020  f100020c          ADD      r2,r0,#0xc
000024  4629              MOV      r1,r5
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       GUI_ARRAY_ResizeItem
;;;781          if (pColumn) {
00002c  2800              CMP      r0,#0
00002e  d005              BEQ      |L25.60|
;;;782            strcpy(pColumn->acText, s);
000030  4621              MOV      r1,r4
000032  e8bd4070          POP      {r4-r6,lr}
000036  3008              ADDS     r0,r0,#8
000038  f7ffbffe          B.W      strcpy
                  |L25.60|
;;;783          }
;;;784        }
;;;785        WM_UNLOCK();
;;;786      }
;;;787    }
00003c  bd70              POP      {r4-r6,pc}
;;;788    
                          ENDP


                          AREA ||i.HEADER_SetItemWidth||, CODE, READONLY, ALIGN=1

                  HEADER_SetItemWidth PROC
;;;792    */
;;;793    void HEADER_SetItemWidth(HEADER_Handle hObj, unsigned int Index, int Width) {
000000  b5fe              PUSH     {r1-r7,lr}
000002  4614              MOV      r4,r2
000004  460e              MOV      r6,r1
000006  0005              MOVS     r5,r0
000008  d026              BEQ      |L26.88|
;;;794      if (hObj && (Width >= 0)) {
00000a  2c00              CMP      r4,#0
00000c  db24              BLT      |L26.88|
;;;795        HEADER_Obj * pObj;
;;;796        WM_LOCK();
;;;797        pObj = HEADER_H2P(hObj);
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  3030              ADDS     r0,r0,#0x30
;;;798        if (Index <= GUI_ARRAY_GetNumItems(&pObj->Columns)) {
000014  4607              MOV      r7,r0
000016  f7fffffe          BL       GUI_ARRAY_GetNumItems
00001a  42b0              CMP      r0,r6
00001c  d31c              BCC      |L26.88|
;;;799          HEADER_COLUMN * pColumn;
;;;800          pColumn = (HEADER_COLUMN *)GUI_ARRAY_GetpItem(&pObj->Columns, Index);
00001e  4631              MOV      r1,r6
000020  4638              MOV      r0,r7
000022  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;801          if (pColumn) {
000026  2800              CMP      r0,#0
000028  d016              BEQ      |L26.88|
;;;802            WM_MESSAGE Msg;
;;;803            pColumn->Width = Width;
;;;804            Msg.hWin  = WM_GetParent(hObj);
00002a  6004              STR      r4,[r0,#0]
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       WM_GetParent
000032  f8ad0004          STRH     r0,[sp,#4]
;;;805            Msg.MsgId = WM_NOTIFY_CLIENTCHANGE;
000036  2025              MOVS     r0,#0x25
;;;806            Msg.hWinSrc = hObj;
000038  9000              STR      r0,[sp,#0]
00003a  f8ad5006          STRH     r5,[sp,#6]
;;;807            WM_InvalidateWindow(hObj);
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       WM_InvalidateWindow
;;;808            WM__SendMessage(Msg.hWin, &Msg);
000044  f9bd0004          LDRSH    r0,[sp,#4]
000048  4669              MOV      r1,sp
00004a  f7fffffe          BL       WM__SendMessage
;;;809            //WM__SendMsgNoData(WM_GetParent(hObj), WM_NOTIFY_CLIENTCHANGE);
;;;810            WM_InvalidateWindow(WM_GetParent(hObj));
00004e  4628              MOV      r0,r5
000050  f7fffffe          BL       WM_GetParent
000054  f7fffffe          BL       WM_InvalidateWindow
                  |L26.88|
;;;811          }
;;;812        }
;;;813        WM_UNLOCK();
;;;814      }
;;;815    }
000058  bdfe              POP      {r1-r7,pc}
;;;816    
                          ENDP


                          AREA ||i.HEADER_SetScrollPos||, CODE, READONLY, ALIGN=1

                  HEADER_SetScrollPos PROC
;;;704    */
;;;705    void HEADER_SetScrollPos(HEADER_Handle hObj, int ScrollPos) {
000000  b570              PUSH     {r4-r6,lr}
000002  460c              MOV      r4,r1
000004  0005              MOVS     r5,r0
000006  d011              BEQ      |L27.44|
;;;706      if (hObj && (ScrollPos >= 0)) {
000008  2c00              CMP      r4,#0
00000a  db0f              BLT      |L27.44|
;;;707        HEADER_Obj* pObj;
;;;708        WM_LOCK();
;;;709        pObj = HEADER_H2P(hObj);
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;710        if (ScrollPos != pObj->ScrollPos) {
000010  6bc1              LDR      r1,[r0,#0x3c]
000012  42a1              CMP      r1,r4
000014  d00a              BEQ      |L27.44|
;;;711          pObj->ScrollPos = ScrollPos;
;;;712          WM_Invalidate(hObj);
000016  63c4              STR      r4,[r0,#0x3c]
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       WM_InvalidateWindow
;;;713          WM_InvalidateWindow(WM_GetParent(hObj));
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       WM_GetParent
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      WM_InvalidateWindow
                  |L27.44|
;;;714        }
;;;715        WM_UNLOCK();
;;;716      }
;;;717    }
00002c  bd70              POP      {r4-r6,pc}
;;;718    
                          ENDP


                          AREA ||i.HEADER_SetTextAlign||, CODE, READONLY, ALIGN=1

                  HEADER_SetTextAlign PROC
;;;685    */
;;;686    void HEADER_SetTextAlign(HEADER_Handle hObj, unsigned int Index, int Align) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4614              MOV      r4,r2
000006  460d              MOV      r5,r1
000008  0006              MOVS     r6,r0
00000a  d011              BEQ      |L28.48|
;;;687      if (hObj) {
;;;688        HEADER_Obj * pObj;
;;;689        WM_LOCK();
;;;690        pObj = HEADER_H2P(hObj);
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  3030              ADDS     r0,r0,#0x30
;;;691        if (Index <= GUI_ARRAY_GetNumItems(&pObj->Columns)) {
000012  4607              MOV      r7,r0
000014  f7fffffe          BL       GUI_ARRAY_GetNumItems
000018  42a8              CMP      r0,r5
00001a  d309              BCC      |L28.48|
;;;692          HEADER_COLUMN * pColumn;
;;;693          pColumn = (HEADER_COLUMN *)GUI_ARRAY_GetpItem(&pObj->Columns, Index);
00001c  4629              MOV      r1,r5
00001e  4638              MOV      r0,r7
000020  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;694          pColumn->Align = Align;
000024  8084              STRH     r4,[r0,#4]
;;;695          WM_InvalidateWindow(hObj);
000026  4630              MOV      r0,r6
000028  e8bd41f0          POP      {r4-r8,lr}
00002c  f7ffbffe          B.W      WM_InvalidateWindow
                  |L28.48|
;;;696        }
;;;697        WM_UNLOCK();
;;;698      }
;;;699    }
000030  e8bd81f0          POP      {r4-r8,pc}
;;;700    
                          ENDP


                          AREA ||i.HEADER_SetTextColor||, CODE, READONLY, ALIGN=1

                  HEADER_SetTextColor PROC
;;;655    */
;;;656    void HEADER_SetTextColor(HEADER_Handle hObj, GUI_COLOR Color) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
000004  0004              MOVS     r4,r0
000006  d007              BEQ      |L29.24|
;;;657      if (hObj) {
;;;658        HEADER_Obj * pObj;
;;;659        WM_LOCK();
;;;660        pObj = HEADER_H2P(hObj);
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;661        pObj->TextColor = Color;
;;;662        WM_InvalidateWindow(hObj);
00000c  62c5              STR      r5,[r0,#0x2c]
00000e  4620              MOV      r0,r4
000010  e8bd4070          POP      {r4-r6,lr}
000014  f7ffbffe          B.W      WM_InvalidateWindow
                  |L29.24|
;;;663        WM_UNLOCK();
;;;664      }
;;;665    }
000018  bd70              POP      {r4-r6,pc}
;;;666    
                          ENDP


                          AREA ||i._DrawTriangle||, CODE, READONLY, ALIGN=1

                  _DrawTriangle PROC
;;;100    */
;;;101    static void _DrawTriangle(int x, int y, int Size, int Inc) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  461f              MOV      r7,r3
000006  4614              MOV      r4,r2
000008  460d              MOV      r5,r1
00000a  4606              MOV      r6,r0
;;;102      for (; Size >= 0; Size--, y += Inc) {
00000c  e006              B        |L30.28|
                  |L30.14|
;;;103        GUI_DrawHLine(y, x - Size, x + Size);
00000e  1932              ADDS     r2,r6,r4
000010  1b31              SUBS     r1,r6,r4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       GUI_DrawHLine
000018  443d              ADD      r5,r5,r7              ;102
00001a  1e64              SUBS     r4,r4,#1              ;102
                  |L30.28|
00001c  2c00              CMP      r4,#0                 ;102
00001e  daf6              BGE      |L30.14|
;;;104      }
;;;105    }
000020  e8bd81f0          POP      {r4-r8,pc}
;;;106    
                          ENDP


                          AREA ||i._HandlePID||, CODE, READONLY, ALIGN=2

                  _HandlePID PROC
;;;292    #if (HEADER_SUPPORT_DRAG)
;;;293    static void _HandlePID(HEADER_Handle hObj, HEADER_Obj * pObj, int x, int y, int Pressed) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b085              SUB      sp,sp,#0x14
000006  f04f3bff          MOV      r11,#0xffffffff
;;;294      int Hit = _GetDividerIndex(hObj, pObj, x, y);
00000a  f8dd9048          LDR      r9,[sp,#0x48]
00000e  9f05              LDR      r7,[sp,#0x14]
000010  4615              MOV      r5,r2                 ;293
000012  460c              MOV      r4,r1                 ;293
000014  001e              MOVS     r6,r3
000016  46da              MOV      r10,r11
000018  d430              BMI      |L31.124|
00001a  4638              MOV      r0,r7                 ;293
00001c  f7fffffe          BL       WM_GetWindowSizeY
000020  42b0              CMP      r0,r6                 ;293
000022  dd2b              BLE      |L31.124|
000024  b357              CBZ      r7,|L31.124|
000026  f1040030          ADD      r0,r4,#0x30           ;293
00002a  2700              MOVS     r7,#0                 ;293
00002c  9000              STR      r0,[sp,#0]            ;293
00002e  f7fffffe          BL       GUI_ARRAY_GetNumItems
000032  4680              MOV      r8,r0                 ;293
000034  1f28              SUBS     r0,r5,#4              ;293
000036  2600              MOVS     r6,#0                 ;293
000038  9003              STR      r0,[sp,#0xc]          ;293
00003a  1d28              ADDS     r0,r5,#4              ;293
00003c  9002              STR      r0,[sp,#8]            ;293
00003e  f1a80001          SUB      r0,r8,#1              ;293
000042  9001              STR      r0,[sp,#4]            ;293
000044  e018              B        |L31.120|
                  |L31.70|
000046  4631              MOV      r1,r6                 ;293
000048  9800              LDR      r0,[sp,#0]            ;293
00004a  f7fffffe          BL       GUI_ARRAY_GetpItem
00004e  6800              LDR      r0,[r0,#0]            ;293
000050  4407              ADD      r7,r7,r0              ;293
000052  9803              LDR      r0,[sp,#0xc]          ;293
000054  4287              CMP      r7,r0                 ;293
000056  db0e              BLT      |L31.118|
000058  9802              LDR      r0,[sp,#8]            ;293
00005a  4287              CMP      r7,r0                 ;293
00005c  dc0b              BGT      |L31.118|
00005e  9801              LDR      r0,[sp,#4]            ;293
000060  46b2              MOV      r10,r6                ;293
000062  4286              CMP      r6,r0                 ;293
000064  da07              BGE      |L31.118|
000066  42bd              CMP      r5,r7                 ;293
000068  da05              BGE      |L31.118|
00006a  1c71              ADDS     r1,r6,#1              ;293
00006c  9800              LDR      r0,[sp,#0]            ;293
00006e  f7fffffe          BL       GUI_ARRAY_GetpItem
000072  6800              LDR      r0,[r0,#0]            ;293
000074  b110              CBZ      r0,|L31.124|
                  |L31.118|
000076  1c76              ADDS     r6,r6,#1              ;293
                  |L31.120|
000078  4546              CMP      r6,r8                 ;293
00007a  dbe4              BLT      |L31.70|
                  |L31.124|
00007c  4650              MOV      r0,r10                ;293
;;;295      /* set capture position */
;;;296      if ((Pressed == 1) && (Hit >= 0) && (pObj->CapturePosX == -1)) {
00007e  f1b90f01          CMP      r9,#1
000082  d00f              BEQ      |L31.164|
;;;297        pObj->CapturePosX = x;
;;;298        pObj->CaptureItem = Hit;
;;;299      }
;;;300      if (Pressed <= 0) {
000084  f1b90f00          CMP      r9,#0
000088  dc01              BGT      |L31.142|
;;;301        pObj->CapturePosX = -1;
00008a  f8c4b034          STR      r11,[r4,#0x34]
                  |L31.142|
;;;302      }
;;;303      /* set mouse cursor and capture */
;;;304      if (Hit >= 0) {
00008e  f1ba0f00          CMP      r10,#0
000092  db13              BLT      |L31.188|
                  |L31.148|
;;;305        WM_SetCapture(hObj, 1);
000094  2101              MOVS     r1,#1
000096  9805              LDR      r0,[sp,#0x14]
000098  f7fffffe          BL       WM_SetCapture
;;;306        #if GUI_SUPPORT_CURSOR
;;;307          if (!_pOldCursor) {
00009c  4e1c              LDR      r6,|L31.272|
00009e  69b0              LDR      r0,[r6,#0x18]  ; _pOldCursor
0000a0  b140              CBZ      r0,|L31.180|
0000a2  e00b              B        |L31.188|
                  |L31.164|
0000a4  2800              CMP      r0,#0                 ;296
0000a6  db09              BLT      |L31.188|
0000a8  6b61              LDR      r1,[r4,#0x34]         ;296
0000aa  1c49              ADDS     r1,r1,#1              ;296
0000ac  d1f2              BNE      |L31.148|
0000ae  e9c45a0d          STRD     r5,r10,[r4,#0x34]     ;296
0000b2  e7ef              B        |L31.148|
                  |L31.180|
;;;308            _pOldCursor = GUI_CURSOR_Select(_pDefaultCursor);
0000b4  6830              LDR      r0,[r6,#0]  ; _pDefaultCursor
0000b6  f7fffffe          BL       GUI_CURSOR_Select
0000ba  61b0              STR      r0,[r6,#0x18]  ; _pOldCursor
                  |L31.188|
;;;309          }
;;;310        #endif
;;;311      }
;;;312      /* modify header */
;;;313      if ((pObj->CapturePosX >= 0) && (x != pObj->CapturePosX) && (Pressed == 1)) {
0000bc  6b60              LDR      r0,[r4,#0x34]
0000be  2800              CMP      r0,#0
0000c0  db04              BLT      |L31.204|
0000c2  42a8              CMP      r0,r5
0000c4  d002              BEQ      |L31.204|
0000c6  f1b90f01          CMP      r9,#1
0000ca  d00b              BEQ      |L31.228|
                  |L31.204|
;;;314        int NewSize = HEADER_GetItemWidth(hObj, pObj->CaptureItem) + x - pObj->CapturePosX;
;;;315        if (NewSize >= 0) {
;;;316          HEADER_SetItemWidth(hObj, pObj->CaptureItem, NewSize);
;;;317          if (!_LimitDragWitdh(hObj, pObj)) {
;;;318            pObj->CapturePosX = x;
;;;319          }
;;;320        }
;;;321      }
;;;322      /* release capture & restore cursor */
;;;323      if (Pressed <= 0) {
0000cc  f1b90f00          CMP      r9,#0
0000d0  dc1b              BGT      |L31.266|
;;;324        #if (GUI_SUPPORT_MOUSE)
;;;325        if (Hit == -1)
;;;326        #endif
;;;327        {
;;;328          _RestoreOldCursor();
0000d2  f7fffffe          BL       _RestoreOldCursor
;;;329          pObj->CapturePosX = -1;
;;;330          WM_ReleaseCapture();
0000d6  f8c4b034          STR      r11,[r4,#0x34]
0000da  b009              ADD      sp,sp,#0x24
0000dc  e8bd4ff0          POP      {r4-r11,lr}
0000e0  f7ffbffe          B.W      WM_ReleaseCapture
                  |L31.228|
0000e4  6ba1              LDR      r1,[r4,#0x38]         ;314
0000e6  9805              LDR      r0,[sp,#0x14]         ;314
0000e8  f7fffffe          BL       HEADER_GetItemWidth
0000ec  6b61              LDR      r1,[r4,#0x34]         ;314
0000ee  4428              ADD      r0,r0,r5              ;314
0000f0  1a42              SUBS     r2,r0,r1              ;314
0000f2  d40a              BMI      |L31.266|
0000f4  6ba1              LDR      r1,[r4,#0x38]         ;316
0000f6  9805              LDR      r0,[sp,#0x14]         ;316
0000f8  f7fffffe          BL       HEADER_SetItemWidth
0000fc  4621              MOV      r1,r4                 ;317
0000fe  9805              LDR      r0,[sp,#0x14]         ;317
000100  f7fffffe          BL       _LimitDragWitdh
000104  2800              CMP      r0,#0                 ;317
000106  d100              BNE      |L31.266|
000108  6365              STR      r5,[r4,#0x34]         ;318
                  |L31.266|
;;;331        }
;;;332      }
;;;333    }
00010a  b009              ADD      sp,sp,#0x24
00010c  e8bd8ff0          POP      {r4-r11,pc}
;;;334    #endif
                          ENDP

                  |L31.272|
                          DCD      ||.data||

                          AREA ||i._LimitDragWitdh||, CODE, READONLY, ALIGN=1

                  _LimitDragWitdh PROC
;;;255    */
;;;256    static int _LimitDragWitdh(HEADER_Handle hObj, HEADER_Obj * pObj) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4680              MOV      r8,r0
;;;257      if (pObj->DragLimit) {
000006  f8910050          LDRB     r0,[r1,#0x50]
00000a  460d              MOV      r5,r1                 ;256
00000c  b3a0              CBZ      r0,|L32.120|
;;;258        int DragLimit, i, SumX;
;;;259        GUI_RECT Rect;
;;;260        WM_HWIN hVScroll, hParent;
;;;261        /* Take the x-size of the widgets client rectangle as limit */
;;;262        WM_GetClientRectEx(hObj, &Rect);
00000e  4669              MOV      r1,sp
000010  4640              MOV      r0,r8
000012  f7fffffe          BL       WM_GetClientRectEx
;;;263        DragLimit = Rect.x1;
000016  f9bd6004          LDRSH    r6,[sp,#4]
;;;264        /* If the parent window has a vertical scrollbar, reduce the drag limit by the xsize of the scrollbar */
;;;265        hParent = WM_GetParent(hObj);
00001a  4640              MOV      r0,r8
00001c  f7fffffe          BL       WM_GetParent
;;;266        if (hParent) {
000020  b140              CBZ      r0,|L32.52|
;;;267          hVScroll = WM_GetScrollbarV(WM_GetParent(hObj));
000022  4640              MOV      r0,r8
000024  f7fffffe          BL       WM_GetParent
000028  f7fffffe          BL       WM_GetScrollbarV
;;;268          if (hVScroll) {
00002c  b110              CBZ      r0,|L32.52|
;;;269            DragLimit -= WM_GetWindowSizeX(hVScroll);
00002e  f7fffffe          BL       WM_GetWindowSizeX
000032  1a36              SUBS     r6,r6,r0
                  |L32.52|
;;;270          }
;;;271        }
;;;272        /* Calculate the sum of the width of all header items */
;;;273        for (SumX = i = 0; i <= pObj->CaptureItem; i++) {
000034  2400              MOVS     r4,#0
000036  4627              MOV      r7,r4
000038  e005              B        |L32.70|
                  |L32.58|
;;;274          SumX += HEADER_GetItemWidth(hObj, i);
00003a  4621              MOV      r1,r4
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       HEADER_GetItemWidth
000042  4407              ADD      r7,r7,r0
000044  1c64              ADDS     r4,r4,#1
                  |L32.70|
000046  6ba8              LDR      r0,[r5,#0x38]         ;273
000048  42a0              CMP      r0,r4                 ;273
00004a  daf6              BGE      |L32.58|
;;;275        }
;;;276        /* If the sum of the width of all header items exeeds the limit, limit the captured item */
;;;277        if (SumX > DragLimit) {
00004c  42b7              CMP      r7,r6
00004e  dd14              BLE      |L32.122|
;;;278          for (SumX = i = 0; i < pObj->CaptureItem; i++) {
000050  2400              MOVS     r4,#0
000052  4627              MOV      r7,r4
000054  e005              B        |L32.98|
                  |L32.86|
;;;279            SumX += HEADER_GetItemWidth(hObj, i);
000056  4621              MOV      r1,r4
000058  4640              MOV      r0,r8
00005a  f7fffffe          BL       HEADER_GetItemWidth
00005e  4407              ADD      r7,r7,r0
000060  1c64              ADDS     r4,r4,#1
                  |L32.98|
000062  6ba8              LDR      r0,[r5,#0x38]         ;278
000064  42a0              CMP      r0,r4                 ;278
000066  dcf6              BGT      |L32.86|
;;;280          }
;;;281          HEADER_SetItemWidth(hObj, pObj->CaptureItem, DragLimit - SumX);
000068  4601              MOV      r1,r0
00006a  1bf2              SUBS     r2,r6,r7
00006c  4640              MOV      r0,r8
00006e  f7fffffe          BL       HEADER_SetItemWidth
;;;282          return 1;
000072  2001              MOVS     r0,#1
                  |L32.116|
;;;283        }
;;;284      }
;;;285      return 0;
;;;286    }
000074  e8bd81fc          POP      {r2-r8,pc}
                  |L32.120|
000078  e7ff              B        |L32.122|
                  |L32.122|
00007a  2000              MOVS     r0,#0                 ;285
00007c  e7fa              B        |L32.116|
;;;287    
                          ENDP


                          AREA ||i._Paint||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;110    */
;;;111    static void _Paint(HEADER_Obj* pObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  4605              MOV      r5,r0
;;;112      GUI_RECT Rect, RectItem;
;;;113      int i, xPos = -pObj->ScrollPos;
000006  6bc0              LDR      r0,[r0,#0x3c]
000008  b089              SUB      sp,sp,#0x24           ;111
00000a  4246              RSBS     r6,r0,#0
;;;114      int NumItems = GUI_ARRAY_GetNumItems(&pObj->Columns);
00000c  f1050030          ADD      r0,r5,#0x30
000010  9002              STR      r0,[sp,#8]
000012  f7fffffe          BL       GUI_ARRAY_GetNumItems
000016  4683              MOV      r11,r0
;;;115      int EffectSize = pObj->Widget.pEffect->EffectSize;
000018  6a28              LDR      r0,[r5,#0x20]
;;;116      int ArrowSize, ArrowPos;
;;;117      LCD_SetBkColor(pObj->BkColor);
00001a  f8d08014          LDR      r8,[r0,#0x14]
00001e  6aa8              LDR      r0,[r5,#0x28]
000020  f7fffffe          BL       LCD_SetBkColor
;;;118      GUI_SetFont(pObj->pFont);
000024  6ce8              LDR      r0,[r5,#0x4c]
000026  f7fffffe          BL       GUI_SetFont
;;;119      GUI_Clear();
00002a  f7fffffe          BL       GUI_Clear
;;;120      for (i = 0; i < NumItems; i++) {
00002e  2700              MOVS     r7,#0
000030  e0d5              B        |L33.478|
;;;121        int Subtract = 0;
000032  bf00              NOP      
                  |L33.52|
000034  f04f0900          MOV      r9,#0
;;;122        HEADER_COLUMN * pColumn = (HEADER_COLUMN*)GUI_ARRAY_GetpItem(&pObj->Columns, i);
000038  4639              MOV      r1,r7
00003a  9802              LDR      r0,[sp,#8]
00003c  f7fffffe          BL       GUI_ARRAY_GetpItem
000040  4604              MOV      r4,r0
;;;123        GUI_GetClientRect(&Rect);
000042  4668              MOV      r0,sp
000044  f7fffffe          BL       GUI_GetClientRect
;;;124        Rect.x0 = xPos;
000048  f8ad6000          STRH     r6,[sp,#0]
;;;125        Rect.x1 = Rect.x0 + pColumn->Width;
00004c  8820              LDRH     r0,[r4,#0]
00004e  4430              ADD      r0,r0,r6
000050  f8ad0004          STRH     r0,[sp,#4]
000054  e9dd0100          LDRD     r0,r1,[sp,#0]
000058  e9cd0103          STRD     r0,r1,[sp,#0xc]
;;;126        RectItem = Rect;
;;;127        ArrowSize = ((RectItem.y1 - RectItem.y0 - EffectSize * 2) / 3) - 1;
00005c  f9bd0012          LDRSH    r0,[sp,#0x12]
000060  f9bd100e          LDRSH    r1,[sp,#0xe]
000064  1a41              SUBS     r1,r0,r1
000066  f1c80000          RSB      r0,r8,#0
00006a  eb010040          ADD      r0,r1,r0,LSL #1
00006e  2103              MOVS     r1,#3
000070  fb90f0f1          SDIV     r0,r0,r1
;;;128        ArrowPos = RectItem.x1 - 4 - ArrowSize;
000074  f9bd1010          LDRSH    r1,[sp,#0x10]
000078  f1a00a01          SUB      r10,r0,#1             ;127
00007c  eba1000a          SUB      r0,r1,r10
000080  1f00              SUBS     r0,r0,#4
;;;129        if (pColumn->hDrawObj) {
000082  9007              STR      r0,[sp,#0x1c]
000084  f9b40006          LDRSH    r0,[r4,#6]
000088  b3f0              CBZ      r0,|L33.264|
;;;130          int xOff = 0, yOff = 0;
00008a  2100              MOVS     r1,#0
00008c  9106              STR      r1,[sp,#0x18]
;;;131          switch (pColumn->Align & GUI_TA_HORIZONTAL) {
00008e  9105              STR      r1,[sp,#0x14]
000090  7921              LDRB     r1,[r4,#4]
000092  f0010103          AND      r1,r1,#3
000096  2901              CMP      r1,#1
000098  d002              BEQ      |L33.160|
00009a  2902              CMP      r1,#2
00009c  d10d              BNE      |L33.186|
00009e  e004              B        |L33.170|
                  |L33.160|
;;;132            case GUI_TA_RIGHT:
;;;133              xOff = (pColumn->Width - GUI_DRAW__GetXSize(pColumn->hDrawObj));
0000a0  f7fffffe          BL       GUI_DRAW__GetXSize
0000a4  6821              LDR      r1,[r4,#0]
0000a6  1a08              SUBS     r0,r1,r0
;;;134              break;
0000a8  e006              B        |L33.184|
                  |L33.170|
;;;135            case GUI_TA_HCENTER:
;;;136              xOff = (pColumn->Width - GUI_DRAW__GetXSize(pColumn->hDrawObj)) / 2;
0000aa  f7fffffe          BL       GUI_DRAW__GetXSize
0000ae  6821              LDR      r1,[r4,#0]
0000b0  1a08              SUBS     r0,r1,r0
0000b2  eb0070d0          ADD      r0,r0,r0,LSR #31
0000b6  1040              ASRS     r0,r0,#1
                  |L33.184|
0000b8  9006              STR      r0,[sp,#0x18]         ;133
                  |L33.186|
;;;137              break;
;;;138          }
;;;139          switch (pColumn->Align & GUI_TA_VERTICAL) {
0000ba  7920              LDRB     r0,[r4,#4]
0000bc  f000000c          AND      r0,r0,#0xc
0000c0  2804              CMP      r0,#4
0000c2  d002              BEQ      |L33.202|
0000c4  280c              CMP      r0,#0xc
0000c6  d11b              BNE      |L33.256|
0000c8  e00b              B        |L33.226|
                  |L33.202|
;;;140    	      case GUI_TA_BOTTOM:
;;;141              yOff = ((Rect.y1 - Rect.y0 + 1) - GUI_DRAW__GetYSize(pColumn->hDrawObj));
0000ca  f9b40006          LDRSH    r0,[r4,#6]
0000ce  f7fffffe          BL       GUI_DRAW__GetYSize
0000d2  f9bd1006          LDRSH    r1,[sp,#6]
0000d6  f9bd2002          LDRSH    r2,[sp,#2]
0000da  1a89              SUBS     r1,r1,r2
0000dc  1a08              SUBS     r0,r1,r0
0000de  1c40              ADDS     r0,r0,#1
;;;142              break;
0000e0  e00d              B        |L33.254|
                  |L33.226|
;;;143    	      case GUI_TA_VCENTER:
;;;144              yOff = ((Rect.y1 - Rect.y0 + 1) - GUI_DRAW__GetYSize(pColumn->hDrawObj)) / 2;
0000e2  f9b40006          LDRSH    r0,[r4,#6]
0000e6  f7fffffe          BL       GUI_DRAW__GetYSize
0000ea  f9bd1006          LDRSH    r1,[sp,#6]
0000ee  f9bd2002          LDRSH    r2,[sp,#2]
0000f2  1a89              SUBS     r1,r1,r2
0000f4  1a08              SUBS     r0,r1,r0
0000f6  1c40              ADDS     r0,r0,#1
0000f8  eb0070d0          ADD      r0,r0,r0,LSR #31
0000fc  1040              ASRS     r0,r0,#1
                  |L33.254|
0000fe  9005              STR      r0,[sp,#0x14]         ;141
                  |L33.256|
;;;145              break;
;;;146          }
;;;147          WM_SetUserClipRect(&Rect);
000100  4668              MOV      r0,sp
000102  f7fffffe          BL       WM_SetUserClipRect
;;;148          GUI_DRAW__Draw(pColumn->hDrawObj, xPos + xOff, yOff);
000106  e000              B        |L33.266|
                  |L33.264|
000108  e009              B        |L33.286|
                  |L33.266|
00010a  9806              LDR      r0,[sp,#0x18]
00010c  9a05              LDR      r2,[sp,#0x14]
00010e  1831              ADDS     r1,r6,r0
000110  f9b40006          LDRSH    r0,[r4,#6]
000114  f7fffffe          BL       GUI_DRAW__Draw
;;;149          WM_SetUserClipRect(NULL);
000118  2000              MOVS     r0,#0
00011a  f7fffffe          BL       WM_SetUserClipRect
                  |L33.286|
;;;150        }
;;;151        WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &Rect);
00011e  4669              MOV      r1,sp
000120  4628              MOV      r0,r5
000122  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;152        xPos += Rect.x1 - Rect.x0;
000126  f9bd0004          LDRSH    r0,[sp,#4]
00012a  f9bd2000          LDRSH    r2,[sp,#0]
00012e  1a81              SUBS     r1,r0,r2
000130  440e              ADD      r6,r6,r1
;;;153        Rect.x0 += EffectSize + _DefaultBorderH;
000132  4937              LDR      r1,|L33.528|
000134  f8b1c00c          LDRH     r12,[r1,#0xc]  ; _DefaultBorderH
000138  eb08030c          ADD      r3,r8,r12
00013c  441a              ADD      r2,r2,r3
;;;154        Rect.x1 -= EffectSize + _DefaultBorderH;
00013e  1ac0              SUBS     r0,r0,r3
000140  f8ad2000          STRH     r2,[sp,#0]            ;153
000144  f8ad0004          STRH     r0,[sp,#4]
;;;155        Rect.y0 += EffectSize + _DefaultBorderV;
000148  8a09              LDRH     r1,[r1,#0x10]  ; _DefaultBorderV
00014a  f8bd2002          LDRH     r2,[sp,#2]
00014e  eb080001          ADD      r0,r8,r1
000152  1811              ADDS     r1,r2,r0
000154  f8ad1002          STRH     r1,[sp,#2]
;;;156        Rect.y1 -= EffectSize + _DefaultBorderV;
000158  f8bd1006          LDRH     r1,[sp,#6]
00015c  1a08              SUBS     r0,r1,r0
00015e  f8ad0006          STRH     r0,[sp,#6]
;;;157        LCD_SetColor(pObj->TextColor);
000162  6ae8              LDR      r0,[r5,#0x2c]
000164  f7fffffe          BL       LCD_SetColor
;;;158        if ((pObj->DirIndicatorColumn == i) && ((pColumn->Align & GUI_TA_HORIZONTAL) == GUI_TA_RIGHT)) {
000168  6c68              LDR      r0,[r5,#0x44]
00016a  42b8              CMP      r0,r7
00016c  d107              BNE      |L33.382|
00016e  7920              LDRB     r0,[r4,#4]
000170  f0000003          AND      r0,r0,#3
000174  2801              CMP      r0,#1
000176  d102              BNE      |L33.382|
;;;159          Subtract = (ArrowSize << 1) + 1;
000178  2101              MOVS     r1,#1
00017a  eb01094a          ADD      r9,r1,r10,LSL #1
                  |L33.382|
;;;160        }
;;;161        Rect.x1 -= Subtract;
00017e  f8bd1004          LDRH     r1,[sp,#4]
000182  eba10009          SUB      r0,r1,r9
000186  f8ad0004          STRH     r0,[sp,#4]
;;;162        GUI_DispStringInRect(pColumn->acText, &Rect, pColumn->Align);
00018a  f9b42004          LDRSH    r2,[r4,#4]
00018e  4669              MOV      r1,sp
000190  f1040008          ADD      r0,r4,#8
000194  f7fffffe          BL       GUI_DispStringInRect
;;;163        Rect.x1 += Subtract;
000198  f8bd1004          LDRH     r1,[sp,#4]
00019c  eb010009          ADD      r0,r1,r9
0001a0  f8ad0004          STRH     r0,[sp,#4]
;;;164        if (pObj->DirIndicatorColumn == i) {
0001a4  6c68              LDR      r0,[r5,#0x44]
0001a6  42b8              CMP      r0,r7
0001a8  d118              BNE      |L33.476|
;;;165          LCD_SetColor(GUI_BLACK);
0001aa  2000              MOVS     r0,#0
0001ac  f7fffffe          BL       LCD_SetColor
;;;166          WM_SetUserClipRect(&RectItem);
0001b0  a803              ADD      r0,sp,#0xc
0001b2  f7fffffe          BL       WM_SetUserClipRect
;;;167          if (pObj->DirIndicatorReverse == 0) {
0001b6  6ca8              LDR      r0,[r5,#0x48]
;;;168            _DrawTriangle(ArrowPos, ((Rect.y1 - Rect.y0) >> 1), ArrowSize, 1);
;;;169          } else {
;;;170            _DrawTriangle(ArrowPos, ((Rect.y1 - Rect.y0) >> 1) + ArrowSize, ArrowSize, -1);
0001b8  f9bd1002          LDRSH    r1,[sp,#2]
0001bc  2800              CMP      r0,#0                 ;167
0001be  f9bd0006          LDRSH    r0,[sp,#6]
0001c2  d01f              BEQ      |L33.516|
0001c4  1a41              SUBS     r1,r0,r1
0001c6  eb0a0161          ADD      r1,r10,r1,ASR #1
0001ca  f04f33ff          MOV      r3,#0xffffffff
0001ce  4652              MOV      r2,r10
                  |L33.464|
0001d0  9807              LDR      r0,[sp,#0x1c]
0001d2  f7fffffe          BL       _DrawTriangle
;;;171          }
;;;172          WM_SetUserClipRect(NULL);
0001d6  2000              MOVS     r0,#0
0001d8  f7fffffe          BL       WM_SetUserClipRect
                  |L33.476|
0001dc  1c7f              ADDS     r7,r7,#1
                  |L33.478|
0001de  455f              CMP      r7,r11                ;120
0001e0  f6ffaf28          BLT      |L33.52|
;;;173        }
;;;174      }
;;;175      GUI_GetClientRect(&Rect);
0001e4  4668              MOV      r0,sp
0001e6  f7fffffe          BL       GUI_GetClientRect
;;;176      Rect.x0 = xPos;
;;;177      Rect.x1 = 0xfff;
0001ea  f64070ff          MOV      r0,#0xfff
0001ee  f8ad0004          STRH     r0,[sp,#4]
0001f2  f8ad6000          STRH     r6,[sp,#0]            ;176
;;;178      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &Rect);
0001f6  4669              MOV      r1,sp
0001f8  4628              MOV      r0,r5
0001fa  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;179    }
0001fe  b009              ADD      sp,sp,#0x24
000200  e8bd8ff0          POP      {r4-r11,pc}
                  |L33.516|
000204  1a40              SUBS     r0,r0,r1              ;168
000206  1041              ASRS     r1,r0,#1              ;168
000208  2301              MOVS     r3,#1                 ;168
00020a  4652              MOV      r2,r10                ;168
00020c  e7e0              B        |L33.464|
;;;180    
                          ENDP

00020e  0000              DCW      0x0000
                  |L33.528|
                          DCD      ||.data||

                          AREA ||i._RestoreOldCursor||, CODE, READONLY, ALIGN=2

                  _RestoreOldCursor PROC
;;;184    */
;;;185    static void _RestoreOldCursor(void) {
000000  b510              PUSH     {r4,lr}
;;;186      if (_pOldCursor) {
000002  4c04              LDR      r4,|L34.20|
000004  69a0              LDR      r0,[r4,#0x18]         ;185  ; _pOldCursor
000006  2800              CMP      r0,#0                 ;185
000008  d003              BEQ      |L34.18|
;;;187        #if GUI_SUPPORT_CURSOR
;;;188          GUI_CURSOR_Select(_pOldCursor);
00000a  f7fffffe          BL       GUI_CURSOR_Select
;;;189        #endif
;;;190        _pOldCursor = 0;
00000e  2000              MOVS     r0,#0
000010  61a0              STR      r0,[r4,#0x18]  ; _pOldCursor
                  |L34.18|
;;;191      }
;;;192    }
000012  bd10              POP      {r4,pc}
;;;193    
                          ENDP

                  |L34.20|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  _pDefaultCursor
                          DCD      GUI_CursorHeaderM
                  _DefaultBkColor
                          DCD      0x00aaaaaa
                  _DefaultTextColor
                          DCD      0x00000000
                  _DefaultBorderH
                          DCD      0x00000002
                  _DefaultBorderV
                          DCD      0x00000000
                  _pDefaultFont
                          DCD      GUI_Font13_1
                  _pOldCursor
                          DCD      0x00000000
