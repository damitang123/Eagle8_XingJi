; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\usermainwindow.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\usermainwindow.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\User\UserWindow\UserMainWindow.c]
                          THUMB

                          AREA ||i.CW_UserMain_Create||, CODE, READONLY, ALIGN=2

                  CW_UserMain_Create PROC
;;;346    
;;;347    CW_UserMain *CW_UserMain_Create(WM_HWIN hParent, void *pData)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;348    {
000004  4604              MOV      r4,r0
;;;349    	WM_HWIN hWin;
;;;350    	eUserWindow WinType = eUserMain;
000006  2501              MOVS     r5,#1
000008  460f              MOV      r7,r1                 ;348
;;;351    
;;;352    	if(GetWinHandleByWinType(WinType))
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GetWinHandleByWinType
000010  b130              CBZ      r0,|L1.32|
;;;353    	{
;;;354    		TRACE_PRINTF("eMain window is already exist!\r\n");
000012  a01c              ADR      r0,|L1.132|
000014  f7fffffe          BL       User_Debug_Printf
;;;355    		return (CW_UserMain *)0;
000018  2000              MOVS     r0,#0
                  |L1.26|
;;;356    	}
;;;357    
;;;358    	/*主窗体特殊处理,不使用存储设备*/
;;;359    	WM_SetCreateFlags(0);
;;;360    	hWin = WM_CreateWindowAsChild(0, 0, LCD_X_SIZE, LCD_Y_SIZE,
;;;361    	                              hParent, WM_CF_SHOW, NULL, sizeof(CW_UserMain));
;;;362    	WM_SetCreateFlags(WM_CF_MEMDEV);
;;;363    
;;;364    	if(hWin)
;;;365    	{
;;;366    		TRACE_PRINTF("eMain windows is created!hWin = 0x%04X\r\n",hWin);
;;;367    
;;;368    		pThisWin = (CW_UserMain *)((unsigned long)WM_H2P(hWin) + sizeof(WM_Obj));
;;;369    
;;;370    		pThisWin->wObj.hWin = hWin;
;;;371    		pThisWin->wObj.Property = (unsigned long)pData;
;;;372    		pThisWin->wObj.eWinType = (eUserWindow)WinType;
;;;373    		
;;;374    		AddWindowToList(&pThisWin->wObj);
;;;375    		
;;;376    		WM_SetCallback(hWin, _Callback);
;;;377    		WM__SendMsgNoData(hWin, WM_CREATE);
;;;378    	}
;;;379    	else
;;;380    	{
;;;381    		TRACE_PRINTF("eMain window can't be created!\r\n");
;;;382    	}
;;;383    
;;;384    	return pThisWin ;
;;;385    }
00001a  b004              ADD      sp,sp,#0x10
00001c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.32|
000020  2000              MOVS     r0,#0                 ;359
000022  f7fffffe          BL       WM_SetCreateFlags
000026  2028              MOVS     r0,#0x28              ;360
000028  2100              MOVS     r1,#0                 ;360
00002a  9003              STR      r0,[sp,#0xc]          ;360
00002c  2202              MOVS     r2,#2                 ;360
00002e  9400              STR      r4,[sp,#0]            ;360
000030  e9cd2101          STRD     r2,r1,[sp,#4]         ;360
000034  00c3              LSLS     r3,r0,#3              ;360
000036  22f0              MOVS     r2,#0xf0              ;360
000038  4608              MOV      r0,r1                 ;360
00003a  f7fffffe          BL       WM_CreateWindowAsChild
00003e  4604              MOV      r4,r0                 ;360
000040  2004              MOVS     r0,#4                 ;362
000042  f7fffffe          BL       WM_SetCreateFlags
000046  4e18              LDR      r6,|L1.168|
000048  b1b4              CBZ      r4,|L1.120|
00004a  4621              MOV      r1,r4                 ;366
00004c  a017              ADR      r0,|L1.172|
00004e  f7fffffe          BL       User_Debug_Printf
000052  4620              MOV      r0,r4                 ;368
000054  f7fffffe          BL       GUI_ALLOC_h2p
000058  3020              ADDS     r0,r0,#0x20           ;368
00005a  6070              STR      r0,[r6,#4]            ;370  ; pThisWin
00005c  8004              STRH     r4,[r0,#0]            ;370
00005e  6047              STR      r7,[r0,#4]            ;372
000060  7205              STRB     r5,[r0,#8]            ;372
000062  f7fffffe          BL       AddWindowToList
000066  491c              LDR      r1,|L1.216|
000068  4620              MOV      r0,r4                 ;376
00006a  f7fffffe          BL       WM_SetCallback
00006e  2101              MOVS     r1,#1                 ;377
000070  4620              MOV      r0,r4                 ;377
000072  f7fffffe          BL       WM__SendMsgNoData
000076  e002              B        |L1.126|
                  |L1.120|
000078  a018              ADR      r0,|L1.220|
00007a  f7fffffe          BL       User_Debug_Printf
                  |L1.126|
00007e  6870              LDR      r0,[r6,#4]            ;384  ; pThisWin
000080  e7cb              B        |L1.26|
;;;386    
                          ENDP

000082  0000              DCW      0x0000
                  |L1.132|
000084  654d6169          DCB      "eMain window is already exist!\r\n",0
000088  6e207769
00008c  6e646f77
000090  20697320
000094  616c7265
000098  61647920
00009c  65786973
0000a0  74210d0a
0000a4  00      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L1.168|
                          DCD      ||.data||
                  |L1.172|
0000ac  654d6169          DCB      "eMain windows is created!hWin = 0x%04X\r\n",0
0000b0  6e207769
0000b4  6e646f77
0000b8  73206973
0000bc  20637265
0000c0  61746564
0000c4  21685769
0000c8  6e203d20
0000cc  30782530
0000d0  34580d0a
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L1.216|
                          DCD      _Callback
                  |L1.220|
0000dc  654d6169          DCB      "eMain window can't be created!\r\n",0
0000e0  6e207769
0000e4  6e646f77
0000e8  2063616e
0000ec  27742062
0000f0  65206372
0000f4  65617465
0000f8  64210d0a
0000fc  00      
0000fd  00                DCB      0
0000fe  00                DCB      0
0000ff  00                DCB      0

                          AREA ||i.Display_Logo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  Display_Logo PROC
;;;28     
;;;29     void Display_Logo(void)
000000  b510              PUSH     {r4,lr}
;;;30     {
;;;31     	GUI_RECT rect;
;;;32     	char aTemp[30];
;;;33     
;;;34     	/*绘制LOGO*/
;;;35     	if(g_sLogoAttribute.nValidDataFlag)
000002  4c28              LDR      r4,|L2.164|
000004  b08a              SUB      sp,sp,#0x28           ;30
000006  7c60              LDRB     r0,[r4,#0x11]  ; g_sLogoAttribute
000008  b128              CBZ      r0,|L2.22|
;;;36     	{
;;;37     		Paint_BackGround();
00000a  f7fffffe          BL       Paint_BackGround
;;;38     		
;;;39     		if(g_sLogoAttribute.nFileType == 0)
00000e  7b20              LDRB     r0,[r4,#0xc]  ; g_sLogoAttribute
000010  b3e8              CBZ      r0,|L2.142|
;;;40     		{
;;;41     			TRACE_PRINTF("Logo is jpeg file.Not support format!\r\n");
;;;42     		}
;;;43     		else if(g_sLogoAttribute.nFileType == 2)
000012  2802              CMP      r0,#2
000014  d040              BEQ      |L2.152|
                  |L2.22|
;;;44     		{
;;;45     			GUI_BMP_Draw((const void *)(INSIDE_FLASH_LOGO_START_ADDR),  g_sLogoAttribute.nStartX0 , g_sLogoAttribute.nStartY0);
;;;46     		}
;;;47     		else
;;;48     		{
;;;49     			Paint_BackGround();
000016  f7fffffe          BL       Paint_BackGround
                  |L2.26|
;;;50     		}
;;;51     	}
;;;52     	else
;;;53     	{
;;;54     		Paint_BackGround();
;;;55     	}
;;;56     
;;;57     	/*显示酒精检测仪*/
;;;58     	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       GUI_SetTextMode
;;;59     	GUI_SetFont(&GUI_FontSongTiBold24);
000020  4821              LDR      r0,|L2.168|
000022  f7fffffe          BL       GUI_SetFont
;;;60     	GUI_SetColor(GUI_DARKGREEN);
000026  f44f4000          MOV      r0,#0x8000
00002a  f7fffffe          BL       GUI_SetColor
;;;61     
;;;62     	sprintf(aTemp, "%s%s", _AlcoholTestUnit, FW_VERSION_LOGO);
00002e  4920              LDR      r1,|L2.176|
000030  481e              LDR      r0,|L2.172|
000032  a320              ADR      r3,|L2.180|
000034  7809              LDRB     r1,[r1,#0]  ; g_Language
000036  f8500021          LDR      r0,[r0,r1,LSL #2]
00003a  a120              ADR      r1,|L2.188|
00003c  6802              LDR      r2,[r0,#0]
00003e  4668              MOV      r0,sp
000040  f7fffffe          BL       __2sprintf
;;;63     	GUI_GetTextExtend(&rect, aTemp, 50);
000044  2232              MOVS     r2,#0x32
000046  4669              MOV      r1,sp
000048  a808              ADD      r0,sp,#0x20
00004a  f7fffffe          BL       GUI_GetTextExtend
;;;64     	GUI_DispStringAt(aTemp, (LCD_XSIZE - (rect.x1 - rect.x0 + 1)) >> 1, 68);
00004e  f9bd0024          LDRSH    r0,[sp,#0x24]
000052  f9bd1020          LDRSH    r1,[sp,#0x20]
000056  2244              MOVS     r2,#0x44
000058  1a40              SUBS     r0,r0,r1
00005a  f1c000ef          RSB      r0,r0,#0xef
00005e  1041              ASRS     r1,r0,#1
000060  4668              MOV      r0,sp
000062  f7fffffe          BL       GUI_DispStringAt
;;;65     
;;;66     	GUI_GetTextExtend(&rect, g_sDeviceIDConfig.aDeviceTypeString, 50);
000066  4917              LDR      r1,|L2.196|
000068  2232              MOVS     r2,#0x32
00006a  460c              MOV      r4,r1
00006c  a808              ADD      r0,sp,#0x20
00006e  f7fffffe          BL       GUI_GetTextExtend
;;;67     	GUI_DispStringAt(g_sDeviceIDConfig.aDeviceTypeString, (LCD_XSIZE - (rect.x1 - rect.x0 + 1)) >> 1, 100);
000072  f9bd0024          LDRSH    r0,[sp,#0x24]
000076  f9bd1020          LDRSH    r1,[sp,#0x20]
00007a  2264              MOVS     r2,#0x64
00007c  1a40              SUBS     r0,r0,r1
00007e  f1c000ef          RSB      r0,r0,#0xef
000082  1041              ASRS     r1,r0,#1
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       GUI_DispStringAt
;;;68     }
00008a  b00a              ADD      sp,sp,#0x28
00008c  bd10              POP      {r4,pc}
                  |L2.142|
00008e  e7ff              B        |L2.144|
                  |L2.144|
000090  a00d              ADR      r0,|L2.200|
000092  f7fffffe          BL       User_Debug_Printf
000096  e7c0              B        |L2.26|
                  |L2.152|
000098  8862              LDRH     r2,[r4,#2]            ;45  ; g_sLogoAttribute
00009a  8821              LDRH     r1,[r4,#0]            ;45  ; g_sLogoAttribute
00009c  4814              LDR      r0,|L2.240|
00009e  f7fffffe          BL       GUI_BMP_Draw
0000a2  e7ba              B        |L2.26|
;;;69     
                          ENDP

                  |L2.164|
                          DCD      g_sLogoAttribute
                  |L2.168|
                          DCD      GUI_FontSongTiBold24
                  |L2.172|
                          DCD      Strings
                  |L2.176|
                          DCD      g_Language
                  |L2.180|
0000b4  56333037          DCB      "V307",0
0000b8  00      
0000b9  00                DCB      0
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L2.188|
0000bc  25732573          DCB      "%s%s",0
0000c0  00      
0000c1  00                DCB      0
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L2.196|
                          DCD      g_sDeviceIDConfig+0xa
                  |L2.200|
0000c8  4c6f676f          DCB      "Logo is jpeg file.Not support format!\r\n",0
0000cc  20697320
0000d0  6a706567
0000d4  2066696c
0000d8  652e4e6f
0000dc  74207375
0000e0  70706f72
0000e4  7420666f
0000e8  726d6174
0000ec  210d0a00
                  |L2.240|
                          DCD      0x08070000

                          AREA ||i.Update_Rtc_Display||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  Update_Rtc_Display PROC
;;;16     
;;;17     static void Update_Rtc_Display(WM_HWIN hParent)
000000  b530              PUSH     {r4,r5,lr}
;;;18     {
;;;19     	char aTemp[30];
;;;20     	/*刷新时间*/
;;;21     	sprintf(aTemp, "%02d:%02d:%02d", g_sDateTime.wHour, g_sDateTime.wMinute, g_sDateTime.wSecond);
000002  4c14              LDR      r4,|L3.84|
000004  b08b              SUB      sp,sp,#0x2c           ;18
000006  a114              ADR      r1,|L3.88|
000008  7960              LDRB     r0,[r4,#5]  ; g_sDateTime
00000a  9000              STR      r0,[sp,#0]
00000c  7923              LDRB     r3,[r4,#4]  ; g_sDateTime
00000e  78e2              LDRB     r2,[r4,#3]  ; g_sDateTime
000010  a802              ADD      r0,sp,#8
000012  f7fffffe          BL       __2sprintf
;;;22     	TEXT_SetText(pThisWin->hTime, aTemp);
000016  4d14              LDR      r5,|L3.104|
000018  a902              ADD      r1,sp,#8
00001a  6868              LDR      r0,[r5,#4]  ; pThisWin
00001c  f9b00020          LDRSH    r0,[r0,#0x20]
000020  f7fffffe          BL       TEXT_SetText
;;;23     
;;;24     	/*刷新日期*/
;;;25     	sprintf(aTemp, "%02d/%02d/%04d %s", g_sDateTime.wDay, g_sDateTime.wMonth, g_sDateTime.wYear + 2000, GetDayOfWeek(g_nDayOfWeek));
000024  4811              LDR      r0,|L3.108|
000026  7800              LDRB     r0,[r0,#0]  ; g_nDayOfWeek
000028  f7fffffe          BL       GetDayOfWeek
00002c  7821              LDRB     r1,[r4,#0]  ; g_sDateTime
00002e  f50161fa          ADD      r1,r1,#0x7d0
000032  e9cd1000          STRD     r1,r0,[sp,#0]
000036  7863              LDRB     r3,[r4,#1]  ; g_sDateTime
000038  78a2              LDRB     r2,[r4,#2]  ; g_sDateTime
00003a  a10d              ADR      r1,|L3.112|
00003c  a802              ADD      r0,sp,#8
00003e  f7fffffe          BL       __2sprintf
;;;26     	TEXT_SetText(pThisWin->hDate, aTemp);
000042  6868              LDR      r0,[r5,#4]  ; pThisWin
000044  a902              ADD      r1,sp,#8
000046  f9b0001e          LDRSH    r0,[r0,#0x1e]
00004a  f7fffffe          BL       TEXT_SetText
;;;27     }
00004e  b00b              ADD      sp,sp,#0x2c
000050  bd30              POP      {r4,r5,pc}
;;;28     
                          ENDP

000052  0000              DCW      0x0000
                  |L3.84|
                          DCD      g_sDateTime
                  |L3.88|
000058  25303264          DCB      "%02d:%02d:%02d",0
00005c  3a253032
000060  643a2530
000064  326400  
000067  00                DCB      0
                  |L3.104|
                          DCD      ||.data||
                  |L3.108|
                          DCD      g_nDayOfWeek
                  |L3.112|
000070  25303264          DCB      "%02d/%02d/%04d %s",0
000074  2f253032
000078  642f2530
00007c  34642025
000080  7300    
000082  00                DCB      0
000083  00                DCB      0

                          AREA ||i._CallBack_Battery||, CODE, READONLY, ALIGN=2

                  _CallBack_Battery PROC
;;;69     
;;;70     static void _CallBack_Battery(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;71     {
000002  4605              MOV      r5,r0
;;;72     	static unsigned char nCnt = 0;
;;;73     	if(pMsg->MsgId == WM_PAINT)
000004  6800              LDR      r0,[r0,#0]
000006  280f              CMP      r0,#0xf
000008  d130              BNE      |L4.108|
;;;74     	{
;;;75     		unsigned char nBatteryVolume;
;;;76     		const GUI_BITMAP *pBmpFile = NULL;
;;;77     		nBatteryVolume = Adc_Get_Battery_Volume();
00000a  f7fffffe          BL       Adc_Get_Battery_Volume
;;;78     		switch(nBatteryVolume)
00000e  2806              CMP      r0,#6
000010  d22c              BCS      |L4.108|
000012  e8dff000          TBB      [pc,r0]
000016  030c              DCB      0x03,0x0c
000018  0e101214          DCB      0x0e,0x10,0x12,0x14
;;;79     		{
;;;80     			case 0:
;;;81     				nCnt++;
00001c  4914              LDR      r1,|L4.112|
00001e  7808              LDRB     r0,[r1,#0]  ; nCnt
000020  1c40              ADDS     r0,r0,#1
000022  b2c0              UXTB     r0,r0
000024  7008              STRB     r0,[r1,#0]
;;;82     				if(nCnt > 5)				 /*实现闪烁效果*/
000026  2805              CMP      r0,#5
000028  d920              BLS      |L4.108|
;;;83     				{
;;;84     					pBmpFile = &bmBATTERY1;
00002a  4c12              LDR      r4,|L4.116|
00002c  e008              B        |L4.64|
;;;85     				}
;;;86     				else if(nCnt > 10)	
;;;87     				{
;;;88     					nCnt = 0;
;;;89     				}
;;;90     				break;
;;;91     			case 1:
;;;92     				pBmpFile = &bmBATTERY2;
00002e  4c12              LDR      r4,|L4.120|
;;;93     				break;
000030  e006              B        |L4.64|
;;;94     			case 2:
;;;95     				pBmpFile = &bmBATTERY3;
000032  4c12              LDR      r4,|L4.124|
;;;96     				break;
000034  e004              B        |L4.64|
;;;97     			case 3:
;;;98     				pBmpFile = &bmBATTERY4;
000036  4c12              LDR      r4,|L4.128|
;;;99     				break;
000038  e002              B        |L4.64|
;;;100    			case 4:
;;;101    				pBmpFile = &bmBATTERY5;
00003a  4c12              LDR      r4,|L4.132|
;;;102    				break;
00003c  e000              B        |L4.64|
;;;103    			case 5:
;;;104    				pBmpFile = &bmBATTERY6;
00003e  4c12              LDR      r4,|L4.136|
                  |L4.64|
;;;105    				break;
;;;106    		}
;;;107    		if(pBmpFile)
000040  2c00              CMP      r4,#0
000042  d013              BEQ      |L4.108|
;;;108    		{
;;;109    			GUI_DrawBitmap(pBmpFile,
000044  f9b50004          LDRSH    r0,[r5,#4]
000048  f7fffffe          BL       WM_GetWindowSizeY
00004c  8861              LDRH     r1,[r4,#2]
00004e  1a40              SUBS     r0,r0,r1
000050  1046              ASRS     r6,r0,#1
000052  f9b50004          LDRSH    r0,[r5,#4]
000056  f7fffffe          BL       WM_GetWindowSizeX
00005a  8821              LDRH     r1,[r4,#0]
00005c  4632              MOV      r2,r6
00005e  1a40              SUBS     r0,r0,r1
000060  1041              ASRS     r1,r0,#1
000062  4620              MOV      r0,r4
000064  e8bd4070          POP      {r4-r6,lr}
000068  f7ffbffe          B.W      GUI_DrawBitmap
                  |L4.108|
;;;110    						(WM_GetWindowSizeX(pMsg->hWin) - pBmpFile->XSize) >> 1,
;;;111    						(WM_GetWindowSizeY(pMsg->hWin) - pBmpFile->YSize) >> 1);
;;;112    		}
;;;113    	}
;;;114    }
00006c  bd70              POP      {r4-r6,pc}
;;;115    
                          ENDP

00006e  0000              DCW      0x0000
                  |L4.112|
                          DCD      ||.data||
                  |L4.116|
                          DCD      bmBATTERY1
                  |L4.120|
                          DCD      bmBATTERY2
                  |L4.124|
                          DCD      bmBATTERY3
                  |L4.128|
                          DCD      bmBATTERY4
                  |L4.132|
                          DCD      bmBATTERY5
                  |L4.136|
                          DCD      bmBATTERY6

                          AREA ||i._CallBack_GPRS||, CODE, READONLY, ALIGN=2

                  _CallBack_GPRS PROC
;;;115    
;;;116    static void _CallBack_GPRS(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;117    {
000002  4605              MOV      r5,r0
;;;118    	if(pMsg->MsgId == WM_PAINT)
000004  6800              LDR      r0,[r0,#0]
000006  280f              CMP      r0,#0xf
000008  d129              BNE      |L5.94|
;;;119    	{
;;;120    		const GUI_BITMAP *pBmpFile = NULL;
;;;121    		switch(Get_GPRS_SingalQuality())
00000a  f7fffffe          BL       Get_GPRS_SingalQuality
00000e  2806              CMP      r0,#6
000010  d225              BCS      |L5.94|
000012  e8dff000          TBB      [pc,r0]
000016  0305              DCB      0x03,0x05
000018  07090b0d          DCB      0x07,0x09,0x0b,0x0d
;;;122    		{
;;;123    			case 0:
;;;124    				pBmpFile = &bmSignal1;
00001c  4c10              LDR      r4,|L5.96|
;;;125    				break;
00001e  e008              B        |L5.50|
;;;126    			case 1:
;;;127    				pBmpFile = &bmSignal2;
000020  4c10              LDR      r4,|L5.100|
;;;128    				break;
000022  e006              B        |L5.50|
;;;129    			case 2:
;;;130    				pBmpFile = &bmSignal3;
000024  4c10              LDR      r4,|L5.104|
;;;131    				break;
000026  e004              B        |L5.50|
;;;132    			case 3:
;;;133    				pBmpFile = &bmSignal4;
000028  4c10              LDR      r4,|L5.108|
;;;134    				break;
00002a  e002              B        |L5.50|
;;;135    			case 4:
;;;136    				pBmpFile = &bmSignal5;
00002c  4c10              LDR      r4,|L5.112|
;;;137    				break;
00002e  e000              B        |L5.50|
;;;138    			case 5:
;;;139    				pBmpFile = &bmSignal6;
000030  4c10              LDR      r4,|L5.116|
                  |L5.50|
;;;140    				break;
;;;141    		}
;;;142    		if(pBmpFile)
000032  2c00              CMP      r4,#0
000034  d013              BEQ      |L5.94|
;;;143    		{
;;;144    			GUI_DrawBitmap(pBmpFile,
000036  f9b50004          LDRSH    r0,[r5,#4]
00003a  f7fffffe          BL       WM_GetWindowSizeY
00003e  8861              LDRH     r1,[r4,#2]
000040  1a40              SUBS     r0,r0,r1
000042  1046              ASRS     r6,r0,#1
000044  f9b50004          LDRSH    r0,[r5,#4]
000048  f7fffffe          BL       WM_GetWindowSizeX
00004c  8821              LDRH     r1,[r4,#0]
00004e  4632              MOV      r2,r6
000050  1a40              SUBS     r0,r0,r1
000052  1041              ASRS     r1,r0,#1
000054  4620              MOV      r0,r4
000056  e8bd4070          POP      {r4-r6,lr}
00005a  f7ffbffe          B.W      GUI_DrawBitmap
                  |L5.94|
;;;145    						(WM_GetWindowSizeX(pMsg->hWin) - pBmpFile->XSize) >> 1,
;;;146    						(WM_GetWindowSizeY(pMsg->hWin) - pBmpFile->YSize) >> 1);
;;;147    		}
;;;148    	}
;;;149    }
00005e  bd70              POP      {r4-r6,pc}
;;;150    
                          ENDP

                  |L5.96|
                          DCD      bmSignal1
                  |L5.100|
                          DCD      bmSignal2
                  |L5.104|
                          DCD      bmSignal3
                  |L5.108|
                          DCD      bmSignal4
                  |L5.112|
                          DCD      bmSignal5
                  |L5.116|
                          DCD      bmSignal6

                          AREA ||i._CallBack_GPS||, CODE, READONLY, ALIGN=2

                  _CallBack_GPS PROC
;;;151    
;;;152    static void _CallBack_GPS(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;153    {
000002  4605              MOV      r5,r0
;;;154    	if(pMsg->MsgId == WM_PAINT)
000004  6800              LDR      r0,[r0,#0]
000006  280f              CMP      r0,#0xf
000008  d11d              BNE      |L6.70|
;;;155    	{
;;;156    		unsigned char bGps;
;;;157    		const GUI_BITMAP *pBmpFile = NULL;
;;;158    		bGps = GPS_Is_Location_Valid();
00000a  f7fffffe          BL       GPS_Is_Location_Valid
;;;159    		switch(bGps)
00000e  b1c0              CBZ      r0,|L6.66|
000010  2801              CMP      r0,#1
000012  d118              BNE      |L6.70|
;;;160    		{
;;;161    			case 0:
;;;162    				pBmpFile = &bmGPS_Search;
;;;163    				break;
;;;164    			case 1:
;;;165    				pBmpFile = &bmGPS_Location;
000014  4c0c              LDR      r4,|L6.72|
                  |L6.22|
;;;166    				break;
;;;167    		}
;;;168    
;;;169    		if(pBmpFile)
000016  2c00              CMP      r4,#0
000018  d015              BEQ      |L6.70|
;;;170    		{
;;;171    			GUI_DrawBitmap(pBmpFile, 
00001a  f9b50004          LDRSH    r0,[r5,#4]
00001e  f7fffffe          BL       WM_GetWindowSizeY
000022  8861              LDRH     r1,[r4,#2]
000024  1a40              SUBS     r0,r0,r1
000026  1046              ASRS     r6,r0,#1
000028  f9b50004          LDRSH    r0,[r5,#4]
00002c  f7fffffe          BL       WM_GetWindowSizeX
000030  8821              LDRH     r1,[r4,#0]
000032  4632              MOV      r2,r6
000034  1a40              SUBS     r0,r0,r1
000036  1041              ASRS     r1,r0,#1
000038  4620              MOV      r0,r4
00003a  e8bd4070          POP      {r4-r6,lr}
00003e  f7ffbffe          B.W      GUI_DrawBitmap
                  |L6.66|
000042  4c02              LDR      r4,|L6.76|
000044  e7e7              B        |L6.22|
                  |L6.70|
;;;172    							(WM_GetWindowSizeX(pMsg->hWin) - pBmpFile->XSize) >> 1,
;;;173    							(WM_GetWindowSizeY(pMsg->hWin) - pBmpFile->YSize) >> 1);
;;;174    		}
;;;175    	}
;;;176    }
000046  bd70              POP      {r4-r6,pc}
;;;177    
                          ENDP

                  |L6.72|
                          DCD      bmGPS_Location
                  |L6.76|
                          DCD      bmGPS_Search

                          AREA ||i._CallBack_Header||, CODE, READONLY, ALIGN=2

                  _CallBack_Header PROC
;;;179    
;;;180    static void _CallBack_Header(WM_MESSAGE *pMsg)
000000  6800              LDR      r0,[r0,#0]
;;;181    {
;;;182    	if(pMsg->MsgId == WM_PAINT)
000002  280f              CMP      r0,#0xf
000004  d104              BNE      |L7.16|
;;;183    	{
;;;184    		GUI_DrawBitmap(&bmCaption_Bottom, 0, 0);
000006  2200              MOVS     r2,#0
000008  4611              MOV      r1,r2
00000a  4802              LDR      r0,|L7.20|
00000c  f7ffbffe          B.W      GUI_DrawBitmap
                  |L7.16|
;;;185    	}
;;;186    }
000010  4770              BX       lr
;;;187    
                          ENDP

000012  0000              DCW      0x0000
                  |L7.20|
                          DCD      bmCaption_Bottom

                          AREA ||i._Callback||, CODE, READONLY, ALIGN=2

                  _Callback PROC
;;;276    
;;;277    static void _Callback(WM_MESSAGE *pMsg)
000000  b570              PUSH     {r4-r6,lr}
;;;278    {
000002  4604              MOV      r4,r0
;;;279    	if(pMsg->MsgId != WM_PAINT)
000004  6800              LDR      r0,[r0,#0]
000006  280f              CMP      r0,#0xf
000008  d002              BEQ      |L8.16|
;;;280    	{
;;;281    		Enter_Callback_Hook(pMsg);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       Enter_Callback_Hook
                  |L8.16|
;;;282    	}
;;;283    	
;;;284    	switch(pMsg->MsgId)
000010  6820              LDR      r0,[r4,#0]
000012  280f              CMP      r0,#0xf
000014  d012              BEQ      |L8.60|
000016  dc06              BGT      |L8.38|
000018  2801              CMP      r0,#1
00001a  d00b              BEQ      |L8.52|
00001c  280b              CMP      r0,#0xb
00001e  d021              BEQ      |L8.100|
000020  280e              CMP      r0,#0xe
000022  d11f              BNE      |L8.100|
000024  e023              B        |L8.110|
                  |L8.38|
000026  2826              CMP      r0,#0x26
000028  d046              BEQ      |L8.184|
00002a  f5a06080          SUB      r0,r0,#0x400
00002e  3801              SUBS     r0,#1
000030  d118              BNE      |L8.100|
000032  e008              B        |L8.70|
                  |L8.52|
;;;285    	{
;;;286    		case WM_CREATE:
;;;287    			_Create(pMsg);
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       _Create
;;;288    			break;
00003a  e013              B        |L8.100|
                  |L8.60|
;;;289    			
;;;290    		case WM_PAINT:
;;;291    			Display_Logo();
00003c  f7fffffe          BL       Display_Logo
;;;292    			Paint_Dialog_Header_Bottom();
000040  f7fffffe          BL       Paint_Dialog_Header_Bottom
;;;293    			break;
000044  e00e              B        |L8.100|
                  |L8.70|
;;;294    			
;;;295    		case WM_UPDATE_TIME:
;;;296    			Update_Rtc_Display(pMsg->hWin);
000046  f9b40004          LDRSH    r0,[r4,#4]
00004a  f7fffffe          BL       Update_Rtc_Display
;;;297    			WM_InvalidateWindow(pThisWin->hDrawBattery);
00004e  4d24              LDR      r5,|L8.224|
000050  6868              LDR      r0,[r5,#4]  ; pThisWin
000052  f9b00022          LDRSH    r0,[r0,#0x22]
000056  f7fffffe          BL       WM_InvalidateWindow
;;;298    			WM_InvalidateWindow(pThisWin->hDrawGpsSignal);
00005a  6868              LDR      r0,[r5,#4]  ; pThisWin
00005c  f9b00026          LDRSH    r0,[r0,#0x26]
000060  f7fffffe          BL       WM_InvalidateWindow
                  |L8.100|
;;;299    			break;
;;;300    			
;;;301    		case WM_KEY:
;;;302    			if(WM_Key_Status == 0)
;;;303    			{	
;;;304    				#if SERVER_USE_XING_JIKONG_GU
;;;305    				g_sXingJiKongGU.bOpenDevice=false; //added by lxl 20181106
;;;306    				g_sXingJiKongGU.bAdministration=false;
;;;307    				#endif
;;;308    				switch (WM_Key_Code)
;;;309    				{
;;;310    					case GUI_KEY_LEFT_FUN:
;;;311    						CW_SettingMain_Create(pMsg->hWin,(void *)0x01);
;;;312    						break;
;;;313    						
;;;314    					case GUI_KEY_RIGHT_FUN:
;;;315    						CW_DisplayRecordWindow_Create(pMsg->hWin,(void *)1);
;;;316    						break;
;;;317    						
;;;318    					case GUI_KEY_MIDDLE_FUN:
;;;319    						_ConfirmButton(pMsg);
;;;320    						break;
;;;321    				}
;;;322    			}
;;;323    			return;
;;;324    
;;;325    		case WM_NOTIFY_PARENT:
;;;326    			switch(pMsg->Data.v)
;;;327    			{
;;;328    				case WM_NOTIFICATION_WIN_DELETE:
;;;329    					WM_SetFocus(pMsg->hWin);
;;;330    					WM_Paint(pMsg->hWin);
;;;331    					WM_SendMessageNoPara(pMsg->hWin,WM_UPDATE_TIME);
;;;332    					break;
;;;333    			}
;;;334    			return;
;;;335    			
;;;336    		case WM_DELETE:
;;;337    			break;
;;;338    			
;;;339    		default:
;;;340    			break;
;;;341    	}
;;;342    	
;;;343    	Exit_Callback_Hook(pMsg);
000064  4620              MOV      r0,r4
000066  e8bd4070          POP      {r4-r6,lr}
00006a  f7ffbffe          B.W      Exit_Callback_Hook
                  |L8.110|
00006e  68a1              LDR      r1,[r4,#8]            ;302
000070  6848              LDR      r0,[r1,#4]            ;302
000072  2800              CMP      r0,#0                 ;302
000074  d133              BNE      |L8.222|
000076  4a1b              LDR      r2,|L8.228|
000078  71d0              STRB     r0,[r2,#7]            ;305
00007a  7210              STRB     r0,[r2,#8]            ;306
00007c  6809              LDR      r1,[r1,#0]            ;308
00007e  2905              CMP      r1,#5                 ;308
000080  d00c              BEQ      |L8.156|
000082  2906              CMP      r1,#6                 ;308
000084  d011              BEQ      |L8.170|
000086  290d              CMP      r1,#0xd               ;308
000088  d129              BNE      |L8.222|
00008a  4917              LDR      r1,|L8.232|
00008c  7008              STRB     r0,[r1,#0]            ;308
00008e  f9b40004          LDRSH    r0,[r4,#4]            ;308
000092  e8bd4070          POP      {r4-r6,lr}            ;308
000096  2104              MOVS     r1,#4                 ;308
000098  f7ffbffe          B.W      CW_TestMain_Create
                  |L8.156|
00009c  f9b40004          LDRSH    r0,[r4,#4]            ;311
0000a0  e8bd4070          POP      {r4-r6,lr}            ;311
0000a4  2101              MOVS     r1,#1                 ;311
0000a6  f7ffbffe          B.W      CW_SettingMain_Create
                  |L8.170|
0000aa  f9b40004          LDRSH    r0,[r4,#4]            ;315
0000ae  e8bd4070          POP      {r4-r6,lr}            ;315
0000b2  2101              MOVS     r1,#1                 ;315
0000b4  f7ffbffe          B.W      CW_DisplayRecordWindow_Create
                  |L8.184|
0000b8  68a0              LDR      r0,[r4,#8]            ;326
0000ba  2811              CMP      r0,#0x11              ;326
0000bc  d10f              BNE      |L8.222|
0000be  f9b40004          LDRSH    r0,[r4,#4]            ;329
0000c2  f7fffffe          BL       WM_SetFocus
0000c6  f9b40004          LDRSH    r0,[r4,#4]            ;330
0000ca  f7fffffe          BL       WM_Paint
0000ce  f9b40004          LDRSH    r0,[r4,#4]            ;331
0000d2  e8bd4070          POP      {r4-r6,lr}            ;331
0000d6  f2404101          MOV      r1,#0x401             ;331
0000da  f7ffbffe          B.W      WM_SendMessageNoPara
                  |L8.222|
;;;344    }
0000de  bd70              POP      {r4-r6,pc}
;;;345    
                          ENDP

                  |L8.224|
                          DCD      ||.data||
                  |L8.228|
                          DCD      g_sXingJiKongGU
                  |L8.232|
                          DCD      g_eAlcTestPurpose

                          AREA ||i._Create||, CODE, READONLY, ALIGN=2

                  _Create PROC
;;;187    
;;;188    static void _Create(WM_MESSAGE *pMsg)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;189    {
;;;190    	GUI_RECT rect;
;;;191    	const char *pStr;
;;;192    
;;;193    	pApp->bSystemLoginIn = true;
000004  4975              LDR      r1,|L9.476|
000006  4605              MOV      r5,r0                 ;189
000008  b088              SUB      sp,sp,#0x20           ;189
00000a  6809              LDR      r1,[r1,#0]  ; pApp
00000c  2001              MOVS     r0,#1
;;;194    	
;;;195    	pThisWin->hHeader = WM_CreateWindowAsChild(0, 0, LCD_X_SIZE, Caption_Height,
00000e  2600              MOVS     r6,#0
000010  7508              STRB     r0,[r1,#0x14]         ;193
000012  f9b51004          LDRSH    r1,[r5,#4]
000016  4a72              LDR      r2,|L9.480|
000018  f04f0802          MOV      r8,#2
00001c  e9cd2602          STRD     r2,r6,[sp,#8]
000020  e9cd1800          STRD     r1,r8,[sp,#0]
000024  231e              MOVS     r3,#0x1e
000026  22f0              MOVS     r2,#0xf0
000028  4631              MOV      r1,r6
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       WM_CreateWindowAsChild
000030  4c6c              LDR      r4,|L9.484|
000032  6861              LDR      r1,[r4,#4]  ; pThisWin
000034  8288              STRH     r0,[r1,#0x14]
;;;196    	                                        pMsg->hWin,
;;;197    	                                        WM_CF_SHOW, _CallBack_Header, 0);
;;;198    	/*时间*/
;;;199    	GUI_SetFont(&GUI_FontTahomaBold19);
000036  486c              LDR      r0,|L9.488|
000038  f7fffffe          BL       GUI_SetFont
;;;200    	pStr = "00:00:00";
00003c  a76b              ADR      r7,|L9.492|
;;;201    	GUI_GetTextExtend(&rect, pStr, 50);
00003e  2232              MOVS     r2,#0x32
000040  4639              MOV      r1,r7
000042  a805              ADD      r0,sp,#0x14
000044  f7fffffe          BL       GUI_GetTextExtend
000048  e9cd8601          STRD     r8,r6,[sp,#4]
00004c  e9cd6703          STRD     r6,r7,[sp,#0xc]
;;;202    	pThisWin->hTime= TEXT_CreateEx((LCD_XSIZE - (rect.x1 - rect.x0)) >> 1,  (Caption_Height - (rect.y1 - rect.y0 + 1)) >> 1, rect.x1 - rect.x0 + 1, rect.y1 - rect.y0 + 1,
000050  6860              LDR      r0,[r4,#4]  ; pThisWin
000052  f9b00014          LDRSH    r0,[r0,#0x14]
000056  9000              STR      r0,[sp,#0]
000058  f9bd001a          LDRSH    r0,[sp,#0x1a]
00005c  f9bd1016          LDRSH    r1,[sp,#0x16]
000060  f9bd2014          LDRSH    r2,[sp,#0x14]
000064  1a41              SUBS     r1,r0,r1
000066  f9bd0018          LDRSH    r0,[sp,#0x18]
00006a  1c4b              ADDS     r3,r1,#1
00006c  1a80              SUBS     r0,r0,r2
00006e  1c42              ADDS     r2,r0,#1
000070  f1c1011d          RSB      r1,r1,#0x1d
000074  f1c000f0          RSB      r0,r0,#0xf0
000078  1049              ASRS     r1,r1,#1
00007a  1040              ASRS     r0,r0,#1
00007c  f7fffffe          BL       TEXT_CreateEx
000080  6861              LDR      r1,[r4,#4]  ; pThisWin
000082  8408              STRH     r0,[r1,#0x20]
;;;203    	                     pThisWin->hHeader,
;;;204    	                     WM_CF_SHOW, 0, 0, pStr);
;;;205    	TEXT_SetFont(pThisWin->hTime, &GUI_FontTahomaBold19);
000084  4958              LDR      r1,|L9.488|
000086  f7fffffe          BL       TEXT_SetFont
;;;206    	TEXT_SetTextAlign(pThisWin->hTime, GUI_TA_CENTER);
00008a  6860              LDR      r0,[r4,#4]  ; pThisWin
00008c  2102              MOVS     r1,#2
00008e  f9b00020          LDRSH    r0,[r0,#0x20]
000092  f7fffffe          BL       TEXT_SetTextAlign
;;;207    	TEXT_SetTextColor(pThisWin->hTime, _RGB(80, 0, 71));
000096  6860              LDR      r0,[r4,#4]  ; pThisWin
000098  4957              LDR      r1,|L9.504|
00009a  f9b00020          LDRSH    r0,[r0,#0x20]
00009e  f7fffffe          BL       TEXT_SetTextColor
;;;208    	
;;;209    	/*电池图标显示*/
;;;210    	pThisWin->hDrawBattery = WM_CreateWindowAsChild(LCD_XSIZE - 30, 0, 30, 30,
0000a2  6860              LDR      r0,[r4,#4]  ; pThisWin
0000a4  4955              LDR      r1,|L9.508|
0000a6  2703              MOVS     r7,#3
0000a8  f9b00014          LDRSH    r0,[r0,#0x14]
0000ac  e9cd1602          STRD     r1,r6,[sp,#8]
0000b0  e9cd0700          STRD     r0,r7,[sp,#0]
0000b4  231e              MOVS     r3,#0x1e
0000b6  461a              MOV      r2,r3
0000b8  2100              MOVS     r1,#0
0000ba  20d2              MOVS     r0,#0xd2
0000bc  f7fffffe          BL       WM_CreateWindowAsChild
0000c0  4601              MOV      r1,r0
0000c2  6860              LDR      r0,[r4,#4]  ; pThisWin
;;;211    	                                        pThisWin->hHeader,
;;;212    	                                        WM_CF_SHOW | WM_CF_HASTRANS, _CallBack_Battery, 0);
;;;213    	/*GSM信号显示*/
;;;214    	pThisWin->hDrawGPRSSignal = WM_CreateWindowAsChild(LCD_XSIZE - 30 - 35, 0, 30, 30,
0000c4  231e              MOVS     r3,#0x1e
0000c6  461a              MOV      r2,r3
0000c8  8441              STRH     r1,[r0,#0x22]         ;210
0000ca  f9b00014          LDRSH    r0,[r0,#0x14]
0000ce  494c              LDR      r1,|L9.512|
0000d0  e9cd1602          STRD     r1,r6,[sp,#8]
0000d4  e9cd0700          STRD     r0,r7,[sp,#0]
0000d8  2100              MOVS     r1,#0
0000da  20af              MOVS     r0,#0xaf
0000dc  f7fffffe          BL       WM_CreateWindowAsChild
0000e0  4601              MOV      r1,r0
0000e2  6860              LDR      r0,[r4,#4]  ; pThisWin
;;;215    	                                      pThisWin->hHeader,
;;;216    	                                       WM_CF_SHOW | WM_CF_HASTRANS, _CallBack_GPRS, 0);
;;;217    	/*GPS信号显示*/
;;;218    	pThisWin->hDrawGpsSignal = WM_CreateWindowAsChild(5, 0, 30, 30,
0000e4  231e              MOVS     r3,#0x1e
0000e6  461a              MOV      r2,r3
0000e8  8481              STRH     r1,[r0,#0x24]         ;214
0000ea  f9b00014          LDRSH    r0,[r0,#0x14]
0000ee  4945              LDR      r1,|L9.516|
0000f0  e9cd1602          STRD     r1,r6,[sp,#8]
0000f4  e9cd0700          STRD     r0,r7,[sp,#0]
0000f8  2100              MOVS     r1,#0
0000fa  2005              MOVS     r0,#5
0000fc  f7fffffe          BL       WM_CreateWindowAsChild
000100  6861              LDR      r1,[r4,#4]  ; pThisWin
;;;219    	                                    pThisWin->hHeader,
;;;220    	                                    WM_CF_SHOW | WM_CF_HASTRANS, _CallBack_GPS, 0);
;;;221    	                                    
;;;222    	/*日期---星期*/
;;;223    	pStr = "00/00/0000";
000102  a741              ADR      r7,|L9.520|
000104  84c8              STRH     r0,[r1,#0x26]         ;218
;;;224    	GUI_SetFont(_GetFont(Font_Content));
000106  2004              MOVS     r0,#4
000108  f7fffffe          BL       _GetFont
00010c  f7fffffe          BL       GUI_SetFont
;;;225    	GUI_GetTextExtend(&rect, pStr, 50);
000110  2232              MOVS     r2,#0x32
000112  4639              MOV      r1,r7
000114  a805              ADD      r0,sp,#0x14
000116  f7fffffe          BL       GUI_GetTextExtend
00011a  e9cd8601          STRD     r8,r6,[sp,#4]
00011e  e9cd6703          STRD     r6,r7,[sp,#0xc]
;;;226    	pThisWin->hDate = TEXT_CreateEx(20,  Caption_Height + 8, LCD_XSIZE - 40, rect.y1 - rect.y0 + 1,
000122  f9b50004          LDRSH    r0,[r5,#4]
000126  9000              STR      r0,[sp,#0]
000128  f9bd001a          LDRSH    r0,[sp,#0x1a]
00012c  f9bd1016          LDRSH    r1,[sp,#0x16]
000130  22c8              MOVS     r2,#0xc8
000132  1a43              SUBS     r3,r0,r1
000134  2126              MOVS     r1,#0x26
000136  2014              MOVS     r0,#0x14
000138  1c5b              ADDS     r3,r3,#1
00013a  f7fffffe          BL       TEXT_CreateEx
00013e  6861              LDR      r1,[r4,#4]  ; pThisWin
000140  83c8              STRH     r0,[r1,#0x1e]
;;;227    	                     pMsg->hWin,
;;;228    	                     WM_CF_SHOW, 0, 0, pStr);
;;;229    	TEXT_SetFont(pThisWin->hDate, _GetFont(Font_Title));
000142  2000              MOVS     r0,#0
000144  f7fffffe          BL       _GetFont
000148  4601              MOV      r1,r0
00014a  6860              LDR      r0,[r4,#4]  ; pThisWin
00014c  f9b0001e          LDRSH    r0,[r0,#0x1e]
000150  f7fffffe          BL       TEXT_SetFont
;;;230    	TEXT_SetTextColor(pThisWin->hDate, GUI_DARKGREEN);
000154  6860              LDR      r0,[r4,#4]  ; pThisWin
000156  f44f4100          MOV      r1,#0x8000
00015a  f9b0001e          LDRSH    r0,[r0,#0x1e]
00015e  f7fffffe          BL       TEXT_SetTextColor
;;;231    	TEXT_SetTextAlign(pThisWin->hDate, GUI_TA_CENTER);
000162  6860              LDR      r0,[r4,#4]  ; pThisWin
000164  2102              MOVS     r1,#2
000166  f9b0001e          LDRSH    r0,[r0,#0x1e]
00016a  f7fffffe          BL       TEXT_SetTextAlign
;;;232    
;;;233    #if USE_TEXT_REPLACE_ICON
;;;234    	/*创建左键*/
;;;235    	pThisWin->hLeftButton = Create_Left_Button(pMsg->hWin);
00016e  f9b50004          LDRSH    r0,[r5,#4]
000172  f7fffffe          BL       Create_Left_Button
000176  6861              LDR      r1,[r4,#4]  ; pThisWin
;;;236    	BUTTON_SetText(pThisWin->hLeftButton, _Option);
000178  4f27              LDR      r7,|L9.536|
00017a  4e26              LDR      r6,|L9.532|
00017c  8308              STRH     r0,[r1,#0x18]         ;235
00017e  7839              LDRB     r1,[r7,#0]  ; g_Language
000180  f8561021          LDR      r1,[r6,r1,LSL #2]
000184  6b89              LDR      r1,[r1,#0x38]
000186  f7fffffe          BL       BUTTON_SetText
;;;237    
;;;238    	/*创建右键*/
;;;239    	pThisWin->hRightButton = Create_Right_Button(pMsg->hWin);
00018a  f9b50004          LDRSH    r0,[r5,#4]
00018e  f7fffffe          BL       Create_Right_Button
000192  6861              LDR      r1,[r4,#4]  ; pThisWin
000194  8348              STRH     r0,[r1,#0x1a]
;;;240    	BUTTON_SetText(pThisWin->hRightButton, _Query);
000196  7839              LDRB     r1,[r7,#0]  ; g_Language
000198  f8561021          LDR      r1,[r6,r1,LSL #2]
00019c  6b09              LDR      r1,[r1,#0x30]
00019e  f7fffffe          BL       BUTTON_SetText
;;;241    
;;;242    	/*创建中键*/
;;;243    	pThisWin->hMiddleButton = Create_Middle_Button(pMsg->hWin);
0001a2  f9b50004          LDRSH    r0,[r5,#4]
0001a6  f7fffffe          BL       Create_Middle_Button
0001aa  6861              LDR      r1,[r4,#4]  ; pThisWin
0001ac  8388              STRH     r0,[r1,#0x1c]
;;;244    	BUTTON_SetText(pThisWin->hMiddleButton, _Test);
0001ae  7839              LDRB     r1,[r7,#0]  ; g_Language
0001b0  f8561021          LDR      r1,[r6,r1,LSL #2]
0001b4  6b49              LDR      r1,[r1,#0x34]
0001b6  f7fffffe          BL       BUTTON_SetText
;;;245    #else
;;;246    	/*创建左键*/
;;;247    	pThisWin->hLeftButton = Create_Left_Button(pMsg->hWin);
;;;248    	BUTTON_SetBitmapEx(pThisWin->hLeftButton, 0, BtnSetBmp(bmTool_Released, pThisWin->hLeftButton));
;;;249    	BUTTON_SetBitmapEx(pThisWin->hLeftButton, 1, BtnSetBmp(bmTool_Pressed, pThisWin->hLeftButton));
;;;250    
;;;251    	/*创建右键*/
;;;252    	pThisWin->hRightButton = Create_Right_Button(pMsg->hWin);
;;;253    	BUTTON_SetBitmapEx(pThisWin->hRightButton, 0, BtnSetBmp(bmSearch_Released, pThisWin->hRightButton));
;;;254    	BUTTON_SetBitmapEx(pThisWin->hRightButton, 1, BtnSetBmp(bmSearch_Pressed, pThisWin->hRightButton));
;;;255    
;;;256    	/*创建中键*/
;;;257    	pThisWin->hMiddleButton = Create_Middle_Button(pMsg->hWin);
;;;258    	BUTTON_SetBitmapEx(pThisWin->hMiddleButton, 0, BtnSetBmp(bmTest_Released, pThisWin->hMiddleButton));
;;;259    	BUTTON_SetBitmapEx(pThisWin->hMiddleButton, 1, BtnSetBmp(bmTest_Pressed, pThisWin->hMiddleButton));
;;;260    #endif
;;;261    
;;;262    	Update_System_Time();
0001ba  f7fffffe          BL       Update_System_Time
;;;263    	Update_Rtc_Display(pMsg->hWin);
0001be  f9b50004          LDRSH    r0,[r5,#4]
0001c2  f7fffffe          BL       Update_Rtc_Display
;;;264    	
;;;265    	WM_Paint(pMsg->hWin);
0001c6  f9b50004          LDRSH    r0,[r5,#4]
0001ca  f7fffffe          BL       WM_Paint
;;;266    
;;;267    	WM_SetFocus(pMsg->hWin);
0001ce  f9b50004          LDRSH    r0,[r5,#4]
0001d2  f7fffffe          BL       WM_SetFocus
;;;268    
;;;269    }
0001d6  b008              ADD      sp,sp,#0x20
0001d8  e8bd81f0          POP      {r4-r8,pc}
;;;270    
                          ENDP

                  |L9.476|
                          DCD      pApp
                  |L9.480|
                          DCD      _CallBack_Header
                  |L9.484|
                          DCD      ||.data||
                  |L9.488|
                          DCD      GUI_FontTahomaBold19
                  |L9.492|
0001ec  30303a30          DCB      "00:00:00",0
0001f0  303a3030
0001f4  00      
0001f5  00                DCB      0
0001f6  00                DCB      0
0001f7  00                DCB      0
                  |L9.504|
                          DCD      0x00470050
                  |L9.508|
                          DCD      _CallBack_Battery
                  |L9.512|
                          DCD      _CallBack_GPRS
                  |L9.516|
                          DCD      _CallBack_GPS
                  |L9.520|
000208  30302f30          DCB      "00/00/0000",0
00020c  302f3030
000210  303000  
000213  00                DCB      0
                  |L9.532|
                          DCD      Strings
                  |L9.536|
                          DCD      g_Language

                          AREA ||.data||, DATA, ALIGN=2

                  nCnt
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  pThisWin
                          DCD      0x00000000
