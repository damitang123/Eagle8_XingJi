; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\lcdinfo1.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\lcdinfo1.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\LCDInfo1.c]
                          THUMB

                          AREA ||i.LCD_GetBitsPerPixel_1||, CODE, READONLY, ALIGN=1

                  LCD_GetBitsPerPixel_1 PROC
;;;45       int LCD_GetVYSize_1(void)       { return 0; }
;;;46       int LCD_GetBitsPerPixel_1(void) { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;47       U32 LCD_GetNumColors_1(void)    { return 0; }
                          ENDP


                          AREA ||i.LCD_GetFixedPalette_1||, CODE, READONLY, ALIGN=1

                  LCD_GetFixedPalette_1 PROC
;;;49       int LCD_GetXMag_1(void)         { return 0; }
;;;50       int LCD_GetFixedPalette_1(void) { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;51     #endif
                          ENDP


                          AREA ||i.LCD_GetNumColors_1||, CODE, READONLY, ALIGN=1

                  LCD_GetNumColors_1 PROC
;;;46       int LCD_GetBitsPerPixel_1(void) { return 0; }
;;;47       U32 LCD_GetNumColors_1(void)    { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;48       int LCD_GetYMag_1(void)         { return 0; }
                          ENDP


                          AREA ||i.LCD_GetVXSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetVXSize_1 PROC
;;;43       int LCD_GetYSize_1(void)        { return 0; }
;;;44       int LCD_GetVXSize_1(void)       { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;45       int LCD_GetVYSize_1(void)       { return 0; }
                          ENDP


                          AREA ||i.LCD_GetVYSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetVYSize_1 PROC
;;;44       int LCD_GetVXSize_1(void)       { return 0; }
;;;45       int LCD_GetVYSize_1(void)       { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;46       int LCD_GetBitsPerPixel_1(void) { return 0; }
                          ENDP


                          AREA ||i.LCD_GetXMag_1||, CODE, READONLY, ALIGN=1

                  LCD_GetXMag_1 PROC
;;;48       int LCD_GetYMag_1(void)         { return 0; }
;;;49       int LCD_GetXMag_1(void)         { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;50       int LCD_GetFixedPalette_1(void) { return 0; }
                          ENDP


                          AREA ||i.LCD_GetXSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetXSize_1 PROC
;;;41     #else
;;;42       int LCD_GetXSize_1(void)        { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;43       int LCD_GetYSize_1(void)        { return 0; }
                          ENDP


                          AREA ||i.LCD_GetYMag_1||, CODE, READONLY, ALIGN=1

                  LCD_GetYMag_1 PROC
;;;47       U32 LCD_GetNumColors_1(void)    { return 0; }
;;;48       int LCD_GetYMag_1(void)         { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;49       int LCD_GetXMag_1(void)         { return 0; }
                          ENDP


                          AREA ||i.LCD_GetYSize_1||, CODE, READONLY, ALIGN=1

                  LCD_GetYSize_1 PROC
;;;42       int LCD_GetXSize_1(void)        { return 0; }
;;;43       int LCD_GetYSize_1(void)        { return 0; }
000000  2000              MOVS     r0,#0
000002  4770              BX       lr
;;;44       int LCD_GetVXSize_1(void)       { return 0; }
                          ENDP

