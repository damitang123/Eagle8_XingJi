; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\wm_setcapturemove.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\wm_setcapturemove.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\WM\WM_SetCaptureMove.c]
                          THUMB

                          AREA ||i.WM_SetCaptureMove||, CODE, READONLY, ALIGN=2

                  WM_SetCaptureMove PROC
;;;41     */
;;;42     void WM_SetCaptureMove(WM_HWIN hWin, const GUI_PID_STATE* pState, int MinVisibility, int LimitTop) {
000000  e92d47ff          PUSH     {r0-r10,lr}
000004  461d              MOV      r5,r3
000006  4616              MOV      r6,r2
000008  460c              MOV      r4,r1
00000a  4681              MOV      r9,r0
;;;43       if (!WM_HasCaptured(hWin)) {
00000c  f7fffffe          BL       WM_HasCaptured
;;;44         WM_SetCapture(hWin, 1);        /* Set capture with auto release */
;;;45         WM__CapturePoint.x = pState->x;
000010  f8df8090          LDR      r8,|L1.164|
000014  b390              CBZ      r0,|L1.124|
;;;46         WM__CapturePoint.y = pState->y;
;;;47       } else {                         /* Moving ... let the window move ! */
;;;48         int dx, dy;
;;;49         dx = pState->x - WM__CapturePoint.x;
000016  f9b81000          LDRSH    r1,[r8,#0]  ; WM__CapturePoint
00001a  6820              LDR      r0,[r4,#0]
00001c  1a47              SUBS     r7,r0,r1
;;;50         dy = pState->y - WM__CapturePoint.y;
00001e  f9b81002          LDRSH    r1,[r8,#2]  ; WM__CapturePoint
000022  6860              LDR      r0,[r4,#4]
000024  1a44              SUBS     r4,r0,r1
;;;51         /* Make sure at least a part of the windows stays inside of its parent */
;;;52         if ((MinVisibility == 0) && (LimitTop == 0)) {
000026  ea560005          ORRS     r0,r6,r5
00002a  d033              BEQ      |L1.148|
;;;53           WM_MoveWindow(hWin, dx, dy);
;;;54         } else {
;;;55           GUI_RECT Rect, RectParent;
;;;56           WM_GetWindowRectEx(hWin, &Rect);
00002c  4669              MOV      r1,sp
00002e  4648              MOV      r0,r9
000030  f7fffffe          BL       WM_GetWindowRectEx
;;;57           /* Check if the top region of the window should be limited */
;;;58           if (LimitTop) {
000034  b12d              CBZ      r5,|L1.66|
;;;59             Rect.y1 = Rect.y0 + LimitTop - 1;
000036  f8bd0002          LDRH     r0,[sp,#2]
00003a  1e6d              SUBS     r5,r5,#1
00003c  4428              ADD      r0,r0,r5
00003e  f8ad0006          STRH     r0,[sp,#6]
                  |L1.66|
;;;60           }
;;;61           WM_GetWindowRectEx(WM_GetParent(hWin), &RectParent);
000042  4648              MOV      r0,r9
000044  f7fffffe          BL       WM_GetParent
000048  a902              ADD      r1,sp,#8
00004a  f7fffffe          BL       WM_GetWindowRectEx
;;;62           GUI_MoveRect(&Rect, dx, dy);
00004e  4622              MOV      r2,r4
000050  4639              MOV      r1,r7
000052  4668              MOV      r0,sp
000054  f7fffffe          BL       GUI_MoveRect
;;;63           GUI__ReduceRect(&RectParent, &RectParent, MinVisibility);
000058  a902              ADD      r1,sp,#8
00005a  4632              MOV      r2,r6
00005c  4608              MOV      r0,r1
00005e  f7fffffe          BL       GUI__ReduceRect
;;;64           if (GUI_RectsIntersect(&Rect, &RectParent)) {
000062  a902              ADD      r1,sp,#8
000064  4668              MOV      r0,sp
000066  f7fffffe          BL       GUI_RectsIntersect
00006a  2800              CMP      r0,#0
00006c  d004              BEQ      |L1.120|
;;;65             WM_MoveWindow(hWin, dx, dy);
00006e  4622              MOV      r2,r4
000070  4639              MOV      r1,r7
000072  4648              MOV      r0,r9
000074  f7fffffe          BL       WM_MoveWindow
                  |L1.120|
;;;66           }
;;;67         }
;;;68       }
;;;69     }
000078  e8bd87ff          POP      {r0-r10,pc}
                  |L1.124|
00007c  e7ff              B        |L1.126|
                  |L1.126|
00007e  2101              MOVS     r1,#1                 ;44
000080  4648              MOV      r0,r9                 ;44
000082  f7fffffe          BL       WM_SetCapture
000086  8820              LDRH     r0,[r4,#0]            ;45
000088  f8a80000          STRH     r0,[r8,#0]            ;45
00008c  88a0              LDRH     r0,[r4,#4]            ;46
00008e  f8a80002          STRH     r0,[r8,#2]            ;46
000092  e7f1              B        |L1.120|
                  |L1.148|
000094  b004              ADD      sp,sp,#0x10           ;53
000096  4622              MOV      r2,r4                 ;53
000098  4639              MOV      r1,r7                 ;53
00009a  4648              MOV      r0,r9                 ;53
00009c  e8bd47f0          POP      {r4-r10,lr}           ;53
0000a0  f7ffbffe          B.W      WM_MoveWindow
;;;70     
                          ENDP

                  |L1.164|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=1

                  WM__CapturePoint
                          DCDU     0x00000000
