; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections -c --asm --interleave -o.\obj\guicore.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\guicore.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\Board_Support_Package -I..\Config -I..\GUI\Core -I..\GUI\JPEG -I..\GUI\LCDDriver -I..\GUI\MultiLayer -I..\GUI\Widget -I..\GUI\WM -I..\Libraries\CMSIS\CM3\CoreSupport -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\Libraries\CMSIS\Include -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\User\Res -I..\User\UserWindow -I..\User -I..\USB\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -DSTM32F10X_HD -DVECT_TAB_FLASH -DUSE_STDPERIPH_DRIVER --no_multibyte_chars ..\GUI\Core\GUICore.c]
                          THUMB

                          AREA ||i.GUI_Clear||, CODE, READONLY, ALIGN=1

                  GUI_Clear PROC
;;;129    */
;;;130    void GUI_Clear(void) {
000000  b510              PUSH     {r4,lr}
;;;131      GUI_GotoXY(0,0);     /* Reset text cursor to upper left */
000002  2100              MOVS     r1,#0
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       GUI_GotoXY
;;;132      GUI_ClearRect(GUI_XMIN, GUI_YMIN, GUI_XMAX, GUI_YMAX);
00000a  f64072ff          MOV      r2,#0xfff
00000e  4250              RSBS     r0,r2,#0
000010  e8bd4010          POP      {r4,lr}
000014  4613              MOV      r3,r2
000016  4601              MOV      r1,r0
000018  f7ffbffe          B.W      GUI_ClearRect
;;;133    }
;;;134    
                          ENDP


                          AREA ||i.GUI_ClearRect||, CODE, READONLY, ALIGN=2

                  GUI_ClearRect PROC
;;;101    */
;;;102    void GUI_ClearRect(int x0, int y0, int x1, int y1) {
000000  e92d41fc          PUSH     {r2-r8,lr}
000004  4607              MOV      r7,r0
000006  461c              MOV      r4,r3
000008  4615              MOV      r5,r2
00000a  460e              MOV      r6,r1
;;;103      GUI_DRAWMODE PrevDraw;
;;;104      #if GUI_WINSUPPORT
;;;105        GUI_RECT r;
;;;106      #endif
;;;107      GUI_LOCK();
;;;108      PrevDraw = LCD_SetDrawMode(GUI_DRAWMODE_REV);
00000c  2004              MOVS     r0,#4
00000e  f7fffffe          BL       LCD_SetDrawMode
000012  4680              MOV      r8,r0
;;;109      #if GUI_WINSUPPORT
;;;110        WM_ADDORG(x0,y0);
000014  4810              LDR      r0,|L2.88|
000016  6c41              LDR      r1,[r0,#0x44]  ; GUI_Context
000018  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
00001a  440f              ADD      r7,r7,r1
00001c  4406              ADD      r6,r6,r0
;;;111        WM_ADDORG(x1,y1);
00001e  440d              ADD      r5,r5,r1
000020  4404              ADD      r4,r4,r0
;;;112        r.x0 = x0;
000022  f8ad7000          STRH     r7,[sp,#0]
;;;113        r.x1 = x1;
000026  f8ad5004          STRH     r5,[sp,#4]
;;;114        r.y0 = y0;
00002a  f8ad6002          STRH     r6,[sp,#2]
;;;115        r.y1 = y1;
00002e  f8ad4006          STRH     r4,[sp,#6]
;;;116        WM_ITERATE_START(&r) {
000032  4668              MOV      r0,sp
000034  f7fffffe          BL       WM__InitIVRSearch
000038  e007              B        |L2.74|
                  |L2.58|
;;;117      #endif
;;;118      LCD_FillRect(x0,y0,x1,y1);
00003a  4623              MOV      r3,r4
00003c  462a              MOV      r2,r5
00003e  4631              MOV      r1,r6
000040  4638              MOV      r0,r7
000042  f7fffffe          BL       LCD_FillRect
;;;119      #if GUI_WINSUPPORT
;;;120        } WM_ITERATE_END();
000046  f7fffffe          BL       WM__GetNextIVR
                  |L2.74|
00004a  2800              CMP      r0,#0
00004c  d1f5              BNE      |L2.58|
;;;121      #endif
;;;122      LCD_SetDrawMode(PrevDraw);
00004e  4640              MOV      r0,r8
000050  f7fffffe          BL       LCD_SetDrawMode
;;;123      GUI_UNLOCK();
;;;124    }
000054  e8bd81fc          POP      {r2-r8,pc}
;;;125    
                          ENDP

                  |L2.88|
                          DCD      ||.bss||

                          AREA ||i.GUI_Init||, CODE, READONLY, ALIGN=2

                  GUI_Init PROC
;;;141    */
;;;142    int GUI_Init(void) {
000000  b570              PUSH     {r4-r6,lr}
;;;143      int r;
;;;144      GUI_DEBUG_LOG("\nGUI_Init()");
;;;145      /* Init system wide globals first */
;;;146      GUI_DecChar = '.';
000002  4918              LDR      r1,|L3.100|
000004  202e              MOVS     r0,#0x2e
000006  7008              STRB     r0,[r1,#0]
;;;147      GUI_X_Init();
000008  f7fffffe          BL       GUI_X_Init
00000c  4817              LDR      r0,|L3.108|
;;;148      /* Init context */
;;;149      _InitContext(&GUI_Context);
00000e  4c16              LDR      r4,|L3.104|
000010  6800              LDR      r0,[r0,#0]  ; LCD_aAPI
000012  f1040508          ADD      r5,r4,#8
000016  6165              STR      r5,[r4,#0x14]
000018  64e0              STR      r0,[r4,#0x4c]
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       LCD_L0_GetRect
000020  4813              LDR      r0,|L3.112|
000022  65e0              STR      r0,[r4,#0x5c]
000024  4813              LDR      r0,|L3.116|
000026  6165              STR      r5,[r4,#0x14]
000028  61e0              STR      r0,[r4,#0x1c]
00002a  2001              MOVS     r0,#1
00002c  7620              STRB     r0,[r4,#0x18]
00002e  f7fffffe          BL       WM_GetDesktopWindow
000032  f8a40040          STRH     r0,[r4,#0x40]
000036  2003              MOVS     r0,#3
000038  f8840060          STRB     r0,[r4,#0x60]
00003c  f06f4070          MVN      r0,#0xf0000000
000040  6360              STR      r0,[r4,#0x34]
000042  63a0              STR      r0,[r4,#0x38]
000044  2000              MOVS     r0,#0
000046  f7fffffe          BL       LCD_SetBkColor
00004a  f06f407f          MVN      r0,#0xff000000
00004e  f7fffffe          BL       LCD_SetColor
000052  4809              LDR      r0,|L3.120|
;;;150      GUITASK_INIT();
;;;151      r = LCD_Init();
000054  6220              STR      r0,[r4,#0x20]
000056  f7fffffe          BL       LCD_Init
00005a  4604              MOV      r4,r0
;;;152      #if GUI_WINSUPPORT
;;;153        WM_Init();
00005c  f7fffffe          BL       WM_Init
;;;154      #endif
;;;155      GUITASK_COPY_CONTEXT();
;;;156      #if defined(GUI_TRIAL_VERSION)
;;;157        #if GUI_TRIAL_VERSION
;;;158          GUI_DispString(  "This software\n"
;;;159    	                     "contains an eval-\n"
;;;160    	                     "uC/GUI build.\n"
;;;161    	                     "\n"
;;;162    	                     "A license is\n"
;;;163    	                     "required to use\n"
;;;164    	                     "it in a product.\n\n"
;;;165    	                     "www.segger.com\n");
;;;166          GUI_GotoXY(0, 0);
;;;167          GUI_X_Delay(1000);
;;;168          GUI_Clear();
;;;169        #endif
;;;170      #endif
;;;171      return r;
000060  4620              MOV      r0,r4
;;;172    }
000062  bd70              POP      {r4-r6,pc}
;;;173    
                          ENDP

                  |L3.100|
                          DCD      ||.data||
                  |L3.104|
                          DCD      ||.bss||
                  |L3.108|
                          DCD      LCD_aAPI
                  |L3.112|
                          DCD      ||.constdata||
                  |L3.116|
                          DCD      GUI_Font6x8
                  |L3.120|
                          DCD      GUI_UC_None

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  GUI_Context
                          %        100

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _HL_APIList
                          DCD      LCD_DrawHLine
                          DCD      LCD_DrawPixel

                          AREA ||.data||, DATA, ALIGN=0

                  GUI_DecChar
000000  00                DCB      0x00

                          AREA ||area_number.9||, DATA, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.data||
                  GUI_pfTimerExec
                          DCD      0x00000000

                          AREA ||area_number.10||, DATA, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.data||
                  WM_pfHandlePID
                          DCD      0x00000000

                          AREA ||area_number.11||, DATA, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.data||
                  GUI_pfDispCharStyle
                          DCD      0x00000000

                          AREA ||area_number.12||, DATA, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.data||
                  GUI_pLCD_APIList
                          DCD      0x00000000

                          AREA ||area_number.13||, DATA, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.data||
                  GUI_CURSOR_pfTempHide
                          DCD      0x00000000

                          AREA ||area_number.14||, DATA, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.data||
                  GUI_CURSOR_pfTempUnhide
                          DCD      0x00000000

                          AREA ||area_number.15||, DATA, ALIGN=1

                          EXPORTAS ||area_number.15||, ||.data||
                  GUI_OrgX
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.16||, DATA, ALIGN=1

                          EXPORTAS ||area_number.16||, ||.data||
                  GUI_OrgY
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.17||, DATA, ALIGN=0

                          EXPORTAS ||area_number.17||, ||.data||
                  GUI_MoveRTL
000000  00                DCB      0x00
